{"ast":null,"code":"/* Tabulator v5.0.10 (c) Oliver Folkerd 2021 */\nclass CoreFeature {\n  constructor(table) {\n    this.table = table;\n  } //////////////////////////////////////////\n  /////////////// DataLoad /////////////////\n  //////////////////////////////////////////\n\n\n  reloadData(data, silent) {\n    return this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\n  } //////////////////////////////////////////\n  ///////////// Localization ///////////////\n  //////////////////////////////////////////\n\n\n  langText() {\n    return this.table.modules.localize.getText(...arguments);\n  }\n\n  langBind() {\n    return this.table.modules.localize.bind(...arguments);\n  }\n\n  langLocale() {\n    return this.table.modules.localize.getLocale(...arguments);\n  } //////////////////////////////////////////\n  ////////// Inter Table Comms /////////////\n  //////////////////////////////////////////\n\n\n  commsConnections() {\n    return this.table.modules.comms.getConnections(...arguments);\n  }\n\n  commsSend() {\n    return this.table.modules.comms.send(...arguments);\n  } //////////////////////////////////////////\n  //////////////// Layout  /////////////////\n  //////////////////////////////////////////\n\n\n  layoutMode() {\n    return this.table.modules.layout.getMode();\n  }\n\n  layoutRefresh() {\n    return this.table.modules.layout.layout();\n  } //////////////////////////////////////////\n  /////////////// Event Bus ////////////////\n  //////////////////////////////////////////\n\n\n  subscribe() {\n    return this.table.eventBus.subscribe(...arguments);\n  }\n\n  unsubscribe() {\n    return this.table.eventBus.unsubscribe(...arguments);\n  }\n\n  subscribed(key) {\n    return this.table.eventBus.subscribed(key);\n  }\n\n  subscriptionChange() {\n    return this.table.eventBus.subscriptionChange(...arguments);\n  }\n\n  dispatch() {\n    return this.table.eventBus.dispatch(...arguments);\n  }\n\n  chain() {\n    return this.table.eventBus.chain(...arguments);\n  }\n\n  confirm() {\n    return this.table.eventBus.confirm(...arguments);\n  }\n\n  dispatchExternal() {\n    return this.table.externalEvents.dispatch(...arguments);\n  }\n\n  subscribedExternal(key) {\n    return this.table.externalEvents.subscribed(key);\n  }\n\n  subscriptionChangeExternal() {\n    return this.table.externalEvents.subscriptionChange(...arguments);\n  } //////////////////////////////////////////\n  //////////////// Options /////////////////\n  //////////////////////////////////////////\n\n\n  options(key) {\n    return this.table.options[key];\n  }\n\n  setOption(key, value) {\n    if (typeof value !== \"undefined\") {\n      this.table.options[key] = value;\n    }\n\n    return this.table.options[key];\n  } //////////////////////////////////////////\n  //////////////// Modules /////////////////\n  //////////////////////////////////////////\n\n\n  module(key) {\n    return this.table.module(key);\n  }\n\n}\n\nclass Module extends CoreFeature {\n  constructor(table, name) {\n    super(table);\n    this._handler = null;\n  }\n\n  initialize() {// setup module when table is initialized, to be overriden in module\n  } ///////////////////////////////////\n  ////// Options Registration ///////\n  ///////////////////////////////////\n\n\n  registerTableOption(key, value) {\n    this.table.optionsList.register(key, value);\n  }\n\n  registerColumnOption(key, value) {\n    this.table.columnManager.optionsList.register(key, value);\n  } ///////////////////////////////////\n  /// Public Function Registation ///\n  ///////////////////////////////////\n\n\n  registerTableFunction(name, func) {\n    if (typeof this.table[name] === \"undefined\") {\n      this.table[name] = func;\n    } else {\n      console.warn(\"Unable to bind table function, name already in use\", name);\n    }\n  }\n\n  registerComponentFunction(component, func, handler) {\n    return this.table.componentFunctionBinder.bind(component, func, handler);\n  } ///////////////////////////////////\n  ////////// Data Pipeline //////////\n  ///////////////////////////////////\n\n\n  registerDataHandler(handler, priority) {\n    this.table.rowManager.registerDataPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n\n  registerDisplayHandler(handler, priority) {\n    this.table.rowManager.registerDisplayPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n\n  refreshData(renderInPosition, handler) {\n    if (!handler) {\n      handler = this._handler;\n    }\n\n    if (handler) {\n      this.table.rowManager.refreshActiveData(handler, false, renderInPosition);\n    }\n  }\n\n}\n\nclass Helpers {\n  static elVisible(el) {\n    return !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\n  }\n\n  static elOffset(el) {\n    var box = el.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset - document.documentElement.clientTop,\n      left: box.left + window.pageXOffset - document.documentElement.clientLeft\n    };\n  }\n\n  static deepClone(obj, clone) {\n    let list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var objectProto = {}.__proto__,\n        arrayProto = [].__proto__;\n\n    if (!clone) {\n      clone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\n    }\n\n    for (var i in obj) {\n      let subject = obj[i],\n          match,\n          copy;\n\n      if (subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)) {\n        match = list.findIndex(item => {\n          return item.subject === subject;\n        });\n\n        if (match > -1) {\n          clone[i] = list[match].copy;\n        } else {\n          copy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\n          list.unshift({\n            subject,\n            copy\n          });\n          clone[i] = this.deepClone(subject, copy, list);\n        }\n      }\n    }\n\n    return clone;\n  }\n\n}\n\nvar defautlAccessors = {};\n\nclass Accessor extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"]; //list of accessor types\n\n    this.registerColumnOption(\"accessor\");\n    this.registerColumnOption(\"accessorParams\");\n    this.registerColumnOption(\"accessorData\");\n    this.registerColumnOption(\"accessorDataParams\");\n    this.registerColumnOption(\"accessorDownload\");\n    this.registerColumnOption(\"accessorDownloadParams\");\n    this.registerColumnOption(\"accessorClipboard\");\n    this.registerColumnOption(\"accessorClipboardParams\");\n    this.registerColumnOption(\"accessorPrint\");\n    this.registerColumnOption(\"accessorPrintParams\");\n    this.registerColumnOption(\"accessorHtmlOutput\");\n    this.registerColumnOption(\"accessorHtmlOutputParams\");\n  }\n\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\n  } //initialize column accessor\n\n\n  initializeColumn(column) {\n    var match = false,\n        config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n          accessor;\n\n      if (column.definition[key]) {\n        accessor = this.lookupAccessor(column.definition[key]);\n\n        if (accessor) {\n          match = true;\n          config[key] = {\n            accessor: accessor,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n\n    if (match) {\n      column.modules.accessor = config;\n    }\n  }\n\n  lookupAccessor(value) {\n    var accessor = false; //set column accessor\n\n    switch (typeof value) {\n      case \"string\":\n        if (Accessor.accessors[value]) {\n          accessor = Accessor.accessors[value];\n        } else {\n          console.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\n        }\n\n        break;\n\n      case \"function\":\n        accessor = value;\n        break;\n    }\n\n    return accessor;\n  } //apply accessor to row\n\n\n  transformRow(row, type) {\n    var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        rowComponent = row.getComponent(); //clone data object with deep copy to isolate internal data from returned result\n\n    var data = Helpers.deepClone(row.data || {});\n    this.table.columnManager.traverse(function (column) {\n      var value, accessor, params, colCompnent;\n\n      if (column.modules.accessor) {\n        accessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\n\n        if (accessor) {\n          value = column.getFieldValue(data);\n\n          if (value != \"undefined\") {\n            colCompnent = column.getComponent();\n            params = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\n            column.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n} //load defaults\n\n\nAccessor.moduleName = \"accessor\";\nAccessor.accessors = defautlAccessors;\nvar defaultConfig = {\n  method: \"GET\"\n};\n\nfunction generateParamsList(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n\n  return output;\n}\n\nfunction serializeParams(params) {\n  var output = generateParamsList(params),\n      encoded = [];\n  output.forEach(function (item) {\n    encoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\n  });\n  return encoded.join(\"&\");\n}\n\nfunction defaultURLGenerator(url, config, params) {\n  if (url) {\n    if (params && Object.keys(params).length) {\n      if (!config.method || config.method.toLowerCase() == \"get\") {\n        config.method = \"get\";\n        url += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\n      }\n    }\n  }\n\n  return url;\n}\n\nfunction defaultLoaderPromise(url, config, params) {\n  var contentType;\n  return new Promise((resolve, reject) => {\n    //set url\n    url = this.urlGenerator.call(this.table, url, config, params); //set body content if not GET request\n\n    if (config.method.toUpperCase() != \"GET\") {\n      contentType = typeof this.table.options.ajaxContentType === \"object\" ? this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\n\n      if (contentType) {\n        for (var key in contentType.headers) {\n          if (!config.headers) {\n            config.headers = {};\n          }\n\n          if (typeof config.headers[key] === \"undefined\") {\n            config.headers[key] = contentType.headers[key];\n          }\n        }\n\n        config.body = contentType.body.call(this, url, config, params);\n      } else {\n        console.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\n      }\n    }\n\n    if (url) {\n      //configure headers\n      if (typeof config.headers === \"undefined\") {\n        config.headers = {};\n      }\n\n      if (typeof config.headers.Accept === \"undefined\") {\n        config.headers.Accept = \"application/json\";\n      }\n\n      if (typeof config.headers[\"X-Requested-With\"] === \"undefined\") {\n        config.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n      }\n\n      if (typeof config.mode === \"undefined\") {\n        config.mode = \"cors\";\n      }\n\n      if (config.mode == \"cors\") {\n        if (typeof config.headers[\"Origin\"] === \"undefined\") {\n          config.headers[\"Origin\"] = window.location.origin;\n        }\n\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'same-origin';\n        }\n      } else {\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'include';\n        }\n      } //send request\n\n\n      fetch(url, config).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n            console.warn(\"Ajax Load Error - Invalid JSON returned\", error);\n          });\n        } else {\n          console.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\n          reject(response);\n        }\n      }).catch(error => {\n        console.error(\"Ajax Load Error - Connection Error: \", error);\n        reject(error);\n      });\n    } else {\n      console.warn(\"Ajax Load Error - No URL Set\");\n      resolve([]);\n    }\n  });\n}\n\nfunction generateParamsList$1(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList$1(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList$1(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n\n  return output;\n}\n\nvar defaultContentTypeFormatters = {\n  \"json\": {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: function (url, config, params) {\n      return JSON.stringify(params);\n    }\n  },\n  \"form\": {\n    headers: {},\n    body: function (url, config, params) {\n      var output = generateParamsList$1(params),\n          form = new FormData();\n      output.forEach(function (item) {\n        form.append(item.key, item.value);\n      });\n      return form;\n    }\n  }\n};\n\nclass Ajax extends Module {\n  constructor(table) {\n    super(table);\n    this.config = false; //hold config object for ajax request\n\n    this.url = \"\"; //request URL\n\n    this.urlGenerator = false;\n    this.params = false; //request parameters\n\n    this.loaderPromise = false;\n    this.registerTableOption(\"ajaxURL\", false); //url for ajax loading\n\n    this.registerTableOption(\"ajaxURLGenerator\", false);\n    this.registerTableOption(\"ajaxParams\", {}); //params for ajax loading\n\n    this.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\n\n    this.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\n\n    this.registerTableOption(\"ajaxRequestFunc\", false); //promise function\n\n    this.registerTableOption(\"ajaxRequesting\", function () {});\n    this.registerTableOption(\"ajaxResponse\", false);\n    this.contentTypeFormatters = Ajax.contentTypeFormatters;\n  } //initialize setup options\n\n\n  initialize() {\n    this.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\n    this.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\n\n    if (this.table.options.ajaxParams) {\n      this.setParams(this.table.options.ajaxParams);\n    }\n\n    if (this.table.options.ajaxConfig) {\n      this.setConfig(this.table.options.ajaxConfig);\n    }\n\n    if (this.table.options.ajaxURL) {\n      this.setUrl(this.table.options.ajaxURL);\n    }\n\n    this.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\n    this.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\n    this.subscribe(\"data-load\", this.requestData.bind(this));\n  }\n\n  requestDataCheck(data, params, config, silent) {\n    return !!(!data && this.url || typeof data === \"string\");\n  }\n\n  requestData(data, params, config, silent, previousData) {\n    if (this.requestDataCheck(data)) {\n      if (data) {\n        this.setUrl(data);\n      }\n\n      if (params) {\n        this.setParams(params, true);\n      }\n\n      if (config) {\n        this.setConfig(config);\n      }\n\n      return this.sendRequest();\n    } else {\n      return previousData;\n    }\n  } //set ajax params\n\n\n  setParams(params, update) {\n    if (update) {\n      this.params = this.params || {};\n\n      for (let key in params) {\n        this.params[key] = params[key];\n      }\n    } else {\n      this.params = params;\n    }\n  }\n\n  getParams() {\n    return this.params || {};\n  } //load config object\n\n\n  setConfig(config) {\n    this._loadDefaultConfig();\n\n    if (typeof config == \"string\") {\n      this.config.method = config;\n    } else {\n      for (let key in config) {\n        this.config[key] = config[key];\n      }\n    }\n  } //create config object from default\n\n\n  _loadDefaultConfig(force) {\n    if (!this.config || force) {\n      this.config = {}; //load base config from defaults\n\n      for (let key in Ajax.defaultConfig) {\n        this.config[key] = Ajax.defaultConfig[key];\n      }\n    }\n  } //set request url\n\n\n  setUrl(url) {\n    this.url = url;\n  } //get request url\n\n\n  getUrl() {\n    return this.url;\n  } //send ajax request\n\n\n  sendRequest(silent) {\n    var url = this.url;\n\n    this._loadDefaultConfig();\n\n    if (this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false) {\n      return this.loaderPromise(url, this.config, this.params).then(data => {\n        if (this.table.options.ajaxResponse) {\n          data = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\n        }\n\n        return data;\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n\n}\n\nAjax.moduleName = \"ajax\"; //load defaults\n\nAjax.defaultConfig = defaultConfig;\nAjax.defaultURLGenerator = defaultURLGenerator;\nAjax.defaultLoaderPromise = defaultLoaderPromise;\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\nvar defaultPasteActions = {\n  replace: function (rows) {\n    return this.table.setData(rows);\n  },\n  update: function (rows) {\n    return this.table.updateOrAddData(rows);\n  },\n  insert: function (rows) {\n    return this.table.addData(rows);\n  }\n};\nvar defaultPasteParsers = {\n  table: function (clipboard) {\n    var data = [],\n        headerFindSuccess = true,\n        columns = this.table.columnManager.columns,\n        columnMap = [],\n        rows = []; //get data from clipboard into array of columns and rows.\n\n    clipboard = clipboard.split(\"\\n\");\n    clipboard.forEach(function (row) {\n      data.push(row.split(\"\\t\"));\n    });\n\n    if (data.length && !(data.length === 1 && data[0].length < 2)) {\n      //check if headers are present by title\n      data[0].forEach(function (value) {\n        var column = columns.find(function (column) {\n          return value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\n        });\n\n        if (column) {\n          columnMap.push(column);\n        } else {\n          headerFindSuccess = false;\n        }\n      }); //check if column headers are present by field\n\n      if (!headerFindSuccess) {\n        headerFindSuccess = true;\n        columnMap = [];\n        data[0].forEach(function (value) {\n          var column = columns.find(function (column) {\n            return value && column.field && value.trim() && column.field.trim() === value.trim();\n          });\n\n          if (column) {\n            columnMap.push(column);\n          } else {\n            headerFindSuccess = false;\n          }\n        });\n\n        if (!headerFindSuccess) {\n          columnMap = this.table.columnManager.columnsByIndex;\n        }\n      } //remove header row if found\n\n\n      if (headerFindSuccess) {\n        data.shift();\n      }\n\n      data.forEach(function (item) {\n        var row = {};\n        item.forEach(function (value, i) {\n          if (columnMap[i]) {\n            row[columnMap[i].field] = value;\n          }\n        });\n        rows.push(row);\n      });\n      return rows;\n    } else {\n      return false;\n    }\n  }\n};\n\nclass Clipboard extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = true;\n\n    this.pasteParser = function () {};\n\n    this.pasteAction = function () {};\n\n    this.customSelection = false;\n    this.rowRange = false;\n    this.blocked = true; //block copy actions not originating from this command\n\n    this.registerTableOption(\"clipboard\", false); //enable clipboard\n\n    this.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\n\n    this.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\n\n    this.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\n\n    this.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\n\n    this.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\n\n    this.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\n\n    this.registerColumnOption(\"clipboard\");\n    this.registerColumnOption(\"titleClipboard\");\n  }\n\n  initialize() {\n    this.mode = this.table.options.clipboard;\n    this.rowRange = this.table.options.clipboardCopyRowRange;\n\n    if (this.mode === true || this.mode === \"copy\") {\n      this.table.element.addEventListener(\"copy\", e => {\n        var plain, html, list;\n\n        if (!this.blocked) {\n          e.preventDefault();\n\n          if (this.customSelection) {\n            plain = this.customSelection;\n\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n            }\n          } else {\n            var list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\n            html = this.table.modules.export.genereateHTMLTable(list);\n            plain = html ? this.generatePlainContent(list) : \"\";\n\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n              html = this.table.options.clipboardCopyFormatter(\"html\", html);\n            }\n          }\n\n          if (window.clipboardData && window.clipboardData.setData) {\n            window.clipboardData.setData('Text', plain);\n          } else if (e.clipboardData && e.clipboardData.setData) {\n            e.clipboardData.setData('text/plain', plain);\n\n            if (html) {\n              e.clipboardData.setData('text/html', html);\n            }\n          } else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\n            e.originalEvent.clipboardData.setData('text/plain', plain);\n\n            if (html) {\n              e.originalEvent.clipboardData.setData('text/html', html);\n            }\n          }\n\n          this.dispatchExternal(\"clipboardCopied\", plain, html);\n          this.reset();\n        }\n      });\n    }\n\n    if (this.mode === true || this.mode === \"paste\") {\n      this.table.element.addEventListener(\"paste\", e => {\n        this.paste(e);\n      });\n    }\n\n    this.setPasteParser(this.table.options.clipboardPasteParser);\n    this.setPasteAction(this.table.options.clipboardPasteAction);\n    this.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\n  }\n\n  reset() {\n    this.blocked = true;\n    this.customSelection = false;\n  }\n\n  generatePlainContent(list) {\n    var output = [];\n    list.forEach(row => {\n      var rowData = [];\n      row.columns.forEach(col => {\n        var value = \"\";\n\n        if (col) {\n          if (row.type === \"group\") {\n            col.value = col.component.getKey();\n          }\n\n          if (col.value === null) {\n            value = \"\";\n          } else {\n            switch (typeof col.value) {\n              case \"object\":\n                value = JSON.stringify(col.value);\n                break;\n\n              case \"undefined\":\n                value = \"\";\n                break;\n\n              default:\n                value = col.value;\n            }\n          }\n        }\n\n        rowData.push(value);\n      });\n      output.push(rowData.join(\"\\t\"));\n    });\n    return output.join(\"\\n\");\n  }\n\n  copy(range, internal) {\n    var range, sel, textRange;\n    this.blocked = false;\n    this.customSelection = false;\n\n    if (this.mode === true || this.mode === \"copy\") {\n      this.rowRange = range || this.table.options.clipboardCopyRowRange;\n\n      if (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\n        range = document.createRange();\n        range.selectNodeContents(this.table.element);\n        sel = window.getSelection();\n\n        if (sel.toString() && internal) {\n          this.customSelection = sel.toString();\n        }\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\n        textRange = document.body.createTextRange();\n        textRange.moveToElementText(this.table.element);\n        textRange.select();\n      }\n\n      document.execCommand('copy');\n\n      if (sel) {\n        sel.removeAllRanges();\n      }\n    }\n  } //PASTE EVENT HANDLING\n\n\n  setPasteAction(action) {\n    switch (typeof action) {\n      case \"string\":\n        this.pasteAction = Clipboard.pasteActions[action];\n\n        if (!this.pasteAction) {\n          console.warn(\"Clipboard Error - No such paste action found:\", action);\n        }\n\n        break;\n\n      case \"function\":\n        this.pasteAction = action;\n        break;\n    }\n  }\n\n  setPasteParser(parser) {\n    switch (typeof parser) {\n      case \"string\":\n        this.pasteParser = Clipboard.pasteParsers[parser];\n\n        if (!this.pasteParser) {\n          console.warn(\"Clipboard Error - No such paste parser found:\", parser);\n        }\n\n        break;\n\n      case \"function\":\n        this.pasteParser = parser;\n        break;\n    }\n  }\n\n  paste(e) {\n    var data, rowData, rows;\n\n    if (this.checkPaseOrigin(e)) {\n      data = this.getPasteData(e);\n      rowData = this.pasteParser.call(this, data);\n\n      if (rowData) {\n        e.preventDefault();\n\n        if (this.table.modExists(\"mutator\")) {\n          rowData = this.mutateData(rowData);\n        }\n\n        rows = this.pasteAction.call(this, rowData);\n        this.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\n      } else {\n        this.dispatchExternal(\"clipboardPasteError\", data);\n      }\n    }\n  }\n\n  mutateData(data) {\n    var output = [];\n\n    if (Array.isArray(data)) {\n      data.forEach(row => {\n        output.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\n      });\n    } else {\n      output = data;\n    }\n\n    return output;\n  }\n\n  checkPaseOrigin(e) {\n    var valid = true;\n\n    if (e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell) {\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  getPasteData(e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) {\n      data = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      data = e.clipboardData.getData('text/plain');\n    } else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\n      data = e.originalEvent.clipboardData.getData('text/plain');\n    }\n\n    return data;\n  }\n\n}\n\nClipboard.moduleName = \"clipboard\"; //load defaults\n\nClipboard.pasteActions = defaultPasteActions;\nClipboard.pasteParsers = defaultPasteParsers;\n\nclass CalcComponent {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n\n  getElement() {\n    return this._row.getElement();\n  }\n\n  getTable() {\n    return this._row.table;\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  getCell(column) {\n    var cell = this._row.getCell(column);\n\n    return cell ? cell.getComponent() : false;\n  }\n\n  _getSelf() {\n    return this._row;\n  }\n\n} //public cell object\n\n\nclass CellComponent {\n  constructor(cell) {\n    this._cell = cell;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name);\n        }\n      }\n    });\n  }\n\n  getValue() {\n    return this._cell.getValue();\n  }\n\n  getOldValue() {\n    return this._cell.getOldValue();\n  }\n\n  getInitialValue() {\n    return this._cell.initialValue;\n  }\n\n  getElement() {\n    return this._cell.getElement();\n  }\n\n  getRow() {\n    return this._cell.row.getComponent();\n  }\n\n  getData() {\n    return this._cell.row.getData();\n  }\n\n  getField() {\n    return this._cell.column.getField();\n  }\n\n  getColumn() {\n    return this._cell.column.getComponent();\n  }\n\n  setValue(value, mutate) {\n    if (typeof mutate == \"undefined\") {\n      mutate = true;\n    }\n\n    this._cell.setValue(value, mutate);\n  }\n\n  restoreOldValue() {\n    this._cell.setValueActual(this._cell.getOldValue());\n  }\n\n  restoreInitialValue() {\n    this._cell.setValueActual(this._cell.initialValue);\n  }\n\n  checkHeight() {\n    this._cell.checkHeight();\n  }\n\n  getTable() {\n    return this._cell.table;\n  }\n\n  _getSelf() {\n    return this._cell;\n  }\n\n}\n\nclass Cell extends CoreFeature {\n  constructor(column, row) {\n    super(column.table);\n    this.table = column.table;\n    this.column = column;\n    this.row = row;\n    this.element = null;\n    this.value = null;\n    this.initialValue;\n    this.oldValue = null;\n    this.modules = {};\n    this.height = null;\n    this.width = null;\n    this.minWidth = null;\n    this.component = null;\n    this.loaded = false; //track if the cell has been added to the DOM yet\n\n    this.build();\n  } //////////////// Setup Functions /////////////////\n  //generate element\n\n\n  build() {\n    this.generateElement();\n    this.setWidth();\n\n    this._configureCell();\n\n    this.setValueActual(this.column.getFieldValue(this.row.data));\n    this.initialValue = this.value;\n  }\n\n  generateElement() {\n    this.element = document.createElement('div');\n    this.element.className = \"tabulator-cell\";\n    this.element.setAttribute(\"role\", \"gridcell\");\n    this.element = this.element;\n  }\n\n  _configureCell() {\n    var element = this.element,\n        field = this.column.getField(),\n        vertAligns = {\n      top: \"flex-start\",\n      bottom: \"flex-end\",\n      middle: \"center\"\n    },\n        hozAligns = {\n      left: \"flex-start\",\n      right: \"flex-end\",\n      center: \"center\"\n    }; //set text alignment\n\n    element.style.textAlign = this.column.hozAlign;\n\n    if (this.column.vertAlign) {\n      element.style.display = \"inline-flex\";\n      element.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\n\n      if (this.column.hozAlign) {\n        element.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\n      }\n    }\n\n    if (field) {\n      element.setAttribute(\"tabulator-field\", field);\n    } //add class to cell if needed\n\n\n    if (this.column.definition.cssClass) {\n      var classNames = this.column.definition.cssClass.split(\" \");\n      classNames.forEach(className => {\n        element.classList.add(className);\n      });\n    } //update tooltip on mouse enter\n\n\n    if (this.table.options.tooltipGenerationMode === \"hover\") {\n      element.addEventListener(\"mouseenter\", e => {\n        this._generateTooltip();\n      });\n    }\n\n    this.dispatch(\"cell-init\", this); //hide cell if not visible\n\n    if (!this.column.visible) {\n      this.hide();\n    }\n  } //generate cell contents\n\n\n  _generateContents() {\n    var val;\n    val = this.chain(\"cell-format\", this, null, () => {\n      return this.element.innerHTML = this.value;\n    });\n\n    switch (typeof val) {\n      case \"object\":\n        if (val instanceof Node) {\n          //clear previous cell contents\n          while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n          this.element.appendChild(val);\n        } else {\n          this.element.innerHTML = \"\";\n\n          if (val != null) {\n            console.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\n          }\n        }\n\n        break;\n\n      case \"undefined\":\n      case \"null\":\n        this.element.innerHTML = \"\";\n        break;\n\n      default:\n        this.element.innerHTML = val;\n    }\n  }\n\n  cellRendered() {\n    this.dispatch(\"cell-rendered\", this);\n  } //generate tooltip text\n\n\n  _generateTooltip() {\n    var tooltip = this.column.tooltip;\n\n    if (tooltip) {\n      if (tooltip === true) {\n        tooltip = this.value;\n      } else if (typeof tooltip == \"function\") {\n        tooltip = tooltip(this.getComponent());\n\n        if (tooltip === false) {\n          tooltip = \"\";\n        }\n      }\n\n      if (typeof tooltip === \"undefined\") {\n        tooltip = \"\";\n      }\n\n      this.element.setAttribute(\"title\", tooltip);\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  } //////////////////// Getters ////////////////////\n\n\n  getElement(containerOnly) {\n    if (!this.loaded) {\n      this.loaded = true;\n\n      if (!containerOnly) {\n        this.layoutElement();\n      }\n    }\n\n    return this.element;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  getOldValue() {\n    return this.oldValue;\n  } //////////////////// Actions ////////////////////\n\n\n  setValue(value, mutate) {\n    var changed = this.setValueProcessData(value, mutate);\n\n    if (changed) {\n      this.dispatch(\"cell-value-updated\", this);\n      this.cellRendered();\n      this.dispatchExternal(\"cellEdited\", this.getComponent());\n\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n    }\n  }\n\n  setValueProcessData(value, mutate) {\n    var changed = false;\n\n    if (this.value != value) {\n      changed = true;\n\n      if (mutate) {\n        value = this.chain(\"cell-value-changing\", [this, value], null, value);\n      }\n    }\n\n    this.setValueActual(value);\n\n    if (changed) {\n      this.dispatch(\"cell-value-changed\", this);\n    }\n\n    return changed;\n  }\n\n  setValueActual(value) {\n    this.oldValue = this.value;\n    this.value = value;\n    this.dispatch(\"cell-value-save-before\", this);\n    this.column.setFieldValue(this.row.data, value);\n    this.dispatch(\"cell-value-save-after\", this);\n\n    if (this.loaded) {\n      this.layoutElement();\n    }\n  }\n\n  layoutElement() {\n    this._generateContents();\n\n    this._generateTooltip();\n\n    this.dispatch(\"cell-layout\", this);\n  }\n\n  setWidth() {\n    this.width = this.column.width;\n    this.element.style.width = this.column.widthStyled;\n  }\n\n  clearWidth() {\n    this.width = \"\";\n    this.element.style.width = \"\";\n  }\n\n  getWidth() {\n    return this.width || this.element.offsetWidth;\n  }\n\n  setMinWidth() {\n    this.minWidth = this.column.minWidth;\n    this.element.style.minWidth = this.column.minWidthStyled;\n  }\n\n  setMaxWidth() {\n    this.maxWidth = this.column.maxWidth;\n    this.element.style.maxWidth = this.column.maxWidthStyled;\n  }\n\n  checkHeight() {\n    // var height = this.element.css(\"height\");\n    this.row.reinitializeHeight();\n  }\n\n  clearHeight() {\n    this.element.style.height = \"\";\n    this.height = null;\n  }\n\n  setHeight() {\n    this.height = this.row.height;\n    this.element.style.height = this.row.heightStyled;\n  }\n\n  getHeight() {\n    return this.height || this.element.offsetHeight;\n  }\n\n  show() {\n    this.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\n  }\n\n  hide() {\n    this.element.style.display = \"none\";\n  }\n\n  delete() {\n    this.dispatch(\"cell-delete\", this);\n\n    if (!this.table.rowManager.redrawBlock && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n\n    this.element = false;\n    this.column.deleteCell(this);\n    this.row.deleteCell(this);\n    this.calcs = {};\n  }\n\n  getIndex() {\n    return this.row.getCellIndex(this);\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new CellComponent(this);\n    }\n\n    return this.component;\n  }\n\n} //public column object\n\n\nclass ColumnComponent {\n  constructor(column) {\n    this._column = column;\n    this.type = \"ColumnComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._column.table.componentFunctionBinder.handle(\"column\", target._column, name);\n        }\n      }\n    });\n  }\n\n  getElement() {\n    return this._column.getElement();\n  }\n\n  getDefinition() {\n    return this._column.getDefinition();\n  }\n\n  getField() {\n    return this._column.getField();\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._column.cells.forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  isVisible() {\n    return this._column.visible;\n  }\n\n  show() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.show();\n      });\n    } else {\n      this._column.show();\n    }\n  }\n\n  hide() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.hide();\n      });\n    } else {\n      this._column.hide();\n    }\n  }\n\n  toggle() {\n    if (this._column.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  delete() {\n    return this._column.delete();\n  }\n\n  getSubColumns() {\n    var output = [];\n\n    if (this._column.columns.length) {\n      this._column.columns.forEach(function (column) {\n        output.push(column.getComponent());\n      });\n    }\n\n    return output;\n  }\n\n  getParentColumn() {\n    return this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\n  }\n\n  _getSelf() {\n    return this._column;\n  }\n\n  scrollTo() {\n    return this._column.table.columnManager.scrollToColumn(this._column);\n  }\n\n  getTable() {\n    return this._column.table;\n  }\n\n  move(to, after) {\n    var toColumn = this._column.table.columnManager.findColumn(to);\n\n    if (toColumn) {\n      this._column.table.columnManager.moveColumn(this._column, toColumn, after);\n    } else {\n      console.warn(\"Move Error - No matching column found:\", toColumn);\n    }\n  }\n\n  getNextColumn() {\n    var nextCol = this._column.nextColumn();\n\n    return nextCol ? nextCol.getComponent() : false;\n  }\n\n  getPrevColumn() {\n    var prevCol = this._column.prevColumn();\n\n    return prevCol ? prevCol.getComponent() : false;\n  }\n\n  updateDefinition(updates) {\n    return this._column.updateDefinition(updates);\n  }\n\n  getWidth() {\n    return this._column.getWidth();\n  }\n\n  setWidth(width) {\n    var result;\n\n    if (width === true) {\n      result = this._column.reinitializeWidth(true);\n    } else {\n      result = this._column.setWidth(width);\n    }\n\n    this._column.table.columnManager.renderer.rerenderColumns(true);\n\n    return result;\n  }\n\n}\n\nvar defaultColumnOptions = {\n  \"title\": undefined,\n  \"field\": undefined,\n  \"columns\": undefined,\n  \"visible\": undefined,\n  \"hozAlign\": undefined,\n  \"vertAlign\": undefined,\n  \"width\": undefined,\n  \"minWidth\": 40,\n  \"maxWidth\": undefined,\n  \"tooltip\": undefined,\n  \"cssClass\": undefined,\n  \"variableHeight\": undefined,\n  \"headerTooltip\": undefined,\n  \"headerVertical\": undefined,\n  \"headerHozAlign\": undefined,\n  \"editableTitle\": undefined\n};\n\nclass Column$1 extends CoreFeature {\n  constructor(def, parent) {\n    super(parent.table);\n    this.definition = def; //column definition\n\n    this.parent = parent; //hold parent object\n\n    this.type = \"column\"; //type of element\n\n    this.columns = []; //child columns\n\n    this.cells = []; //cells bound to this column\n\n    this.element = this.createElement(); //column header element\n\n    this.contentElement = false;\n    this.titleHolderElement = false;\n    this.titleElement = false;\n    this.groupElement = this.createGroupElement(); //column group holder element\n\n    this.isGroup = false;\n    this.tooltip = false; //hold column tooltip\n\n    this.hozAlign = \"\"; //horizontal text alignment\n\n    this.vertAlign = \"\"; //vert text alignment\n    //multi dimensional filed handling\n\n    this.field = \"\";\n    this.fieldStructure = \"\";\n    this.getFieldValue = \"\";\n    this.setFieldValue = \"\";\n    this.titleFormatterRendered = false;\n    this.mapDefinitions();\n    this.setField(this.definition.field);\n    this.modules = {}; //hold module variables;\n\n    this.width = null; //column width\n\n    this.widthStyled = \"\"; //column width prestyled to improve render efficiency\n\n    this.maxWidth = null; //column maximum width\n\n    this.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\n\n    this.minWidth = null; //column minimum width\n\n    this.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\n\n    this.widthFixed = false; //user has specified a width for this column\n\n    this.visible = true; //default visible state\n\n    this.component = null; //initialize column\n\n    if (this.definition.columns) {\n      this.isGroup = true;\n      this.definition.columns.forEach((def, i) => {\n        var newCol = new Column$1(def, this);\n        this.attachColumn(newCol);\n      });\n      this.checkColumnVisibility();\n    } else {\n      parent.registerColumnField(this);\n    }\n\n    this._initialize();\n\n    this.bindModuleColumns();\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.setAttribute(\"role\", \"columnheader\");\n    el.setAttribute(\"aria-sort\", \"none\");\n    return el;\n  }\n\n  createGroupElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col-group-cols\");\n    return el;\n  }\n\n  mapDefinitions() {\n    var defaults = this.table.options.columnDefaults; //map columnDefaults onto column definitions\n\n    if (defaults) {\n      for (let key in defaults) {\n        if (typeof this.definition[key] === \"undefined\") {\n          this.definition[key] = defaults[key];\n        }\n      }\n    }\n\n    this.definition = this.table.columnManager.optionsList.generate(Column$1.defaultOptionList, this.definition);\n  }\n\n  checkDefinition() {\n    Object.keys(this.definition).forEach(key => {\n      if (Column$1.defaultOptionList.indexOf(key) === -1) {\n        console.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key);\n      }\n    });\n  }\n\n  setField(field) {\n    this.field = field;\n    this.fieldStructure = field ? this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field] : [];\n    this.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\n    this.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\n  } //register column position with column manager\n\n\n  registerColumnPosition(column) {\n    this.parent.registerColumnPosition(column);\n  } //register column position with column manager\n\n\n  registerColumnField(column) {\n    this.parent.registerColumnField(column);\n  } //trigger position registration\n\n\n  reRegisterPosition() {\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        column.reRegisterPosition();\n      });\n    } else {\n      this.registerColumnPosition(this);\n    }\n  }\n\n  _mapDepricatedFunctionality() {//all previously deprecated functionality removed in the 5.0 release\n  }\n\n  setTooltip() {\n    var def = this.definition; //set header tooltips\n\n    var tooltip = def.headerTooltip;\n\n    if (tooltip) {\n      if (tooltip === true) {\n        if (def.field) {\n          this.langBind(\"columns|\" + def.field, value => {\n            this.element.setAttribute(\"title\", value || def.title);\n          });\n        } else {\n          this.element.setAttribute(\"title\", def.title);\n        }\n      } else {\n        if (typeof tooltip == \"function\") {\n          tooltip = tooltip(this.getComponent());\n\n          if (tooltip === false) {\n            tooltip = \"\";\n          }\n        }\n\n        this.element.setAttribute(\"title\", tooltip);\n      }\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  } //build header element\n\n\n  _initialize() {\n    var def = this.definition;\n\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n    if (def.headerVertical) {\n      this.element.classList.add(\"tabulator-col-vertical\");\n\n      if (def.headerVertical === \"flip\") {\n        this.element.classList.add(\"tabulator-col-vertical-flip\");\n      }\n    }\n\n    this.contentElement = this._bindEvents();\n    this.contentElement = this._buildColumnHeaderContent();\n    this.element.appendChild(this.contentElement);\n\n    if (this.isGroup) {\n      this._buildGroupHeader();\n    } else {\n      this._buildColumnHeader();\n    }\n\n    this.setTooltip();\n    this.dispatch(\"column-init\", this); //update header tooltip on mouse enter\n\n    this.element.addEventListener(\"mouseenter\", e => {\n      this.setTooltip();\n    });\n  }\n\n  _bindEvents() {\n    var def = this.definition,\n        dblTap,\n        tapHold,\n        tap; //setup header click event bindings\n\n    if (typeof def.headerClick == \"function\") {\n      this.element.addEventListener(\"click\", e => {\n        def.headerClick(e, this.getComponent());\n      });\n    }\n\n    if (typeof def.headerDblClick == \"function\") {\n      this.element.addEventListener(\"dblclick\", e => {\n        def.headerDblClick(e, this.getComponent());\n      });\n    }\n\n    if (typeof def.headerContext == \"function\") {\n      this.element.addEventListener(\"contextmenu\", e => {\n        def.headerContext(e, this.getComponent());\n      });\n    } //setup header tap event bindings\n\n\n    if (typeof def.headerTap == \"function\") {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          def.headerTap(e, this.getComponent());\n        }\n\n        tap = false;\n      });\n    }\n\n    if (typeof def.headerDblTap == \"function\") {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          def.headerDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n\n    if (typeof def.headerTapHold == \"function\") {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(function () {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          def.headerTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n  } //build header element for header\n\n\n  _buildColumnHeader() {\n    var def = this.definition,\n        table = this.table;\n    this.dispatch(\"column-layout\", this); //set column visibility\n\n    if (typeof def.visible != \"undefined\") {\n      if (def.visible) {\n        this.show(true);\n      } else {\n        this.hide(true);\n      }\n    } //asign additional css classes to column header\n\n\n    if (def.cssClass) {\n      var classeNames = def.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n\n    if (def.field) {\n      this.element.setAttribute(\"tabulator-field\", def.field);\n    } //set min width if present\n\n\n    this.setMinWidth(parseInt(def.minWidth));\n\n    if (def.maxWidth) {\n      this.setMaxWidth(parseInt(def.maxWidth));\n    }\n\n    this.reinitializeWidth(); //set tooltip if present\n\n    this.tooltip = this.definition.tooltip; //set orizontal text alignment\n\n    this.hozAlign = this.definition.hozAlign;\n    this.vertAlign = this.definition.vertAlign;\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n  }\n\n  _buildColumnHeaderContent() {\n    var def = this.definition,\n        table = this.table;\n    var contentElement = document.createElement(\"div\");\n    contentElement.classList.add(\"tabulator-col-content\");\n    this.titleHolderElement = document.createElement(\"div\");\n    this.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\n    contentElement.appendChild(this.titleHolderElement);\n    this.titleElement = this._buildColumnHeaderTitle();\n    this.titleHolderElement.appendChild(this.titleElement);\n    return contentElement;\n  } //build title element of column\n\n\n  _buildColumnHeaderTitle() {\n    var def = this.definition;\n    var titleHolderElement = document.createElement(\"div\");\n    titleHolderElement.classList.add(\"tabulator-col-title\");\n\n    if (def.editableTitle) {\n      var titleElement = document.createElement(\"input\");\n      titleElement.classList.add(\"tabulator-title-editor\");\n      titleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        titleElement.focus();\n      });\n      titleElement.addEventListener(\"change\", () => {\n        def.title = titleElement.value;\n        this.dispatchExternal(\"columnTitleChanged\", this.getComponent());\n      });\n      titleHolderElement.appendChild(titleElement);\n\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          titleElement.value = text || def.title || \"&nbsp;\";\n        });\n      } else {\n        titleElement.value = def.title || \"&nbsp;\";\n      }\n    } else {\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          this._formatColumnHeaderTitle(titleHolderElement, text || def.title || \"&nbsp;\");\n        });\n      } else {\n        this._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\n      }\n    }\n\n    return titleHolderElement;\n  }\n\n  _formatColumnHeaderTitle(el, title) {\n    var contents = this.chain(\"column-format\", [this, title, el], null, () => {\n      return title;\n    });\n\n    switch (typeof contents) {\n      case \"object\":\n        if (contents instanceof Node) {\n          el.appendChild(contents);\n        } else {\n          el.innerHTML = \"\";\n          console.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\n        }\n\n        break;\n\n      case \"undefined\":\n      case \"null\":\n        el.innerHTML = \"\";\n        break;\n\n      default:\n        el.innerHTML = contents;\n    }\n  } //build header element for column group\n\n\n  _buildGroupHeader() {\n    this.element.classList.add(\"tabulator-col-group\");\n    this.element.setAttribute(\"role\", \"columngroup\");\n    this.element.setAttribute(\"aria-title\", this.definition.title); //asign additional css classes to column header\n\n    if (this.definition.cssClass) {\n      var classeNames = this.definition.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n    this.element.appendChild(this.groupElement);\n  } //flat field lookup\n\n\n  _getFlatData(data) {\n    return data[this.field];\n  } //nested field lookup\n\n\n  _getNestedData(data) {\n    var dataObj = data,\n        structure = this.fieldStructure,\n        length = structure.length,\n        output;\n\n    for (let i = 0; i < length; i++) {\n      dataObj = dataObj[structure[i]];\n      output = dataObj;\n\n      if (!dataObj) {\n        break;\n      }\n    }\n\n    return output;\n  } //flat field set\n\n\n  _setFlatData(data, value) {\n    if (this.field) {\n      data[this.field] = value;\n    }\n  } //nested field set\n\n\n  _setNestedData(data, value) {\n    var dataObj = data,\n        structure = this.fieldStructure,\n        length = structure.length;\n\n    for (let i = 0; i < length; i++) {\n      if (i == length - 1) {\n        dataObj[structure[i]] = value;\n      } else {\n        if (!dataObj[structure[i]]) {\n          if (typeof value !== \"undefined\") {\n            dataObj[structure[i]] = {};\n          } else {\n            break;\n          }\n        }\n\n        dataObj = dataObj[structure[i]];\n      }\n    }\n  } //attach column to this group\n\n\n  attachColumn(column) {\n    if (this.groupElement) {\n      this.columns.push(column);\n      this.groupElement.appendChild(column.getElement());\n    } else {\n      console.warn(\"Column Warning - Column being attached to another column instead of column group\");\n    }\n  } //vertically align header in column\n\n\n  verticalAlign(alignment, height) {\n    //calculate height of column header and group holder element\n    var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : height || this.parent.getHeadersElement().clientHeight; // var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\n\n    this.element.style.height = parentHeight + \"px\";\n\n    if (this.isGroup) {\n      this.groupElement.style.minHeight = parentHeight - this.contentElement.offsetHeight + \"px\";\n    } //vertically align cell contents\n\n\n    if (!this.isGroup && alignment !== \"top\") {\n      if (alignment === \"bottom\") {\n        this.element.style.paddingTop = this.element.clientHeight - this.contentElement.offsetHeight + \"px\";\n      } else {\n        this.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) / 2 + \"px\";\n      }\n    }\n\n    this.columns.forEach(function (column) {\n      column.verticalAlign(alignment);\n    });\n  } //clear vertical alignmenet\n\n\n  clearVerticalAlign() {\n    this.element.style.paddingTop = \"\";\n    this.element.style.height = \"\";\n    this.element.style.minHeight = \"\";\n    this.groupElement.style.minHeight = \"\";\n    this.columns.forEach(function (column) {\n      column.clearVerticalAlign();\n    });\n  }\n\n  bindModuleColumns() {\n    //check if rownum formatter is being used on a column\n    if (this.definition.formatter == \"rownum\") {\n      this.table.rowManager.rowNumColumn = this;\n    }\n  } //// Retreive Column Information ////\n  //return column header element\n\n\n  getElement() {\n    return this.element;\n  } //return colunm group element\n\n\n  getGroupElement() {\n    return this.groupElement;\n  } //return field name\n\n\n  getField() {\n    return this.field;\n  } //return the first column in a group\n\n\n  getFirstColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[0].getFirstColumn();\n      } else {\n        return false;\n      }\n    }\n  } //return the last column in a group\n\n\n  getLastColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[this.columns.length - 1].getLastColumn();\n      } else {\n        return false;\n      }\n    }\n  } //return all columns in a group\n\n\n  getColumns() {\n    return this.columns;\n  } //return all columns in a group\n\n\n  getCells() {\n    return this.cells;\n  } //retreive the top column in a group of columns\n\n\n  getTopColumn() {\n    if (this.parent.isGroup) {\n      return this.parent.getTopColumn();\n    } else {\n      return this;\n    }\n  } //return column definition object\n\n\n  getDefinition(updateBranches) {\n    var colDefs = [];\n\n    if (this.isGroup && updateBranches) {\n      this.columns.forEach(function (column) {\n        colDefs.push(column.getDefinition(true));\n      });\n      this.definition.columns = colDefs;\n    }\n\n    return this.definition;\n  } //////////////////// Actions ////////////////////\n\n\n  checkColumnVisibility() {\n    var visible = false;\n    this.columns.forEach(function (column) {\n      if (column.visible) {\n        visible = true;\n      }\n    });\n\n    if (visible) {\n      this.show();\n      this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n    } else {\n      this.hide();\n    }\n  } //show column\n\n\n  show(silent, responsiveToggle) {\n    if (!this.visible) {\n      this.visible = true;\n      this.element.style.display = \"\";\n\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n\n      this.cells.forEach(function (cell) {\n        cell.show();\n      });\n\n      if (!this.isGroup && this.width === null) {\n        this.reinitializeWidth();\n      }\n\n      this.table.columnManager.verticalAlignHeaders();\n      this.dispatch(\"column-show\", this, responsiveToggle);\n\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\n      }\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  } //hide column\n\n\n  hide(silent, responsiveToggle) {\n    if (this.visible) {\n      this.visible = false;\n      this.element.style.display = \"none\";\n      this.table.columnManager.verticalAlignHeaders();\n\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n\n      this.cells.forEach(function (cell) {\n        cell.hide();\n      });\n      this.dispatch(\"column-hide\", this, responsiveToggle);\n\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n      }\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n\n  matchChildWidths() {\n    var childWidth = 0;\n\n    if (this.contentElement && this.columns.length) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          childWidth += column.getWidth();\n        }\n      });\n      this.contentElement.style.maxWidth = childWidth - 1 + \"px\";\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n    }\n  }\n\n  removeChild(child) {\n    var index = this.columns.indexOf(child);\n\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n\n    if (!this.columns.length) {\n      this.delete();\n    }\n  }\n\n  setWidth(width) {\n    this.widthFixed = true;\n    this.setWidthActual(width);\n  }\n\n  setWidthActual(width) {\n    if (isNaN(width)) {\n      width = Math.floor(this.table.element.clientWidth / 100 * parseInt(width));\n    }\n\n    width = Math.max(this.minWidth, width);\n\n    if (this.maxWidth) {\n      width = Math.min(this.maxWidth, width);\n    }\n\n    this.width = width;\n    this.widthStyled = width ? width + \"px\" : \"\";\n    this.element.style.width = this.widthStyled;\n\n    if (!this.isGroup) {\n      this.cells.forEach(function (cell) {\n        cell.setWidth();\n      });\n    }\n\n    if (this.parent.isGroup) {\n      this.parent.matchChildWidths();\n    }\n\n    this.dispatch(\"column-width\", this);\n  }\n\n  checkCellHeights() {\n    var rows = [];\n    this.cells.forEach(function (cell) {\n      if (cell.row.heightInitialized) {\n        if (cell.row.getElement().offsetParent !== null) {\n          rows.push(cell.row);\n          cell.row.clearCellHeight();\n        } else {\n          cell.row.heightInitialized = false;\n        }\n      }\n    });\n    rows.forEach(function (row) {\n      row.calcHeight();\n    });\n    rows.forEach(function (row) {\n      row.setCellHeight();\n    });\n  }\n\n  getWidth() {\n    var width = 0;\n\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          width += column.getWidth();\n        }\n      });\n    } else {\n      width = this.width;\n    }\n\n    return width;\n  }\n\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n\n  setMinWidth(minWidth) {\n    this.minWidth = minWidth;\n    this.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\n    this.element.style.minWidth = this.minWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMinWidth();\n    });\n  }\n\n  setMaxWidth(maxWidth) {\n    this.maxWidth = maxWidth;\n    this.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\n    this.element.style.maxWidth = this.maxWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMaxWidth();\n    });\n  }\n\n  delete() {\n    return new Promise((resolve, reject) => {\n      if (this.isGroup) {\n        this.columns.forEach(function (column) {\n          column.delete();\n        });\n      }\n\n      this.dispatch(\"column-delete\", this);\n      var cellCount = this.cells.length;\n\n      for (let i = 0; i < cellCount; i++) {\n        this.cells[0].delete();\n      }\n\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      this.element = false;\n      this.contentElement = false;\n      this.titleElement = false;\n      this.groupElement = false;\n\n      if (this.parent.isGroup) {\n        this.parent.removeChild(this);\n      }\n\n      this.table.columnManager.deregisterColumn(this);\n      this.table.columnManager.renderer.rerenderColumns(true);\n      resolve();\n    });\n  }\n\n  columnRendered() {\n    if (this.titleFormatterRendered) {\n      this.titleFormatterRendered();\n    }\n  } //////////////// Cell Management /////////////////\n  //generate cell for this column\n\n\n  generateCell(row) {\n    var cell = new Cell(this, row);\n    this.cells.push(cell);\n    return cell;\n  }\n\n  nextColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._nextVisibleColumn(index + 1) : false;\n  }\n\n  _nextVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._nextVisibleColumn(index + 1);\n  }\n\n  prevColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._prevVisibleColumn(index - 1) : false;\n  }\n\n  _prevVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._prevVisibleColumn(index - 1);\n  }\n\n  reinitializeWidth(force) {\n    this.widthFixed = false; //set width if present\n\n    if (typeof this.definition.width !== \"undefined\" && !force) {\n      this.setWidth(this.definition.width);\n    }\n\n    this.dispatch(\"column-width-fit-before\", this);\n    this.fitToData();\n    this.dispatch(\"column-width-fit-after\", this);\n  } //set column width to maximum cell width for non group columns\n\n\n  fitToData() {\n    if (this.isGroup) {\n      return;\n    }\n\n    if (!this.widthFixed) {\n      this.element.style.width = \"\";\n      this.cells.forEach(cell => {\n        cell.clearWidth();\n      });\n    }\n\n    var maxWidth = this.element.offsetWidth;\n\n    if (!this.width || !this.widthFixed) {\n      this.cells.forEach(cell => {\n        var width = cell.getWidth();\n\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      });\n\n      if (maxWidth) {\n        this.setWidthActual(maxWidth + 1);\n      }\n    }\n  }\n\n  updateDefinition(updates) {\n    var definition;\n\n    if (!this.isGroup) {\n      if (!this.parent.isGroup) {\n        definition = Object.assign({}, this.getDefinition());\n        definition = Object.assign(definition, updates);\n        return this.table.columnManager.addColumn(definition, false, this).then(column => {\n          if (definition.field == this.field) {\n            this.field = false; //cleair field name to prevent deletion of duplicate column from arrays\n          }\n\n          return this.delete().then(() => {\n            return column.getComponent();\n          });\n        });\n      } else {\n        console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n        return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n      }\n    } else {\n      console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n      return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n    }\n  }\n\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new ColumnComponent(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nColumn$1.defaultOptionList = defaultColumnOptions; //public row object\n\nclass RowComponent$1 {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n\n  getElement() {\n    return this._row.getElement();\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  getCell(column) {\n    var cell = this._row.getCell(column);\n\n    return cell ? cell.getComponent() : false;\n  }\n\n  getIndex() {\n    return this._row.getData(\"data\")[this._row.table.options.index];\n  }\n\n  getPosition(active) {\n    return this._row.table.rowManager.getRowPosition(this._row, active);\n  }\n\n  delete() {\n    return this._row.delete();\n  }\n\n  scrollTo() {\n    return this._row.table.rowManager.scrollToRow(this._row);\n  }\n\n  move(to, after) {\n    this._row.moveToRow(to, after);\n  }\n\n  update(data) {\n    return this._row.updateData(data);\n  }\n\n  normalizeHeight() {\n    this._row.normalizeHeight(true);\n  }\n\n  _getSelf() {\n    return this._row;\n  }\n\n  reformat() {\n    return this._row.reinitialize();\n  }\n\n  getTable() {\n    return this._row.table;\n  }\n\n  getNextRow() {\n    var row = this._row.nextRow();\n\n    return row ? row.getComponent() : row;\n  }\n\n  getPrevRow() {\n    var row = this._row.prevRow();\n\n    return row ? row.getComponent() : row;\n  }\n\n}\n\nclass Row extends CoreFeature {\n  constructor(data, parent) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"row\";\n    super(parent.table);\n    this.parent = parent;\n    this.data = {};\n    this.type = type; //type of element\n\n    this.element = false;\n    this.modules = {}; //hold module variables;\n\n    this.cells = [];\n    this.height = 0; //hold element height\n\n    this.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\n\n    this.manualHeight = false; //user has manually set row height\n\n    this.outerHeight = 0; //holde lements outer height\n\n    this.initialized = false; //element has been rendered\n\n    this.heightInitialized = false; //element has resized cells to fit\n\n    this.component = null;\n    this.created = false;\n    this.setData(data);\n  }\n\n  create() {\n    if (!this.created) {\n      this.created = true;\n      this.generateElement();\n    }\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.setAttribute(\"role\", \"row\");\n    this.element = el;\n  }\n\n  getElement() {\n    this.create();\n    return this.element;\n  }\n\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  generateElement() {\n    this.createElement();\n    this.dispatch(\"row-init\", this);\n  }\n\n  generateCells() {\n    this.cells = this.table.columnManager.generateCells(this);\n  } //functions to setup on first render\n\n\n  initialize(force) {\n    this.create();\n\n    if (!this.initialized || force) {\n      this.deleteCells();\n\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n      this.dispatch(\"row-layout-before\", this);\n      this.generateCells();\n      this.table.columnManager.renderer.renderRowCells(this);\n\n      if (force) {\n        this.normalizeHeight();\n      }\n\n      this.dispatch(\"row-layout\", this);\n\n      if (this.table.options.rowFormatter) {\n        this.table.options.rowFormatter(this.getComponent());\n      }\n\n      this.initialized = true;\n      this.dispatch(\"row-layout-after\", this);\n    } else {\n      this.table.columnManager.renderer.rerenderRowCells(this);\n    }\n  }\n\n  reinitializeHeight() {\n    this.heightInitialized = false;\n\n    if (this.element && this.element.offsetParent !== null) {\n      this.normalizeHeight(true);\n    }\n  }\n\n  deinitializeHeight() {\n    this.heightInitialized = false;\n  }\n\n  reinitialize(children) {\n    this.initialized = false;\n    this.heightInitialized = false;\n\n    if (!this.manualHeight) {\n      this.height = 0;\n      this.heightStyled = \"\";\n    }\n\n    if (this.element && this.element.offsetParent !== null) {\n      this.initialize(true);\n    }\n\n    this.dispatch(\"row-relayout\", this);\n  } //get heights when doing bulk row style calcs in virtual DOM\n\n\n  calcHeight(force) {\n    var maxHeight = 0,\n        minHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\n    this.cells.forEach(function (cell) {\n      var height = cell.getHeight();\n\n      if (height > maxHeight) {\n        maxHeight = height;\n      }\n    });\n\n    if (force) {\n      this.height = Math.max(maxHeight, minHeight);\n    } else {\n      this.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\n    }\n\n    this.heightStyled = this.height ? this.height + \"px\" : \"\";\n    this.outerHeight = this.element.offsetHeight;\n  } //set of cells\n\n\n  setCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.setHeight();\n    });\n    this.heightInitialized = true;\n  }\n\n  clearCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.clearHeight();\n    });\n  } //normalize the height of elements in the row\n\n\n  normalizeHeight(force) {\n    if (force) {\n      this.clearCellHeight();\n    }\n\n    this.calcHeight(force);\n    this.setCellHeight();\n  } //set height of rows\n\n\n  setHeight(height, force) {\n    if (this.height != height || force) {\n      this.manualHeight = true;\n      this.height = height;\n      this.heightStyled = height ? height + \"px\" : \"\";\n      this.setCellHeight(); // this.outerHeight = this.element.outerHeight();\n\n      this.outerHeight = this.element.offsetHeight;\n    }\n  } //return rows outer height\n\n\n  getHeight() {\n    return this.outerHeight;\n  } //return rows outer Width\n\n\n  getWidth() {\n    return this.element.offsetWidth;\n  } //////////////// Cell Management /////////////////\n\n\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  } //////////////// Data Management /////////////////\n\n\n  setData(data) {\n    this.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\n    this.dispatch(\"row-data-init-after\", this);\n  } //update the rows data\n\n\n  updateData(updatedData) {\n    var visible = this.element && Helpers.elVisible(this.element),\n        tempData = {},\n        newRowData;\n    return new Promise((resolve, reject) => {\n      if (typeof updatedData === \"string\") {\n        updatedData = JSON.parse(updatedData);\n      }\n\n      this.dispatch(\"row-data-save-before\", this);\n\n      if (this.subscribed(\"row-data-changing\")) {\n        tempData = Object.assign(tempData, this.data);\n        tempData = Object.assign(tempData, updatedData);\n      }\n\n      newRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData); //set data\n\n      for (var attrname in newRowData) {\n        this.data[attrname] = newRowData[attrname];\n      }\n\n      this.dispatch(\"row-data-save-after\", this); //update affected cells only\n\n      for (var attrname in updatedData) {\n        let columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\n        columns.forEach(column => {\n          let cell = this.getCell(column.getField());\n\n          if (cell) {\n            let value = column.getFieldValue(newRowData);\n\n            if (cell.getValue() != value) {\n              cell.setValueProcessData(value);\n\n              if (visible) {\n                cell.cellRendered();\n              }\n            }\n          }\n        });\n      } //Partial reinitialization if visible\n\n\n      if (visible) {\n        this.normalizeHeight(true);\n\n        if (this.table.options.rowFormatter) {\n          this.table.options.rowFormatter(this.getComponent());\n        }\n      } else {\n        this.initialized = false;\n        this.height = 0;\n        this.heightStyled = \"\";\n      }\n\n      this.dispatch(\"row-data-changed\", this, visible, updatedData); //this.reinitialize();\n\n      this.dispatchExternal(\"rowUpdated\", this.getComponent());\n\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n\n      resolve();\n    });\n  }\n\n  getData(transform) {\n    if (transform) {\n      return this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\n    }\n\n    return this.data;\n  }\n\n  getCell(column) {\n    var match = false;\n    column = this.table.columnManager.findColumn(column);\n\n    if (!this.initialized) {\n      this.generateCells();\n    }\n\n    match = this.cells.find(function (cell) {\n      return cell.column === column;\n    });\n    return match;\n  }\n\n  getCellIndex(findCell) {\n    return this.cells.findIndex(function (cell) {\n      return cell === findCell;\n    });\n  }\n\n  findCell(subject) {\n    return this.cells.find(cell => {\n      return cell.element === subject;\n    });\n  }\n\n  getCells() {\n    if (!this.initialized) {\n      this.generateCells();\n    }\n\n    return this.cells;\n  }\n\n  nextRow() {\n    var row = this.table.rowManager.nextDisplayRow(this, true);\n    return row || false;\n  }\n\n  prevRow() {\n    var row = this.table.rowManager.prevDisplayRow(this, true);\n    return row || false;\n  }\n\n  moveToRow(to, before) {\n    var toRow = this.table.rowManager.findRow(to);\n\n    if (toRow) {\n      this.table.rowManager.moveRowActual(this, toRow, !before);\n      this.table.rowManager.refreshActiveData(\"display\", false, true);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", to);\n    }\n  } ///////////////////// Actions  /////////////////////\n\n\n  delete() {\n    this.dispatch(\"row-delete\", this);\n    this.deleteActual();\n    return Promise.resolve();\n  }\n\n  deleteActual(blockRedraw) {\n    var index = this.table.rowManager.getRowIndex(this);\n    this.detatchModules();\n    this.table.rowManager.deleteRow(this, blockRedraw);\n    this.deleteCells();\n    this.initialized = false;\n    this.heightInitialized = false;\n    this.element = false;\n    this.dispatch(\"row-deleted\", this);\n  }\n\n  detatchModules() {\n    this.dispatch(\"row-deleting\", this);\n  }\n\n  deleteCells() {\n    var cellCount = this.cells.length;\n\n    for (let i = 0; i < cellCount; i++) {\n      this.cells[0].delete();\n    }\n  }\n\n  wipe() {\n    this.detatchModules();\n    this.deleteCells();\n\n    if (this.element) {\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n    }\n\n    this.element = false;\n    this.modules = {};\n  }\n\n  getGroup() {\n    return this.modules.group || false;\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new RowComponent$1(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nvar defaultCalculations = {\n  \"avg\": function (values, data, calcParams) {\n    var output = 0,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2;\n\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return Number(sum) + Number(value);\n      });\n      output = output / values.length;\n      output = precision !== false ? output.toFixed(precision) : output;\n    }\n\n    return parseFloat(output).toString();\n  },\n  \"max\": function (values, data, calcParams) {\n    var output = null,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n\n      if (value > output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"min\": function (values, data, calcParams) {\n    var output = null,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n\n      if (value < output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"sum\": function (values, data, calcParams) {\n    var output = 0,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n\n    if (values.length) {\n      values.forEach(function (value) {\n        value = Number(value);\n        output += !isNaN(value) ? Number(value) : 0;\n      });\n    }\n\n    return precision !== false ? output.toFixed(precision) : output;\n  },\n  \"concat\": function (values, data, calcParams) {\n    var output = 0;\n\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return String(sum) + String(value);\n      });\n    }\n\n    return output;\n  },\n  \"count\": function (values, data, calcParams) {\n    var output = 0;\n\n    if (values.length) {\n      values.forEach(function (value) {\n        if (value) {\n          output++;\n        }\n      });\n    }\n\n    return output;\n  }\n};\n\nclass ColumnCalcs extends Module {\n  constructor(table) {\n    super(table);\n    this.topCalcs = [];\n    this.botCalcs = [];\n    this.genColumn = false;\n    this.topElement = this.createElement();\n    this.botElement = this.createElement();\n    this.topRow = false;\n    this.botRow = false;\n    this.topInitialized = false;\n    this.botInitialized = false;\n    this.registerTableOption(\"columnCalcs\", true);\n    this.registerColumnOption(\"topCalc\");\n    this.registerColumnOption(\"topCalcParams\");\n    this.registerColumnOption(\"topCalcFormatter\");\n    this.registerColumnOption(\"topCalcFormatterParams\");\n    this.registerColumnOption(\"bottomCalc\");\n    this.registerColumnOption(\"bottomCalcParams\");\n    this.registerColumnOption(\"bottomCalcFormatter\");\n    this.registerColumnOption(\"bottomCalcFormatterParams\");\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-calcs-holder\");\n    return el;\n  }\n\n  initialize() {\n    this.genColumn = new Column$1({\n      field: \"value\"\n    }, this);\n    this.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n    this.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n    this.subscribe(\"rows-visible\", this.visibleRows.bind(this));\n    this.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\n    this.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\n  }\n\n  tableRedraw(force) {\n    this.recalc(this.table.rowManager.activeRows);\n\n    if (force) {\n      this.redraw();\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userRecalc() {\n    this.recalc(this.table.rowManager.activeRows);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  visibleRows(viewable, rows) {\n    if (this.topRow) {\n      rows.unshift(this.topRow);\n    }\n\n    if (this.botRow) {\n      rows.push(this.botRow);\n    }\n\n    return rows;\n  }\n\n  rowsUpdated(row) {\n    if (this.table.options.groupBy) {\n      this.recalcRowGroup(this);\n    } else {\n      this.recalcActiveRows();\n    }\n  }\n\n  recalcActiveRows() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n\n  cellValueChanged(cell) {\n    if (cell.column.definition.topCalc || cell.column.definition.bottomCalc) {\n      if (this.table.options.groupBy) {\n        if (this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\") {\n          this.recalcActiveRows();\n        }\n\n        if (this.table.options.columnCalcs != \"table\") {\n          this.recalcRowGroup(cell.row);\n        }\n      } else {\n        this.recalcActiveRows();\n      }\n    }\n  }\n\n  initializeColumnCheck(column) {\n    if (column.definition.topCalc || column.definition.bottomCalc) {\n      this.initializeColumn(column);\n    }\n  } //initialize column calcs\n\n\n  initializeColumn(column) {\n    var def = column.definition;\n    var config = {\n      topCalcParams: def.topCalcParams || {},\n      botCalcParams: def.bottomCalcParams || {}\n    };\n\n    if (def.topCalc) {\n      switch (typeof def.topCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.topCalc]) {\n            config.topCalc = ColumnCalcs.calculations[def.topCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\n          }\n\n          break;\n\n        case \"function\":\n          config.topCalc = def.topCalc;\n          break;\n      }\n\n      if (config.topCalc) {\n        column.modules.columnCalcs = config;\n        this.topCalcs.push(column);\n\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeTopRow();\n        }\n      }\n    }\n\n    if (def.bottomCalc) {\n      switch (typeof def.bottomCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.bottomCalc]) {\n            config.botCalc = ColumnCalcs.calculations[def.bottomCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\n          }\n\n          break;\n\n        case \"function\":\n          config.botCalc = def.bottomCalc;\n          break;\n      }\n\n      if (config.botCalc) {\n        column.modules.columnCalcs = config;\n        this.botCalcs.push(column);\n\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeBottomRow();\n        }\n      }\n    }\n  } //dummy functions to handle being mock column manager\n\n\n  registerColumnField() {}\n\n  removeCalcs() {\n    var changed = false;\n\n    if (this.topInitialized) {\n      this.topInitialized = false;\n      this.topElement.parentNode.removeChild(this.topElement);\n      changed = true;\n    }\n\n    if (this.botInitialized) {\n      this.botInitialized = false;\n      this.table.footerManager.remove(this.botElement);\n      changed = true;\n    }\n\n    if (changed) {\n      this.table.rowManager.adjustTableSize();\n    }\n  }\n\n  initializeTopRow() {\n    if (!this.topInitialized) {\n      this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n      this.topInitialized = true;\n    }\n  }\n\n  initializeBottomRow() {\n    if (!this.botInitialized) {\n      this.table.footerManager.prepend(this.botElement);\n      this.botInitialized = true;\n    }\n  }\n\n  scrollHorizontal(left) {\n    if (this.botInitialized && this.botRow) {\n      this.botRow.getElement().style.marginLeft = -left + \"px\";\n    }\n  }\n\n  recalc(rows) {\n    var row;\n\n    if (this.topInitialized || this.botInitialized) {\n      this.rowsToData(rows);\n\n      if (this.topInitialized) {\n        if (this.topRow) {\n          this.topRow.deleteCells();\n        }\n\n        row = this.generateRow(\"top\", this.rowsToData(rows));\n        this.topRow = row;\n\n        while (this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\n\n        this.topElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n\n      if (this.botInitialized) {\n        if (this.botRow) {\n          this.botRow.deleteCells();\n        }\n\n        row = this.generateRow(\"bottom\", this.rowsToData(rows));\n        this.botRow = row;\n\n        while (this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\n\n        this.botElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n\n      this.table.rowManager.adjustTableSize(); //set resizable handles\n\n      if (this.table.modExists(\"frozenColumns\")) {\n        this.table.modules.frozenColumns.layout();\n      }\n    }\n  }\n\n  recalcRowGroup(row) {\n    this.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\n  }\n\n  recalcAll() {\n    if (this.topCalcs.length || this.botCalcs.length) {\n      if (this.table.options.columnCalcs !== \"group\") {\n        this.recalcActiveRows();\n      }\n\n      if (this.table.options.groupBy && this.table.options.columnCalcs !== \"table\") {\n        var groups = this.table.modules.groupRows.getChildGroups();\n        groups.forEach(group => {\n          this.recalcGroup(group);\n        });\n      }\n    }\n  }\n\n  recalcGroup(group) {\n    var data, rowData;\n\n    if (group) {\n      if (group.calcs) {\n        if (group.calcs.bottom) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"bottom\", data);\n          group.calcs.bottom.updateData(rowData);\n          group.calcs.bottom.reinitialize();\n        }\n\n        if (group.calcs.top) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"top\", data);\n          group.calcs.top.updateData(rowData);\n          group.calcs.top.reinitialize();\n        }\n      }\n    }\n  } //generate top stats row\n\n\n  generateTopRow(rows) {\n    return this.generateRow(\"top\", this.rowsToData(rows));\n  } //generate bottom stats row\n\n\n  generateBottomRow(rows) {\n    return this.generateRow(\"bottom\", this.rowsToData(rows));\n  }\n\n  rowsToData(rows) {\n    var data = [];\n    rows.forEach(row => {\n      data.push(row.getData());\n\n      if (this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs) {\n        if (row.modules.dataTree.open) {\n          var children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\n          data = data.concat(children);\n        }\n      }\n    });\n    return data;\n  } //generate stats row\n\n\n  generateRow(pos, data) {\n    var rowData = this.generateRowData(pos, data),\n        row;\n\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.disable();\n    }\n\n    row = new Row(rowData, this, \"calc\");\n\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.enable();\n    }\n\n    row.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\n    row.component = false;\n\n    row.getComponent = () => {\n      if (!row.component) {\n        row.component = new CalcComponent(row);\n      }\n\n      return row.component;\n    };\n\n    row.generateCells = () => {\n      var cells = [];\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        //set field name of mock column\n        this.genColumn.setField(column.getField());\n        this.genColumn.hozAlign = column.hozAlign;\n\n        if (column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")) {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\n            params: column.definition[pos + \"CalcFormatterParams\"] || {}\n          };\n        } else {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(\"plaintext\"),\n            params: {}\n          };\n        } //ensure css class defintion is replicated to calculation cell\n\n\n        this.genColumn.definition.cssClass = column.definition.cssClass; //generate cell and assign to correct column\n\n        var cell = new Cell(this.genColumn, row);\n        cell.getElement();\n        cell.column = column;\n        cell.setWidth();\n        column.cells.push(cell);\n        cells.push(cell);\n\n        if (!column.visible) {\n          cell.hide();\n        }\n      });\n      row.cells = cells;\n    };\n\n    return row;\n  } //generate stats row\n\n\n  generateRowData(pos, data) {\n    var rowData = {},\n        calcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\n        type = pos == \"top\" ? \"topCalc\" : \"botCalc\",\n        params,\n        paramKey;\n    calcs.forEach(function (column) {\n      var values = [];\n\n      if (column.modules.columnCalcs && column.modules.columnCalcs[type]) {\n        data.forEach(function (item) {\n          values.push(column.getFieldValue(item));\n        });\n        paramKey = type + \"Params\";\n        params = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\n        column.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\n      }\n    });\n    return rowData;\n  }\n\n  hasTopCalcs() {\n    return !!this.topCalcs.length;\n  }\n\n  hasBottomCalcs() {\n    return !!this.botCalcs.length;\n  } //handle table redraw\n\n\n  redraw() {\n    if (this.topRow) {\n      this.topRow.normalizeHeight(true);\n    }\n\n    if (this.botRow) {\n      this.botRow.normalizeHeight(true);\n    }\n  } //return the calculated\n\n\n  getResults() {\n    var results = {},\n        groups;\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      groups = this.table.modules.groupRows.getGroups(true);\n      groups.forEach(group => {\n        results[group.getKey()] = this.getGroupResults(group);\n      });\n    } else {\n      results = {\n        top: this.topRow ? this.topRow.getData() : {},\n        bottom: this.botRow ? this.botRow.getData() : {}\n      };\n    }\n\n    return results;\n  } //get results from a group\n\n\n  getGroupResults(group) {\n    var groupObj = group._getSelf(),\n        subGroups = group.getSubGroups(),\n        subGroupResults = {},\n        results = {};\n\n    subGroups.forEach(subgroup => {\n      subGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\n    });\n    results = {\n      top: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\n      bottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\n      groups: subGroupResults\n    };\n    return results;\n  }\n\n}\n\nColumnCalcs.moduleName = \"columnCalcs\"; //load defaults\n\nColumnCalcs.calculations = defaultCalculations;\n\nclass DataTree extends Module {\n  constructor(table) {\n    super(table);\n    this.indent = 10;\n    this.field = \"\";\n    this.collapseEl = null;\n    this.expandEl = null;\n    this.branchEl = null;\n    this.elementField = false;\n\n    this.startOpen = function () {};\n\n    this.displayIndex = 0;\n    this.registerTableOption(\"dataTree\", false); //enable data tree\n\n    this.registerTableOption(\"dataTreeFilter\", true); //filter child rows\n\n    this.registerTableOption(\"dataTreeSort\", true); //sort child rows\n\n    this.registerTableOption(\"dataTreeElementColumn\", false);\n    this.registerTableOption(\"dataTreeBranchElement\", true); //show data tree branch element\n\n    this.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\n\n    this.registerTableOption(\"dataTreeChildField\", \"_children\"); //data tre column field to look for child rows\n\n    this.registerTableOption(\"dataTreeCollapseElement\", false); //data tree row collapse element\n\n    this.registerTableOption(\"dataTreeExpandElement\", false); //data tree row expand element\n\n    this.registerTableOption(\"dataTreeStartExpanded\", false);\n    this.registerTableOption(\"dataTreeChildColumnCalcs\", false); //include visible data tree rows in column calculations\n\n    this.registerTableOption(\"dataTreeSelectPropagate\", false); //seleccting a parent row selects its children\n    //register component functions\n\n    this.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\n    this.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.dataTree) {\n      var dummyEl = null,\n          options = this.table.options;\n      this.field = options.dataTreeChildField;\n      this.indent = options.dataTreeChildIndent;\n\n      if (options.dataTreeBranchElement) {\n        if (options.dataTreeBranchElement === true) {\n          this.branchEl = document.createElement(\"div\");\n          this.branchEl.classList.add(\"tabulator-data-tree-branch\");\n        } else {\n          if (typeof options.dataTreeBranchElement === \"string\") {\n            dummyEl = document.createElement(\"div\");\n            dummyEl.innerHTML = options.dataTreeBranchElement;\n            this.branchEl = dummyEl.firstChild;\n          } else {\n            this.branchEl = options.dataTreeBranchElement;\n          }\n        }\n      }\n\n      if (options.dataTreeCollapseElement) {\n        if (typeof options.dataTreeCollapseElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeCollapseElement;\n          this.collapseEl = dummyEl.firstChild;\n        } else {\n          this.collapseEl = options.dataTreeCollapseElement;\n        }\n      } else {\n        this.collapseEl = document.createElement(\"div\");\n        this.collapseEl.classList.add(\"tabulator-data-tree-control\");\n        this.collapseEl.tabIndex = 0;\n        this.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\n      }\n\n      if (options.dataTreeExpandElement) {\n        if (typeof options.dataTreeExpandElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeExpandElement;\n          this.expandEl = dummyEl.firstChild;\n        } else {\n          this.expandEl = options.dataTreeExpandElement;\n        }\n      } else {\n        this.expandEl = document.createElement(\"div\");\n        this.expandEl.classList.add(\"tabulator-data-tree-control\");\n        this.expandEl.tabIndex = 0;\n        this.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\n      }\n\n      switch (typeof options.dataTreeStartExpanded) {\n        case \"boolean\":\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded;\n          };\n\n          break;\n\n        case \"function\":\n          this.startOpen = options.dataTreeStartExpanded;\n          break;\n\n        default:\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded[index];\n          };\n\n          break;\n      }\n\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n      this.subscribe(\"row-deleted\", this.rowDelete.bind(this), 0);\n      this.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\n      this.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\n      this.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\n      this.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\n      this.subscribe(\"table-built\", this.initializeElementField.bind(this));\n      this.registerDisplayHandler(this.getRows.bind(this), 30);\n    }\n  }\n\n  initializeElementField() {\n    var firstCol = this.table.columnManager.getFirstVisibleColumn();\n    this.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\n  }\n\n  getRowChildren(row) {\n    return this.getTreeChildren(row, true);\n  }\n\n  columnMoving() {\n    var rows = [];\n    this.table.rowManager.rows.forEach(row => {\n      rows = rows.concat(this.getTreeChildren(row, false, true));\n    });\n    return rows;\n  }\n\n  rowDataChanged(row, visible, updatedData) {\n    if (this.redrawNeeded(updatedData)) {\n      this.initializeRow(row);\n\n      if (visible) {\n        this.layoutRow(row);\n        this.refreshData(true);\n      }\n    }\n  }\n\n  cellValueChanged(cell) {\n    var field = cell.column.getField();\n\n    if (field === this.elementField) {\n      this.layoutRow(cell.row);\n    }\n  }\n\n  initializeRow(row) {\n    var childArray = row.getData()[this.field];\n    var isArray = Array.isArray(childArray);\n    var children = isArray || !isArray && typeof childArray === \"object\" && childArray !== null;\n\n    if (!children && row.modules.dataTree && row.modules.dataTree.branchEl) {\n      row.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\n    }\n\n    if (!children && row.modules.dataTree && row.modules.dataTree.controlEl) {\n      row.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\n    }\n\n    row.modules.dataTree = {\n      index: row.modules.dataTree ? row.modules.dataTree.index : 0,\n      open: children ? row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0) : false,\n      controlEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\n      branchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\n      parent: row.modules.dataTree ? row.modules.dataTree.parent : false,\n      children: children\n    };\n  }\n\n  reinitializeRowChildren(row) {\n    var children = this.getTreeChildren(row, false, true);\n    children.forEach(function (child) {\n      child.reinitialize(true);\n    });\n  }\n\n  layoutRow(row) {\n    var cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\n        el = cell.getElement(),\n        config = row.modules.dataTree;\n\n    if (config.branchEl) {\n      if (config.branchEl.parentNode) {\n        config.branchEl.parentNode.removeChild(config.branchEl);\n      }\n\n      config.branchEl = false;\n    }\n\n    if (config.controlEl) {\n      if (config.controlEl.parentNode) {\n        config.controlEl.parentNode.removeChild(config.controlEl);\n      }\n\n      config.controlEl = false;\n    }\n\n    this.generateControlElement(row, el);\n    row.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\n\n    if (config.index) {\n      if (this.branchEl) {\n        config.branchEl = this.branchEl.cloneNode(true);\n        el.insertBefore(config.branchEl, el.firstChild);\n\n        if (this.table.rtl) {\n          config.branchEl.style.marginRight = (config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1) + config.index * this.indent + \"px\";\n        } else {\n          config.branchEl.style.marginLeft = (config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1) + config.index * this.indent + \"px\";\n        }\n      } else {\n        if (this.table.rtl) {\n          el.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + config.index * this.indent + \"px\";\n        } else {\n          el.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + config.index * this.indent + \"px\";\n        }\n      }\n    }\n  }\n\n  generateControlElement(row, el) {\n    var config = row.modules.dataTree,\n        el = el || row.getCells()[0].getElement(),\n        oldControl = config.controlEl;\n\n    if (config.children !== false) {\n      if (config.open) {\n        config.controlEl = this.collapseEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.collapseRow(row);\n        });\n      } else {\n        config.controlEl = this.expandEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.expandRow(row);\n        });\n      }\n\n      config.controlEl.addEventListener(\"mousedown\", e => {\n        e.stopPropagation();\n      });\n\n      if (oldControl && oldControl.parentNode === el) {\n        oldControl.parentNode.replaceChild(config.controlEl, oldControl);\n      } else {\n        el.insertBefore(config.controlEl, el.firstChild);\n      }\n    }\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  getRows(rows) {\n    var output = [];\n    rows.forEach((row, i) => {\n      var config, children;\n      output.push(row);\n\n      if (row instanceof Row) {\n        row.create();\n        config = row.modules.dataTree.children;\n\n        if (!config.index && config.children !== false) {\n          children = this.getChildren(row);\n          children.forEach(child => {\n            child.create();\n            output.push(child);\n          });\n        }\n      }\n    });\n    return output;\n  }\n\n  getChildren(row, allChildren) {\n    var config = row.modules.dataTree,\n        children = [],\n        output = [];\n\n    if (config.children !== false && (config.open || allChildren)) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n\n      if (this.table.modExists(\"sort\") && this.table.options.dataTreeSort) {\n        this.table.modules.sort.sort(children);\n      }\n\n      children.forEach(child => {\n        output.push(child);\n        var subChildren = this.getChildren(child);\n        subChildren.forEach(sub => {\n          output.push(sub);\n        });\n      });\n    }\n\n    return output;\n  }\n\n  generateChildren(row) {\n    var children = [];\n    var childArray = row.getData()[this.field];\n\n    if (!Array.isArray(childArray)) {\n      childArray = [childArray];\n    }\n\n    childArray.forEach(childData => {\n      var childRow = new Row(childData || {}, this.table.rowManager);\n      childRow.create();\n      childRow.modules.dataTree.index = row.modules.dataTree.index + 1;\n      childRow.modules.dataTree.parent = row;\n\n      if (childRow.modules.dataTree.children) {\n        childRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\n      }\n\n      children.push(childRow);\n    });\n    return children;\n  }\n\n  expandRow(row, silent) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      config.open = true;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n\n  collapseRow(row) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      config.open = false;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n\n  toggleRow(row) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      if (config.open) {\n        this.collapseRow(row);\n      } else {\n        this.expandRow(row);\n      }\n    }\n  }\n\n  getTreeParent(row) {\n    return row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\n  }\n\n  getFilteredTreeChildren(row) {\n    var config = row.modules.dataTree,\n        output = [],\n        children;\n\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n\n      children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(childRow);\n        }\n      });\n    }\n\n    return output;\n  }\n\n  rowDelete(row) {\n    var parent = row.modules.dataTree.parent,\n        childIndex;\n\n    if (parent) {\n      childIndex = this.findChildIndex(row, parent);\n\n      if (childIndex !== false) {\n        parent.data[this.field].splice(childIndex, 1);\n      }\n\n      if (!parent.data[this.field].length) {\n        delete parent.data[this.field];\n      }\n\n      this.initializeRow(parent);\n      this.layoutRow(parent);\n    }\n\n    this.refreshData(true);\n  }\n\n  addTreeChildRow(row, data, top, index) {\n    var childIndex = false;\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (!Array.isArray(row.data[this.field])) {\n      row.data[this.field] = [];\n      row.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\n    }\n\n    if (typeof index !== \"undefined\") {\n      childIndex = this.findChildIndex(index, row);\n\n      if (childIndex !== false) {\n        row.data[this.field].splice(top ? childIndex : childIndex + 1, 0, data);\n      }\n    }\n\n    if (childIndex === false) {\n      if (top) {\n        row.data[this.field].unshift(data);\n      } else {\n        row.data[this.field].push(data);\n      }\n    }\n\n    this.initializeRow(row);\n    this.layoutRow(row);\n    this.refreshData(true);\n  }\n\n  findChildIndex(subject, parent) {\n    var match = false;\n\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        match = subject.data;\n      } else if (subject instanceof RowComponent) {\n        //subject is public row component\n        match = subject._getSelf().data;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        if (parent.modules.dataTree) {\n          match = parent.modules.dataTree.children.find(childRow => {\n            return childRow instanceof Row ? childRow.element === subject : false;\n          });\n\n          if (match) {\n            match = match.data;\n          }\n        }\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      match = false;\n    } else {\n      //subject should be treated as the index of the row\n      match = parent.data[this.field].find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n    }\n\n    if (match) {\n      if (Array.isArray(parent.data[this.field])) {\n        match = parent.data[this.field].indexOf(match);\n      }\n\n      if (match == -1) {\n        match = false;\n      }\n    } //catch all for any other type of input\n\n\n    return match;\n  }\n\n  getTreeChildren(row, component, recurse) {\n    var config = row.modules.dataTree,\n        output = [];\n\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      config.children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(component ? childRow.getComponent() : childRow);\n\n          if (recurse) {\n            output = output.concat(this.getTreeChildren(childRow, component, recurse));\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n\n  getChildField() {\n    return this.field;\n  }\n\n  redrawNeeded(data) {\n    console.log(\"needed?\", data);\n    return (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\n  }\n\n}\n\nDataTree.moduleName = \"dataTree\";\n\nfunction csv(list, options, setFileContents) {\n  var delimiter = options && options.delimiter ? options.delimiter : \",\",\n      fileContents = [],\n      headers = [];\n  list.forEach(row => {\n    var item = [];\n\n    switch (row.type) {\n      case \"group\":\n        console.warn(\"Download Warning - CSV downloader cannot process row groups\");\n        break;\n\n      case \"calc\":\n        console.warn(\"Download Warning - CSV downloader cannot process column calculations\");\n        break;\n\n      case \"header\":\n        row.columns.forEach((col, i) => {\n          if (col && col.depth === 1) {\n            headers[i] = typeof col.value == \"undefined\" || col.value === null ? \"\" : '\"' + String(col.value).split('\"').join('\"\"') + '\"';\n          }\n        });\n        break;\n\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            switch (typeof col.value) {\n              case \"object\":\n                col.value = JSON.stringify(col.value);\n                break;\n\n              case \"undefined\":\n              case \"null\":\n                col.value = \"\";\n                break;\n            }\n\n            item.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\n          }\n        });\n        fileContents.push(item.join(delimiter));\n        break;\n    }\n  });\n\n  if (headers.length) {\n    fileContents.unshift(headers.join(delimiter));\n  }\n\n  fileContents = fileContents.join(\"\\n\");\n\n  if (options.bom) {\n    fileContents = \"\\ufeff\" + fileContents;\n  }\n\n  setFileContents(fileContents, \"text/csv\");\n}\n\nfunction json(list, options, setFileContents) {\n  var fileContents = [];\n  list.forEach(row => {\n    var item = {};\n\n    switch (row.type) {\n      case \"header\":\n        break;\n\n      case \"group\":\n        console.warn(\"Download Warning - JSON downloader cannot process row groups\");\n        break;\n\n      case \"calc\":\n        console.warn(\"Download Warning - JSON downloader cannot process column calculations\");\n        break;\n\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            item[col.component.getField()] = col.value;\n          }\n        });\n        fileContents.push(item);\n        break;\n    }\n  });\n  fileContents = JSON.stringify(fileContents, null, '\\t');\n  setFileContents(fileContents, \"application/json\");\n}\n\nfunction pdf(list, options, setFileContents) {\n  var header = [],\n      body = [],\n      autoTableParams = {},\n      rowGroupStyles = options.rowGroupStyles || {\n    fontStyle: \"bold\",\n    fontSize: 12,\n    cellPadding: 6,\n    fillColor: 220\n  },\n      rowCalcStyles = options.rowCalcStyles || {\n    fontStyle: \"bold\",\n    fontSize: 10,\n    cellPadding: 4,\n    fillColor: 232\n  },\n      jsPDFParams = options.jsPDF || {},\n      title = options && options.title ? options.title : \"\";\n\n  if (!jsPDFParams.orientation) {\n    jsPDFParams.orientation = options.orientation || \"landscape\";\n  }\n\n  if (!jsPDFParams.unit) {\n    jsPDFParams.unit = \"pt\";\n  } //parse row list\n\n\n  list.forEach(row => {\n    switch (row.type) {\n      case \"header\":\n        header.push(parseRow(row));\n        break;\n\n      case \"group\":\n        body.push(parseRow(row, rowGroupStyles));\n        break;\n\n      case \"calc\":\n        body.push(parseRow(row, rowCalcStyles));\n        break;\n\n      case \"row\":\n        body.push(parseRow(row));\n        break;\n    }\n  });\n\n  function parseRow(row, styles) {\n    var rowData = [];\n    row.columns.forEach(col => {\n      var cell;\n\n      if (col) {\n        switch (typeof col.value) {\n          case \"object\":\n            col.value = JSON.stringify(col.value);\n            break;\n\n          case \"undefined\":\n          case \"null\":\n            col.value = \"\";\n            break;\n        }\n\n        cell = {\n          content: col.value,\n          colSpan: col.width,\n          rowSpan: col.height\n        };\n\n        if (styles) {\n          cell.styles = styles;\n        }\n\n        rowData.push(cell);\n      }\n    });\n    return rowData;\n  } //configure PDF\n\n\n  var doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\n\n  if (options && options.autoTable) {\n    if (typeof options.autoTable === \"function\") {\n      autoTableParams = options.autoTable(doc) || {};\n    } else {\n      autoTableParams = options.autoTable;\n    }\n  }\n\n  if (title) {\n    autoTableParams.didDrawPage = function (data) {\n      doc.text(title, 40, 30);\n    };\n  }\n\n  autoTableParams.head = header;\n  autoTableParams.body = body;\n  doc.autoTable(autoTableParams);\n\n  if (options && options.documentProcessing) {\n    options.documentProcessing(doc);\n  }\n\n  setFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\n}\n\nfunction xlsx(list, options, setFileContents) {\n  var self = this,\n      sheetName = options.sheetName || \"Sheet1\",\n      workbook = XLSX.utils.book_new(),\n      tableFeatures = new CoreFeature(this),\n      output;\n  workbook.SheetNames = [];\n  workbook.Sheets = {};\n\n  function generateSheet() {\n    var rows = [],\n        merges = [],\n        worksheet = {},\n        range = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0,\n        r: list.length\n      }\n    }; //parse row list\n\n    list.forEach((row, i) => {\n      var rowData = [];\n      row.columns.forEach(function (col, j) {\n        if (col) {\n          rowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\n\n          if (col.width > 1 || col.height > -1) {\n            if (col.height > 1 || col.width > 1) {\n              merges.push({\n                s: {\n                  r: i,\n                  c: j\n                },\n                e: {\n                  r: i + col.height - 1,\n                  c: j + col.width - 1\n                }\n              });\n            }\n          }\n        } else {\n          rowData.push(\"\");\n        }\n      });\n      rows.push(rowData);\n    }); //convert rows to worksheet\n\n    XLSX.utils.sheet_add_aoa(worksheet, rows);\n    worksheet['!ref'] = XLSX.utils.encode_range(range);\n\n    if (merges.length) {\n      worksheet[\"!merges\"] = merges;\n    }\n\n    return worksheet;\n  }\n\n  if (options.sheetOnly) {\n    setFileContents(generateSheet());\n    return;\n  }\n\n  if (options.sheets) {\n    for (var sheet in options.sheets) {\n      if (options.sheets[sheet] === true) {\n        workbook.SheetNames.push(sheet);\n        workbook.Sheets[sheet] = generateSheet();\n      } else {\n        workbook.SheetNames.push(sheet);\n        tableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\", {\n          type: \"xlsx\",\n          options: {\n            sheetOnly: true\n          },\n          active: self.active,\n          intercept: function (data) {\n            workbook.Sheets[sheet] = data;\n          }\n        });\n      }\n    }\n  } else {\n    workbook.SheetNames.push(sheetName);\n    workbook.Sheets[sheetName] = generateSheet();\n  }\n\n  if (options.documentProcessing) {\n    workbook = options.documentProcessing(workbook);\n  } //convert workbook to binary array\n\n\n  function s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\n    return buf;\n  }\n\n  output = XLSX.write(workbook, {\n    bookType: 'xlsx',\n    bookSST: true,\n    type: 'binary'\n  });\n  setFileContents(s2ab(output), \"application/octet-stream\");\n}\n\nfunction html(list, options, setFileContents) {\n  if (this.modExists(\"export\", true)) {\n    setFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\n  }\n}\n\nvar defaultDownloaders = {\n  csv: csv,\n  json: json,\n  pdf: pdf,\n  xlsx: xlsx,\n  html: html\n};\n\nclass Download extends Module {\n  constructor(table) {\n    super(table);\n    this.registerTableOption(\"downloadReady\", function (data, blob) {\n      return blob;\n    }); //function to manipulate download data\n\n    this.registerTableOption(\"downloadConfig\", {}); //download config\n\n    this.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\n\n    this.registerColumnOption(\"download\");\n    this.registerColumnOption(\"titleDownload\");\n  }\n\n  initialize() {\n    this.registerTableFunction(\"download\", this.download.bind(this));\n    this.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  downloadToTab(type, filename, options, active) {\n    this.download(type, filename, options, active, true);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n  //trigger file download\n\n\n  download(type, filename, options, range, interceptCallback) {\n    var downloadFunc = false;\n\n    function buildLink(data, mime) {\n      if (interceptCallback) {\n        if (interceptCallback === true) {\n          this.triggerDownload(data, mime, type, filename, true);\n        } else {\n          interceptCallback(data);\n        }\n      } else {\n        this.triggerDownload(data, mime, type, filename);\n      }\n    }\n\n    if (typeof type == \"function\") {\n      downloadFunc = type;\n    } else {\n      if (Download.downloaders[type]) {\n        downloadFunc = Download.downloaders[type];\n      } else {\n        console.warn(\"Download Error - No such download type found: \", type);\n      }\n    }\n\n    if (downloadFunc) {\n      var list = this.generateExportList(range);\n      downloadFunc.call(this.table, list, options || {}, buildLink.bind(this));\n    }\n  }\n\n  generateExportList(range) {\n    var list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\"); //assign group header formatter\n\n    var groupHeader = this.table.options.groupHeaderDownload;\n\n    if (groupHeader && !Array.isArray(groupHeader)) {\n      groupHeader = [groupHeader];\n    }\n\n    list.forEach(row => {\n      var group;\n\n      if (row.type === \"group\") {\n        group = row.columns[0];\n\n        if (groupHeader && groupHeader[row.indent]) {\n          group.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n        }\n      }\n    });\n    return list;\n  }\n\n  triggerDownload(data, mime, type, filename, newTab) {\n    var element = document.createElement('a'),\n        blob = new Blob([data], {\n      type: mime\n    }),\n        filename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\n    blob = this.table.options.downloadReady(data, blob);\n\n    if (blob) {\n      if (newTab) {\n        window.open(window.URL.createObjectURL(blob));\n      } else {\n        if (navigator.msSaveOrOpenBlob) {\n          navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n          element.setAttribute('href', window.URL.createObjectURL(blob)); //set file title\n\n          element.setAttribute('download', filename); //trigger download\n\n          element.style.display = 'none';\n          document.body.appendChild(element);\n          element.click(); //remove temporary link element\n\n          document.body.removeChild(element);\n        }\n      }\n\n      this.dispatchExternal(\"downloadComplete\");\n    }\n  }\n\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"intercept\":\n        this.download(data.type, \"\", data.options, data.active, data.intercept);\n        break;\n    }\n  }\n\n}\n\nDownload.moduleName = \"download\"; //load defaults\n\nDownload.downloaders = defaultDownloaders;\n\nfunction maskInput(el, options) {\n  var mask = options.mask,\n      maskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\n      maskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\n      maskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\";\n\n  function fillSymbols(index) {\n    var symbol = mask[index];\n\n    if (typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber) {\n      el.value = el.value + \"\" + symbol;\n      fillSymbols(index + 1);\n    }\n  }\n\n  el.addEventListener(\"keydown\", e => {\n    var index = el.value.length,\n        char = e.key;\n\n    if (e.keyCode > 46) {\n      if (index >= mask.length) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else {\n        switch (mask[index]) {\n          case maskLetter:\n            if (char.toUpperCase() == char.toLowerCase()) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n            break;\n\n          case maskNumber:\n            if (isNaN(char)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n            break;\n\n          case maskWildcard:\n            break;\n\n          default:\n            if (char !== mask[index]) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n        }\n      }\n    }\n\n    return;\n  });\n  el.addEventListener(\"keyup\", e => {\n    if (e.keyCode > 46) {\n      if (options.maskAutoFill) {\n        fillSymbols(el.value.length);\n      }\n    }\n  });\n\n  if (!el.placeholder) {\n    el.placeholder = mask;\n  }\n\n  if (options.maskAutoFill) {\n    fillSymbols(el.value.length);\n  }\n} //input element\n\n\nfunction input(cell, onRendered, success, cancel, editorParams) {\n  //create and style input\n  var cellValue = cell.getValue(),\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on blur or change\n\n\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      // case 9:\n      case 13:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //resizable text area element\n\n\nfunction textarea(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"hybrid\",\n      value = String(cellValue !== null && typeof cellValue !== \"undefined\" ? cellValue : \"\"),\n      count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\n      input = document.createElement(\"textarea\"),\n      scrollHeight = 0; //create and style input\n\n  input.style.display = \"block\";\n  input.style.padding = \"2px\";\n  input.style.height = \"100%\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.whiteSpace = \"pre-wrap\";\n  input.style.resize = \"none\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = value;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n    input.scrollHeight;\n    input.style.height = input.scrollHeight + \"px\";\n    cell.getRow().normalizeHeight();\n  });\n\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n\n      setTimeout(function () {\n        cell.getRow().normalizeHeight();\n      }, 300);\n    } else {\n      cancel();\n    }\n  } //submit new value on blur or change\n\n\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n  input.addEventListener(\"keyup\", function () {\n    input.style.height = \"\";\n    var heightNow = input.scrollHeight;\n    input.style.height = heightNow + \"px\";\n\n    if (heightNow != scrollHeight) {\n      scrollHeight = heightNow;\n      cell.getRow().normalizeHeight();\n    }\n  });\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 27:\n        cancel();\n        break;\n\n      case 38:\n        //up arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart !== input.value.length) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //input element with type of number\n\n\nfunction number(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"editor\",\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"number\");\n\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  } //create and style input\n\n\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = cellValue;\n\n  var blurFunc = function (e) {\n    onChange();\n  };\n\n  onRendered(function () {\n    //submit new value on blur\n    input.removeEventListener(\"blur\", blurFunc);\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\"; //submit new value on blur\n\n    input.addEventListener(\"blur\", blurFunc);\n  });\n\n  function onChange() {\n    var value = input.value;\n\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n\n    if (value !== cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on enter\n\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n\n      case 38: //up arrow\n\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\") {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //input element with type of number\n\n\nfunction range(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"range\");\n\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  } //create and style input\n\n\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = cellValue;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n\n  function onChange() {\n    var value = input.value;\n\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n\n    if (value != cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on blur\n\n\n  input.addEventListener(\"blur\", function (e) {\n    onChange();\n  }); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n    }\n  });\n  return input;\n} //dropdown select editor\n\n\nfunction select(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n      cellEl = cell.getElement(),\n      initialValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"editor\",\n      initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? Array.isArray(initialValue) ? initialValue : [initialValue] : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : [],\n      input = document.createElement(\"input\"),\n      listEl = document.createElement(\"div\"),\n      multiselect = editorParams.multiselect,\n      dataItems = [],\n      currentItem = {},\n      displayItems = [],\n      currentItems = [],\n      blurable = true,\n      blockListShow = false,\n      searchWord = \"\",\n      searchWordTimeout = null;\n\n  if (Array.isArray(editorParams) || !Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values) {\n    console.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\n    editorParams = {\n      values: editorParams\n    };\n  }\n\n  function getUniqueColumnValues(field) {\n    var output = {},\n        data = self.table.getData(),\n        column;\n\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n    } else {\n      console.warn(\"unable to find matching column to create select lookup list:\", field);\n    }\n\n    return Object.keys(output);\n  }\n\n  function parseItems(inputValues, curentValues) {\n    var dataList = [];\n    var displayList = [];\n\n    function processComplexListItem(item) {\n      var item = {\n        label: item.label,\n        value: item.value,\n        itemParams: item.itemParams,\n        elementAttributes: item.elementAttributes,\n        element: false\n      }; // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n      // \tsetCurrentItem(item);\n      // }\n\n      if (curentValues.indexOf(item.value) > -1) {\n        setItem(item);\n      }\n\n      dataList.push(item);\n      displayList.push(item);\n      return item;\n    }\n\n    if (typeof inputValues == \"function\") {\n      inputValues = inputValues(cell);\n    }\n\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item;\n\n        if (typeof value === \"object\") {\n          if (value.options) {\n            item = {\n              label: value.label,\n              group: true,\n              itemParams: value.itemParams,\n              elementAttributes: value.elementAttributes,\n              element: false\n            };\n            displayList.push(item);\n            value.options.forEach(function (item) {\n              processComplexListItem(item);\n            });\n          } else {\n            processComplexListItem(value);\n          }\n        } else {\n          item = {\n            label: value,\n            value: value,\n            element: false\n          }; // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n          // \tsetCurrentItem(item);\n          // }\n\n          if (curentValues.indexOf(item.value) > -1) {\n            setItem(item);\n          }\n\n          dataList.push(item);\n          displayList.push(item);\n        }\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          label: inputValues[key],\n          value: key,\n          element: false\n        }; // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n        // \tsetCurrentItem(item);\n        // }\n\n        if (curentValues.indexOf(item.value) > -1) {\n          setItem(item);\n        }\n\n        dataList.push(item);\n        displayList.push(item);\n      }\n    }\n\n    if (editorParams.sortValuesList) {\n      dataList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n      displayList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n\n      if (editorParams.sortValuesList !== \"asc\") {\n        dataList.reverse();\n        displayList.reverse();\n      }\n    }\n\n    dataItems = dataList;\n    displayItems = displayList;\n    fillList();\n  }\n\n  function fillList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n\n    displayItems.forEach(function (item) {\n      var el = item.element;\n\n      if (!el) {\n        el = document.createElement(\"div\");\n        item.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\n\n        if (item.group) {\n          el.classList.add(\"tabulator-edit-select-list-group\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n        } else {\n          el.classList.add(\"tabulator-edit-select-list-item\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n          el.addEventListener(\"click\", function () {\n            blockListShow = true;\n            setTimeout(() => {\n              blockListShow = false;\n            }, 10); // setCurrentItem(item);\n            // chooseItem();\n\n            if (multiselect) {\n              toggleItem(item);\n              input.focus();\n            } else {\n              chooseItem(item);\n            }\n          }); // if(item === currentItem){\n          // \tel.classList.add(\"active\");\n          // }\n\n          if (currentItems.indexOf(item) > -1) {\n            el.classList.add(\"active\");\n          }\n        }\n\n        if (item.elementAttributes && typeof item.elementAttributes == \"object\") {\n          for (let key in item.elementAttributes) {\n            if (key.charAt(0) == \"+\") {\n              key = key.slice(1);\n              el.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\n            } else {\n              el.setAttribute(key, item.elementAttributes[key]);\n            }\n          }\n        }\n\n        el.addEventListener(\"mousedown\", function () {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n      }\n\n      listEl.appendChild(el);\n    });\n  }\n\n  function setCurrentItem(item, active) {\n    if (!multiselect && currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"focused\");\n    }\n\n    currentItem = item;\n\n    if (item.element) {\n      item.element.classList.add(\"focused\");\n\n      if (active) {\n        item.element.classList.add(\"active\");\n      }\n    }\n\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  } // function chooseItem(){\n  // \thideList();\n  // \tif(initialValue !== currentItem.value){\n  // \t\tinitialValue = currentItem.value;\n  // \t\tsuccess(currentItem.value);\n  // \t}else{\n  // \t\tcancel();\n  // \t}\n  // }\n\n\n  function setItem(item) {\n    var index = currentItems.indexOf(item);\n\n    if (index == -1) {\n      currentItems.push(item);\n      setCurrentItem(item, true);\n    }\n\n    fillInput();\n  }\n\n  function unsetItem(index) {\n    var item = currentItems[index];\n\n    if (index > -1) {\n      currentItems.splice(index, 1);\n\n      if (item.element) {\n        item.element.classList.remove(\"active\");\n      }\n    }\n  }\n\n  function toggleItem(item) {\n    if (!item) {\n      item = currentItem;\n    }\n\n    var index = currentItems.indexOf(item);\n\n    if (index > -1) {\n      unsetItem(index);\n    } else {\n      if (multiselect !== true && currentItems.length >= multiselect) {\n        unsetItem(0);\n      }\n\n      setItem(item);\n    }\n\n    fillInput();\n  }\n\n  function chooseItem(item) {\n    hideList();\n\n    if (!item) {\n      item = currentItem;\n    }\n\n    if (item) {\n      input.value = item.label;\n      success(item.value);\n    }\n\n    initialDisplayValue = [item.value];\n  }\n\n  function chooseItems(silent) {\n    if (!silent) {\n      hideList();\n    }\n\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.value);\n    });\n    initialDisplayValue = output;\n    success(output);\n  }\n\n  function fillInput() {\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.label);\n    });\n    input.value = output.join(\", \");\n\n    if (self.currentCell === false) {\n      chooseItems(true);\n    }\n  }\n\n  function unsetItems() {\n    var len = currentItems.length;\n\n    for (let i = 0; i < len; i++) {\n      unsetItem(0);\n    }\n  }\n\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n\n  function showList() {\n    currentItems = [];\n\n    if (!listEl.parentNode) {\n      if (editorParams.values === true) {\n        parseItems(getUniqueColumnValues(), initialDisplayValue);\n      } else if (typeof editorParams.values === \"string\") {\n        parseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\n      } else {\n        parseItems(editorParams.values || [], initialDisplayValue);\n      }\n\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      listEl.addEventListener(\"mousedown\", function (e) {\n        blurable = false;\n        setTimeout(function () {\n          blurable = true;\n        }, 10);\n      });\n      document.body.appendChild(listEl);\n    }\n  }\n\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n\n    removeScrollListener();\n  }\n\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  }\n\n  function scrollTovalue(char) {\n    clearTimeout(searchWordTimeout);\n    var character = String.fromCharCode(event.keyCode).toLowerCase();\n    searchWord += character.toLowerCase();\n    var match = dataItems.find(item => {\n      return typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\n    });\n\n    if (match) {\n      setCurrentItem(match, !multiselect);\n    }\n\n    searchWordTimeout = setTimeout(() => {\n      searchWord = \"\";\n    }, 800);\n  } //style input\n\n\n  input.setAttribute(\"type\", \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.cursor = \"default\";\n  input.readOnly = this.currentCell != false;\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\"; // if(editorParams.values === true){\n  // \tparseItems(getUniqueColumnValues(), initialValue);\n  // }else if(typeof editorParams.values === \"string\"){\n  // \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\n  // }else{\n  // \tparseItems(editorParams.values || [], initialValue);\n  // }\n\n  input.addEventListener(\"search\", function (e) {\n    if (!input.value) {\n      unsetItems();\n      chooseItems();\n    }\n  }); //allow key based navigation\n\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = dataItems.indexOf(currentItem);\n\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n\n          if (index > 0) {\n            setCurrentItem(dataItems[index - 1], !multiselect);\n          }\n        }\n\n        break;\n\n      case 40:\n        //down arrow\n        index = dataItems.indexOf(currentItem);\n\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < dataItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n\n          if (index < dataItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(dataItems[0], !multiselect);\n            } else {\n              setCurrentItem(dataItems[index + 1], !multiselect);\n            }\n          }\n        }\n\n        break;\n\n      case 37: //left arrow\n\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n\n      case 13:\n        //enter\n        // chooseItem();\n        if (multiselect) {\n          toggleItem();\n        } else {\n          chooseItem();\n        }\n\n        break;\n\n      case 27:\n        //escape\n        cancelItem();\n        break;\n\n      case 9:\n        //tab\n        break;\n\n      default:\n        if (self.currentCell === false) {\n          e.preventDefault();\n        }\n\n        if (e.keyCode >= 38 && e.keyCode <= 90) {\n          scrollTovalue(e.keyCode);\n        }\n\n    }\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      if (multiselect) {\n        chooseItems();\n      } else {\n        cancelItem();\n      }\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    if (!blockListShow) {\n      showList();\n    }\n  }); //style list element\n\n  listEl = document.createElement(\"div\");\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  return input;\n} //autocomplete\n\n\nfunction autocomplete(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n      cellEl = cell.getElement(),\n      initialValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"editor\",\n      initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\",\n      input = document.createElement(\"input\"),\n      listEl = document.createElement(\"div\"),\n      displayItems = [],\n      currentItem = false,\n      blurable = true,\n      uniqueColumnValues = false; //style input\n\n  input.setAttribute(\"type\", \"search\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  } //style list element\n\n\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  listEl.addEventListener(\"mousedown\", function (e) {\n    blurable = false;\n    setTimeout(function () {\n      blurable = true;\n    }, 10);\n  });\n\n  function genUniqueColumnValues() {\n    if (editorParams.values === true) {\n      uniqueColumnValues = getUniqueColumnValues();\n    } else if (typeof editorParams.values === \"string\") {\n      uniqueColumnValues = getUniqueColumnValues(editorParams.values);\n    }\n  }\n\n  function getUniqueColumnValues(field) {\n    var output = {},\n        data = self.table.getData(),\n        column;\n\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n\n      if (editorParams.sortValuesList) {\n        if (editorParams.sortValuesList == \"asc\") {\n          output = Object.keys(output).sort();\n        } else {\n          output = Object.keys(output).sort().reverse();\n        }\n      } else {\n        output = Object.keys(output);\n      }\n    } else {\n      console.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\n    }\n\n    return output;\n  }\n\n  function filterList(term, intialLoad) {\n    var matches = [],\n        values,\n        items; //lookup base values list\n\n    if (uniqueColumnValues) {\n      values = uniqueColumnValues;\n    } else {\n      values = editorParams.values || [];\n    }\n\n    if (editorParams.searchFunc) {\n      matches = editorParams.searchFunc(term, values);\n\n      if (matches instanceof Promise) {\n        addNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\n        matches.then(result => {\n          fillListIfNotEmpty(parseItems(result), intialLoad);\n        }).catch(err => {\n          console.err(\"error in autocomplete search promise:\", err);\n        });\n      } else {\n        fillListIfNotEmpty(parseItems(matches), intialLoad);\n      }\n    } else {\n      items = parseItems(values);\n\n      if (term === \"\") {\n        if (editorParams.showListOnEmpty) {\n          matches = items;\n        }\n      } else {\n        items.forEach(function (item) {\n          if (item.value !== null || typeof item.value !== \"undefined\") {\n            if (String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1) {\n              matches.push(item);\n            }\n          }\n        });\n      }\n\n      fillListIfNotEmpty(matches, intialLoad);\n    }\n  }\n\n  function addNotice(notice) {\n    var searchEl = document.createElement(\"div\");\n    clearList();\n\n    if (notice !== false) {\n      searchEl.classList.add(\"tabulator-edit-select-list-notice\");\n      searchEl.tabIndex = 0;\n\n      if (notice instanceof Node) {\n        searchEl.appendChild(notice);\n      } else {\n        searchEl.innerHTML = notice;\n      }\n\n      listEl.appendChild(searchEl);\n    }\n  }\n\n  function parseItems(inputValues) {\n    var itemList = [];\n\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item = {};\n\n        if (typeof value === \"object\") {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\n          item.value = value.value;\n        } else {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\n          item.value = value;\n        }\n\n        itemList.push(item);\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          title: editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\n          value: key\n        };\n        itemList.push(item);\n      }\n    }\n\n    return itemList;\n  }\n\n  function clearList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n  }\n\n  function fillListIfNotEmpty(items, intialLoad) {\n    if (items.length) {\n      fillList(items, intialLoad);\n    } else {\n      if (editorParams.emptyPlaceholder) {\n        addNotice(editorParams.emptyPlaceholder);\n      }\n    }\n  }\n\n  function fillList(items, intialLoad) {\n    var current = false;\n    clearList();\n    displayItems = items;\n    displayItems.forEach(function (item) {\n      var el = item.element;\n\n      if (!el) {\n        el = document.createElement(\"div\");\n        el.classList.add(\"tabulator-edit-select-list-item\");\n        el.tabIndex = 0;\n        el.innerHTML = item.title;\n        el.addEventListener(\"click\", function (e) {\n          setCurrentItem(item);\n          chooseItem();\n        });\n        el.addEventListener(\"mousedown\", function (e) {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n\n        if (intialLoad && item.value == initialValue) {\n          input.value = item.title;\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n\n        if (item === currentItem) {\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n      }\n\n      listEl.appendChild(el);\n    });\n\n    if (!current) {\n      setCurrentItem(false);\n    }\n  }\n\n  function chooseItem() {\n    hideList();\n\n    if (currentItem) {\n      if (initialValue !== currentItem.value) {\n        initialValue = currentItem.value;\n        input.value = currentItem.title;\n        success(currentItem.value);\n      } else {\n        cancel();\n      }\n    } else {\n      if (editorParams.freetext) {\n        initialValue = input.value;\n        success(input.value);\n      } else {\n        if (editorParams.allowEmpty && input.value === \"\") {\n          initialValue = input.value;\n          success(input.value);\n        } else {\n          cancel();\n        }\n      }\n    }\n  }\n\n  function showList() {\n    if (!listEl.parentNode) {\n      while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      document.body.appendChild(listEl);\n    }\n  }\n\n  function setCurrentItem(item, showInputValue) {\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n\n    currentItem = item;\n\n    if (item && item.element) {\n      item.element.classList.add(\"active\");\n    }\n\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n\n    removeScrollListener();\n  }\n\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  } //allow key based navigation\n\n\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = displayItems.indexOf(currentItem);\n\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n\n          if (index > 0) {\n            setCurrentItem(displayItems[index - 1]);\n          } else {\n            setCurrentItem(false);\n          }\n        }\n\n        break;\n\n      case 40:\n        //down arrow\n        index = displayItems.indexOf(currentItem);\n\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < displayItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n\n          if (index < displayItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(displayItems[0]);\n            } else {\n              setCurrentItem(displayItems[index + 1]);\n            }\n          }\n        }\n\n        break;\n\n      case 37: //left arrow\n\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation(); // e.preventDefault();\n\n        break;\n\n      case 13:\n        //enter\n        chooseItem();\n        break;\n\n      case 27:\n        //escape\n        cancelItem();\n        break;\n\n      case 36: //home\n\n      case 35:\n        //end\n        //prevent table navigation while using input element\n        e.stopImmediatePropagation();\n        break;\n    }\n  });\n  input.addEventListener(\"keyup\", function (e) {\n    switch (e.keyCode) {\n      case 38: //up arrow\n\n      case 37: //left arrow\n\n      case 39: //up arrow\n\n      case 40: //right arrow\n\n      case 13: //enter\n\n      case 27:\n        //escape\n        break;\n\n      default:\n        filterList(input.value);\n    }\n  });\n  input.addEventListener(\"search\", function (e) {\n    filterList(input.value);\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      chooseItem();\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    var value = initialDisplayValue;\n    genUniqueColumnValues();\n    showList();\n    input.value = value;\n    filterList(value, true);\n  });\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  genUniqueColumnValues();\n  input.value = initialDisplayValue;\n  filterList(initialDisplayValue, true);\n  return input;\n} //star rating\n\n\nfunction star(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n      element = cell.getElement(),\n      value = cell.getValue(),\n      maxStars = element.getElementsByTagName(\"svg\").length || 5,\n      size = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\n      stars = [],\n      starsHolder = document.createElement(\"div\"),\n      star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"); //change star type\n\n  function starChange(val) {\n    stars.forEach(function (star, i) {\n      if (i < val) {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-active\");\n        } else {\n          star.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\n        }\n\n        star.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      } else {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-inactive\");\n        } else {\n          star.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\n        }\n\n        star.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      }\n    });\n  } //build stars\n\n\n  function buildStar(i) {\n    var starHolder = document.createElement(\"span\");\n    var nextStar = star.cloneNode(true);\n    stars.push(nextStar);\n    starHolder.addEventListener(\"mouseenter\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      starChange(i);\n    });\n    starHolder.addEventListener(\"mousemove\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    starHolder.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      success(i);\n      element.blur();\n    });\n    starHolder.appendChild(nextStar);\n    starsHolder.appendChild(starHolder);\n  } //handle keyboard navigation value change\n\n\n  function changeValue(val) {\n    value = val;\n    starChange(val);\n  } //style cell\n\n\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\"; //style holding element\n\n  starsHolder.style.verticalAlign = \"middle\";\n  starsHolder.style.display = \"inline-block\";\n  starsHolder.style.padding = \"4px\"; //style star\n\n  star.setAttribute(\"width\", size);\n  star.setAttribute(\"height\", size);\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        starsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        starsHolder.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  } //create correct number of stars\n\n\n  for (var i = 1; i <= maxStars; i++) {\n    buildStar(i);\n  } //ensure value does not exceed number of stars\n\n\n  value = Math.min(parseInt(value), maxStars); // set initial styling of stars\n\n  starChange(value);\n  starsHolder.addEventListener(\"mousemove\", function (e) {\n    starChange(0);\n  });\n  starsHolder.addEventListener(\"click\", function (e) {\n    success(0);\n  });\n  element.addEventListener(\"blur\", function (e) {\n    cancel();\n  }); //allow key based navigation\n\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        changeValue(value + 1);\n        break;\n\n      case 37:\n        //left arrow\n        changeValue(value - 1);\n        break;\n\n      case 13:\n        //enter\n        success(value);\n        break;\n\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  return starsHolder;\n} //draggable progress bar\n\n\nfunction progress(cell, onRendered, success, cancel, editorParams) {\n  var element = cell.getElement(),\n      max = typeof editorParams.max === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\") || 100 : editorParams.max,\n      min = typeof editorParams.min === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\") || 0 : editorParams.min,\n      percent = (max - min) / 100,\n      value = cell.getValue() || 0,\n      handle = document.createElement(\"div\"),\n      bar = document.createElement(\"div\"),\n      mouseDrag,\n      mouseDragWidth; //set new value\n\n  function updateValue() {\n    var style = window.getComputedStyle(element, null);\n    var calcVal = percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\"))) / 100)) + min;\n    success(calcVal);\n    element.setAttribute(\"aria-valuenow\", calcVal);\n    element.setAttribute(\"aria-label\", value);\n  } //style handle\n\n\n  handle.style.position = \"absolute\";\n  handle.style.right = \"0\";\n  handle.style.top = \"0\";\n  handle.style.bottom = \"0\";\n  handle.style.width = \"5px\";\n  handle.classList.add(\"tabulator-progress-handle\"); //style bar\n\n  bar.style.display = \"inline-block\";\n  bar.style.position = \"relative\"; // bar.style.top = \"8px\";\n  // bar.style.bottom = \"8px\";\n  // bar.style.left = \"4px\";\n  // bar.style.marginRight = \"4px\";\n\n  bar.style.height = \"100%\";\n  bar.style.backgroundColor = \"#488CE9\";\n  bar.style.maxWidth = \"100%\";\n  bar.style.minWidth = \"0%\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        bar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        bar.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  } //style cell\n\n\n  element.style.padding = \"4px 4px\"; //make sure value is in range\n\n  value = Math.min(parseFloat(value), max);\n  value = Math.max(parseFloat(value), min); //workout percentage\n\n  value = Math.round((value - min) / percent); // bar.style.right = value + \"%\";\n\n  bar.style.width = value + \"%\";\n  element.setAttribute(\"aria-valuemin\", min);\n  element.setAttribute(\"aria-valuemax\", max);\n  bar.appendChild(handle);\n  handle.addEventListener(\"mousedown\", function (e) {\n    mouseDrag = e.screenX;\n    mouseDragWidth = bar.offsetWidth;\n  });\n  handle.addEventListener(\"mouseover\", function () {\n    handle.style.cursor = \"ew-resize\";\n  });\n  element.addEventListener(\"mousemove\", function (e) {\n    if (mouseDrag) {\n      bar.style.width = mouseDragWidth + e.screenX - mouseDrag + \"px\";\n    }\n  });\n  element.addEventListener(\"mouseup\", function (e) {\n    if (mouseDrag) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      mouseDrag = false;\n      mouseDragWidth = false;\n      updateValue();\n    }\n  }); //allow key based navigation\n\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth + element.clientWidth / 100 + \"px\";\n        break;\n\n      case 37:\n        //left arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth - element.clientWidth / 100 + \"px\";\n        break;\n\n      case 9: //tab\n\n      case 13:\n        //enter\n        updateValue();\n        break;\n\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  element.addEventListener(\"blur\", function () {\n    cancel();\n  });\n  return bar;\n} //checkbox\n\n\nfunction tickCross(cell, onRendered, success, cancel, editorParams) {\n  var value = cell.getValue(),\n      input = document.createElement(\"input\"),\n      tristate = editorParams.tristate,\n      indetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\n      indetermState = false;\n  input.setAttribute(\"type\", \"checkbox\");\n  input.style.marginTop = \"5px\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = value;\n\n  if (tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")) {\n    indetermState = true;\n    input.indeterminate = true;\n  }\n\n  if (this.table.browser != \"firefox\") {\n    //prevent blur issue on mac firefox\n    onRendered(function () {\n      input.focus({\n        preventScroll: true\n      });\n    });\n  }\n\n  input.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\n  onRendered(function () {\n    input.focus();\n  });\n\n  function setValue(blur) {\n    if (tristate) {\n      if (!blur) {\n        if (input.checked && !indetermState) {\n          input.checked = false;\n          input.indeterminate = true;\n          indetermState = true;\n          return indetermValue;\n        } else {\n          indetermState = false;\n          return input.checked;\n        }\n      } else {\n        if (indetermState) {\n          return indetermValue;\n        } else {\n          return input.checked;\n        }\n      }\n    } else {\n      return input.checked;\n    }\n  } //submit new value on blur\n\n\n  input.addEventListener(\"change\", function (e) {\n    success(setValue());\n  });\n  input.addEventListener(\"blur\", function (e) {\n    success(setValue(true));\n  }); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode == 13) {\n      success(setValue());\n    }\n\n    if (e.keyCode == 27) {\n      cancel();\n    }\n  });\n  return input;\n}\n\nvar defaultEditors = {\n  input: input,\n  textarea: textarea,\n  number: number,\n  range: range,\n  select: select,\n  autocomplete: autocomplete,\n  star: star,\n  progress: progress,\n  tickCross: tickCross\n};\n\nclass Edit extends Module {\n  constructor(table) {\n    super(table);\n    this.currentCell = false; //hold currently editing cell\n\n    this.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\n\n    this.recursionBlock = false; //prevent focus recursion\n\n    this.invalidEdit = false;\n    this.editedCells = [];\n    this.editors = Edit.editors;\n    this.registerColumnOption(\"editable\");\n    this.registerColumnOption(\"editor\");\n    this.registerColumnOption(\"editorParams\");\n    this.registerColumnOption(\"cellEditing\");\n    this.registerColumnOption(\"cellEdited\");\n    this.registerColumnOption(\"cellEditCancelled\");\n    this.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\n    this.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\n    this.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\n    this.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\n    this.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\n    this.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\n    this.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\n    this.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"cell-init\", this.bindEditor.bind(this));\n    this.subscribe(\"cell-delete\", this.clearEdited.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\n    this.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\n    this.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\n    this.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\n    this.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\n    this.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\n    this.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\n    this.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\n    this.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\n  } ///////////////////////////////////\n  ////// Keybinding Functions ///////\n  ///////////////////////////////////\n\n\n  keybindingNavigateNext(e) {\n    var cell = this.currentCell,\n        newRow = this.options(\"tabEndNewRow\");\n\n    if (cell) {\n      if (!this.navigateNext(e)) {\n        if (newRow) {\n          cell.getElement().firstChild.blur();\n\n          if (newRow === true) {\n            newRow = this.table.addRow({});\n          } else {\n            if (typeof newRow == \"function\") {\n              newRow = this.table.addRow(newRow(cell.row.getComponent()));\n            } else {\n              newRow = this.table.addRow(Object.assign({}, newRow));\n            }\n          }\n\n          newRow.then(() => {\n            setTimeout(() => {\n              nav.next();\n            });\n          });\n        }\n      }\n    }\n  } ///////////////////////////////////\n  ///////// Cell Functions //////////\n  ///////////////////////////////////\n\n\n  cellisEdited(cell) {\n    return !!cell.modules.edit && cell.modules.edit.edited;\n  }\n\n  cellCancelEdit(cell) {\n    if (cell === this.currentCell) {\n      this.table.modules.edit.cancelEdit();\n    } else {\n      console.warn(\"Cancel Editor Error - This cell is not currently being edited \");\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  clearCellEdited(cells) {\n    if (!cells) {\n      cells = this.modules.edit.getEditedCells();\n    }\n\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n\n    cells.forEach(cell => {\n      this.modules.edit.clearEdited(cell._getSelf());\n    });\n  }\n\n  navigatePrev(e) {\n    var cell = this.currentCell,\n        nextCell,\n        prevRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      nextCell = this.navigateLeft();\n\n      if (nextCell) {\n        return true;\n      } else {\n        prevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n\n        if (prevRow) {\n          nextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\n\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  navigateNext(e) {\n    var cell = this.currentCell,\n        nextCell,\n        nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      nextCell = this.navigateRight();\n\n      if (nextCell) {\n        return true;\n      } else {\n        nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n\n        if (nextRow) {\n          nextCell = this.findNextEditableCell(nextRow, -1);\n\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  navigateLeft(e) {\n    var cell = this.currentCell,\n        index,\n        nextCell;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextCell = this.findPrevEditableCell(cell.row, index);\n\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateRight(e) {\n    var cell = this.currentCell,\n        index,\n        nextCell;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextCell = this.findNextEditableCell(cell.row, index);\n\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateUp(e) {\n    var cell = this.currentCell,\n        index,\n        nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateDown(e) {\n    var cell = this.currentCell,\n        index,\n        nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  findNextEditableCell(row, index) {\n    var nextCell = false;\n\n    if (index < row.cells.length - 1) {\n      for (var i = index + 1; i < row.cells.length; i++) {\n        let cell = row.cells[i];\n\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          let allowEdit = true;\n\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n\n          if (allowEdit) {\n            nextCell = cell;\n            break;\n          }\n        }\n      }\n    }\n\n    return nextCell;\n  }\n\n  findPrevEditableCell(row, index) {\n    var prevCell = false;\n\n    if (index > 0) {\n      for (var i = index - 1; i >= 0; i--) {\n        let cell = row.cells[i],\n            allowEdit = true;\n\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n\n          if (allowEdit) {\n            prevCell = cell;\n            break;\n          }\n        }\n      }\n    }\n\n    return prevCell;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.editor !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n\n  columnDeleteCheck(column) {\n    if (this.currentCell && this.currentCell.column === column) {\n      this.cancelEdit();\n    }\n  }\n\n  rowDeleteCheck(row) {\n    if (this.currentCell && this.currentCell.row === row) {\n      this.cancelEdit();\n    }\n  } //initialize column editor\n\n\n  initializeColumn(column) {\n    var config = {\n      editor: false,\n      blocked: false,\n      check: column.definition.editable,\n      params: column.definition.editorParams || {}\n    }; //set column editor\n\n    switch (typeof column.definition.editor) {\n      case \"string\":\n        if (this.editors[column.definition.editor]) {\n          config.editor = this.editors[column.definition.editor];\n        } else {\n          console.warn(\"Editor Error - No such editor found: \", column.definition.editor);\n        }\n\n        break;\n\n      case \"function\":\n        config.editor = column.definition.editor;\n        break;\n\n      case \"boolean\":\n        if (column.definition.editor === true) {\n          if (typeof column.definition.formatter !== \"function\") {\n            if (this.editors[column.definition.formatter]) {\n              config.editor = this.editors[column.definition.formatter];\n            } else {\n              config.editor = this.editors[\"input\"];\n            }\n          } else {\n            console.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\n          }\n        }\n\n        break;\n    }\n\n    if (config.editor) {\n      column.modules.edit = config;\n    }\n  }\n\n  getCurrentCell() {\n    return this.currentCell ? this.currentCell.getComponent() : false;\n  }\n\n  clearEditor(cancel) {\n    var cell = this.currentCell,\n        cellEl;\n    this.invalidEdit = false;\n    console.log(\"clear\", cancel, cell, cell.validate);\n\n    if (cell) {\n      this.currentCell = false;\n      cellEl = cell.getElement();\n\n      if (cancel) {\n        if (cell.column.modules.validate && this.table.modExists(\"validate\")) {\n          this.table.modules.validate.cellValidate(cell);\n        }\n      } else {\n        cellEl.classList.remove(\"tabulator-validation-fail\");\n      }\n\n      cellEl.classList.remove(\"tabulator-editing\");\n\n      while (cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\n\n      cell.row.getElement().classList.remove(\"tabulator-row-editing\");\n    }\n  }\n\n  cancelEdit() {\n    if (this.currentCell) {\n      var cell = this.currentCell;\n      var component = this.currentCell.getComponent();\n      this.clearEditor(true);\n      cell.setValueActual(cell.getValue());\n      cell.cellRendered();\n\n      if (cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight) {\n        cell.row.normalizeHeight(true);\n      }\n\n      if (cell.column.definition.cellEditCancelled) {\n        cell.column.definition.cellEditCancelled.call(this.table, component);\n      }\n\n      this.dispatch(\"edit-cancelled\", cell);\n      this.dispatchExternal(\"cellEditCancelled\", component);\n    }\n  } //return a formatted value for a cell\n\n\n  bindEditor(cell) {\n    if (cell.column.modules.edit) {\n      var self = this,\n          element = cell.getElement(true);\n      element.setAttribute(\"tabindex\", 0);\n      element.addEventListener(\"click\", function (e) {\n        if (!element.classList.contains(\"tabulator-editing\")) {\n          element.focus({\n            preventScroll: true\n          });\n        }\n      });\n      element.addEventListener(\"mousedown\", function (e) {\n        if (e.button === 2) {\n          e.preventDefault();\n        } else {\n          self.mouseClick = true;\n        }\n      });\n      element.addEventListener(\"focus\", function (e) {\n        if (!self.recursionBlock) {\n          self.edit(cell, e, false);\n        }\n      });\n    }\n  }\n\n  focusCellNoEvent(cell, block) {\n    this.recursionBlock = true;\n\n    if (!(block && this.table.browser === \"ie\")) {\n      cell.getElement().focus({\n        preventScroll: true\n      });\n    }\n\n    this.recursionBlock = false;\n  }\n\n  editCell(cell, forceEdit) {\n    this.focusCellNoEvent(cell);\n    this.edit(cell, false, forceEdit);\n  }\n\n  focusScrollAdjust(cell) {\n    if (this.table.rowManager.getRenderMode() == \"virtual\") {\n      var topEdge = this.table.rowManager.element.scrollTop,\n          bottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\n          rowEl = cell.row.getElement(),\n          offset = rowEl.offsetTop;\n\n      if (rowEl.offsetTop < topEdge) {\n        this.table.rowManager.element.scrollTop -= topEdge - rowEl.offsetTop;\n      } else {\n        if (rowEl.offsetTop + rowEl.offsetHeight > bottomEdge) {\n          this.table.rowManager.element.scrollTop += rowEl.offsetTop + rowEl.offsetHeight - bottomEdge;\n        }\n      }\n\n      var leftEdge = this.table.rowManager.element.scrollLeft,\n          rightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\n          cellEl = cell.getElement(),\n          offset = cellEl.offsetLeft;\n\n      if (this.table.modExists(\"frozenColumns\")) {\n        leftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\n        rightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\n      }\n\n      if (this.table.options.renderHorizontal === \"virtual\") {\n        leftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n        rightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n      }\n\n      if (cellEl.offsetLeft < leftEdge) {\n        this.table.rowManager.element.scrollLeft -= leftEdge - cellEl.offsetLeft;\n      } else {\n        if (cellEl.offsetLeft + cellEl.offsetWidth > rightEdge) {\n          this.table.rowManager.element.scrollLeft += cellEl.offsetLeft + cellEl.offsetWidth - rightEdge;\n        }\n      }\n    }\n  }\n\n  edit(cell, e, forceEdit) {\n    var self = this,\n        allowEdit = true,\n        rendered = function () {},\n        element = cell.getElement(),\n        cellEditor,\n        component,\n        params; //prevent editing if another cell is refusing to leave focus (eg. validation fail)\n\n\n    if (this.currentCell) {\n      if (!this.invalidEdit) {\n        this.cancelEdit();\n      }\n\n      return;\n    } //handle successfull value change\n\n\n    function success(value) {\n      if (self.currentCell === cell) {\n        var valid = true;\n\n        if (cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\") {\n          valid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\n        }\n\n        if (valid === true || self.table.options.validationMode === \"highlight\") {\n          self.clearEditor();\n\n          if (!cell.modules.edit) {\n            cell.modules.edit = {};\n          }\n\n          cell.modules.edit.edited = true;\n\n          if (self.editedCells.indexOf(cell) == -1) {\n            self.editedCells.push(cell);\n          }\n\n          cell.setValue(value, true);\n\n          if (valid !== true) {\n            element.classList.add(\"tabulator-validation-fail\");\n            self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n            return false;\n          }\n\n          return true;\n        } else {\n          self.invalidEdit = true;\n          element.classList.add(\"tabulator-validation-fail\");\n          self.focusCellNoEvent(cell, true);\n          rendered();\n          self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n          return false;\n        }\n      }\n    } //handle aborted edit\n\n\n    function cancel() {\n      if (self.currentCell === cell) {\n        self.cancelEdit();\n      }\n    }\n\n    function onRendered(callback) {\n      rendered = callback;\n    }\n\n    if (!cell.column.modules.edit.blocked) {\n      if (e) {\n        e.stopPropagation();\n      }\n\n      switch (typeof cell.column.modules.edit.check) {\n        case \"function\":\n          allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          break;\n\n        case \"boolean\":\n          allowEdit = cell.column.modules.edit.check;\n          break;\n      }\n\n      if (allowEdit || forceEdit) {\n        self.cancelEdit();\n        self.currentCell = cell;\n        this.focusScrollAdjust(cell);\n        component = cell.getComponent();\n\n        if (this.mouseClick) {\n          this.mouseClick = false;\n\n          if (cell.column.definition.cellClick) {\n            cell.column.definition.cellClick.call(this.table, e, component);\n          }\n        }\n\n        if (cell.column.definition.cellEditing) {\n          cell.column.definition.cellEditing.call(this.table, component);\n        }\n\n        this.dispatchExternal(\"cellEditing\", component);\n        params = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\n        cellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params); //if editor returned, add to DOM, if false, abort edit\n\n        if (cellEditor !== false) {\n          if (cellEditor instanceof Node) {\n            element.classList.add(\"tabulator-editing\");\n            cell.row.getElement().classList.add(\"tabulator-row-editing\");\n\n            while (element.firstChild) element.removeChild(element.firstChild);\n\n            element.appendChild(cellEditor); //trigger onRendered Callback\n\n            rendered(); //prevent editing from triggering rowClick event\n\n            var children = element.children;\n\n            for (var i = 0; i < children.length; i++) {\n              children[i].addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n              });\n            }\n          } else {\n            console.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\n            element.blur();\n            return false;\n          }\n        } else {\n          element.blur();\n          return false;\n        }\n\n        return true;\n      } else {\n        this.mouseClick = false;\n        element.blur();\n        return false;\n      }\n    } else {\n      this.mouseClick = false;\n      element.blur();\n      return false;\n    }\n  }\n\n  getEditedCells() {\n    var output = [];\n    this.editedCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n\n  clearEdited(cell) {\n    var editIndex;\n\n    if (cell.modules.edit && cell.modules.edit.edited) {\n      cell.modules.edit.edited = false;\n\n      if (cell.modules.validate) {\n        cell.modules.validate.invalid = false;\n      }\n    }\n\n    editIndex = this.editedCells.indexOf(cell);\n\n    if (editIndex > -1) {\n      this.editedCells.splice(editIndex, 1);\n    }\n  }\n\n}\n\nEdit.moduleName = \"edit\"; //load defaults\n\nEdit.editors = defaultEditors;\n\nclass ExportRow {\n  constructor(type, columns, component, indent) {\n    this.type = type;\n    this.columns = columns;\n    this.component = component || false;\n    this.indent = indent || 0;\n  }\n\n}\n\nclass ExportColumn {\n  constructor(value, component, width, height, depth) {\n    this.value = value;\n    this.component = component || false;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n  }\n\n}\n\nclass Export extends Module {\n  constructor(table) {\n    super(table);\n    this.config = {};\n    this.cloneTableStyle = true;\n    this.colVisProp = \"\";\n    this.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\n\n    this.registerColumnOption(\"htmlOutput\");\n    this.registerColumnOption(\"titleHtmlOutput\");\n  }\n\n  initialize() {\n    this.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  generateExportList(config, style, range, colVisProp) {\n    this.cloneTableStyle = style;\n    this.config = config || {};\n    this.colVisProp = colVisProp;\n    var headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\n    var body = this.bodyToExportRows(this.rowLookup(range));\n    return headers.concat(body);\n  }\n\n  genereateTable(config, style, range, colVisProp) {\n    var list = this.generateExportList(config, style, range, colVisProp);\n    return this.genereateTableElement(list);\n  }\n\n  rowLookup(range) {\n    var rows = [];\n\n    if (typeof range == \"function\") {\n      range.call(this.table).forEach(row => {\n        row = this.table.rowManager.findRow(row);\n\n        if (row) {\n          rows.push(row);\n        }\n      });\n    } else {\n      switch (range) {\n        case true:\n        case \"visible\":\n          rows = this.table.rowManager.getVisibleRows(false, true);\n          break;\n\n        case \"all\":\n          rows = this.table.rowManager.rows;\n          break;\n\n        case \"selected\":\n          rows = this.table.modules.selectRow.selectedRows;\n          break;\n\n        case \"active\":\n        default:\n          if (this.table.options.pagination) {\n            rows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\n          } else {\n            rows = this.table.rowManager.getDisplayRows();\n          }\n\n      }\n    }\n\n    return Object.assign([], rows);\n  }\n\n  generateColumnGroupHeaders() {\n    var output = [];\n    var columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\n    columns.forEach(column => {\n      var colData = this.processColumnGroup(column);\n\n      if (colData) {\n        output.push(colData);\n      }\n    });\n    return output;\n  }\n\n  processColumnGroup(column) {\n    var subGroups = column.columns,\n        maxDepth = 0,\n        title = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\n    var groupData = {\n      title: title,\n      column: column,\n      depth: 1\n    };\n\n    if (subGroups.length) {\n      groupData.subGroups = [];\n      groupData.width = 0;\n      subGroups.forEach(subGroup => {\n        var subGroupData = this.processColumnGroup(subGroup);\n\n        if (subGroupData) {\n          groupData.width += subGroupData.width;\n          groupData.subGroups.push(subGroupData);\n\n          if (subGroupData.depth > maxDepth) {\n            maxDepth = subGroupData.depth;\n          }\n        }\n      });\n      groupData.depth += maxDepth;\n\n      if (!groupData.width) {\n        return false;\n      }\n    } else {\n      if (this.columnVisCheck(column)) {\n        groupData.width = 1;\n      } else {\n        return false;\n      }\n    }\n\n    return groupData;\n  }\n\n  columnVisCheck(column) {\n    return column.definition[this.colVisProp] !== false && (column.visible || !column.visible && column.definition[this.colVisProp]);\n  }\n\n  headersToExportRows(columns) {\n    var headers = [],\n        headerDepth = 0,\n        exportRows = [];\n\n    function parseColumnGroup(column, level) {\n      var depth = headerDepth - level;\n\n      if (typeof headers[level] === \"undefined\") {\n        headers[level] = [];\n      }\n\n      column.height = column.subGroups ? 1 : depth - column.depth + 1;\n      headers[level].push(column);\n\n      if (column.height > 1) {\n        for (let i = 1; i < column.height; i++) {\n          if (typeof headers[level + i] === \"undefined\") {\n            headers[level + i] = [];\n          }\n\n          headers[level + i].push(false);\n        }\n      }\n\n      if (column.width > 1) {\n        for (let i = 1; i < column.width; i++) {\n          headers[level].push(false);\n        }\n      }\n\n      if (column.subGroups) {\n        column.subGroups.forEach(function (subGroup) {\n          parseColumnGroup(subGroup, level + 1);\n        });\n      }\n    } //calculate maximum header debth\n\n\n    columns.forEach(function (column) {\n      if (column.depth > headerDepth) {\n        headerDepth = column.depth;\n      }\n    });\n    columns.forEach(function (column) {\n      parseColumnGroup(column, 0);\n    });\n    headers.forEach(header => {\n      var columns = [];\n      header.forEach(col => {\n        if (col) {\n          columns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\n        } else {\n          columns.push(null);\n        }\n      });\n      exportRows.push(new ExportRow(\"header\", columns));\n    });\n    return exportRows;\n  }\n\n  bodyToExportRows(rows) {\n    var columns = [];\n    var exportRows = [];\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      if (this.columnVisCheck(column)) {\n        columns.push(column.getComponent());\n      }\n    });\n\n    if (this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized) {\n        rows.unshift(this.table.modules.columnCalcs.topRow);\n      }\n\n      if (this.table.modules.columnCalcs.botInitialized) {\n        rows.push(this.table.modules.columnCalcs.botRow);\n      }\n    }\n\n    rows = rows.filter(row => {\n      switch (row.type) {\n        case \"group\":\n          return this.config.rowGroups !== false;\n\n        case \"calc\":\n          return this.config.columnCalcs !== false;\n\n        case \"row\":\n          return !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\n      }\n\n      return true;\n    });\n    rows.forEach((row, i) => {\n      var rowData = row.getData(this.colVisProp);\n      var exportCols = [];\n      var indent = 0;\n\n      switch (row.type) {\n        case \"group\":\n          indent = row.level;\n          exportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\n          break;\n\n        case \"calc\":\n        case \"row\":\n          columns.forEach(col => {\n            exportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\n          });\n\n          if (this.table.options.dataTree && this.config.dataTree !== false) {\n            indent = row.modules.dataTree.index;\n          }\n\n          break;\n      }\n\n      exportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\n    });\n    return exportRows;\n  }\n\n  genereateTableElement(list) {\n    var table = document.createElement(\"table\"),\n        headerEl = document.createElement(\"thead\"),\n        bodyEl = document.createElement(\"tbody\"),\n        styles = this.lookupTableStyles(),\n        rowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\n        setup = {};\n    setup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\n\n    if (this.table.options.dataTree && this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")) {\n      setup.treeElementField = this.table.modules.dataTree.elementField;\n    } //assign group header formatter\n\n\n    setup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\n\n    if (setup.groupHeader && !Array.isArray(setup.groupHeader)) {\n      setup.groupHeader = [setup.groupHeader];\n    }\n\n    table.classList.add(\"tabulator-print-table\");\n    this.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n\n    if (list.length > 1000) {\n      console.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\n    }\n\n    list.forEach((row, i) => {\n      switch (row.type) {\n        case \"header\":\n          headerEl.appendChild(this.genereateHeaderElement(row, setup, styles));\n          break;\n\n        case \"group\":\n          bodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\n          break;\n\n        case \"calc\":\n          bodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\n          break;\n\n        case \"row\":\n          let rowEl = this.genereateRowElement(row, setup, styles);\n          this.mapElementStyles(i % 2 && styles.evenRow ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n          bodyEl.appendChild(rowEl);\n          break;\n      }\n    });\n\n    if (headerEl.innerHTML) {\n      table.appendChild(headerEl);\n    }\n\n    table.appendChild(bodyEl);\n    this.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\n    return table;\n  }\n\n  lookupTableStyles() {\n    var styles = {}; //lookup row styles\n\n    if (this.cloneTableStyle && window.getComputedStyle) {\n      styles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\n      styles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\n\n      if (styles.firstRow) {\n        styles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\n        styles.firstCell = styles.styleCells[0];\n        styles.lastCell = styles.styleCells[styles.styleCells.length - 1];\n      }\n    }\n\n    return styles;\n  }\n\n  genereateHeaderElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    row.columns.forEach(column => {\n      if (column) {\n        var cellEl = document.createElement(\"th\");\n        var classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\n        cellEl.colSpan = column.width;\n        cellEl.rowSpan = column.height;\n        cellEl.innerHTML = column.value;\n\n        if (this.cloneTableStyle) {\n          cellEl.style.boxSizing = \"border-box\";\n        }\n\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        this.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n        this.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n\n        if (column.component._column.visible) {\n          this.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\n        } else {\n          if (column.component._column.definition.width) {\n            cellEl.style.width = column.component._column.definition.width + \"px\";\n          }\n        }\n\n        if (column.component._column.parent) {\n          this.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\n        }\n\n        rowEl.appendChild(cellEl);\n      }\n    });\n    return rowEl;\n  }\n\n  genereateGroupElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\"),\n        cellEl = document.createElement(\"td\"),\n        group = row.columns[0];\n    rowEl.classList.add(\"tabulator-print-table-row\");\n\n    if (setup.groupHeader && setup.groupHeader[row.indent]) {\n      group.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n    } else {\n      if (setup.groupHeader === false) {\n        group.value = group.value;\n      } else {\n        group.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n      }\n    }\n\n    cellEl.colSpan = group.width;\n    cellEl.innerHTML = group.value;\n    rowEl.classList.add(\"tabulator-print-table-group\");\n    rowEl.classList.add(\"tabulator-group-level-\" + row.indent);\n\n    if (group.component.isVisible()) {\n      rowEl.classList.add(\"tabulator-group-visible\");\n    }\n\n    this.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    this.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n    rowEl.appendChild(cellEl);\n    return rowEl;\n  }\n\n  genereateCalcElement(row, setup, styles) {\n    var rowEl = this.genereateRowElement(row, setup, styles);\n    rowEl.classList.add(\"tabulator-print-table-calcs\");\n    this.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    return rowEl;\n  }\n\n  genereateRowElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    row.columns.forEach(col => {\n      if (col) {\n        var cellEl = document.createElement(\"td\"),\n            column = col.component._column,\n            value = col.value;\n        var cellWrapper = {\n          modules: {},\n          getValue: function () {\n            return value;\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return cellEl;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getData: function () {\n            return row.component.getData();\n          },\n          getRow: function () {\n            return row.component;\n          },\n          getComponent: function () {\n            return cellWrapper;\n          },\n          column: column\n        };\n        var classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n\n        if (this.table.modExists(\"format\") && this.config.formatCells !== false) {\n          value = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\n        } else {\n          switch (typeof value) {\n            case \"object\":\n              value = JSON.stringify(value);\n              break;\n\n            case \"undefined\":\n            case \"null\":\n              value = \"\";\n              break;\n\n            default:\n              value = value;\n          }\n        }\n\n        if (value instanceof Node) {\n          cellEl.appendChild(value);\n        } else {\n          cellEl.innerHTML = value;\n        }\n\n        if (styles.firstCell) {\n          this.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n\n          if (column.definition.align) {\n            cellEl.style.textAlign = column.definition.align;\n          }\n        }\n\n        if (this.table.options.dataTree && this.config.dataTree !== false) {\n          if (setup.treeElementField && setup.treeElementField == column.field || !setup.treeElementField && i == 0) {\n            if (row.component._row.modules.dataTree.controlEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\n            }\n\n            if (row.component._row.modules.dataTree.branchEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\n            }\n          }\n        }\n\n        rowEl.appendChild(cellEl);\n\n        if (cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback) {\n          cellWrapper.modules.format.renderedCallback();\n        }\n\n        if (setup.rowFormatter && this.config.formatCells !== false) {\n          setup.rowFormatter(row.component);\n        }\n      }\n    });\n    return rowEl;\n  }\n\n  genereateHTMLTable(list) {\n    var holder = document.createElement(\"div\");\n    holder.appendChild(this.genereateTableElement(list));\n    return holder.innerHTML;\n  }\n\n  getHtml(visible, style, config, colVisProp) {\n    var list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\n    return this.genereateHTMLTable(list);\n  }\n\n  mapElementStyles(from, to, props) {\n    if (this.cloneTableStyle && from && to) {\n      var lookup = {\n        \"background-color\": \"backgroundColor\",\n        \"color\": \"fontColor\",\n        \"width\": \"width\",\n        \"font-weight\": \"fontWeight\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"text-align\": \"textAlign\",\n        \"border-top\": \"borderTop\",\n        \"border-left\": \"borderLeft\",\n        \"border-right\": \"borderRight\",\n        \"border-bottom\": \"borderBottom\",\n        \"padding-top\": \"paddingTop\",\n        \"padding-left\": \"paddingLeft\",\n        \"padding-right\": \"paddingRight\",\n        \"padding-bottom\": \"paddingBottom\"\n      };\n\n      if (window.getComputedStyle) {\n        var fromStyle = window.getComputedStyle(from);\n        props.forEach(function (prop) {\n          to.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\n        });\n      }\n    }\n  }\n\n}\n\nExport.moduleName = \"export\";\nvar defaultFilters = {\n  //equal to\n  \"=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal == filterVal ? true : false;\n  },\n  //less than\n  \"<\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal < filterVal ? true : false;\n  },\n  //less than or equal to\n  \"<=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal <= filterVal ? true : false;\n  },\n  //greater than\n  \">\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal > filterVal ? true : false;\n  },\n  //greater than or equal to\n  \">=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal >= filterVal ? true : false;\n  },\n  //not equal to\n  \"!=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal != filterVal ? true : false;\n  },\n  \"regex\": function (filterVal, rowVal, rowData, filterParams) {\n    if (typeof filterVal == \"string\") {\n      filterVal = new RegExp(filterVal);\n    }\n\n    return filterVal.test(rowVal);\n  },\n  //contains the string\n  \"like\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\n      } else {\n        return false;\n      }\n    }\n  },\n  //contains the keywords\n  \"keywords\": function (filterVal, rowVal, rowData, filterParams) {\n    var keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\n        value = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\n        matches = [];\n    keywords.forEach(keyword => {\n      if (value.includes(keyword)) {\n        matches.push(true);\n      }\n    });\n    return filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\n  },\n  //starts with the string\n  \"starts\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //ends with the string\n  \"ends\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //in array\n  \"in\": function (filterVal, rowVal, rowData, filterParams) {\n    if (Array.isArray(filterVal)) {\n      return filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\n    } else {\n      console.warn(\"Filter Error - filter value is not an array:\", filterVal);\n      return false;\n    }\n  }\n};\n\nclass Filter extends Module {\n  constructor(table) {\n    super(table);\n    this.filterList = []; //hold filter list\n\n    this.headerFilters = {}; //hold column filters\n\n    this.headerFilterColumns = []; //hold columns that use header filters\n\n    this.prevHeaderFilterChangeCheck = \"\";\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.changed = false; //has filtering changed since last render\n\n    this.tableInitialized = false;\n    this.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\n\n    this.registerTableOption(\"initialFilter\", false); //initial filtering criteria\n\n    this.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\n\n    this.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\n\n    this.registerColumnOption(\"headerFilter\");\n    this.registerColumnOption(\"headerFilterPlaceholder\");\n    this.registerColumnOption(\"headerFilterParams\");\n    this.registerColumnOption(\"headerFilterEmptyCheck\");\n    this.registerColumnOption(\"headerFilterFunc\");\n    this.registerColumnOption(\"headerFilterFuncParams\");\n    this.registerColumnOption(\"headerFilterLiveFilter\");\n    this.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\n    this.registerTableFunction(\"searchData\", this.searchData.bind(this));\n    this.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\n    this.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\n    this.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\n    this.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\n    this.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\n    this.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\n    this.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\n    this.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\n    this.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\n    this.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\n    this.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\n    this.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\n    this.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n\n    if (this.table.options.filterMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\n    }\n\n    this.registerDataHandler(this.filter.bind(this), 10);\n  }\n\n  tableBuilt() {\n    if (this.table.options.initialFilter) {\n      this.setFilter(this.table.options.initialFilter);\n    }\n\n    if (this.table.options.initialHeaderFilter) {\n      this.table.options.initialHeaderFilter.forEach(item => {\n        var column = this.table.columnManager.findColumn(item.field);\n\n        if (column) {\n          this.setHeaderFilterValue(column, item.value);\n        } else {\n          console.warn(\"Column Filter Error - No matching column found:\", item.field);\n          return false;\n        }\n      });\n    }\n\n    this.tableInitialized = true;\n  }\n\n  remoteFilterParams(data, config, silent, params) {\n    params.filter = this.getFilters(true, true);\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  //set standard filters\n\n\n  userSetFilter(field, type, value, params) {\n    this.setFilter(field, type, value, params);\n    this.refreshFilter();\n  } //set standard filters\n\n\n  userRefreshFilter() {\n    this.refreshFilter();\n  } //add filter to array\n\n\n  userAddFilter(field, type, value, params) {\n    this.addFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n\n  userSetHeaderFilterFocus(field) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      this.setHeaderFilterFocus(column);\n    } else {\n      console.warn(\"Column Filter Focus Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  userGetHeaderFilterValue(field) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      return this.getHeaderFilterValue(column);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n    }\n  }\n\n  userSetHeaderFilterValue(field, value) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      this.setHeaderFilterValue(column, value);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n      return false;\n    }\n  } //remove filter from array\n\n\n  userRemoveFilter(field, type, value) {\n    this.removeFilter(field, type, value);\n    this.refreshFilter();\n  } //clear filters\n\n\n  userClearFilter(all) {\n    this.clearFilter(all);\n    this.refreshFilter();\n  } //clear header filters\n\n\n  userClearHeaderFilter() {\n    this.clearHeaderFilter();\n    this.refreshFilter();\n  } //search for specific row components\n\n\n  searchRows(field, type, value) {\n    return this.search(\"rows\", field, type, value);\n  } //search for specific data\n\n\n  searchData(field, type, value) {\n    return this.search(\"data\", field, type, value);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnHeaderFilter(column) {\n    var def = column.definition;\n\n    if (def.headerFilter) {\n      if (typeof def.headerFilterPlaceholder !== \"undefined\" && def.field) {\n        this.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\n      }\n\n      this.initializeColumn(column);\n    }\n  } //initialize column header filter\n\n\n  initializeColumn(column, value) {\n    var self = this,\n        field = column.getField(); //handle successfull value change\n\n    function success(value) {\n      var filterType = column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\" || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\n          type = \"\",\n          filterChangeCheck = \"\",\n          filterFunc;\n\n      if (typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value) {\n        column.modules.filter.prevSuccess = value;\n\n        if (!column.modules.filter.emptyFunc(value)) {\n          column.modules.filter.value = value;\n\n          switch (typeof column.definition.headerFilterFunc) {\n            case \"string\":\n              if (Filter.filters[column.definition.headerFilterFunc]) {\n                type = column.definition.headerFilterFunc;\n\n                filterFunc = function (data) {\n                  var params = column.definition.headerFilterFuncParams || {};\n                  var fieldVal = column.getFieldValue(data);\n                  params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                  return Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\n                };\n              } else {\n                console.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\n              }\n\n              break;\n\n            case \"function\":\n              filterFunc = function (data) {\n                var params = column.definition.headerFilterFuncParams || {};\n                var fieldVal = column.getFieldValue(data);\n                params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                return column.definition.headerFilterFunc(value, fieldVal, data, params);\n              };\n\n              type = filterFunc;\n              break;\n          }\n\n          if (!filterFunc) {\n            switch (filterType) {\n              case \"partial\":\n                filterFunc = function (data) {\n                  var colVal = column.getFieldValue(data);\n\n                  if (typeof colVal !== 'undefined' && colVal !== null) {\n                    return String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\n                  } else {\n                    return false;\n                  }\n                };\n\n                type = \"like\";\n                break;\n\n              default:\n                filterFunc = function (data) {\n                  return column.getFieldValue(data) == value;\n                };\n\n                type = \"=\";\n            }\n          }\n\n          self.headerFilters[field] = {\n            value: value,\n            func: filterFunc,\n            type: type,\n            params: {}\n          };\n        } else {\n          delete self.headerFilters[field];\n        }\n\n        filterChangeCheck = JSON.stringify(self.headerFilters);\n\n        if (self.prevHeaderFilterChangeCheck !== filterChangeCheck) {\n          self.prevHeaderFilterChangeCheck = filterChangeCheck;\n          self.trackChanges();\n          self.refreshFilter();\n        }\n      }\n\n      return true;\n    }\n\n    column.modules.filter = {\n      success: success,\n      attrType: false,\n      tagType: false,\n      emptyFunc: false\n    };\n    this.generateHeaderFilterElement(column);\n  }\n\n  generateHeaderFilterElement(column, initialValue, reinitialize) {\n    var self = this,\n        success = column.modules.filter.success,\n        field = column.getField(),\n        filterElement,\n        editor,\n        editorElement,\n        cellWrapper,\n        typingTimer,\n        searchTrigger,\n        params; //handle aborted edit\n\n    function cancel() {}\n\n    if (column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode) {\n      column.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\n    }\n\n    if (field) {\n      //set empty value function\n      column.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function (value) {\n        return !value && value !== \"0\" && value !== 0;\n      };\n\n      filterElement = document.createElement(\"div\");\n      filterElement.classList.add(\"tabulator-header-filter\"); //set column editor\n\n      switch (typeof column.definition.headerFilter) {\n        case \"string\":\n          if (self.table.modules.edit.editors[column.definition.headerFilter]) {\n            editor = self.table.modules.edit.editors[column.definition.headerFilter];\n\n            if ((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n              column.modules.filter.emptyFunc = function (value) {\n                return value !== true && value !== false;\n              };\n            }\n          } else {\n            console.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\n          }\n\n          break;\n\n        case \"function\":\n          editor = column.definition.headerFilter;\n          break;\n\n        case \"boolean\":\n          if (column.modules.edit && column.modules.edit.editor) {\n            editor = column.modules.edit.editor;\n          } else {\n            if (column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]) {\n              editor = self.table.modules.edit.editors[column.definition.formatter];\n\n              if ((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n                column.modules.filter.emptyFunc = function (value) {\n                  return value !== true && value !== false;\n                };\n              }\n            } else {\n              editor = self.table.modules.edit.editors[\"input\"];\n            }\n          }\n\n          break;\n      }\n\n      if (editor) {\n        cellWrapper = {\n          getValue: function () {\n            return typeof initialValue !== \"undefined\" ? initialValue : \"\";\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return filterElement;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getRow: function () {\n            return {\n              normalizeHeight: function () {}\n            };\n          }\n        };\n        params = column.definition.headerFilterParams || {};\n        params = typeof params === \"function\" ? params.call(self.table) : params;\n        editorElement = editor.call(this.table.modules.edit, cellWrapper, function () {}, success, cancel, params);\n\n        if (!editorElement) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\n          return;\n        }\n\n        if (!(editorElement instanceof Node)) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\n          return;\n        } //set Placeholder Text\n\n\n        if (field) {\n          self.langBind(\"headerFilters|columns|\" + column.definition.field, function (value) {\n            editorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\n          });\n        } else {\n          self.langBind(\"headerFilters|default\", function (value) {\n            editorElement.setAttribute(\"placeholder\", value);\n          });\n        } //focus on element on click\n\n\n        editorElement.addEventListener(\"click\", function (e) {\n          e.stopPropagation();\n          editorElement.focus();\n        });\n        editorElement.addEventListener(\"focus\", e => {\n          var left = this.table.columnManager.element.scrollLeft;\n\n          if (left !== this.table.rowManager.element.scrollLeft) {\n            this.table.rowManager.scrollHorizontal(left);\n            this.table.columnManager.scrollHorizontal(left);\n          }\n        }); //live update filters as user types\n\n        typingTimer = false;\n\n        searchTrigger = function (e) {\n          if (typingTimer) {\n            clearTimeout(typingTimer);\n          }\n\n          typingTimer = setTimeout(function () {\n            success(editorElement.value);\n          }, self.table.options.headerFilterLiveFilterDelay);\n        };\n\n        column.modules.filter.headerElement = editorElement;\n        column.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\";\n        column.modules.filter.tagType = editorElement.tagName.toLowerCase();\n\n        if (column.definition.headerFilterLiveFilter !== false) {\n          if (!(column.definition.headerFilter === 'autocomplete' || column.definition.headerFilter === 'tickCross' || (column.definition.editor === 'autocomplete' || column.definition.editor === 'tickCross') && column.definition.headerFilter === true)) {\n            editorElement.addEventListener(\"keyup\", searchTrigger);\n            editorElement.addEventListener(\"search\", searchTrigger); //update number filtered columns on change\n\n            if (column.modules.filter.attrType == \"number\") {\n              editorElement.addEventListener(\"change\", function (e) {\n                success(editorElement.value);\n              });\n            } //change text inputs to search inputs to allow for clearing of field\n\n\n            if (column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\") {\n              editorElement.setAttribute(\"type\", \"search\"); // editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\n            }\n          } //prevent input and select elements from propegating click to column sorters etc\n\n\n          if (column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\") {\n            editorElement.addEventListener(\"mousedown\", function (e) {\n              e.stopPropagation();\n            });\n          }\n        }\n\n        filterElement.appendChild(editorElement);\n        column.contentElement.appendChild(filterElement);\n\n        if (!reinitialize) {\n          self.headerFilterColumns.push(column);\n        }\n      }\n    } else {\n      console.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\n    }\n  } //hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n\n\n  hideHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = 'none';\n      }\n    });\n  } //show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n\n\n  showHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = '';\n      }\n    });\n  } //programatically set focus of header filter\n\n\n  setHeaderFilterFocus(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      column.modules.filter.headerElement.focus();\n    } else {\n      console.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\n    }\n  } //programmatically get value of header filter\n\n\n  getHeaderFilterValue(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      return column.modules.filter.headerElement.value;\n    } else {\n      console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n    }\n  } //programatically set value of header filter\n\n\n  setHeaderFilterValue(column, value) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, value, true);\n        column.modules.filter.success(value);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n\n  reloadHeaderFilter(column) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, column.modules.filter.value, true);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n\n  refreshFilter() {\n    if (this.tableInitialized) {\n      if (this.table.options.filterMode === \"remote\") {\n        this.reloadData();\n      } else {\n        this.refreshData(true);\n      }\n    } //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n\n  } //check if the filters has changed since last use\n\n\n  trackChanges() {\n    this.changed = true;\n    this.dispatch(\"filter-changed\");\n  } //check if the filters has changed since last use\n\n\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  } //set standard filters\n\n\n  setFilter(field, type, value, params) {\n    this.filterList = [];\n\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n\n    this.addFilter(field);\n  } //add filter to array\n\n\n  addFilter(field, type, value, params) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        this.filterList.push(filter);\n        this.changed = true;\n      }\n    });\n  }\n\n  findFilter(filter) {\n    var column;\n\n    if (Array.isArray(filter)) {\n      return this.findSubFilters(filter);\n    }\n\n    var filterFunc = false;\n\n    if (typeof filter.field == \"function\") {\n      filterFunc = function (data) {\n        return filter.field(data, filter.type || {}); // pass params to custom filter function\n      };\n    } else {\n      if (Filter.filters[filter.type]) {\n        column = this.table.columnManager.getColumnByField(filter.field);\n\n        if (column) {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\n          };\n        } else {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\n          };\n        }\n      } else {\n        console.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\n      }\n    }\n\n    filter.func = filterFunc;\n    return filter.func ? filter : false;\n  }\n\n  findSubFilters(filters) {\n    var output = [];\n    filters.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        output.push(filter);\n      }\n    });\n    return output.length ? output : false;\n  } //get all filters\n\n\n  getFilters(all, ajax) {\n    var output = [];\n\n    if (all) {\n      output = this.getHeaderFilters();\n    }\n\n    if (ajax) {\n      output.forEach(function (item) {\n        if (typeof item.type == \"function\") {\n          item.type = \"function\";\n        }\n      });\n    }\n\n    output = output.concat(this.filtersToArray(this.filterList, ajax));\n    return output;\n  } //filter to Object\n\n\n  filtersToArray(filterList, ajax) {\n    var output = [];\n    filterList.forEach(filter => {\n      var item;\n\n      if (Array.isArray(filter)) {\n        output.push(this.filtersToArray(filter, ajax));\n      } else {\n        item = {\n          field: filter.field,\n          type: filter.type,\n          value: filter.value\n        };\n\n        if (ajax) {\n          if (typeof item.type == \"function\") {\n            item.type = \"function\";\n          }\n        }\n\n        output.push(item);\n      }\n    });\n    return output;\n  } //get all filters\n\n\n  getHeaderFilters() {\n    var output = [];\n\n    for (var key in this.headerFilters) {\n      output.push({\n        field: key,\n        type: this.headerFilters[key].type,\n        value: this.headerFilters[key].value\n      });\n    }\n\n    return output;\n  } //remove filter from array\n\n\n  removeFilter(field, type, value) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n\n    field.forEach(filter => {\n      var index = -1;\n\n      if (typeof filter.field == \"object\") {\n        index = this.filterList.findIndex(element => {\n          return filter === element;\n        });\n      } else {\n        index = this.filterList.findIndex(element => {\n          return filter.field === element.field && filter.type === element.type && filter.value === element.value;\n        });\n      }\n\n      if (index > -1) {\n        this.filterList.splice(index, 1);\n      } else {\n        console.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\n      }\n    });\n    this.trackChanges();\n  } //clear filters\n\n\n  clearFilter(all) {\n    this.filterList = [];\n\n    if (all) {\n      this.clearHeaderFilter();\n    }\n\n    this.trackChanges();\n  } //clear header filters\n\n\n  clearHeaderFilter() {\n    this.headerFilters = {};\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.headerFilterColumns.forEach(column => {\n      if (typeof column.modules.filter.value !== \"undefined\") {\n        delete column.modules.filter.value;\n      }\n\n      column.modules.filter.prevSuccess = undefined;\n      this.reloadHeaderFilter(column);\n    });\n    this.trackChanges();\n  } //search data and return matching rows\n\n\n  search(searchType, field, type, value) {\n    var activeRows = [],\n        filterList = [];\n\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        filterList.push(filter);\n      }\n    });\n    this.table.rowManager.rows.forEach(row => {\n      var match = true;\n      filterList.forEach(filter => {\n        if (!this.filterRecurse(filter, row.getData())) {\n          match = false;\n        }\n      });\n\n      if (match) {\n        activeRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\n      }\n    });\n    return activeRows;\n  } //filter row array\n\n\n  filter(rowList, filters) {\n    var activeRows = [],\n        activeRowComponents = [];\n\n    if (this.subscribedExternal(\"dataFiltering\")) {\n      this.dispatchExternal(\"dataFiltering\", this.getFilters());\n    }\n\n    if (this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)) {\n      rowList.forEach(row => {\n        if (this.filterRow(row)) {\n          activeRows.push(row);\n        }\n      });\n    } else {\n      activeRows = rowList.slice(0);\n    }\n\n    if (this.subscribedExternal(\"dataFiltered\")) {\n      activeRows.forEach(row => {\n        activeRowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\n    }\n\n    return activeRows;\n  } //filter individual row\n\n\n  filterRow(row, filters) {\n    var match = true,\n        data = row.getData();\n    this.filterList.forEach(filter => {\n      if (!this.filterRecurse(filter, data)) {\n        match = false;\n      }\n    });\n\n    for (var field in this.headerFilters) {\n      if (!this.headerFilters[field].func(data)) {\n        match = false;\n      }\n    }\n\n    return match;\n  }\n\n  filterRecurse(filter, data) {\n    var match = false;\n\n    if (Array.isArray(filter)) {\n      filter.forEach(subFilter => {\n        if (this.filterRecurse(subFilter, data)) {\n          match = true;\n        }\n      });\n    } else {\n      match = filter.func(data);\n    }\n\n    return match;\n  }\n\n}\n\nFilter.moduleName = \"filter\"; //load defaults\n\nFilter.filters = defaultFilters;\n\nfunction plaintext(cell, formatterParams, onRendered) {\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\n\nfunction html$1(cell, formatterParams, onRendered) {\n  return cell.getValue();\n}\n\nfunction textarea$1(cell, formatterParams, onRendered) {\n  cell.getElement().style.whiteSpace = \"pre-wrap\";\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\n\nfunction money(cell, formatterParams, onRendered) {\n  var floatVal = parseFloat(cell.getValue()),\n      sign = \"\",\n      number,\n      integer,\n      decimal,\n      rgx;\n  var decimalSym = formatterParams.decimal || \".\";\n  var thousandSym = formatterParams.thousand || \",\";\n  var negativeSign = formatterParams.negativeSign || \"-\";\n  var symbol = formatterParams.symbol || \"\";\n  var after = !!formatterParams.symbolAfter;\n  var precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\n\n  if (isNaN(floatVal)) {\n    return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n  }\n\n  if (floatVal < 0) {\n    floatVal = Math.abs(floatVal);\n    sign = negativeSign;\n  }\n\n  number = precision !== false ? floatVal.toFixed(precision) : floatVal;\n  number = String(number).split(\".\");\n  integer = number[0];\n  decimal = number.length > 1 ? decimalSym + number[1] : \"\";\n  rgx = /(\\d+)(\\d{3})/;\n\n  while (rgx.test(integer)) {\n    integer = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\n  }\n\n  return after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\n}\n\nfunction link(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      urlPrefix = formatterParams.urlPrefix || \"\",\n      download = formatterParams.download,\n      label = value,\n      el = document.createElement(\"a\"),\n      data;\n\n  if (formatterParams.labelField) {\n    data = cell.getData();\n    label = data[formatterParams.labelField];\n  }\n\n  if (formatterParams.label) {\n    switch (typeof formatterParams.label) {\n      case \"string\":\n        label = formatterParams.label;\n        break;\n\n      case \"function\":\n        label = formatterParams.label(cell);\n        break;\n    }\n  }\n\n  if (label) {\n    if (formatterParams.urlField) {\n      data = cell.getData();\n      value = data[formatterParams.urlField];\n    }\n\n    if (formatterParams.url) {\n      switch (typeof formatterParams.url) {\n        case \"string\":\n          value = formatterParams.url;\n          break;\n\n        case \"function\":\n          value = formatterParams.url(cell);\n          break;\n      }\n    }\n\n    el.setAttribute(\"href\", urlPrefix + value);\n\n    if (formatterParams.target) {\n      el.setAttribute(\"target\", formatterParams.target);\n    }\n\n    if (formatterParams.download) {\n      if (typeof download == \"function\") {\n        download = download(cell);\n      } else {\n        download = download === true ? \"\" : download;\n      }\n\n      el.setAttribute(\"download\", download);\n    }\n\n    el.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\n    return el;\n  } else {\n    return \"&nbsp;\";\n  }\n}\n\nfunction image(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"img\"),\n      src = cell.getValue();\n\n  if (formatterParams.urlPrefix) {\n    src = formatterParams.urlPrefix + cell.getValue();\n  }\n\n  if (formatterParams.urlSuffix) {\n    src = src + formatterParams.urlSuffix;\n  }\n\n  el.setAttribute(\"src\", src);\n\n  switch (typeof formatterParams.height) {\n    case \"number\":\n      el.style.height = formatterParams.height + \"px\";\n      break;\n\n    case \"string\":\n      el.style.height = formatterParams.height;\n      break;\n  }\n\n  switch (typeof formatterParams.width) {\n    case \"number\":\n      el.style.width = formatterParams.width + \"px\";\n      break;\n\n    case \"string\":\n      el.style.width = formatterParams.width;\n      break;\n  }\n\n  el.addEventListener(\"load\", function () {\n    cell.getRow().normalizeHeight();\n  });\n  return el;\n}\n\nfunction tickCross$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      element = cell.getElement(),\n      empty = formatterParams.allowEmpty,\n      truthy = formatterParams.allowTruthy,\n      tick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\n      cross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n\n  if (truthy && value || value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\") {\n    element.setAttribute(\"aria-checked\", true);\n    return tick || \"\";\n  } else {\n    if (empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")) {\n      element.setAttribute(\"aria-checked\", \"mixed\");\n      return \"\";\n    } else {\n      element.setAttribute(\"aria-checked\", false);\n      return cross || \"\";\n    }\n  }\n}\n\nfunction datetime(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var outputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var value = cell.getValue();\n\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n\n    if (newDatetime.isValid) {\n      if (formatterParams.timezone) {\n        newDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\n      }\n\n      return newDatetime.toFormat(outputFormat);\n    } else {\n      if (invalid === true || !value) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\n  }\n}\n\nfunction datetimediff(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\n  var unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\n  var humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\n  var date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\n  var value = cell.getValue();\n\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n\n    if (newDatetime.isValid) {\n      if (humanize) ;else {\n        return parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\n      }\n    } else {\n      if (invalid === true) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\n  }\n}\n\nfunction lookup(cell, formatterParams, onRendered) {\n  var value = cell.getValue();\n\n  if (typeof formatterParams[value] === \"undefined\") {\n    console.warn('Missing display value for ' + value);\n    return value;\n  }\n\n  return formatterParams[value];\n}\n\nfunction star$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      element = cell.getElement(),\n      maxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\n      stars = document.createElement(\"span\"),\n      star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\n      starActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\n      starInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>'; //style stars holder\n\n  stars.style.verticalAlign = \"middle\"; //style star\n\n  star.setAttribute(\"width\", \"14\");\n  star.setAttribute(\"height\", \"14\");\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  value = value && !isNaN(value) ? parseInt(value) : 0;\n  value = Math.max(0, Math.min(value, maxStars));\n\n  for (var i = 1; i <= maxStars; i++) {\n    var nextStar = star.cloneNode(true);\n    nextStar.innerHTML = i <= value ? starActive : starInactive;\n    stars.appendChild(nextStar);\n  }\n\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n  element.setAttribute(\"aria-label\", value);\n  return stars;\n}\n\nfunction traffic(cell, formatterParams, onRendered) {\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n      el = document.createElement(\"span\"),\n      max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n      min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n      colors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\n      color = \"#666666\",\n      percent,\n      percentValue;\n\n  if (isNaN(value) || typeof cell.getValue() === \"undefined\") {\n    return;\n  }\n\n  el.classList.add(\"tabulator-traffic-light\"); //make sure value is in range\n\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min; //workout percentage\n\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent); //set color\n\n  switch (typeof colors) {\n    case \"string\":\n      color = colors;\n      break;\n\n    case \"function\":\n      color = colors(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(colors)) {\n        var unit = 100 / colors.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, colors.length - 1);\n        index = Math.max(index, 0);\n        color = colors[index];\n        break;\n      }\n\n  }\n\n  el.style.backgroundColor = color;\n  return el;\n}\n\nfunction progress$1(cell, formatterParams, onRendered) {\n  //progress bar\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n      element = cell.getElement(),\n      max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n      min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n      legendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\n      percent,\n      percentValue,\n      color,\n      legend,\n      legendColor; //make sure value is in range\n\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min; //workout percentage\n\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent); //set bar color\n\n  switch (typeof formatterParams.color) {\n    case \"string\":\n      color = formatterParams.color;\n      break;\n\n    case \"function\":\n      color = formatterParams.color(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(formatterParams.color)) {\n        var unit = 100 / formatterParams.color.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.color.length - 1);\n        index = Math.max(index, 0);\n        color = formatterParams.color[index];\n        break;\n      }\n\n    default:\n      color = \"#2DC214\";\n  } //generate legend\n\n\n  switch (typeof formatterParams.legend) {\n    case \"string\":\n      legend = formatterParams.legend;\n      break;\n\n    case \"function\":\n      legend = formatterParams.legend(value);\n      break;\n\n    case \"boolean\":\n      legend = value;\n      break;\n\n    default:\n      legend = false;\n  } //set legend color\n\n\n  switch (typeof formatterParams.legendColor) {\n    case \"string\":\n      legendColor = formatterParams.legendColor;\n      break;\n\n    case \"function\":\n      legendColor = formatterParams.legendColor(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(formatterParams.legendColor)) {\n        var unit = 100 / formatterParams.legendColor.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.legendColor.length - 1);\n        index = Math.max(index, 0);\n        legendColor = formatterParams.legendColor[index];\n      }\n\n      break;\n\n    default:\n      legendColor = \"#000\";\n  }\n\n  element.style.minWidth = \"30px\";\n  element.style.position = \"relative\";\n  element.setAttribute(\"aria-label\", percentValue);\n  var barEl = document.createElement(\"div\");\n  barEl.style.display = \"inline-block\";\n  barEl.style.position = \"absolute\";\n  barEl.style.width = percentValue + \"%\";\n  barEl.style.backgroundColor = color;\n  barEl.style.height = \"100%\";\n  barEl.setAttribute('data-max', max);\n  barEl.setAttribute('data-min', min);\n  var barContainer = document.createElement(\"div\");\n  barContainer.style.position = \"relative\";\n  barContainer.style.width = \"100%\";\n  barContainer.style.height = \"100%\";\n\n  if (legend) {\n    var legendEl = document.createElement(\"div\");\n    legendEl.style.position = \"absolute\";\n    legendEl.style.top = 0;\n    legendEl.style.left = 0;\n    legendEl.style.textAlign = legendAlign;\n    legendEl.style.width = \"100%\";\n    legendEl.style.color = legendColor;\n    legendEl.innerHTML = legend;\n  }\n\n  onRendered(function () {\n    //handle custom element needed if formatter is to be included in printed/downloaded output\n    if (!(cell instanceof CellComponent)) {\n      var holderEl = document.createElement(\"div\");\n      holderEl.style.position = \"absolute\";\n      holderEl.style.top = \"4px\";\n      holderEl.style.bottom = \"4px\";\n      holderEl.style.left = \"4px\";\n      holderEl.style.right = \"4px\";\n      element.appendChild(holderEl);\n      element = holderEl;\n    }\n\n    element.appendChild(barContainer);\n    barContainer.appendChild(barEl);\n\n    if (legend) {\n      barContainer.appendChild(legendEl);\n    }\n  });\n  return \"\";\n}\n\nfunction color(cell, formatterParams, onRendered) {\n  cell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\n  return \"\";\n}\n\nfunction buttonTick(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\n}\n\nfunction buttonCross(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n}\n\nfunction rownum(cell, formatterParams, onRendered) {\n  return this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\n}\n\nfunction handle(cell, formatterParams, onRendered) {\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  return \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\n}\n\nfunction responsiveCollapse(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"div\"),\n      config = cell.getRow()._row.modules.responsiveLayout;\n\n  el.classList.add(\"tabulator-responsive-collapse-toggle\");\n  el.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n\n  function toggleList(isOpen) {\n    var collapseEl = config.element;\n    config.open = isOpen;\n\n    if (collapseEl) {\n      if (config.open) {\n        el.classList.add(\"open\");\n        collapseEl.style.display = '';\n      } else {\n        el.classList.remove(\"open\");\n        collapseEl.style.display = 'none';\n      }\n    }\n  }\n\n  el.addEventListener(\"click\", function (e) {\n    e.stopImmediatePropagation();\n    toggleList(!config.open);\n  });\n  toggleList(config.open);\n  return el;\n}\n\nfunction rowSelection(cell, formatterParams, onRendered) {\n  var checkbox = document.createElement(\"input\");\n  checkbox.type = 'checkbox';\n\n  if (this.table.modExists(\"selectRow\", true)) {\n    checkbox.addEventListener(\"click\", e => {\n      e.stopPropagation();\n    });\n\n    if (typeof cell.getRow == 'function') {\n      var row = cell.getRow();\n\n      if (row instanceof RowComponent$1) {\n        checkbox.addEventListener(\"change\", e => {\n          row.toggleSelect();\n        });\n        checkbox.checked = row.isSelected && row.isSelected();\n        this.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\n      } else {\n        checkbox = \"\";\n      }\n    } else {\n      checkbox.addEventListener(\"change\", e => {\n        if (this.table.modules.selectRow.selectedRows.length) {\n          this.table.deselectRow();\n        } else {\n          this.table.selectRow(formatterParams.rowRange);\n        }\n      });\n      this.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\n    }\n  }\n\n  return checkbox;\n}\n\nvar defaultFormatters = {\n  plaintext: plaintext,\n  html: html$1,\n  textarea: textarea$1,\n  money: money,\n  link: link,\n  image: image,\n  tickCross: tickCross$1,\n  datetime: datetime,\n  datetimediff: datetimediff,\n  lookup: lookup,\n  star: star$1,\n  traffic: traffic,\n  progress: progress$1,\n  color: color,\n  buttonTick: buttonTick,\n  buttonCross: buttonCross,\n  rownum: rownum,\n  handle: handle,\n  responsiveCollapse: responsiveCollapse,\n  rowSelection: rowSelection\n};\n\nclass Format extends Module {\n  constructor(table) {\n    super(table);\n    this.registerColumnOption(\"formatter\");\n    this.registerColumnOption(\"formatterParams\");\n    this.registerColumnOption(\"formatterPrint\");\n    this.registerColumnOption(\"formatterPrintParams\");\n    this.registerColumnOption(\"formatterClipboard\");\n    this.registerColumnOption(\"formatterClipboardParams\");\n    this.registerColumnOption(\"formatterHtmlOutput\");\n    this.registerColumnOption(\"formatterHtmlOutputParams\");\n    this.registerColumnOption(\"titleFormatter\");\n    this.registerColumnOption(\"titleFormatterParams\");\n  }\n\n  initialize() {\n    this.subscribe(\"cell-format\", this.formatValue.bind(this));\n    this.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-format\", this.formatHeader.bind(this));\n  } //initialize column formatter\n\n\n  initializeColumn(column) {\n    column.modules.format = this.lookupFormatter(column, \"\");\n\n    if (typeof column.definition.formatterPrint !== \"undefined\") {\n      column.modules.format.print = this.lookupFormatter(column, \"Print\");\n    }\n\n    if (typeof column.definition.formatterClipboard !== \"undefined\") {\n      column.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\n    }\n\n    if (typeof column.definition.formatterHtmlOutput !== \"undefined\") {\n      column.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\n    }\n  }\n\n  lookupFormatter(column, type) {\n    var config = {\n      params: column.definition[\"formatter\" + type + \"Params\"] || {}\n    },\n        formatter = column.definition[\"formatter\" + type]; //set column formatter\n\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          config.formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          config.formatter = Format.formatters.plaintext;\n        }\n\n        break;\n\n      case \"function\":\n        config.formatter = formatter;\n        break;\n\n      default:\n        config.formatter = Format.formatters.plaintext;\n        break;\n    }\n\n    return config;\n  }\n\n  cellRendered(cell) {\n    if (cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered) {\n      cell.modules.format.renderedCallback();\n      cell.modules.format.rendered = true;\n    }\n  } //return a formatted value for a column header\n\n\n  formatHeader(column, title, el) {\n    var formatter, params, onRendered, mockCell;\n\n    if (column.definition.titleFormatter) {\n      formatter = this.getFormatter(column.definition.titleFormatter);\n\n      onRendered = callback => {\n        column.titleFormatterRendered = callback;\n      };\n\n      mockCell = {\n        getValue: function () {\n          return title;\n        },\n        getElement: function () {\n          return el;\n        }\n      };\n      params = column.definition.titleFormatterParams || {};\n      params = typeof params === \"function\" ? params() : params;\n      return formatter.call(this, mockCell, params, onRendered);\n    } else {\n      return title;\n    }\n  } //return a formatted value for a cell\n\n\n  formatValue(cell) {\n    var component = cell.getComponent(),\n        params = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\n\n    function onRendered(callback) {\n      if (!cell.modules.format) {\n        cell.modules.format = {};\n      }\n\n      cell.modules.format.renderedCallback = callback;\n      cell.modules.format.rendered = false;\n    }\n\n    return cell.column.modules.format.formatter.call(this, component, params, onRendered);\n  }\n\n  formatExportValue(cell, type) {\n    var formatter = cell.column.modules.format[type],\n        params;\n\n    if (formatter) {\n      params = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\n\n      function onRendered(callback) {\n        if (!cell.modules.format) {\n          cell.modules.format = {};\n        }\n\n        cell.modules.format.renderedCallback = callback;\n        cell.modules.format.rendered = false;\n      }\n\n      return formatter.formatter.call(this, cell.getComponent(), params, onRendered);\n    } else {\n      return this.formatValue(cell);\n    }\n  }\n\n  sanitizeHTML(value) {\n    if (value) {\n      var entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n      };\n      return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n        return entityMap[s];\n      });\n    } else {\n      return value;\n    }\n  }\n\n  emptyToSpace(value) {\n    return value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\n  } //get formatter for cell\n\n\n  getFormatter(formatter) {\n    var formatter;\n\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          formatter = Format.formatters.plaintext;\n        }\n\n        break;\n\n      case \"function\":\n        formatter = formatter;\n        break;\n\n      default:\n        formatter = Format.formatters.plaintext;\n        break;\n    }\n\n    return formatter;\n  }\n\n}\n\nFormat.moduleName = \"format\"; //load defaults\n\nFormat.formatters = defaultFormatters;\n\nclass FrozenColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightPadding = 0;\n    this.initializationMode = \"left\";\n    this.active = false;\n    this.scrollEndTimer = false;\n    this.registerColumnOption(\"frozen\");\n  } //reset initial state\n\n\n  reset() {\n    this.initializationMode = \"left\";\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightMargin = 0;\n    this.active = false;\n    this.table.columnManager.headersElement.style.marginLeft = 0;\n    this.table.columnManager.element.style.paddingRight = 0;\n  }\n\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-width\", this.layout.bind(this));\n    this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n    this.subscribe(\"table-layout\", this.layout.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"columns-loading\", this.reset.bind(this));\n    this.subscribe(\"table-redraw\", this.layout.bind(this));\n  }\n\n  layoutCell(cell) {\n    this.layoutElement(cell.element, cell.column);\n  } //initialize specific column\n\n\n  initializeColumn(column) {\n    var config = {\n      margin: 0,\n      edge: false\n    };\n\n    if (!column.isGroup) {\n      if (this.frozenCheck(column)) {\n        config.position = this.initializationMode;\n\n        if (this.initializationMode == \"left\") {\n          this.leftColumns.push(column);\n        } else {\n          this.rightColumns.unshift(column);\n        }\n\n        this.active = true;\n        column.modules.frozen = config;\n      } else {\n        this.initializationMode = \"right\";\n      }\n    }\n  }\n\n  frozenCheck(column) {\n    if (column.parent.isGroup && column.definition.frozen) {\n      console.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\n    }\n\n    if (column.parent.isGroup) {\n      return this.frozenCheck(column.parent);\n    } else {\n      return column.definition.frozen;\n    }\n  } //quick layout to smooth horizontal scrolling\n\n\n  scrollHorizontal() {\n    var rows;\n\n    if (this.active) {\n      clearTimeout(this.scrollEndTimer); //layout all rows after scroll is complete\n\n      this.scrollEndTimer = setTimeout(() => {\n        this.layout();\n      }, 100);\n      rows = this.table.rowManager.getVisibleRows();\n      this.calcMargins();\n      this.layoutColumnPosition();\n      this.layoutCalcRows();\n      rows.forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  } //calculate margins for rows\n\n\n  calcMargins() {\n    this.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\n    this.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\n    this.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\n    this.table.columnManager.element.style.paddingRight = this.rightMargin; //calculate right frozen columns\n\n    this.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\n  } //layout calculation rows\n\n\n  layoutCalcRows() {\n    if (this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow) {\n        this.layoutRow(this.table.modules.columnCalcs.topRow);\n      }\n\n      if (this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow) {\n        this.layoutRow(this.table.modules.columnCalcs.botRow);\n      }\n\n      if (this.table.modExists(\"groupRows\")) {\n        this.layoutGroupCalcs(this.table.modules.groupRows.getGroups());\n      }\n    }\n  }\n\n  layoutGroupCalcs(groups) {\n    groups.forEach(group => {\n      if (group.calcs.top) {\n        this.layoutRow(group.calcs.top);\n      }\n\n      if (group.calcs.bottom) {\n        this.layoutRow(group.calcs.bottom);\n      }\n\n      if (group.groupList && group.groupList.length) {\n        this.layoutGroupCalcs(group.groupList && group.groupList);\n      }\n    });\n  } //calculate column positions and layout headers\n\n\n  layoutColumnPosition(allCells) {\n    var leftParents = [];\n    this.leftColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft + \"px\";\n\n      if (i == this.leftColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n\n      if (column.parent.isGroup) {\n        var parentEl = this.getColGroupParentElement(column);\n\n        if (!leftParents.includes(parentEl)) {\n          this.layoutElement(parentEl, column);\n          leftParents.push(parentEl);\n        }\n\n        if (column.modules.frozen.edge) {\n          parentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n        }\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n    this.rightColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this.rightPadding - this._calcSpace(this.rightColumns, i + 1) + \"px\";\n\n      if (i == this.rightColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n\n      if (column.parent.isGroup) {\n        this.layoutElement(this.getColGroupParentElement(column), column);\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n  }\n\n  getColGroupParentElement(column) {\n    return column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\n  } //layout columns appropropriatly\n\n\n  layout() {\n    if (this.active) {\n      //calculate row padding\n      this.calcMargins();\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.layoutCalcRows(); //calculate left columns\n\n      this.layoutColumnPosition(true);\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  }\n\n  layoutRow(row) {\n    var rowEl = row.getElement();\n    rowEl.style.paddingLeft = this.leftMargin;\n    this.leftColumns.forEach(column => {\n      var cell = row.getCell(column);\n\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n    this.rightColumns.forEach(column => {\n      var cell = row.getCell(column);\n\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n  }\n\n  layoutElement(element, column) {\n    if (column.modules.frozen) {\n      element.style.position = \"absolute\";\n      element.style.left = column.modules.frozen.margin;\n      element.classList.add(\"tabulator-frozen\");\n\n      if (column.modules.frozen.edge) {\n        element.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n      }\n    }\n  }\n\n  _calcSpace(columns, index) {\n    var width = 0;\n\n    for (let i = 0; i < index; i++) {\n      if (columns[i].visible) {\n        width += columns[i].getWidth();\n      }\n    }\n\n    return width;\n  }\n\n}\n\nFrozenColumns.moduleName = \"frozenColumns\";\n\nclass FrozenRows extends Module {\n  constructor(table) {\n    super(table);\n    this.topElement = document.createElement(\"div\");\n    this.rows = []; //register component functions\n\n    this.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\n  }\n\n  initialize() {\n    this.rows = [];\n    this.topElement.classList.add(\"tabulator-frozen-rows-holder\"); // this.table.columnManager.element.append(this.topElement);\n\n    this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n    this.subscribe(\"row-deleting\", this.detachRow.bind(this));\n    this.registerDisplayHandler(this.getRows.bind(this), 10);\n  }\n\n  isRowFrozen(row) {\n    var index = this.rows.indexOf(row);\n    return index > -1;\n  }\n\n  isFrozen() {\n    return !!this.rows.length;\n  } //filter frozen rows out of display data\n\n\n  getRows(rows) {\n    var output = rows.slice(0);\n    this.rows.forEach(function (row) {\n      var index = output.indexOf(row);\n\n      if (index > -1) {\n        output.splice(index, 1);\n      }\n    });\n    return output;\n  }\n\n  freezeRow(row) {\n    if (!row.modules.frozen) {\n      row.modules.frozen = true;\n      this.topElement.appendChild(row.getElement());\n      row.initialize();\n      row.normalizeHeight();\n      this.table.rowManager.adjustTableSize();\n      this.rows.push(row);\n      this.refreshData(false, \"display\");\n      this.styleRows();\n    } else {\n      console.warn(\"Freeze Error - Row is already frozen\");\n    }\n  }\n\n  unfreezeRow(row) {\n    var index = this.rows.indexOf(row);\n\n    if (row.modules.frozen) {\n      row.modules.frozen = false;\n      this.detachRow(row);\n      this.table.rowManager.adjustTableSize();\n      this.refreshData(false, \"display\");\n\n      if (this.rows.length) {\n        this.styleRows();\n      }\n    } else {\n      console.warn(\"Freeze Error - Row is already unfrozen\");\n    }\n  }\n\n  detachRow(row) {\n    var index = this.rows.indexOf(row);\n\n    if (index > -1) {\n      var rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n\n      this.rows.splice(index, 1);\n    }\n  }\n\n  styleRows(row) {\n    this.rows.forEach((row, i) => {\n      this.table.rowManager.styleRow(row, i);\n    });\n  }\n\n}\n\nFrozenRows.moduleName = \"frozenRows\"; //public group object\n\nclass GroupComponent {\n  constructor(group) {\n    this._group = group;\n    this.type = \"GroupComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._group.table.componentFunctionBinder.handle(\"row\", target._group, name);\n        }\n      }\n    });\n  }\n\n  getKey() {\n    return this._group.key;\n  }\n\n  getField() {\n    return this._group.field;\n  }\n\n  getElement() {\n    return this._group.element;\n  }\n\n  getRows() {\n    return this._group.getRows(true);\n  }\n\n  getSubGroups() {\n    return this._group.getSubGroups(true);\n  }\n\n  getParentGroup() {\n    return this._group.parent ? this._group.parent.getComponent() : false;\n  }\n\n  isVisible() {\n    return this._group.visible;\n  }\n\n  show() {\n    this._group.show();\n  }\n\n  hide() {\n    this._group.hide();\n  }\n\n  toggle() {\n    this._group.toggleVisibility();\n  }\n\n  _getSelf() {\n    return this._group;\n  }\n\n  getTable() {\n    return this._group.groupManager.table;\n  }\n\n} //Group functions\n\n\nclass Group {\n  constructor(groupManager, parent, level, key, field, generator, oldGroup) {\n    this.groupManager = groupManager;\n    this.parent = parent;\n    this.key = key;\n    this.level = level;\n    this.field = field;\n    this.hasSubGroups = level < groupManager.groupIDLookups.length - 1;\n    this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\n    this.type = \"group\"; //type of element\n\n    this.old = oldGroup;\n    this.rows = [];\n    this.groups = [];\n    this.groupList = [];\n    this.generator = generator;\n    this.elementContents = false;\n    this.height = 0;\n    this.outerHeight = 0;\n    this.initialized = false;\n    this.calcs = {};\n    this.initialized = false;\n    this.modules = {};\n    this.arrowElement = false;\n    this.visible = oldGroup ? oldGroup.visible : typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0];\n    this.component = null;\n    this.createElements();\n    this.addBindings();\n    this.createValueGroups();\n  }\n\n  wipe() {\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        group.wipe();\n      });\n    } else {\n      this.rows.forEach(row => {\n        if (row.modules) {\n          delete row.modules.group;\n        }\n      });\n    }\n\n    this.element = false;\n    this.arrowElement = false;\n    this.elementContents = false;\n  }\n\n  createElements() {\n    var arrow = document.createElement(\"div\");\n    arrow.classList.add(\"tabulator-arrow\");\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-row\");\n    this.element.classList.add(\"tabulator-group\");\n    this.element.classList.add(\"tabulator-group-level-\" + this.level);\n    this.element.setAttribute(\"role\", \"rowgroup\");\n    this.arrowElement = document.createElement(\"div\");\n    this.arrowElement.classList.add(\"tabulator-group-toggle\");\n    this.arrowElement.appendChild(arrow); //setup movable rows\n\n    if (this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")) {\n      this.groupManager.table.modules.moveRow.initializeGroupHeader(this);\n    }\n  }\n\n  createValueGroups() {\n    var level = this.level + 1;\n\n    if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n      this.groupManager.allowedValues[level].forEach(value => {\n        this._createGroup(value, level);\n      });\n    }\n  }\n\n  addBindings() {\n    var dblTap, tapHold, tap, toggleElement;\n\n    if ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")) {\n      this.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\n    }\n\n    if (this.groupManager.table.options.groupTap) {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          this.groupManager.table.options.groupTap(e, this.getComponent());\n        }\n\n        tap = false;\n      });\n    }\n\n    if (this.groupManager.table.options.groupDblTap) {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          this.groupManager.table.options.groupDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n\n    if (this.groupManager.table.options.groupTapHold) {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(() => {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          this.groupManager.table.options.groupTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n\n    if (this.groupManager.table.options.groupToggleElement) {\n      toggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\n      toggleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.toggleVisibility();\n      });\n    }\n  }\n\n  _createGroup(groupID, level) {\n    var groupKey = level + \"_\" + groupID;\n    var group = new Group(this.groupManager, this, level, groupID, this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n\n  _addRowToGroup(row) {\n    var level = this.level + 1;\n\n    if (this.hasSubGroups) {\n      var groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\n          groupKey = level + \"_\" + groupID;\n\n      if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n        if (this.groups[groupKey]) {\n          this.groups[groupKey].addRow(row);\n        }\n      } else {\n        if (!this.groups[groupKey]) {\n          this._createGroup(groupID, level);\n        }\n\n        this.groups[groupKey].addRow(row);\n      }\n    }\n  }\n\n  _addRow(row) {\n    this.rows.push(row);\n    row.modules.group = this;\n  }\n\n  insertRow(row, to, after) {\n    var data = this.conformRowData({});\n    row.updateData(data);\n    var toIndex = this.rows.indexOf(to);\n\n    if (toIndex > -1) {\n      if (after) {\n        this.rows.splice(toIndex + 1, 0, row);\n      } else {\n        this.rows.splice(toIndex, 0, row);\n      }\n    } else {\n      if (after) {\n        this.rows.push(row);\n      } else {\n        this.rows.unshift(row);\n      }\n    }\n\n    row.modules.group = this;\n    this.generateGroupHeaderContents();\n\n    if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n      this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n    }\n\n    this.groupManager.updateGroupRows(true);\n  }\n\n  scrollHeader(left) {\n    this.arrowElement.style.marginLeft = left;\n    this.groupList.forEach(function (child) {\n      child.scrollHeader(left);\n    });\n  }\n\n  getRowIndex(row) {} //update row data to match grouping contraints\n\n\n  conformRowData(data) {\n    if (this.field) {\n      data[this.field] = this.key;\n    } else {\n      console.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\n    }\n\n    if (this.parent) {\n      data = this.parent.conformRowData(data);\n    }\n\n    return data;\n  }\n\n  removeRow(row) {\n    var index = this.rows.indexOf(row);\n    var el = row.getElement();\n\n    if (index > -1) {\n      this.rows.splice(index, 1);\n    }\n\n    if (!this.groupManager.table.options.groupValues && !this.rows.length) {\n      if (this.parent) {\n        this.parent.removeGroup(this);\n      } else {\n        this.groupManager.removeGroup(this);\n      }\n\n      this.groupManager.updateGroupRows(true);\n    } else {\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n\n      this.generateGroupHeaderContents();\n\n      if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n        this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n      }\n    }\n  }\n\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n        index;\n\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n\n      if (!this.groupList.length) {\n        if (this.parent) {\n          this.parent.removeGroup(this);\n        } else {\n          this.groupManager.removeGroup(this);\n        }\n      }\n    }\n  }\n\n  getHeadersAndRows(noCalc) {\n    var output = [];\n    output.push(this);\n\n    this._visSet();\n\n    if (this.visible) {\n      if (this.groupList.length) {\n        this.groupList.forEach(function (group) {\n          output = output.concat(group.getHeadersAndRows(noCalc));\n        });\n      } else {\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n          if (this.calcs.top) {\n            this.calcs.top.detachElement();\n            this.calcs.top.deleteCells();\n          }\n\n          this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n          output.push(this.calcs.top);\n        }\n\n        output = output.concat(this.rows);\n\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n          if (this.calcs.bottom) {\n            this.calcs.bottom.detachElement();\n            this.calcs.bottom.deleteCells();\n          }\n\n          this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n          output.push(this.calcs.bottom);\n        }\n      }\n    } else {\n      if (!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\") {\n        if (this.groupManager.table.modExists(\"columnCalcs\")) {\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n            if (this.calcs.top) {\n              this.calcs.top.detachElement();\n              this.calcs.top.deleteCells();\n            }\n\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n              output.push(this.calcs.top);\n            }\n          }\n\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n            if (this.calcs.bottom) {\n              this.calcs.bottom.detachElement();\n              this.calcs.bottom.deleteCells();\n            }\n\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n              output.push(this.calcs.bottom);\n            }\n          }\n        }\n      }\n    }\n\n    return output;\n  }\n\n  getData(visible, transform) {\n    var output = [];\n\n    this._visSet();\n\n    if (!visible || visible && this.visible) {\n      this.rows.forEach(row => {\n        output.push(row.getData(transform || \"data\"));\n      });\n    }\n\n    return output;\n  }\n\n  getRowCount() {\n    var count = 0;\n\n    if (this.groupList.length) {\n      this.groupList.forEach(group => {\n        count += group.getRowCount();\n      });\n    } else {\n      count = this.rows.length;\n    }\n\n    return count;\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  hide() {\n    this.visible = false;\n\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.remove(\"tabulator-group-visible\");\n\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            row.detachElement();\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          rowEl.parentNode.removeChild(rowEl);\n        });\n      }\n\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\n  }\n\n  show() {\n    this.visible = true;\n\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.add(\"tabulator-group-visible\");\n      var prev = this.generateElement();\n\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            var rowEl = row.getElement();\n            prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n            row.initialize();\n            prev = rowEl;\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n          row.initialize();\n          prev = rowEl;\n        });\n      }\n\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\n  }\n\n  _visSet() {\n    var data = [];\n\n    if (typeof this.visible == \"function\") {\n      this.rows.forEach(function (row) {\n        data.push(row.getData());\n      });\n      this.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\n    }\n  }\n\n  getRowGroup(row) {\n    var match = false;\n\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        var result = group.getRowGroup(row);\n\n        if (result) {\n          match = result;\n        }\n      });\n    } else {\n      if (this.rows.find(function (item) {\n        return item === row;\n      })) {\n        match = this;\n      }\n    }\n\n    return match;\n  }\n\n  getSubGroups(component) {\n    var output = [];\n    this.groupList.forEach(function (child) {\n      output.push(component ? child.getComponent() : child);\n    });\n    return output;\n  }\n\n  getRows(compoment) {\n    var output = [];\n    this.rows.forEach(function (row) {\n      output.push(compoment ? row.getComponent() : row);\n    });\n    return output;\n  }\n\n  generateGroupHeaderContents() {\n    var data = [];\n    this.rows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    this.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\n\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n    if (typeof this.elementContents === \"string\") {\n      this.element.innerHTML = this.elementContents;\n    } else {\n      this.element.appendChild(this.elementContents);\n    }\n\n    this.element.insertBefore(this.arrowElement, this.element.firstChild);\n  }\n\n  getPath() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    path.unshift(this.key);\n\n    if (this.parent) {\n      this.parent.getPath(path);\n    }\n\n    return path;\n  } ////////////// Standard Row Functions //////////////\n\n\n  getElement() {\n    return this.elementContents ? this.element : this.generateElement();\n  }\n\n  generateElement() {\n    this.addBindings = false;\n\n    this._visSet();\n\n    if (this.visible) {\n      this.element.classList.add(\"tabulator-group-visible\");\n    } else {\n      this.element.classList.remove(\"tabulator-group-visible\");\n    }\n\n    for (var i = 0; i < this.element.childNodes.length; ++i) {\n      this.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\n    }\n\n    this.generateGroupHeaderContents(); // this.addBindings();\n\n    return this.element;\n  }\n\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  } //normalize the height of elements in the row\n\n\n  normalizeHeight() {\n    this.setHeight(this.element.clientHeight);\n  }\n\n  initialize(force) {\n    if (!this.initialized || force) {\n      this.normalizeHeight();\n      this.initialized = true;\n    }\n  }\n\n  reinitialize() {\n    this.initialized = false;\n    this.height = 0;\n\n    if (Helpers.elVisible(this.element)) {\n      this.initialize(true);\n    }\n  }\n\n  setHeight(height) {\n    if (this.height != height) {\n      this.height = height;\n      this.outerHeight = this.element.offsetHeight;\n    }\n  } //return rows outer height\n\n\n  getHeight() {\n    return this.outerHeight;\n  }\n\n  getGroup() {\n    return this;\n  }\n\n  reinitializeHeight() {}\n\n  calcHeight() {}\n\n  setCellHeight() {}\n\n  clearCellHeight() {}\n\n  deinitializeHeight() {} //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new GroupComponent(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nclass GroupRows extends Module {\n  constructor(table) {\n    super(table);\n    this.groupIDLookups = false; //enable table grouping and set field to group by\n\n    this.startOpen = [function () {\n      return false;\n    }]; //starting state of group\n\n    this.headerGenerator = [function () {\n      return \"\";\n    }];\n    this.groupList = []; //ordered list of groups\n\n    this.allowedValues = false;\n    this.groups = {}; //hold row groups\n\n    this.displayIndex = 0; //index in display pipeline\n\n    this.displayHandler = this.getRows.bind(this); //register table options\n\n    this.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\n\n    this.registerTableOption(\"groupStartOpen\", true); //starting state of group\n\n    this.registerTableOption(\"groupValues\", false);\n    this.registerTableOption(\"groupUpdateOnCellEdit\", false);\n    this.registerTableOption(\"groupHeader\", false); //header generation function\n\n    this.registerTableOption(\"groupHeaderPrint\", null);\n    this.registerTableOption(\"groupHeaderClipboard\", null);\n    this.registerTableOption(\"groupHeaderHtmlOutput\", null);\n    this.registerTableOption(\"groupHeaderDownload\", null);\n    this.registerTableOption(\"groupToggleElement\", \"arrow\");\n    this.registerTableOption(\"groupClosedShowCalcs\", false); //register table functions\n\n    this.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\n    this.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\n    this.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\n    this.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\n    this.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\n    this.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\n  } //initialize group configuration\n\n\n  initialize() {\n    if (this.table.options.groupBy) {\n      this.configureGroupSetup();\n\n      if (this.table.options.groupUpdateOnCellEdit) {\n        this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n        this.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\n      }\n\n      this.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\n      this.subscribe(\"rows-wipe\", this.wipe.bind(this));\n      this.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-moving\", this.rowMoving.bind(this));\n      this.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\n      this.subscribe(\"rows-sample\", this.rowSample.bind(this));\n      this.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\n      this.registerDisplayHandler(this.displayHandler, 20);\n      this.initialized = true;\n    }\n  }\n\n  configureGroupSetup() {\n    if (this.table.options.groupBy) {\n      var groupBy = this.table.options.groupBy,\n          startOpen = this.table.options.groupStartOpen,\n          groupHeader = this.table.options.groupHeader;\n      this.allowedValues = this.table.options.groupValues;\n\n      if (Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length) {\n        console.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\n      }\n\n      this.headerGenerator = [function () {\n        return \"\";\n      }];\n      this.startOpen = [function () {\n        return false;\n      }]; //starting state of group\n\n      this.langBind(\"groups|item\", (langValue, lang) => {\n        this.headerGenerator[0] = (value, count, data) => {\n          //header layout function\n          return (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + (count === 1 ? langValue : lang.groups.items) + \")</span>\";\n        };\n      });\n      this.groupIDLookups = [];\n\n      if (Array.isArray(groupBy) || groupBy) {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\") {\n          this.table.modules.columnCalcs.removeCalcs();\n        }\n      } else {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\") {\n          var cols = this.table.columnManager.getRealColumns();\n          cols.forEach(col => {\n            if (col.definition.topCalc) {\n              this.table.modules.columnCalcs.initializeTopRow();\n            }\n\n            if (col.definition.bottomCalc) {\n              this.table.modules.columnCalcs.initializeBottomRow();\n            }\n          });\n        }\n      }\n\n      if (!Array.isArray(groupBy)) {\n        groupBy = [groupBy];\n      }\n\n      groupBy.forEach((group, i) => {\n        var lookupFunc, column;\n\n        if (typeof group == \"function\") {\n          lookupFunc = group;\n        } else {\n          column = this.table.columnManager.getColumnByField(group);\n\n          if (column) {\n            lookupFunc = function (data) {\n              return column.getFieldValue(data);\n            };\n          } else {\n            lookupFunc = function (data) {\n              return data[group];\n            };\n          }\n        }\n\n        this.groupIDLookups.push({\n          field: typeof group === \"function\" ? false : group,\n          func: lookupFunc,\n          values: this.allowedValues ? this.allowedValues[i] : false\n        });\n      });\n\n      if (startOpen) {\n        if (!Array.isArray(startOpen)) {\n          startOpen = [startOpen];\n        }\n\n        startOpen.forEach(level => {});\n        this.startOpen = startOpen;\n      }\n\n      if (groupHeader) {\n        this.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\n      }\n    }\n  }\n\n  rowSample(rows, prevValue) {\n    var group = this.getGroups(false)[0];\n    prevValue.push(group.getRows(false)[0]);\n    return prevValue;\n  }\n\n  virtualRenderFill() {\n    var el = this.table.rowManager.tableElement;\n    var rows = this.table.rowManager.getVisibleRows();\n    rows = rows.filter(row => {\n      return row.type !== \"group\";\n    });\n    el.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\"; // if(this.table.options.groupBy){\n    // \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\n    // \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    // \t}\n    // }\n  }\n\n  rowAddingIndex(row, index, top) {\n    this.assignRowToGroup(row);\n    var groupRows = row.modules.group.rows;\n\n    if (groupRows.length > 1) {\n      if (!index || index && groupRows.indexOf(index) == -1) {\n        if (top) {\n          if (groupRows[0] !== row) {\n            index = groupRows[0];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        } else {\n          if (groupRows[groupRows.length - 1] !== row) {\n            index = groupRows[groupRows.length - 1];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        }\n      } else {\n        this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n      }\n    }\n\n    return index;\n  }\n\n  trackChanges() {\n    this.dispatch(\"group-changed\");\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  setGroupBy(groups) {\n    this.table.options.groupBy = groups;\n\n    if (!this.initialized) {\n      this.initialize();\n    } else {\n      this.configureGroupSetup();\n    }\n\n    this.refreshData();\n    this.trackChanges();\n  }\n\n  setGroupValues(groupValues) {\n    this.table.options.groupValues = groupValues;\n    this.configureGroupSetup();\n    this.refreshData();\n    this.trackChanges();\n  }\n\n  setGroupStartOpen(values) {\n    this.table.options.groupStartOpen = values;\n    this.configureGroupSetup();\n\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n\n  setGroupHeader(values) {\n    this.table.options.groupHeader = values;\n    this.configureGroupSetup();\n\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n\n  userGetGroups(values) {\n    return this.getGroups(true);\n  } // get grouped table data in the same format as getData()\n\n\n  userGetGroupedData() {\n    return this.table.options.groupBy ? this.getGroupedData() : this.getData();\n  } ///////////////////////////////////////\n  ///////// Component Functions /////////\n  ///////////////////////////////////////\n\n\n  rowGetGroup(row) {\n    return row.modules.group ? row.modules.group.getComponent() : false;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  rowMoving(from, to, after) {\n    if (!after && to instanceof Group) {\n      to = this.table.rowManager.prevDisplayRow(from) || to;\n    }\n\n    var toGroup = to instanceof Group ? to : to.modules.group;\n    var fromGroup = from instanceof Group ? from : from.modules.group;\n\n    if (toGroup === fromGroup) {\n      this.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\n    } else {\n      if (fromGroup) {\n        fromGroup.removeRow(from);\n      }\n\n      toGroup.insertRow(from, to, after);\n    }\n  }\n\n  rowDeleting(row) {\n    //remove from group\n    if (row.modules.group) {\n      row.modules.group.removeRow(row);\n    }\n  }\n\n  rowsUpdated(row) {\n    this.updateGroupRows(true);\n  }\n\n  cellUpdated(cell) {\n    this.reassignRowToGroup(cell.row);\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  } //return appropriate rows with group headers\n\n\n  getRows(rows) {\n    if (this.table.options.groupBy && this.groupIDLookups.length) {\n      this.dispatchExternal(\"dataGrouping\");\n      this.generateGroups(rows);\n\n      if (this.subscribedExternal(\"dataGrouped\")) {\n        this.dispatchExternal(\"dataGrouped\", this.getGroups(true));\n      }\n\n      return this.updateGroupRows();\n    } else {\n      return rows.slice(0);\n    }\n  }\n\n  getGroups(component) {\n    var groupComponents = [];\n    this.groupList.forEach(function (group) {\n      groupComponents.push(component ? group.getComponent() : group);\n    });\n    return groupComponents;\n  }\n\n  getChildGroups(group) {\n    var groupComponents = [];\n\n    if (!group) {\n      group = this;\n    }\n\n    group.groupList.forEach(child => {\n      if (child.groupList.length) {\n        groupComponents = groupComponents.concat(this.getChildGroups(child));\n      } else {\n        groupComponents.push(child);\n      }\n    });\n    return groupComponents;\n  }\n\n  wipe() {\n    this.groupList.forEach(function (group) {\n      group.wipe();\n    });\n  }\n\n  pullGroupListData(groupList) {\n    var groupListData = [];\n    groupList.forEach(group => {\n      var groupHeader = {};\n      groupHeader.level = 0;\n      groupHeader.rowCount = 0;\n      groupHeader.headerContent = \"\";\n      var childData = [];\n\n      if (group.hasSubGroups) {\n        childData = this.pullGroupListData(group.groupList);\n        groupHeader.level = group.level;\n        groupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\n\n        groupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\n        groupListData.push(groupHeader);\n        groupListData = groupListData.concat(childData);\n      } else {\n        groupHeader.level = group.level;\n        groupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\n        groupHeader.rowCount = group.getRows().length;\n        groupListData.push(groupHeader);\n        group.getRows().forEach(row => {\n          groupListData.push(row.getData(\"data\"));\n        });\n      }\n    });\n    return groupListData;\n  }\n\n  getGroupedData() {\n    return this.pullGroupListData(this.groupList);\n  }\n\n  getRowGroup(row) {\n    var match = false;\n    this.groupList.forEach(group => {\n      var result = group.getRowGroup(row);\n\n      if (result) {\n        match = result;\n      }\n    });\n    return match;\n  }\n\n  countGroups() {\n    return this.groupList.length;\n  }\n\n  generateGroups(rows) {\n    var oldGroups = this.groups;\n    this.groups = {};\n    this.groupList = [];\n\n    if (this.allowedValues && this.allowedValues[0]) {\n      this.allowedValues[0].forEach(value => {\n        this.createGroup(value, 0, oldGroups);\n      });\n      rows.forEach(row => {\n        this.assignRowToExistingGroup(row, oldGroups);\n      });\n    } else {\n      rows.forEach(row => {\n        this.assignRowToGroup(row, oldGroups);\n      });\n    }\n  }\n\n  createGroup(groupID, level, oldGroups) {\n    var groupKey = level + \"_\" + groupID,\n        group;\n    oldGroups = oldGroups || [];\n    group = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n\n  assignRowToExistingGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n        groupKey = \"0_\" + groupID;\n\n    if (this.groups[groupKey]) {\n      this.groups[groupKey].addRow(row);\n    }\n  }\n\n  assignRowToGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n        newGroupNeeded = !this.groups[\"0_\" + groupID];\n\n    if (newGroupNeeded) {\n      this.createGroup(groupID, 0, oldGroups);\n    }\n\n    this.groups[\"0_\" + groupID].addRow(row);\n    return !newGroupNeeded;\n  }\n\n  reassignRowToGroup(row) {\n    if (row.type === \"row\") {\n      var oldRowGroup = row.modules.group,\n          oldGroupPath = oldRowGroup.getPath(),\n          newGroupPath = this.getExpectedPath(row),\n          samePath = true; // figure out if new group path is the same as old group path\n\n      var samePath = oldGroupPath.length == newGroupPath.length && oldGroupPath.every((element, index) => {\n        return element === newGroupPath[index];\n      }); // refresh if they new path and old path aren't the same (aka the row's groupings have changed)\n\n      if (!samePath) {\n        oldRowGroup.removeRow(row);\n        this.assignRowToGroup(row, this.groups);\n        this.refreshData(true);\n      }\n    }\n  }\n\n  getExpectedPath(row) {\n    var groupPath = [],\n        rowData = row.getData();\n    this.groupIDLookups.forEach(groupId => {\n      groupPath.push(groupId.func(rowData));\n    });\n    return groupPath;\n  }\n\n  updateGroupRows(force) {\n    var output = [];\n    this.groupList.forEach(group => {\n      output = output.concat(group.getHeadersAndRows());\n    });\n\n    if (force) {\n      this.refreshData(true, this.displayHandler);\n    }\n\n    return output;\n  }\n\n  scrollHeaders(left) {\n    if (this.table.options.renderHorizontal === \"virtual\") {\n      left -= this.table.columnManager.renderer.vDomPadLeft;\n    }\n\n    left = left + \"px\";\n    this.groupList.forEach(group => {\n      group.scrollHeader(left);\n    });\n  }\n\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n        index;\n\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n    }\n  }\n\n}\n\nGroupRows.moduleName = \"groupRows\";\nvar defaultUndoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.oldValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    action.component.deleteActual();\n  },\n  rowDelete: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n\n    this._rebindRow(action.component, newRow);\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nvar defaultRedoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.newValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n\n    this._rebindRow(action.component, newRow);\n  },\n  rowDelete: function (action) {\n    action.component.deleteActual();\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\n\nclass History extends Module {\n  constructor(table) {\n    super(table);\n    this.history = [];\n    this.index = -1;\n    this.registerTableOption(\"history\", false); //enable edit history\n  }\n\n  initialize() {\n    if (this.table.options.history) {\n      this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n      this.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\n      this.subscribe(\"row-delete\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clear.bind(this));\n      this.subscribe(\"row-added\", this.rowAdded.bind(this));\n      this.subscribe(\"row-move\", this.rowMoved.bind(this));\n    }\n\n    this.registerTableFunction(\"undo\", this.undo.bind(this));\n    this.registerTableFunction(\"redo\", this.redo.bind(this));\n    this.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\n    this.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\n    this.registerTableFunction(\"clearHistory\", this.clear.bind(this));\n  }\n\n  rowMoved(from, to, after) {\n    this.action(\"rowMove\", from, {\n      posFrom: this.table.rowManager.getRowPosition(from),\n      posTo: this.table.rowManager.getRowPosition(to),\n      to: to,\n      after: after\n    });\n  }\n\n  rowAdded(row, data, pos, index) {\n    this.action(\"rowAdd\", row, {\n      data: data,\n      pos: pos,\n      index: index\n    });\n  }\n\n  rowDeleted(row) {\n    var index, rows;\n\n    if (this.table.options.groupBy) {\n      rows = row.getComponent().getGroup().rows;\n      index = rows.indexOf(row);\n\n      if (index) {\n        index = rows[index - 1];\n      }\n    } else {\n      index = row.table.rowManager.getRowIndex(row);\n\n      if (index) {\n        index = row.table.rowManager.rows[index - 1];\n      }\n    }\n\n    this.action(\"rowDelete\", row, {\n      data: row.getData(),\n      pos: !index,\n      index: index\n    });\n  }\n\n  cellUpdated(cell) {\n    this.action(\"cellEdit\", cell, {\n      oldValue: cell.oldValue,\n      newValue: cell.value\n    });\n  }\n\n  clear() {\n    this.history = [];\n    this.index = -1;\n  }\n\n  action(type, component, data) {\n    this.history = this.history.slice(0, this.index + 1);\n    this.history.push({\n      type: type,\n      component: component,\n      data: data\n    });\n    this.index++;\n  }\n\n  getHistoryUndoSize() {\n    return this.index + 1;\n  }\n\n  getHistoryRedoSize() {\n    return this.history.length - (this.index + 1);\n  }\n\n  clearComponentHistory(component) {\n    var index = this.history.findIndex(function (item) {\n      return item.component === component;\n    });\n\n    if (index > -1) {\n      this.history.splice(index, 1);\n\n      if (index <= this.index) {\n        this.index--;\n      }\n\n      this.clearComponentHistory(component);\n    }\n  }\n\n  undo() {\n    if (this.index > -1) {\n      let action = this.history[this.index];\n      History.undoers[action.type].call(this, action);\n      this.index--;\n      this.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Undo Error - No more history to undo\");\n      return false;\n    }\n  }\n\n  redo() {\n    if (this.history.length - 1 > this.index) {\n      this.index++;\n      let action = this.history[this.index];\n      History.redoers[action.type].call(this, action);\n      this.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Redo Error - No more history to redo\");\n      return false;\n    }\n  } //rebind rows to new element after deletion\n\n\n  _rebindRow(oldRow, newRow) {\n    this.history.forEach(function (action) {\n      if (action.component instanceof Row) {\n        if (action.component === oldRow) {\n          action.component = newRow;\n        }\n      } else if (action.component instanceof Cell) {\n        if (action.component.row === oldRow) {\n          var field = action.component.column.getField();\n\n          if (field) {\n            action.component = newRow.getCell(field);\n          }\n        }\n      }\n    });\n  }\n\n}\n\nHistory.moduleName = \"history\"; //load defaults\n\nHistory.undoers = defaultUndoers;\nHistory.redoers = defaultRedoers;\n\nclass HtmlTableImport extends Module {\n  constructor(table) {\n    super(table);\n    this.fieldIndex = [];\n    this.hasIndex = false;\n  }\n\n  initialize() {\n    this.tableElementCheck();\n  }\n\n  tableElementCheck() {\n    if (this.table.originalElement && this.table.originalElement.tagName === \"TABLE\") {\n      this.parseTable();\n    }\n  }\n\n  parseTable() {\n    var element = this.table.originalElement,\n        options = this.table.options,\n        columns = options.columns,\n        headers = element.getElementsByTagName(\"th\"),\n        rows = element.getElementsByTagName(\"tbody\")[0],\n        data = [];\n    this.hasIndex = false;\n    this.dispatchExternal(\"htmlImporting\");\n    rows = rows ? rows.getElementsByTagName(\"tr\") : []; //check for Tabulator inline options\n\n    this._extractOptions(element, options);\n\n    if (headers.length) {\n      this._extractHeaders(headers, rows);\n    } else {\n      this._generateBlankHeaders(headers, rows);\n    } //iterate through table rows and build data set\n\n\n    for (var index = 0; index < rows.length; index++) {\n      var row = rows[index],\n          cells = row.getElementsByTagName(\"td\"),\n          item = {}; //create index if the dont exist in table\n\n      if (!this.hasIndex) {\n        item[options.index] = index;\n      }\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n\n        if (typeof this.fieldIndex[i] !== \"undefined\") {\n          item[this.fieldIndex[i]] = cell.innerHTML;\n        }\n      } //add row data to item\n\n\n      data.push(item);\n    }\n\n    options.data = data;\n    this.dispatchExternal(\"htmlImported\");\n  } //extract tabulator attribute options\n\n\n  _extractOptions(element, options, defaultOptions) {\n    var attributes = element.attributes;\n    var optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\n    var optionsList = {};\n    optionsArr.forEach(item => {\n      optionsList[item.toLowerCase()] = item;\n    });\n\n    for (var index in attributes) {\n      var attrib = attributes[index];\n      var name;\n\n      if (attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0) {\n        name = attrib.name.replace(\"tabulator-\", \"\");\n\n        if (typeof optionsList[name] !== \"undefined\") {\n          options[optionsList[name]] = this._attribValue(attrib.value);\n        }\n      }\n    }\n  } //get value of attribute\n\n\n  _attribValue(value) {\n    if (value === \"true\") {\n      return true;\n    }\n\n    if (value === \"false\") {\n      return false;\n    }\n\n    return value;\n  } //find column if it has already been defined\n\n\n  _findCol(title) {\n    var match = this.table.options.columns.find(column => {\n      return column.title === title;\n    });\n    return match || false;\n  } //extract column from headers\n\n\n  _extractHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n          exists = false,\n          col = this._findCol(header.textContent),\n          width;\n\n      if (col) {\n        exists = true;\n      } else {\n        col = {\n          title: header.textContent.trim()\n        };\n      }\n\n      if (!col.field) {\n        col.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\n      }\n\n      width = header.getAttribute(\"width\");\n\n      if (width && !col.width) {\n        col.width = width;\n      } //check for Tabulator inline options\n\n\n      this._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\n\n      this.fieldIndex[index] = col.field;\n\n      if (col.field == this.table.options.index) {\n        this.hasIndex = true;\n      }\n\n      if (!exists) {\n        this.table.options.columns.push(col);\n      }\n    }\n  } //generate blank headers\n\n\n  _generateBlankHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n          col = {\n        title: \"\",\n        field: \"col\" + index\n      };\n      this.fieldIndex[index] = col.field;\n      var width = header.getAttribute(\"width\");\n\n      if (width) {\n        col.width = width;\n      }\n\n      this.table.options.columns.push(col);\n    }\n  }\n\n}\n\nHtmlTableImport.moduleName = \"htmlTableImport\";\n\nclass Interaction extends Module {\n  constructor(table) {\n    super(table);\n    this.eventMap = {\n      //row events\n      rowClick: \"row-click\",\n      rowDblClick: \"row-dblclick\",\n      rowContext: \"row-contextmenu\",\n      rowMouseEnter: \"row-mouseenter\",\n      rowMouseLeave: \"row-mouseleave\",\n      rowMouseOver: \"row-mouseover\",\n      rowMouseOut: \"row-mouseout\",\n      rowMouseMove: \"row-mousemove\",\n      rowTap: \"row\",\n      rowDblTap: \"row\",\n      rowTapHold: \"row\",\n      //cell events\n      cellClick: \"cell-click\",\n      cellDblClick: \"cell-dblclick\",\n      cellContext: \"cell-contextmenu\",\n      cellMouseEnter: \"cell-mouseenter\",\n      cellMouseLeave: \"cell-mouseleave\",\n      cellMouseOver: \"cell-mouseover\",\n      cellMouseOut: \"cell-mouseout\",\n      cellMouseMove: \"cell-mousemove\",\n      cellTap: \"cell\",\n      cellDblTap: \"cell\",\n      cellTapHold: \"cell\",\n      //column header events\n      headerClick: \"column-click\",\n      headerDblClick: \"column-dblclick\",\n      headerContext: \"column-contextmenu\",\n      headerMouseEnter: \"column-mouseenter\",\n      headerMouseLeave: \"column-mouseleave\",\n      headerMouseOver: \"column-mouseover\",\n      headerMouseOut: \"column-mouseout\",\n      headerMouseMove: \"column-mousemove\",\n      headerTap: \"column\",\n      headerDblTap: \"column\",\n      headerTapHold: \"column\",\n      //group header\n      groupClick: \"group-click\",\n      groupDblClick: \"group-dblclick\",\n      groupContext: \"group-contextmenu\",\n      groupMouseEnter: \"group-mouseenter\",\n      groupMouseLeave: \"group-mouseleave\",\n      groupMouseOver: \"group-mouseover\",\n      groupMouseOut: \"group-mouseout\",\n      groupMouseMove: \"group-mousemove\",\n      groupTap: \"group\",\n      groupDblTap: \"group\",\n      groupTapHold: \"group\"\n    };\n    this.subscribers = {};\n    this.touchSubscribers = {};\n    this.columnSubscribers = {};\n    this.touchWatchers = {\n      row: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      cell: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      column: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      }\n    };\n    this.registerColumnOption(\"headerClick\");\n    this.registerColumnOption(\"headerDblClick\");\n    this.registerColumnOption(\"headerContext\");\n    this.registerColumnOption(\"headerMouseEnter\");\n    this.registerColumnOption(\"headerMouseLeave\");\n    this.registerColumnOption(\"headerMouseOver\");\n    this.registerColumnOption(\"headerMouseOut\");\n    this.registerColumnOption(\"headerMouseMove\");\n    this.registerColumnOption(\"headerTap\");\n    this.registerColumnOption(\"headerDblTap\");\n    this.registerColumnOption(\"headerTapHold\");\n    this.registerColumnOption(\"cellClick\");\n    this.registerColumnOption(\"cellDblClick\");\n    this.registerColumnOption(\"cellContext\");\n    this.registerColumnOption(\"cellMouseEnter\");\n    this.registerColumnOption(\"cellMouseLeave\");\n    this.registerColumnOption(\"cellMouseOver\");\n    this.registerColumnOption(\"cellMouseOut\");\n    this.registerColumnOption(\"cellMouseMove\");\n    this.registerColumnOption(\"cellTap\");\n    this.registerColumnOption(\"cellDblTap\");\n    this.registerColumnOption(\"cellTapHold\");\n  }\n\n  initialize() {\n    this.initializeExternalEvents();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this));\n  }\n\n  cellContentsSelectionFixer(e, cell) {\n    if (this.table.modExists(\"edit\")) {\n      if (this.table.modules.edit.currentCell === this) {\n        return; //prevent instant selection of editor content\n      }\n    }\n\n    e.preventDefault();\n\n    try {\n      if (document.selection) {\n        // IE\n        var range = document.body.createTextRange();\n        range.moveToElementText(this.element);\n        range.select();\n      } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(this.element);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    } catch (e) {}\n  }\n\n  initializeExternalEvents() {\n    for (let key in this.eventMap) {\n      this.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key));\n    }\n  }\n\n  subscriptionChanged(key, added) {\n    if (added) {\n      if (!this.subscribers[key]) {\n        if (this.eventMap[key].includes(\"-\")) {\n          this.subscribers[key] = this.handle.bind(this, key);\n          this.subscribe(this.eventMap[key], this.subscribers[key]);\n        } else {\n          this.subscribeTouchEvents(key);\n        }\n      }\n    } else {\n      if (this.eventMap[key].includes(\"-\")) {\n        if (this.subscribers[key] && !this.columnSubscribers[key] && !this.subscribedExternal(key)) {\n          this.unsubscribe(this.eventMap[key], this.subscribers[key]);\n          delete this.subscribers[key];\n        }\n      } else {\n        this.unsubscribeTouchEvents(key);\n      }\n    }\n  }\n\n  subscribeTouchEvents(key) {\n    var type = this.eventMap[key];\n\n    if (!this.touchSubscribers[type + \"-touchstart\"]) {\n      this.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\n      this.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\n      this.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n      this.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n    }\n\n    this.subscribers[key] = true;\n  }\n\n  unsubscribeTouchEvents(key) {\n    var notouch = true,\n        type = this.eventMap[key];\n\n    if (this.subscribers[key] && !this.subscribedExternal(key)) {\n      delete this.subscribers[key];\n\n      for (let i in this.eventMap) {\n        if (this.eventMap[i] === type) {\n          if (this.subscribers[i]) {\n            notouch = false;\n          }\n        }\n      }\n\n      if (notouch) {\n        this.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n        this.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n        delete this.touchSubscribers[type + \"-touchstart\"];\n        delete this.touchSubscribers[type + \"-touchend\"];\n      }\n    }\n  }\n\n  initializeColumn(column) {\n    var def = column.definition;\n\n    for (let key in this.eventMap) {\n      if (def[key]) {\n        this.subscriptionChanged(key, true);\n\n        if (!this.columnSubscribers[key]) {\n          this.columnSubscribers[key] = [];\n        }\n\n        this.columnSubscribers[key].push(column);\n      }\n    }\n  }\n\n  handle(action, e, component) {\n    this.dispatchEvent(action, e, component);\n  }\n\n  handleTouch(type, action, e, component) {\n    var watchers = this.touchWatchers[type];\n\n    if (type === \"column\") {\n      type = \"header\";\n    }\n\n    switch (action) {\n      case \"start\":\n        watchers.tap = true;\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = setTimeout(() => {\n          clearTimeout(watchers.tapHold);\n          watchers.tapHold = null;\n          watchers.tap = null;\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"TapHold\", e, component);\n        }, 1000);\n        break;\n\n      case \"end\":\n        if (watchers.tap) {\n          watchers.tap = null;\n          this.dispatchEvent(type + \"Tap\", e, component);\n        }\n\n        if (watchers.tapDbl) {\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"DblTap\", e, component);\n        } else {\n          watchers.tapDbl = setTimeout(() => {\n            clearTimeout(watchers.tapDbl);\n            watchers.tapDbl = null;\n          }, 300);\n        }\n\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = null;\n        break;\n    }\n  }\n\n  dispatchEvent(action, e, component) {\n    var componentObj = component.getComponent(),\n        callback;\n\n    if (this.columnSubscribers[action]) {\n      if (component instanceof Cell) {\n        callback = component.column.definition[action];\n      } else if (component instanceof Column$1) {\n        callback = component.definition[action];\n      }\n\n      if (callback) {\n        callback(e, componentObj);\n      }\n    }\n\n    this.dispatchExternal(action, e, componentObj);\n  }\n\n}\n\nInteraction.moduleName = \"interaction\";\nvar defaultBindings = {\n  navPrev: \"shift + 9\",\n  navNext: 9,\n  navUp: 38,\n  navDown: 40,\n  scrollPageUp: 33,\n  scrollPageDown: 34,\n  scrollToStart: 36,\n  scrollToEnd: 35,\n  undo: \"ctrl + 90\",\n  redo: \"ctrl + 89\",\n  copyToClipboard: \"ctrl + 67\"\n};\nvar defaultActions = {\n  keyBlock: function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n  },\n  scrollPageUp: function (e) {\n    var rowManager = this.table.rowManager,\n        newPos = rowManager.scrollTop - rowManager.element.clientHeight,\n        scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      if (newPos >= 0) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n      }\n    }\n\n    this.table.element.focus();\n  },\n  scrollPageDown: function (e) {\n    var rowManager = this.table.rowManager,\n        newPos = rowManager.scrollTop + rowManager.element.clientHeight,\n        scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      if (newPos <= scrollMax) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n      }\n    }\n\n    this.table.element.focus();\n  },\n  scrollToStart: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n    }\n\n    this.table.element.focus();\n  },\n  scrollToEnd: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n    }\n\n    this.table.element.focus();\n  },\n  navPrev: function (e) {\n    this.dispatch(\"keybinding-nav-prev\", e);\n  },\n  navNext: function (e) {\n    this.dispatch(\"keybinding-nav-next\", e);\n  },\n  navLeft: function (e) {\n    this.dispatch(\"keybinding-nav-left\", e);\n  },\n  navRight: function (e) {\n    this.dispatch(\"keybinding-nav-right\", e);\n  },\n  navUp: function (e) {\n    this.dispatch(\"keybinding-nav-up\", e);\n  },\n  navDown: function (e) {\n    this.dispatch(\"keybinding-nav-down\", e);\n  },\n  undo: function (e) {\n    var cell = false;\n\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.undo();\n      }\n    }\n  },\n  redo: function (e) {\n    var cell = false;\n\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.redo();\n      }\n    }\n  },\n  copyToClipboard: function (e) {\n    if (!this.table.modules.edit.currentCell) {\n      if (this.table.modExists(\"clipboard\", true)) {\n        this.table.modules.clipboard.copy(false, true);\n      }\n    }\n  }\n};\n\nclass Keybindings extends Module {\n  constructor(table) {\n    super(table);\n    this.watchKeys = null;\n    this.pressedKeys = null;\n    this.keyupBinding = false;\n    this.keydownBinding = false;\n    this.registerTableOption(\"keybindings\", []); //array for keybindings\n\n    this.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\n  }\n\n  initialize() {\n    var bindings = this.table.options.keybindings,\n        mergedBindings = {};\n    this.watchKeys = {};\n    this.pressedKeys = [];\n\n    if (bindings !== false) {\n      for (let key in Keybindings.bindings) {\n        mergedBindings[key] = Keybindings.bindings[key];\n      }\n\n      if (Object.keys(bindings).length) {\n        for (let key in bindings) {\n          mergedBindings[key] = bindings[key];\n        }\n      }\n\n      this.mapBindings(mergedBindings);\n      this.bindEvents();\n    }\n\n    this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n  }\n\n  mapBindings(bindings) {\n    for (let key in bindings) {\n      if (Keybindings.actions[key]) {\n        if (bindings[key]) {\n          if (typeof bindings[key] !== \"object\") {\n            bindings[key] = [bindings[key]];\n          }\n\n          bindings[key].forEach(binding => {\n            this.mapBinding(key, binding);\n          });\n        }\n      } else {\n        console.warn(\"Key Binding Error - no such action:\", key);\n      }\n    }\n  }\n\n  mapBinding(action, symbolsList) {\n    var binding = {\n      action: Keybindings.actions[action],\n      keys: [],\n      ctrl: false,\n      shift: false,\n      meta: false\n    };\n    var symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\n    symbols.forEach(symbol => {\n      switch (symbol) {\n        case \"ctrl\":\n          binding.ctrl = true;\n          break;\n\n        case \"shift\":\n          binding.shift = true;\n          break;\n\n        case \"meta\":\n          binding.meta = true;\n          break;\n\n        default:\n          symbol = parseInt(symbol);\n          binding.keys.push(symbol);\n\n          if (!this.watchKeys[symbol]) {\n            this.watchKeys[symbol] = [];\n          }\n\n          this.watchKeys[symbol].push(binding);\n      }\n    });\n  }\n\n  bindEvents() {\n    var self = this;\n\n    this.keyupBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n\n      if (bindings) {\n        self.pressedKeys.push(code);\n        bindings.forEach(function (binding) {\n          self.checkBinding(e, binding);\n        });\n      }\n    };\n\n    this.keydownBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n\n      if (bindings) {\n        var index = self.pressedKeys.indexOf(code);\n\n        if (index > -1) {\n          self.pressedKeys.splice(index, 1);\n        }\n      }\n    };\n\n    this.table.element.addEventListener(\"keydown\", this.keyupBinding);\n    this.table.element.addEventListener(\"keyup\", this.keydownBinding);\n  }\n\n  clearBindings() {\n    if (this.keyupBinding) {\n      this.table.element.removeEventListener(\"keydown\", this.keyupBinding);\n    }\n\n    if (this.keydownBinding) {\n      this.table.element.removeEventListener(\"keyup\", this.keydownBinding);\n    }\n  }\n\n  checkBinding(e, binding) {\n    var match = true;\n\n    if (e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta) {\n      binding.keys.forEach(key => {\n        var index = this.pressedKeys.indexOf(key);\n\n        if (index == -1) {\n          match = false;\n        }\n      });\n\n      if (match) {\n        binding.action.call(this, e);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nKeybindings.moduleName = \"keybindings\"; //load defaults\n\nKeybindings.bindings = defaultBindings;\nKeybindings.actions = defaultActions;\n\nclass Menu extends Module {\n  constructor(table) {\n    super(table);\n    this.menuElements = [];\n    this.blurEvent = this.hideMenu.bind(this);\n    this.escEvent = this.escMenu.bind(this);\n    this.nestedMenuBlock = false;\n    this.positionReversedX = false;\n    this.registerTableOption(\"rowContextMenu\", false);\n    this.registerTableOption(\"rowClickMenu\", false);\n    this.registerTableOption(\"groupContextMenu\", false);\n    this.registerTableOption(\"groupClickMenu\", false);\n    this.registerColumnOption(\"headerContextMenu\");\n    this.registerColumnOption(\"headerMenu\");\n    this.registerColumnOption(\"contextMenu\");\n    this.registerColumnOption(\"clickMenu\");\n  }\n\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-init\", this.initializeRow.bind(this));\n  }\n\n  layoutCell(cell) {\n    if (cell.column.definition.contextMenu || cell.column.definition.clickMenu) {\n      this.initializeCell(cell);\n    }\n  }\n\n  initializeColumn(column) {\n    var def = column.definition;\n\n    if (def.headerContextMenu || def.headerClickMenu || def.headerMenu) {\n      this.initializeColumnHeader(column);\n    }\n  }\n\n  initializeColumnHeader(column) {\n    var headerMenuEl;\n\n    if (column.definition.headerContextMenu) {\n      column.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\n      this.tapHold(column, column.definition.headerContextMenu);\n    } // if(column.definition.headerClickMenu){\n    // \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\n    // }\n\n\n    if (column.definition.headerMenu) {\n      headerMenuEl = document.createElement(\"span\");\n      headerMenuEl.classList.add(\"tabulator-header-menu-button\");\n      headerMenuEl.innerHTML = \"&vellip;\";\n      headerMenuEl.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.LoadMenuEvent(column, column.definition.headerMenu, e);\n      });\n      column.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\n    }\n  }\n\n  LoadMenuEvent(component, menu, e) {\n    menu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu; // if(component instanceof Cell){\n    // \te.stopImmediatePropagation();\n    // }\n\n    this.loadMenu(e, component, menu);\n  }\n\n  tapHold(component, menu) {\n    var element = component.getElement(),\n        tapHold = null,\n        loaded = false;\n    element.addEventListener(\"touchstart\", e => {\n      clearTimeout(tapHold);\n      loaded = false;\n      tapHold = setTimeout(() => {\n        clearTimeout(tapHold);\n        tapHold = null;\n        loaded = true;\n        this.LoadMenuEvent(component, menu, e);\n      }, 1000);\n    }, {\n      passive: true\n    });\n    element.addEventListener(\"touchend\", e => {\n      clearTimeout(tapHold);\n      tapHold = null;\n\n      if (loaded) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  initializeCell(cell) {\n    if (cell.column.definition.contextMenu) {\n      cell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\n      this.tapHold(cell, cell.column.definition.contextMenu);\n    }\n\n    if (cell.column.definition.clickMenu) {\n      cell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\n    }\n  }\n\n  initializeRow(row) {\n    if (this.table.options.rowContextMenu) {\n      row.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\n      this.tapHold(row, this.table.options.rowContextMenu);\n    }\n\n    if (this.table.options.rowClickMenu) {\n      row.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\n    }\n  }\n\n  initializeGroup(group) {\n    if (this.table.options.groupContextMenu) {\n      group.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\n      this.tapHold(group, this.table.options.groupContextMenu);\n    }\n\n    if (this.table.options.groupClickMenu) {\n      group.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\n    }\n  }\n\n  loadMenu(e, component, menu, parentEl) {\n    var touch = !(e instanceof MouseEvent);\n    var menuEl = document.createElement(\"div\");\n    menuEl.classList.add(\"tabulator-menu\");\n\n    if (!touch) {\n      e.preventDefault();\n    } //abort if no menu set\n\n\n    if (!menu || !menu.length) {\n      return;\n    }\n\n    if (!parentEl) {\n      if (this.nestedMenuBlock) {\n        //abort if child menu already open\n        if (this.isOpen()) {\n          return;\n        }\n      } else {\n        this.nestedMenuBlock = setTimeout(() => {\n          this.nestedMenuBlock = false;\n        }, 100);\n      }\n\n      this.hideMenu();\n      this.menuElements = [];\n    }\n\n    menu.forEach(item => {\n      var itemEl = document.createElement(\"div\"),\n          label = item.label,\n          disabled = item.disabled;\n\n      if (item.separator) {\n        itemEl.classList.add(\"tabulator-menu-separator\");\n      } else {\n        itemEl.classList.add(\"tabulator-menu-item\");\n\n        if (typeof label == \"function\") {\n          label = label.call(this.table, component.getComponent());\n        }\n\n        if (label instanceof Node) {\n          itemEl.appendChild(label);\n        } else {\n          itemEl.innerHTML = label;\n        }\n\n        if (typeof disabled == \"function\") {\n          disabled = disabled.call(this.table, component.getComponent());\n        }\n\n        if (disabled) {\n          itemEl.classList.add(\"tabulator-menu-item-disabled\");\n          itemEl.addEventListener(\"click\", e => {\n            e.stopPropagation();\n          });\n        } else {\n          if (item.menu && item.menu.length) {\n            itemEl.addEventListener(\"click\", e => {\n              e.stopPropagation();\n              this.hideOldSubMenus(menuEl);\n              this.loadMenu(e, component, item.menu, itemEl);\n            });\n          } else {\n            if (item.action) {\n              itemEl.addEventListener(\"click\", e => {\n                item.action(e, component.getComponent());\n              });\n            }\n          }\n        }\n\n        if (item.menu && item.menu.length) {\n          itemEl.classList.add(\"tabulator-menu-item-submenu\");\n        }\n      }\n\n      menuEl.appendChild(itemEl);\n    });\n    menuEl.addEventListener(\"click\", e => {\n      this.hideMenu();\n    });\n    this.menuElements.push(menuEl);\n    this.positionMenu(menuEl, parentEl, touch, e);\n  }\n\n  hideOldSubMenus(menuEl) {\n    var index = this.menuElements.indexOf(menuEl);\n\n    if (index > -1) {\n      for (let i = this.menuElements.length - 1; i > index; i--) {\n        var el = this.menuElements[i];\n\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n\n        this.menuElements.pop();\n      }\n    }\n  }\n\n  positionMenu(element, parentEl, touch, e) {\n    var docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\n        x,\n        y,\n        parentOffset;\n\n    if (!parentEl) {\n      x = touch ? e.touches[0].pageX : e.pageX;\n      y = touch ? e.touches[0].pageY : e.pageY;\n      this.positionReversedX = false;\n    } else {\n      parentOffset = Helpers.elOffset(parentEl);\n      x = parentOffset.left + parentEl.offsetWidth;\n      y = parentOffset.top - 1;\n    }\n\n    element.style.top = y + \"px\";\n    element.style.left = x + \"px\";\n    setTimeout(() => {\n      this.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\n      document.body.addEventListener(\"click\", this.blurEvent);\n      document.body.addEventListener(\"contextmenu\", this.blurEvent);\n      window.addEventListener(\"resize\", this.blurEvent);\n      document.body.addEventListener(\"keydown\", this.escEvent);\n    }, 100);\n    document.body.appendChild(element); //move menu to start on bottom edge if it is too close to the edge of the screen\n\n    if (y + element.offsetHeight >= docHeight) {\n      element.style.top = \"\";\n\n      if (parentEl) {\n        element.style.bottom = docHeight - parentOffset.top - parentEl.offsetHeight - 1 + \"px\";\n      } else {\n        element.style.bottom = docHeight - y + \"px\";\n      }\n    } //move menu to start on right edge if it is too close to the edge of the screen\n\n\n    if (x + element.offsetWidth >= document.body.offsetWidth || this.positionReversedX) {\n      element.style.left = \"\";\n\n      if (parentEl) {\n        element.style.right = document.documentElement.offsetWidth - parentOffset.left + \"px\";\n      } else {\n        element.style.right = document.documentElement.offsetWidth - x + \"px\";\n      }\n\n      this.positionReversedX = true;\n    }\n  }\n\n  isOpen() {\n    return !!this.menuElements.length;\n  }\n\n  escMenu(e) {\n    if (e.keyCode == 27) {\n      this.hideMenu();\n    }\n  }\n\n  hideMenu() {\n    this.menuElements.forEach(menuEl => {\n      if (menuEl.parentNode) {\n        menuEl.parentNode.removeChild(menuEl);\n      }\n    });\n    document.body.removeEventListener(\"keydown\", this.escEvent);\n    document.body.removeEventListener(\"click\", this.blurEvent);\n    document.body.removeEventListener(\"contextmenu\", this.blurEvent);\n    window.removeEventListener(\"resize\", this.blurEvent);\n    this.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\n  }\n\n}\n\nMenu.moduleName = \"menu\";\n\nclass MoveColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating column header element\n\n    this.checkTimeout = false; //click check timeout holder\n\n    this.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\n\n    this.moving = false; //currently moving column\n\n    this.toCol = false; //destination column\n\n    this.toColAfter = false; //position of moving column relative to the desitnation column\n\n    this.startX = 0; //starting position within header element\n\n    this.autoScrollMargin = 40; //auto scroll on edge when within margin\n\n    this.autoScrollStep = 5; //auto scroll distance in pixels\n\n    this.autoScrollTimeout = false; //auto scroll timeout\n\n    this.touchMove = false;\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.registerTableOption(\"movableColumns\", false); //enable movable columns\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.classList.add(\"tabulator-col-placeholder\");\n    return el;\n  }\n\n  initialize() {\n    if (this.table.options.movableColumns) {\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    }\n  }\n\n  initializeColumn(column) {\n    var self = this,\n        config = {},\n        colEl;\n\n    if (!column.modules.frozen) {\n      colEl = column.getElement();\n\n      config.mousemove = function (e) {\n        if (column.parent === self.moving.parent) {\n          if ((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left + self.table.columnManager.element.scrollLeft > column.getWidth() / 2) {\n            if (self.toCol !== column || !self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\n              self.moveColumn(column, true);\n            }\n          } else {\n            if (self.toCol !== column || self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl);\n              self.moveColumn(column, false);\n            }\n          }\n        }\n      }.bind(self);\n\n      colEl.addEventListener(\"mousedown\", function (e) {\n        self.touchMove = false;\n\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, column);\n          }, self.checkPeriod);\n        }\n      });\n      colEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      self.bindTouchEvents(column);\n    }\n\n    column.modules.moveColumn = config;\n  }\n\n  bindTouchEvents(column) {\n    var colEl = column.getElement(),\n        startXMove = false,\n        //shifting center position of the cell\n    nextCol,\n        prevCol,\n        nextColWidth,\n        prevColWidth,\n        nextColWidthLast,\n        prevColWidthLast;\n    colEl.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextCol = column.nextColumn();\n        nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n        prevCol = column.prevColumn();\n        prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        nextColWidthLast = 0;\n        prevColWidthLast = 0;\n        startXMove = false;\n        this.startMove(e, column);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchmove\", e => {\n      var diff, moveToCol;\n\n      if (this.moving) {\n        this.moveHover(e);\n\n        if (!startXMove) {\n          startXMove = e.touches[0].pageX;\n        }\n\n        diff = e.touches[0].pageX - startXMove;\n\n        if (diff > 0) {\n          if (nextCol && diff - nextColWidthLast > nextColWidth) {\n            moveToCol = nextCol;\n\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\n              this.moveColumn(moveToCol, true);\n            }\n          }\n        } else {\n          if (prevCol && -diff - prevColWidthLast > prevColWidth) {\n            moveToCol = prevCol;\n\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\n              this.moveColumn(moveToCol, false);\n            }\n          }\n        }\n\n        if (moveToCol) {\n          nextCol = moveToCol.nextColumn();\n          nextColWidthLast = nextColWidth;\n          nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n          prevCol = moveToCol.prevColumn();\n          prevColWidthLast = prevColWidth;\n          prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        }\n      }\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n\n      if (this.moving) {\n        this.endMove(e);\n      }\n    });\n  }\n\n  startMove(e, column) {\n    var element = column.getElement(),\n        headerElement = this.table.columnManager.getElement(),\n        headersElement = this.table.columnManager.getHeadersElement();\n    this.moving = column;\n    this.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\n    this.table.element.classList.add(\"tabulator-block-select\"); //create placeholder\n\n    this.placeholderElement.style.width = column.getWidth() + \"px\";\n    this.placeholderElement.style.height = column.getHeight() + \"px\";\n    element.parentNode.insertBefore(this.placeholderElement, element);\n    element.parentNode.removeChild(element); //create hover element\n\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    this.table.columnManager.getElement().appendChild(this.hoverElement);\n    this.hoverElement.style.left = \"0\";\n    this.hoverElement.style.bottom = headerElement.clientHeight - headersElement.offsetHeight + \"px\";\n\n    if (!this.touchMove) {\n      this._bindMouseMove();\n\n      document.body.addEventListener(\"mousemove\", this.moveHover);\n      document.body.addEventListener(\"mouseup\", this.endMove);\n    }\n\n    this.moveHover(e);\n  }\n\n  _bindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n\n  _unbindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n\n  moveColumn(column, after) {\n    var movingCells = this.moving.getCells();\n    this.toCol = column;\n    this.toColAfter = after;\n\n    if (after) {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\n        }\n      });\n    } else {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\n        }\n      });\n    }\n  }\n\n  endMove(e) {\n    if (e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n\n      this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n      this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n\n      if (this.toCol) {\n        this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\n      }\n\n      this.moving = false;\n      this.toCol = false;\n      this.toColAfter = false;\n\n      if (!this.touchMove) {\n        document.body.removeEventListener(\"mousemove\", this.moveHover);\n        document.body.removeEventListener(\"mouseup\", this.endMove);\n      }\n    }\n  }\n\n  moveHover(e) {\n    var columnHolder = this.table.columnManager.getElement(),\n        scrollLeft = columnHolder.scrollLeft,\n        xPos = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left + scrollLeft,\n        scrollPos;\n    this.hoverElement.style.left = xPos - this.startX + \"px\";\n\n    if (xPos - scrollLeft < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.max(0, scrollLeft - 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n\n    if (scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.min(columnHolder.clientWidth, scrollLeft + 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n  }\n\n}\n\nMoveColumns.moduleName = \"moveColumn\";\n\nclass MoveRows extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating row header element\n\n    this.checkTimeout = false; //click check timeout holder\n\n    this.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\n\n    this.moving = false; //currently moving row\n\n    this.toRow = false; //destination row\n\n    this.toRowAfter = false; //position of moving row relative to the desitnation row\n\n    this.hasHandle = false; //row has handle instead of fully movable row\n\n    this.startY = 0; //starting Y position within header element\n\n    this.startX = 0; //starting X position within header element\n\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.tableRowDropEvent = false;\n    this.touchMove = false;\n    this.connection = false;\n    this.connectionSelectorsTables = false;\n    this.connectionSelectorsElements = false;\n    this.connectionElements = [];\n    this.connections = [];\n    this.connectedTable = false;\n    this.connectedRow = false;\n    this.registerTableOption(\"movableRows\", false); //enable movable rows\n\n    this.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\n\n    this.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\n\n    this.registerTableOption(\"movableRowsSender\", false);\n    this.registerTableOption(\"movableRowsReceiver\", \"insert\");\n    this.registerColumnOption(\"rowHandle\");\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.classList.add(\"tabulator-row-placeholder\");\n    return el;\n  }\n\n  initialize() {\n    if (this.table.options.movableRows) {\n      this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\n      this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\n      this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\n      this.subscribe(\"cell-init\", this.initializeCell.bind(this));\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n    }\n  }\n\n  initializeGroupHeader(group) {\n    var self = this,\n        config = {}; //inter table drag drop\n\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self); //same table drag drop\n\n\n    config.mousemove = function (e) {\n      if (e.pageY - Helpers.elOffset(group.element).top + self.table.rowManager.element.scrollTop > group.getHeight() / 2) {\n        if (self.toRow !== group || !self.toRowAfter) {\n          var rowEl = group.getElement();\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(group, true);\n        }\n      } else {\n        if (self.toRow !== group || self.toRowAfter) {\n          var rowEl = group.getElement();\n\n          if (rowEl.previousSibling) {\n            rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n            self.moveRow(group, false);\n          }\n        }\n      }\n    }.bind(self);\n\n    group.modules.moveRow = config;\n  }\n\n  initializeRow(row) {\n    var self = this,\n        config = {},\n        rowEl; //inter table drag drop\n\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self); //same table drag drop\n\n\n    config.mousemove = function (e) {\n      var rowEl = row.getElement();\n\n      if (e.pageY - Helpers.elOffset(rowEl).top + self.table.rowManager.element.scrollTop > row.getHeight() / 2) {\n        if (self.toRow !== row || !self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(row, true);\n        }\n      } else {\n        if (self.toRow !== row || self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n          self.moveRow(row, false);\n        }\n      }\n    }.bind(self);\n\n    if (!this.hasHandle) {\n      rowEl = row.getElement();\n      rowEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, row);\n          }, self.checkPeriod);\n        }\n      });\n      rowEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(row, row.getElement());\n    }\n\n    row.modules.moveRow = config;\n  }\n\n  initializeColumn(column) {\n    if (column.definition.rowHandle && this.table.options.movableRows !== false) {\n      this.hasHandle = true;\n    }\n  }\n\n  initializeCell(cell) {\n    if (cell.column.definition.rowHandle && this.table.options.movableRows !== false) {\n      var self = this,\n          cellEl = cell.getElement(true);\n      cellEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, cell.row);\n          }, self.checkPeriod);\n        }\n      });\n      cellEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(cell.row, cellEl);\n    }\n  }\n\n  bindTouchEvents(row, element) {\n    var startYMove = false,\n        //shifting center position of the cell\n    nextRow,\n        prevRow,\n        nextRowHeight,\n        prevRowHeight,\n        nextRowHeightLast,\n        prevRowHeightLast;\n    element.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextRow = row.nextRow();\n        nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n        prevRow = row.prevRow();\n        prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        nextRowHeightLast = 0;\n        prevRowHeightLast = 0;\n        startYMove = false;\n        this.startMove(e, row);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    this.moving, this.toRow, this.toRowAfter;\n    element.addEventListener(\"touchmove\", e => {\n      var diff, moveToRow;\n\n      if (this.moving) {\n        e.preventDefault();\n        this.moveHover(e);\n\n        if (!startYMove) {\n          startYMove = e.touches[0].pageY;\n        }\n\n        diff = e.touches[0].pageY - startYMove;\n\n        if (diff > 0) {\n          if (nextRow && diff - nextRowHeightLast > nextRowHeight) {\n            moveToRow = nextRow;\n\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\n              this.moveRow(moveToRow, true);\n            }\n          }\n        } else {\n          if (prevRow && -diff - prevRowHeightLast > prevRowHeight) {\n            moveToRow = prevRow;\n\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\n              this.moveRow(moveToRow, false);\n            }\n          }\n        }\n\n        if (moveToRow) {\n          nextRow = moveToRow.nextRow();\n          nextRowHeightLast = nextRowHeight;\n          nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n          prevRow = moveToRow.prevRow();\n          prevRowHeightLast = prevRowHeight;\n          prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        }\n      }\n    });\n    element.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n\n      if (this.moving) {\n        this.endMove(e);\n        this.touchMove = false;\n      }\n    });\n  }\n\n  _bindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n\n  _unbindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n\n  startMove(e, row) {\n    var element = row.getElement();\n    this.setStartPosition(e, row);\n    this.moving = row;\n    this.table.element.classList.add(\"tabulator-block-select\"); //create placeholder\n\n    this.placeholderElement.style.width = row.getWidth() + \"px\";\n    this.placeholderElement.style.height = row.getHeight() + \"px\";\n\n    if (!this.connection) {\n      element.parentNode.insertBefore(this.placeholderElement, element);\n      element.parentNode.removeChild(element);\n    } else {\n      this.table.element.classList.add(\"tabulator-movingrow-sending\");\n      this.connectToTables(row);\n    } //create hover element\n\n\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n\n    if (this.connection) {\n      document.body.appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this.hoverElement.style.width = this.table.element.clientWidth + \"px\";\n      this.hoverElement.style.whiteSpace = \"nowrap\";\n      this.hoverElement.style.overflow = \"hidden\";\n      this.hoverElement.style.pointerEvents = \"none\";\n    } else {\n      this.table.rowManager.getTableElement().appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n\n      this._bindMouseMove();\n    }\n\n    document.body.addEventListener(\"mousemove\", this.moveHover);\n    document.body.addEventListener(\"mouseup\", this.endMove);\n    this.moveHover(e);\n  }\n\n  setStartPosition(e, row) {\n    var pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\n        pageY = this.touchMove ? e.touches[0].pageY : e.pageY,\n        element,\n        position;\n    element = row.getElement();\n\n    if (this.connection) {\n      position = element.getBoundingClientRect();\n      this.startX = position.left - pageX + window.pageXOffset;\n      this.startY = position.top - pageY + window.pageYOffset;\n    } else {\n      this.startY = pageY - element.getBoundingClientRect().top;\n    }\n  }\n\n  endMove(e) {\n    if (!e || e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n\n      if (!this.connection) {\n        this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n        this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      }\n\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n\n      if (this.toRow) {\n        this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\n      }\n\n      this.moving = false;\n      this.toRow = false;\n      this.toRowAfter = false;\n      document.body.removeEventListener(\"mousemove\", this.moveHover);\n      document.body.removeEventListener(\"mouseup\", this.endMove);\n\n      if (this.connection) {\n        this.table.element.classList.remove(\"tabulator-movingrow-sending\");\n        this.disconnectFromTables();\n      }\n    }\n  }\n\n  moveRow(row, after) {\n    this.toRow = row;\n    this.toRowAfter = after;\n  }\n\n  moveHover(e) {\n    if (this.connection) {\n      this.moveHoverConnections.call(this, e);\n    } else {\n      this.moveHoverTable.call(this, e);\n    }\n  }\n\n  moveHoverTable(e) {\n    var rowHolder = this.table.rowManager.getElement(),\n        scrollTop = rowHolder.scrollTop,\n        yPos = (this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top + scrollTop;\n    this.hoverElement.style.top = yPos - this.startY + \"px\";\n  }\n\n  moveHoverConnections(e) {\n    this.hoverElement.style.left = this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX) + \"px\";\n    this.hoverElement.style.top = this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY) + \"px\";\n  }\n\n  elementRowDrop(e, element, row) {\n    this.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\n  } //establish connection with other tables\n\n\n  connectToTables(row) {\n    var connectionTables;\n\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\n        row: row\n      });\n    }\n\n    if (this.connectionSelectorsElements) {\n      this.connectionElements = [];\n\n      if (!Array.isArray(this.connectionSelectorsElements)) {\n        this.connectionSelectorsElements = [this.connectionSelectorsElements];\n      }\n\n      this.connectionSelectorsElements.forEach(query => {\n        if (typeof query === \"string\") {\n          this.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\n        } else {\n          this.connectionElements.push(query);\n        }\n      });\n      this.connectionElements.forEach(element => {\n        var dropEvent = e => {\n          this.elementRowDrop(e, element, this.moving);\n        };\n\n        element.addEventListener(\"mouseup\", dropEvent);\n        element.tabulatorElementDropEvent = dropEvent;\n        element.classList.add(\"tabulator-movingrow-receiving\");\n      });\n    }\n  } //disconnect from other tables\n\n\n  disconnectFromTables() {\n    var connectionTables;\n\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\n    }\n\n    this.connectionElements.forEach(element => {\n      element.classList.remove(\"tabulator-movingrow-receiving\");\n      element.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\n      delete element.tabulatorElementDropEvent;\n    });\n  } //accept incomming connection\n\n\n  connect(table, row) {\n    if (!this.connectedTable) {\n      this.connectedTable = table;\n      this.connectedRow = row;\n      this.table.element.classList.add(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.tableRowDropEvent = this.tableRowDrop.bind(this);\n      this.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStart\", row, table);\n      return true;\n    } else {\n      console.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\n      return false;\n    }\n  } //close incomming connection\n\n\n  disconnect(table) {\n    if (table === this.connectedTable) {\n      this.connectedTable = false;\n      this.connectedRow = false;\n      this.table.element.classList.remove(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStop\", table);\n    } else {\n      console.warn(\"Move Row Error - trying to disconnect from non connected table\");\n    }\n  }\n\n  dropComplete(table, row, success) {\n    var sender = false;\n\n    if (success) {\n      switch (typeof this.table.options.movableRowsSender) {\n        case \"string\":\n          sender = this.senders[this.table.options.movableRowsSender];\n          break;\n\n        case \"function\":\n          sender = this.table.options.movableRowsSender;\n          break;\n      }\n\n      if (sender) {\n        sender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n      } else {\n        if (this.table.options.movableRowsSender) {\n          console.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\n        }\n      }\n\n      this.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    } else {\n      this.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    }\n\n    this.endMove();\n  }\n\n  tableRowDrop(e, row) {\n    var receiver = false,\n        success = false;\n    e.stopImmediatePropagation();\n\n    switch (typeof this.table.options.movableRowsReceiver) {\n      case \"string\":\n        receiver = this.receivers[this.table.options.movableRowsReceiver];\n        break;\n\n      case \"function\":\n        receiver = this.table.options.movableRowsReceiver;\n        break;\n    }\n\n    if (receiver) {\n      success = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      console.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver);\n    }\n\n    if (success) {\n      this.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      this.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    }\n\n    this.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\n      row: row,\n      success: success\n    });\n  }\n\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"connect\":\n        return this.connect(table, data.row);\n\n      case \"disconnect\":\n        return this.disconnect(table);\n\n      case \"dropcomplete\":\n        return this.dropComplete(table, data.row, data.success);\n    }\n  }\n\n}\n\nMoveRows.prototype.receivers = {\n  insert: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData(), undefined, toRow);\n    return true;\n  },\n  add: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData());\n    return true;\n  },\n  update: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      toRow.update(fromRow.getData());\n      return true;\n    }\n\n    return false;\n  },\n  replace: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      this.table.addRow(fromRow.getData(), undefined, toRow);\n      toRow.delete();\n      return true;\n    }\n\n    return false;\n  }\n};\nMoveRows.prototype.senders = {\n  delete: function (fromRow, toRow, toTable) {\n    fromRow.delete();\n  }\n};\nMoveRows.moduleName = \"moveRow\";\nvar defaultMutators = {};\n\nclass Mutator extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\n\n    this.enabled = true;\n    this.registerColumnOption(\"mutator\");\n    this.registerColumnOption(\"mutatorParams\");\n    this.registerColumnOption(\"mutatorData\");\n    this.registerColumnOption(\"mutatorDataParams\");\n    this.registerColumnOption(\"mutatorEdit\");\n    this.registerColumnOption(\"mutatorEditParams\");\n    this.registerColumnOption(\"mutatorClipboard\");\n    this.registerColumnOption(\"mutatorClipboardParams\");\n  }\n\n  initialize() {\n    this.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\n    this.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\n  }\n\n  rowDataChanged(row, tempData, updatedData) {\n    return this.transformRow(tempData, \"data\", updatedData);\n  } //initialize column mutator\n\n\n  initializeColumn(column) {\n    var match = false,\n        config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n          mutator;\n\n      if (column.definition[key]) {\n        mutator = this.lookupMutator(column.definition[key]);\n\n        if (mutator) {\n          match = true;\n          config[key] = {\n            mutator: mutator,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n\n    if (match) {\n      column.modules.mutate = config;\n    }\n  }\n\n  lookupMutator(value) {\n    var mutator = false; //set column mutator\n\n    switch (typeof value) {\n      case \"string\":\n        if (Mutator.mutators[value]) {\n          mutator = Mutator.mutators[value];\n        } else {\n          console.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\n        }\n\n        break;\n\n      case \"function\":\n        mutator = value;\n        break;\n    }\n\n    return mutator;\n  } //apply mutator to row\n\n\n  transformRow(data, type, updatedData) {\n    var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        value;\n\n    if (this.enabled) {\n      this.table.columnManager.traverse(column => {\n        var mutator, params, component;\n\n        if (column.modules.mutate) {\n          mutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\n\n          if (mutator) {\n            value = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\n\n            if (type == \"data\" || typeof value !== \"undefined\") {\n              component = column.getComponent();\n              params = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\n              column.setFieldValue(data, mutator.mutator(value, data, type, params, component));\n            }\n          }\n        }\n      });\n    }\n\n    return data;\n  } //apply mutator to new cell value\n\n\n  transformCell(cell, value) {\n    if (cell.column.modules.mutate) {\n      var mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\n          tempData = {};\n\n      if (mutator) {\n        tempData = Object.assign(tempData, cell.row.getData());\n        cell.column.setFieldValue(tempData, value);\n        return mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\n      }\n    }\n\n    return value;\n  }\n\n  enable() {\n    this.enabled = true;\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n}\n\nMutator.moduleName = \"mutator\"; //load defaults\n\nMutator.mutators = defaultMutators;\n\nclass Page extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"local\";\n    this.progressiveLoad = false;\n    this.size = 0;\n    this.page = 1;\n    this.count = 5;\n    this.max = 1;\n    this.displayIndex = 0; //index in display pipeline\n\n    this.initialLoad = true;\n    this.dataChanging = false; //flag to check if data is being changed by this module\n\n    this.pageSizes = [];\n    this.registerTableOption(\"pagination\", false); //set pagination type\n\n    this.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\n\n    this.registerTableOption(\"paginationSize\", false); //set number of rows to a page\n\n    this.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\n\n    this.registerTableOption(\"paginationButtonCount\", 5); // set count of page button\n\n    this.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\n\n    this.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\n    // this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\n    // this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\n\n    this.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\n\n    this.registerTableOption(\"progressiveLoad\", false); //progressive loading\n\n    this.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\n\n    this.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\n\n    this.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\n    this.registerTableFunction(\"setPage\", this.setPage.bind(this));\n    this.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\n    this.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\n    this.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\n    this.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\n    this.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\n    this.registerTableFunction(\"getPage\", this.getPage.bind(this));\n    this.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.pagination) {\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\n      this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n\n      if (this.table.options.paginationMode === \"remote\") {\n        this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n        this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      }\n\n      if (this.table.options.progressiveLoad) {\n        console.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\n      }\n\n      this.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\n      this.registerDisplayHandler(this.getRows.bind(this), 50);\n      this.createElements();\n      this.initializePaginator();\n    } else if (this.table.options.progressiveLoad) {\n      this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n      this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.initializeProgressive(this.table.options.progressiveLoad);\n\n      if (this.table.options.progressiveLoad === \"scroll\") {\n        this.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\n      }\n    }\n  }\n\n  rowAddingPosition(row, top) {\n    var rowManager = this.table.rowManager,\n        dispRows = rowManager.getDisplayRows(),\n        index;\n\n    if (top) {\n      if (dispRows.length) {\n        index = dispRows[0];\n      } else {\n        if (rowManager.activeRows.length) {\n          index = rowManager.activeRows[rowManager.activeRows.length - 1];\n          top = false;\n        }\n      }\n    } else {\n      if (dispRows.length) {\n        index = dispRows[dispRows.length - 1];\n        top = dispRows.length < this.size ? false : true;\n      }\n    }\n\n    return {\n      index,\n      top\n    };\n  }\n\n  calculatePageSizes() {\n    var testElRow, testElCell;\n\n    if (this.table.options.paginationSize) {\n      this.size = this.table.options.paginationSize;\n    } else {\n      testElRow = document.createElement(\"div\");\n      testElRow.classList.add(\"tabulator-row\");\n      testElRow.style.visibility = \"hidden\";\n      testElCell = document.createElement(\"div\");\n      testElCell.classList.add(\"tabulator-cell\");\n      testElCell.innerHTML = \"Page Row Test\";\n      testElRow.appendChild(testElCell);\n      this.table.rowManager.getTableElement().appendChild(testElRow);\n      this.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\n      this.table.rowManager.getTableElement().removeChild(testElRow);\n    }\n\n    this.generatePageSizeSelectList();\n  }\n\n  initialLoadComplete() {\n    this.initialLoad = false;\n  }\n\n  remotePageParams(data, config, silent, params) {\n    if (!this.initialLoad) {\n      if (this.progressiveLoad && !silent || !this.progressiveLoad && !this.dataChanging) {\n        this.reset(true);\n      }\n    } //configure request params\n\n\n    params.page = this.page; //set page size if defined\n\n    if (this.size) {\n      params.size = this.size;\n    }\n\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userSetPageToRow(row) {\n    if (this.table.options.pagination) {\n      row = this.rowManager.findRow(row);\n\n      if (row) {\n        return this.setPageToRow(row);\n      }\n    }\n\n    return Promise.reject();\n  }\n\n  userSetPageSize(size) {\n    if (this.table.options.pagination) {\n      this.setPageSize(size);\n      return this.setPage(1);\n    } else {\n      return false;\n    }\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  scrollVertical(top, dir) {\n    var element, diff, margin;\n\n    if (!dir && !this.table.dataLoader.loading) {\n      element = this.table.rowManager.getElement();\n      diff = element.scrollHeight - element.clientHeight - top;\n      margin = this.table.options.progressiveLoadScrollMargin || element.clientHeight * 2;\n\n      if (diff < margin) {\n        this.nextPage().catch(() => {}); //consume the exception thrown when on the last page\n      }\n    }\n  }\n\n  restOnRenderBefore(rows, renderInPosition) {\n    if (!renderInPosition) {\n      if (this.mode === \"local\") {\n        this.reset();\n      }\n    }\n\n    return rows;\n  }\n\n  rowsUpdated() {\n    this.refreshData(true, \"all\");\n  }\n\n  createElements() {\n    var button;\n    this.element = document.createElement(\"span\");\n    this.element.classList.add(\"tabulator-paginator\");\n    this.pagesElement = document.createElement(\"span\");\n    this.pagesElement.classList.add(\"tabulator-pages\");\n    button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    button.setAttribute(\"aria-label\", \"\");\n    button.setAttribute(\"title\", \"\");\n    this.firstBut = button.cloneNode(true);\n    this.firstBut.setAttribute(\"data-page\", \"first\");\n    this.prevBut = button.cloneNode(true);\n    this.prevBut.setAttribute(\"data-page\", \"prev\");\n    this.nextBut = button.cloneNode(true);\n    this.nextBut.setAttribute(\"data-page\", \"next\");\n    this.lastBut = button.cloneNode(true);\n    this.lastBut.setAttribute(\"data-page\", \"last\");\n\n    if (this.table.options.paginationSizeSelector) {\n      this.pageSizeSelect = document.createElement(\"select\");\n      this.pageSizeSelect.classList.add(\"tabulator-page-size\");\n    }\n  }\n\n  generatePageSizeSelectList() {\n    var pageSizes = [];\n\n    if (this.pageSizeSelect) {\n      if (Array.isArray(this.table.options.paginationSizeSelector)) {\n        pageSizes = this.table.options.paginationSizeSelector;\n        this.pageSizes = pageSizes;\n\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes.unshift(this.size);\n        }\n      } else {\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes = [];\n\n          for (let i = 1; i < 5; i++) {\n            pageSizes.push(this.size * i);\n          }\n\n          this.pageSizes = pageSizes;\n        } else {\n          pageSizes = this.pageSizes;\n        }\n      }\n\n      while (this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\n\n      pageSizes.forEach(item => {\n        var itemEl = document.createElement(\"option\");\n        itemEl.value = item;\n\n        if (item === true) {\n          this.langBind(\"pagination|all\", function (value) {\n            itemEl.innerHTML = value;\n          });\n        } else {\n          itemEl.innerHTML = item;\n        }\n\n        this.pageSizeSelect.appendChild(itemEl);\n      });\n      this.pageSizeSelect.value = this.size;\n    }\n  } //setup pageination\n\n\n  initializePaginator(hidden) {\n    var pageSelectLabel;\n\n    if (!hidden) {\n      //build pagination element\n      //bind localizations\n      this.langBind(\"pagination|first\", value => {\n        this.firstBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|first_title\", value => {\n        this.firstBut.setAttribute(\"aria-label\", value);\n        this.firstBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|prev\", value => {\n        this.prevBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|prev_title\", value => {\n        this.prevBut.setAttribute(\"aria-label\", value);\n        this.prevBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|next\", value => {\n        this.nextBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|next_title\", value => {\n        this.nextBut.setAttribute(\"aria-label\", value);\n        this.nextBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|last\", value => {\n        this.lastBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|last_title\", value => {\n        this.lastBut.setAttribute(\"aria-label\", value);\n        this.lastBut.setAttribute(\"title\", value);\n      }); //click bindings\n\n      this.firstBut.addEventListener(\"click\", () => {\n        this.setPage(1);\n      });\n      this.prevBut.addEventListener(\"click\", () => {\n        this.previousPage();\n      });\n      this.nextBut.addEventListener(\"click\", () => {\n        this.nextPage();\n      });\n      this.lastBut.addEventListener(\"click\", () => {\n        this.setPage(this.max);\n      });\n\n      if (this.table.options.paginationElement) {\n        this.element = this.table.options.paginationElement;\n      }\n\n      if (this.pageSizeSelect) {\n        pageSelectLabel = document.createElement(\"label\");\n        this.langBind(\"pagination|page_size\", value => {\n          this.pageSizeSelect.setAttribute(\"aria-label\", value);\n          this.pageSizeSelect.setAttribute(\"title\", value);\n          pageSelectLabel.innerHTML = value;\n        });\n        this.element.appendChild(pageSelectLabel);\n        this.element.appendChild(this.pageSizeSelect);\n        this.pageSizeSelect.addEventListener(\"change\", e => {\n          this.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\n          this.setPage(1);\n        });\n      } //append to DOM\n\n\n      this.element.appendChild(this.firstBut);\n      this.element.appendChild(this.prevBut);\n      this.element.appendChild(this.pagesElement);\n      this.element.appendChild(this.nextBut);\n      this.element.appendChild(this.lastBut);\n\n      if (!this.table.options.paginationElement && !hidden) {\n        this.table.footerManager.append(this.element, this);\n      }\n\n      this.page = this.table.options.paginationInitialPage;\n      this.count = this.table.options.paginationButtonCount;\n    } //set default values\n\n\n    this.mode = this.table.options.paginationMode;\n  }\n\n  initializeProgressive(mode) {\n    this.initializePaginator(true);\n    this.mode = \"progressive_\" + mode;\n    this.progressiveLoad = true;\n  }\n\n  trackChanges() {\n    this.dispatch(\"page-changed\");\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  } //calculate maximum page from number of rows\n\n\n  setMaxRows(rowCount) {\n    if (!rowCount) {\n      this.max = 1;\n    } else {\n      this.max = this.size === true ? 1 : Math.ceil(rowCount / this.size);\n    }\n\n    if (this.page > this.max) {\n      this.page = this.max;\n    }\n  } //reset to first page without triggering action\n\n\n  reset(force) {\n    if (!this.initialLoad) {\n      if (this.mode == \"local\" || force) {\n        this.page = 1;\n      }\n    }\n  } //set the maximum page\n\n\n  setMaxPage(max) {\n    max = parseInt(max);\n    this.max = max || 1;\n\n    if (this.page > this.max) {\n      this.page = this.max;\n      this.trigger();\n    }\n  } //set current page number\n\n\n  setPage(page) {\n    switch (page) {\n      case \"first\":\n        return this.setPage(1);\n\n      case \"prev\":\n        return this.previousPage();\n\n      case \"next\":\n        return this.nextPage();\n\n      case \"last\":\n        return this.setPage(this.max);\n    }\n\n    page = parseInt(page);\n\n    if (page > 0 && page <= this.max || this.mode !== \"local\") {\n      this.page = page;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\n      return Promise.reject();\n    }\n  }\n\n  setPageToRow(row) {\n    var rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\n    var index = rows.indexOf(row);\n\n    if (index > -1) {\n      var page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\n      return this.setPage(page);\n    } else {\n      console.warn(\"Pagination Error - Requested row is not visible\");\n      return Promise.reject();\n    }\n  }\n\n  setPageSize(size) {\n    if (size !== true) {\n      size = parseInt(size);\n    }\n\n    if (size > 0) {\n      this.size = size;\n    }\n\n    if (this.pageSizeSelect) {\n      // this.pageSizeSelect.value = size;\n      this.generatePageSizeSelectList();\n    }\n\n    this.trackChanges();\n  } //setup the pagination buttons\n\n\n  _setPageButtons() {\n    let leftSize = Math.floor((this.count - 1) / 2);\n    let rightSize = Math.ceil((this.count - 1) / 2);\n    let min = this.max - this.page + leftSize + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - leftSize, 1);\n    let max = this.page <= rightSize ? Math.min(this.count, this.max) : Math.min(this.page + rightSize, this.max);\n\n    while (this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\n\n    if (this.page == 1) {\n      this.firstBut.disabled = true;\n      this.prevBut.disabled = true;\n    } else {\n      this.firstBut.disabled = false;\n      this.prevBut.disabled = false;\n    }\n\n    if (this.page == this.max) {\n      this.lastBut.disabled = true;\n      this.nextBut.disabled = true;\n    } else {\n      this.lastBut.disabled = false;\n      this.nextBut.disabled = false;\n    }\n\n    for (let i = min; i <= max; i++) {\n      if (i > 0 && i <= this.max) {\n        this.pagesElement.appendChild(this._generatePageButton(i));\n      }\n    }\n\n    this.footerRedraw();\n  }\n\n  _generatePageButton(page) {\n    var button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n\n    if (page == this.page) {\n      button.classList.add(\"active\");\n    }\n\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    this.langBind(\"pagination|page_title\", value => {\n      button.setAttribute(\"aria-label\", value + \" \" + page);\n      button.setAttribute(\"title\", value + \" \" + page);\n    });\n    button.setAttribute(\"data-page\", page);\n    button.textContent = page;\n    button.addEventListener(\"click\", e => {\n      this.setPage(page);\n    });\n    return button;\n  } //previous page\n\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\n      return Promise.reject();\n    }\n  } //next page\n\n\n  nextPage() {\n    if (this.page < this.max) {\n      this.page++;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      if (!this.progressiveLoad) {\n        console.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\n      }\n\n      return Promise.reject();\n    }\n  } //return current page number\n\n\n  getPage() {\n    return this.page;\n  } //return max page number\n\n\n  getPageMax() {\n    return this.max;\n  }\n\n  getPageSize(size) {\n    return this.size;\n  }\n\n  getMode() {\n    return this.mode;\n  } //return appropriate rows for current page\n\n\n  getRows(data) {\n    var output, start, end;\n\n    if (this.mode == \"local\") {\n      output = [];\n      this.setMaxRows(data.length);\n\n      if (this.size === true) {\n        start = 0;\n        end = data.length;\n      } else {\n        start = this.size * (this.page - 1);\n        end = start + parseInt(this.size);\n      }\n\n      this._setPageButtons();\n\n      for (let i = start; i < end; i++) {\n        if (data[i]) {\n          output.push(data[i]);\n        }\n      }\n\n      return output;\n    } else {\n      this._setPageButtons();\n\n      return data.slice(0);\n    }\n  }\n\n  trigger() {\n    var left;\n\n    switch (this.mode) {\n      case \"local\":\n        left = this.table.rowManager.scrollLeft;\n        this.refreshData();\n        this.table.rowManager.scrollHorizontal(left);\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        return Promise.resolve();\n\n      case \"remote\":\n        this.dataChanging = true;\n        return this.reloadData(null).finally(() => {\n          this.dataChanging = false;\n        });\n\n      case \"progressive_load\":\n      case \"progressive_scroll\":\n        return this.reloadData(null, true);\n\n      default:\n        console.warn(\"Pagination Error - no such pagination mode:\", this.mode);\n        return Promise.reject();\n    }\n  }\n\n  _parseRemoteData(data) {\n    var data, margin;\n\n    if (typeof data.last_page === \"undefined\") {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\n    }\n\n    if (data.data) {\n      this.max = parseInt(data.last_page) || 1;\n\n      if (this.progressiveLoad) {\n        switch (this.mode) {\n          case \"progressive_load\":\n            if (this.page == 1) {\n              this.table.rowManager.setData(data.data, false, this.page == 1);\n            } else {\n              this.table.rowManager.addRows(data.data);\n            }\n\n            if (this.page < this.max) {\n              setTimeout(() => {\n                this.nextPage();\n              }, this.table.options.progressiveLoadDelay);\n            }\n\n            break;\n\n          case \"progressive_scroll\":\n            data = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\n            this.table.rowManager.setData(data, this.page !== 1, this.page == 1);\n            margin = this.table.options.progressiveLoadScrollMargin || this.table.rowManager.element.clientHeight * 2;\n\n            if (this.table.rowManager.element.scrollHeight <= this.table.rowManager.element.clientHeight + margin) {\n              setTimeout(() => {\n                this.nextPage();\n              });\n            }\n\n            break;\n        }\n\n        return false;\n      } else {\n        // left = this.table.rowManager.scrollLeft;\n        this.dispatchExternal(\"pageLoaded\", this.getPage()); // this.table.rowManager.scrollHorizontal(left);\n        // this.table.columnManager.scrollHorizontal(left);\n      }\n    } else {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\n    }\n\n    return data.data;\n  } //handle the footer element being redrawn\n\n\n  footerRedraw() {\n    var footer = this.table.footerManager.element;\n\n    if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n      this.pagesElement.style.display = 'none';\n    } else {\n      this.pagesElement.style.display = '';\n\n      if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n        this.pagesElement.style.display = 'none';\n      }\n    }\n  }\n\n}\n\nPage.moduleName = \"page\"; // read peristence information from storage\n\nvar defaultReaders = {\n  local: function (id, type) {\n    var data = localStorage.getItem(id + \"-\" + type);\n    return data ? JSON.parse(data) : false;\n  },\n  cookie: function (id, type) {\n    var cookie = document.cookie,\n        key = id + \"-\" + type,\n        cookiePos = cookie.indexOf(key + \"=\"),\n        end,\n        data; //if cookie exists, decode and load column data into tabulator\n\n    if (cookiePos > -1) {\n      cookie = cookie.substr(cookiePos);\n      end = cookie.indexOf(\";\");\n\n      if (end > -1) {\n        cookie = cookie.substr(0, end);\n      }\n\n      data = cookie.replace(key + \"=\", \"\");\n    }\n\n    return data ? JSON.parse(data) : false;\n  }\n}; //write persistence information to storage\n\nvar defaultWriters = {\n  local: function (id, type, data) {\n    localStorage.setItem(id + \"-\" + type, JSON.stringify(data));\n  },\n  cookie: function (id, type, data) {\n    var expireDate = new Date();\n    expireDate.setDate(expireDate.getDate() + 10000);\n    document.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\n  }\n};\n\nclass Persistence extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"\";\n    this.id = \"\"; // this.persistProps = [\"field\", \"width\", \"visible\"];\n\n    this.defWatcherBlock = false;\n    this.config = {};\n    this.readFunc = false;\n    this.writeFunc = false;\n    this.registerTableOption(\"persistence\", false);\n    this.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\n\n    this.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\n\n    this.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\n\n    this.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\n  } // Test for whether localStorage is available for use.\n\n\n  localStorageTest() {\n    var testKey = \"_tabulator_test\";\n\n    try {\n      window.localStorage.setItem(testKey, testKey);\n      window.localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  } //setup parameters\n\n\n  initialize() {\n    if (this.table.options.persistence) {\n      //determine persistent layout storage type\n      var mode = this.table.options.persistenceMode,\n          id = this.table.options.persistenceID,\n          retreivedData;\n      this.mode = mode !== true ? mode : this.localStorageTest() ? \"local\" : \"cookie\";\n\n      if (this.table.options.persistenceReaderFunc) {\n        if (typeof this.table.options.persistenceReaderFunc === \"function\") {\n          this.readFunc = this.table.options.persistenceReaderFunc;\n        } else {\n          if (Persistence.readers[this.table.options.persistenceReaderFunc]) {\n            this.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\n          } else {\n            console.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\n          }\n        }\n      } else {\n        if (Persistence.readers[this.mode]) {\n          this.readFunc = Persistence.readers[this.mode];\n        } else {\n          console.warn(\"Persistence Read Error - invalid reader set\", this.mode);\n        }\n      }\n\n      if (this.table.options.persistenceWriterFunc) {\n        if (typeof this.table.options.persistenceWriterFunc === \"function\") {\n          this.writeFunc = this.table.options.persistenceWriterFunc;\n        } else {\n          if (Persistence.writers[this.table.options.persistenceWriterFunc]) {\n            this.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\n          } else {\n            console.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\n          }\n        }\n      } else {\n        if (Persistence.writers[this.mode]) {\n          this.writeFunc = Persistence.writers[this.mode];\n        } else {\n          console.warn(\"Persistence Write Error - invalid writer set\", this.mode);\n        }\n      } //set storage tag\n\n\n      this.id = \"tabulator-\" + (id || this.table.element.getAttribute(\"id\") || \"\");\n      this.config = {\n        sort: this.table.options.persistence === true || this.table.options.persistence.sort,\n        filter: this.table.options.persistence === true || this.table.options.persistence.filter,\n        group: this.table.options.persistence === true || this.table.options.persistence.group,\n        page: this.table.options.persistence === true || this.table.options.persistence.page,\n        columns: this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns\n      }; //load pagination data if needed\n\n      if (this.config.page) {\n        retreivedData = this.retreiveData(\"page\");\n\n        if (retreivedData) {\n          if (typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)) {\n            this.table.options.paginationSize = retreivedData.paginationSize;\n          }\n\n          if (typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)) {\n            this.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\n          }\n        }\n      } //load group data if needed\n\n\n      if (this.config.group) {\n        retreivedData = this.retreiveData(\"group\");\n\n        if (retreivedData) {\n          if (typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)) {\n            this.table.options.groupBy = retreivedData.groupBy;\n          }\n\n          if (typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)) {\n            this.table.options.groupStartOpen = retreivedData.groupStartOpen;\n          }\n\n          if (typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)) {\n            this.table.options.groupHeader = retreivedData.groupHeader;\n          }\n        }\n      }\n\n      if (this.config.columns) {\n        this.table.options.columns = this.load(\"columns\", this.table.options.columns);\n        this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n        this.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\n      }\n\n      this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n      this.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\n      this.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\n      this.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\n      this.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\n      this.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\n      this.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\n    }\n\n    this.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\n    this.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\n  }\n\n  eventSave(type) {\n    if (this.config[type]) {\n      this.save(type);\n    }\n  }\n\n  tableBuilt() {\n    var options = this.table.options,\n        sorters,\n        filters;\n\n    if (this.config.sort) {\n      sorters = this.load(\"sort\");\n\n      if (!sorters === false) {\n        this.table.initialSort = sorters;\n      }\n    }\n\n    if (this.config.filter) {\n      filters = this.load(\"filter\");\n\n      if (!filters === false) {\n        this.table.initialFilter = filters;\n      }\n    }\n  }\n\n  tableRedraw(force) {\n    if (force && this.config.columns) {\n      this.save(\"columns\");\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  getColumnLayout() {\n    return this.parseColumns(this.table.columnManager.getColumns());\n  }\n\n  setColumnLayout(layout) {\n    this.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout));\n    return true;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumn(column) {\n    var def, keys;\n\n    if (this.config.columns) {\n      this.defWatcherBlock = true;\n      def = column.getDefinition();\n      keys = this.config.columns === true ? Object.keys(def) : this.config.columns;\n      keys.forEach(key => {\n        var props = Object.getOwnPropertyDescriptor(def, key);\n        var value = def[key];\n\n        if (props) {\n          Object.defineProperty(def, key, {\n            set: function (newValue) {\n              value = newValue;\n\n              if (!this.defWatcherBlock) {\n                this.save(\"columns\");\n              }\n\n              if (props.set) {\n                props.set(newValue);\n              }\n            },\n            get: function () {\n              if (props.get) {\n                props.get();\n              }\n\n              return value;\n            }\n          });\n        }\n      });\n      this.defWatcherBlock = false;\n    }\n  } //load saved definitions\n\n\n  load(type, current) {\n    var data = this.retreiveData(type);\n\n    if (current) {\n      data = data ? this.mergeDefinition(current, data) : current;\n    }\n\n    return data;\n  } //retreive data from memory\n\n\n  retreiveData(type) {\n    return this.readFunc ? this.readFunc(this.id, type) : false;\n  } //merge old and new column definitions\n\n\n  mergeDefinition(oldCols, newCols) {\n    var output = [];\n    newCols = newCols || [];\n    newCols.forEach((column, to) => {\n      var from = this._findColumn(oldCols, column),\n          keys;\n\n      if (from) {\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(from);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n\n        keys.forEach(key => {\n          if (key !== \"columns\" && typeof column[key] !== \"undefined\") {\n            from[key] = column[key];\n          }\n        });\n\n        if (from.columns) {\n          from.columns = this.mergeDefinition(from.columns, column.columns);\n        }\n\n        output.push(from);\n      }\n    });\n    oldCols.forEach((column, i) => {\n      var from = this._findColumn(newCols, column);\n\n      if (!from) {\n        if (output.length > i) {\n          output.splice(i, 0, column);\n        } else {\n          output.push(column);\n        }\n      }\n    });\n    return output;\n  } //find matching columns\n\n\n  _findColumn(columns, subject) {\n    var type = subject.columns ? \"group\" : subject.field ? \"field\" : \"object\";\n    return columns.find(function (col) {\n      switch (type) {\n        case \"group\":\n          return col.title === subject.title && col.columns.length === subject.columns.length;\n\n        case \"field\":\n          return col.field === subject.field;\n\n        case \"object\":\n          return col === subject;\n      }\n    });\n  } //save data\n\n\n  save(type) {\n    var data = {};\n\n    switch (type) {\n      case \"columns\":\n        data = this.parseColumns(this.table.columnManager.getColumns());\n        break;\n\n      case \"filter\":\n        data = this.table.modules.filter.getFilters();\n        break;\n\n      case \"sort\":\n        data = this.validateSorters(this.table.modules.sort.getSort());\n        break;\n\n      case \"group\":\n        data = this.getGroupConfig();\n        break;\n\n      case \"page\":\n        data = this.getPageConfig();\n        break;\n    }\n\n    if (this.writeFunc) {\n      this.writeFunc(this.id, type, data);\n    }\n  } //ensure sorters contain no function data\n\n\n  validateSorters(data) {\n    data.forEach(function (item) {\n      item.column = item.field;\n      delete item.field;\n    });\n    return data;\n  }\n\n  getGroupConfig() {\n    var data = {};\n\n    if (this.config.group) {\n      if (this.config.group === true || this.config.group.groupBy) {\n        data.groupBy = this.table.options.groupBy;\n      }\n\n      if (this.config.group === true || this.config.group.groupStartOpen) {\n        data.groupStartOpen = this.table.options.groupStartOpen;\n      }\n\n      if (this.config.group === true || this.config.group.groupHeader) {\n        data.groupHeader = this.table.options.groupHeader;\n      }\n    }\n\n    return data;\n  }\n\n  getPageConfig() {\n    var data = {};\n\n    if (this.config.page) {\n      if (this.config.page === true || this.config.page.size) {\n        data.paginationSize = this.table.modules.page.getPageSize();\n      }\n\n      if (this.config.page === true || this.config.page.page) {\n        data.paginationInitialPage = this.table.modules.page.getPage();\n      }\n    }\n\n    return data;\n  } //parse columns for data to store\n\n\n  parseColumns(columns) {\n    var definitions = [],\n        excludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\n    columns.forEach(column => {\n      var defStore = {},\n          colDef = column.getDefinition(),\n          keys;\n\n      if (column.isGroup) {\n        defStore.title = colDef.title;\n        defStore.columns = this.parseColumns(column.getColumns());\n      } else {\n        defStore.field = column.getField();\n\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(colDef);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n\n        keys.forEach(key => {\n          switch (key) {\n            case \"width\":\n              defStore.width = column.getWidth();\n              break;\n\n            case \"visible\":\n              defStore.visible = column.visible;\n              break;\n\n            default:\n              if (typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1) {\n                defStore[key] = colDef[key];\n              }\n\n          }\n        });\n      }\n\n      definitions.push(defStore);\n    });\n    return definitions;\n  }\n\n}\n\nPersistence.moduleName = \"persistence\"; //load defaults\n\nPersistence.readers = defaultReaders;\nPersistence.writers = defaultWriters;\n\nclass Print extends Module {\n  constructor(table) {\n    super(table);\n    this.element = false;\n    this.manualBlock = false;\n    this.registerTableOption(\"printAsHtml\", false); //enable print as html\n\n    this.registerTableOption(\"printFormatter\", false); //printing page formatter\n\n    this.registerTableOption(\"printHeader\", false); //page header contents\n\n    this.registerTableOption(\"printFooter\", false); //page footer contents\n\n    this.registerTableOption(\"printStyled\", true); //enable print as html styling\n\n    this.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\n\n    this.registerTableOption(\"printConfig\", {}); //print config options\n\n    this.registerColumnOption(\"print\");\n    this.registerColumnOption(\"titlePrint\");\n  }\n\n  initialize() {\n    if (this.table.options.printAsHtml) {\n      window.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\n      window.addEventListener(\"afterprint\", this.cleanup.bind(this));\n    }\n\n    this.registerTableFunction(\"print\", this.printFullscreen.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  replaceTable() {\n    if (!this.manualBlock) {\n      this.element = document.createElement(\"div\");\n      this.element.classList.add(\"tabulator-print-table\");\n      this.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\n      this.table.element.style.display = \"none\";\n      this.table.element.parentNode.insertBefore(this.element, this.table.element);\n    }\n  }\n\n  cleanup() {\n    document.body.classList.remove(\"tabulator-print-fullscreen-hide\");\n\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n      this.table.element.style.display = \"\";\n    }\n  }\n\n  printFullscreen(visible, style, config) {\n    var scrollX = window.scrollX,\n        scrollY = window.scrollY,\n        headerEl = document.createElement(\"div\"),\n        footerEl = document.createElement(\"div\"),\n        tableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\n        headerContent,\n        footerContent;\n    this.manualBlock = true;\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-print-fullscreen\");\n\n    if (this.table.options.printHeader) {\n      headerEl.classList.add(\"tabulator-print-header\");\n      headerContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\n\n      if (typeof headerContent == \"string\") {\n        headerEl.innerHTML = headerContent;\n      } else {\n        headerEl.appendChild(headerContent);\n      }\n\n      this.element.appendChild(headerEl);\n    }\n\n    this.element.appendChild(tableEl);\n\n    if (this.table.options.printFooter) {\n      footerEl.classList.add(\"tabulator-print-footer\");\n      footerContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\n\n      if (typeof footerContent == \"string\") {\n        footerEl.innerHTML = footerContent;\n      } else {\n        footerEl.appendChild(footerContent);\n      }\n\n      this.element.appendChild(footerEl);\n    }\n\n    document.body.classList.add(\"tabulator-print-fullscreen-hide\");\n    document.body.appendChild(this.element);\n\n    if (this.table.options.printFormatter) {\n      this.table.options.printFormatter(this.element, tableEl);\n    }\n\n    window.print();\n    this.cleanup();\n    window.scrollTo(scrollX, scrollY);\n    this.manualBlock = false;\n  }\n\n}\n\nPrint.moduleName = \"print\";\n\nclass ReactiveData extends Module {\n  constructor(table) {\n    super(table);\n    this.data = false;\n    this.blocked = false; //block reactivity while performing update\n\n    this.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\n\n    this.currentVersion = 0;\n    this.registerTableOption(\"reactiveData\", false); //enable data reactivity\n  }\n\n  initialize() {\n    if (this.table.options.reactiveData) {\n      this.subscribe(\"cell-value-save-before\", this.block.bind(this));\n      this.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-save-before\", this.block.bind(this));\n      this.subscribe(\"row-data-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\n      this.subscribe(\"data-processing\", this.watchData.bind(this));\n      this.subscribe(\"table-destroy\", this.unwatchData.bind(this));\n    }\n  }\n\n  watchData(data) {\n    var self = this,\n        version;\n    this.currentVersion++;\n    version = this.currentVersion;\n    this.unwatchData();\n    this.data = data; //override array push function\n\n    this.origFuncs.push = data.push;\n    Object.defineProperty(this.data, \"push\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, false);\n          });\n        }\n\n        return self.origFuncs.push.apply(data, arguments);\n      }\n    }); //override array unshift function\n\n    this.origFuncs.unshift = data.unshift;\n    Object.defineProperty(this.data, \"unshift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, true);\n          });\n        }\n\n        return self.origFuncs.unshift.apply(data, arguments);\n      }\n    }); //override array shift function\n\n    this.origFuncs.shift = data.shift;\n    Object.defineProperty(this.data, \"shift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[0]);\n\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n\n        return self.origFuncs.shift.call(data);\n      }\n    }); //override array pop function\n\n    this.origFuncs.pop = data.pop;\n    Object.defineProperty(this.data, \"pop\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\n\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n\n        return self.origFuncs.pop.call(data);\n      }\n    }); //override array splice function\n\n    this.origFuncs.splice = data.splice;\n    Object.defineProperty(this.data, \"splice\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments),\n            start = args[0] < 0 ? data.length + args[0] : args[0],\n            end = args[1],\n            newRows = args[2] ? args.slice(2) : false,\n            startRow;\n\n        if (!self.blocked && version === self.currentVersion) {\n          //add new rows\n          if (newRows) {\n            startRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\n\n            if (startRow) {\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, startRow, true);\n              });\n            } else {\n              newRows = newRows.slice().reverse();\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, false, true);\n              });\n            }\n          } //delete removed rows\n\n\n          if (end !== 0) {\n            var oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\n            oldRows.forEach((rowData, i) => {\n              var row = self.table.rowManager.getRowFromDataObject(rowData);\n\n              if (row) {\n                row.deleteActual(i !== oldRows.length - 1);\n              }\n            });\n          }\n\n          if (newRows || end !== 0) {\n            self.table.rowManager.reRenderInPosition();\n          }\n        }\n\n        return self.origFuncs.splice.apply(data, arguments);\n      }\n    });\n  }\n\n  unwatchData() {\n    if (this.data !== false) {\n      for (var key in this.origFuncs) {\n        Object.defineProperty(this.data, key, {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: this.origFuncs.key\n        });\n      }\n    }\n  }\n\n  watchRow(row) {\n    var data = row.getData();\n    this.blocked = true;\n\n    for (var key in data) {\n      this.watchKey(row, data, key);\n    }\n\n    if (this.table.options.dataTree) {\n      this.watchTreeChildren(row);\n    }\n\n    this.blocked = false;\n  }\n\n  watchTreeChildren(row) {\n    var childField = row.getData()[this.table.options.dataTreeChildField],\n        origFuncs = {};\n\n    function rebuildTree() {\n      this.table.modules.dataTree.initializeRow(row);\n      this.table.modules.dataTree.layoutRow(row);\n      this.table.rowManager.refreshActiveData(\"tree\", false, true);\n    }\n\n    if (childField) {\n      origFuncs.push = childField.push;\n      Object.defineProperty(childField, \"push\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.push.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.unshift = childField.unshift;\n      Object.defineProperty(childField, \"unshift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.unshift.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.shift = childField.shift;\n      Object.defineProperty(childField, \"shift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.shift.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.pop = childField.pop;\n      Object.defineProperty(childField, \"pop\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.pop.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.splice = childField.splice;\n      Object.defineProperty(childField, \"splice\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.splice.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n    }\n  }\n\n  watchKey(row, data, key) {\n    var props = Object.getOwnPropertyDescriptor(data, key),\n        value = data[key],\n        version = this.currentVersion;\n    Object.defineProperty(data, key, {\n      set: newValue => {\n        value = newValue;\n\n        if (!this.blocked && version === this.currentVersion) {\n          var update = {};\n          update[key] = newValue;\n          row.updateData(update);\n        }\n\n        if (props.set) {\n          props.set(newValue);\n        }\n      },\n      get: () => {\n        if (props.get) {\n          props.get();\n        }\n\n        return value;\n      }\n    });\n  }\n\n  unwatchRow(row) {\n    var data = row.getData();\n\n    for (var key in data) {\n      Object.defineProperty(data, key, {\n        value: data[key]\n      });\n    }\n  }\n\n  block() {\n    this.blocked = true;\n  }\n\n  unblock() {\n    this.blocked = false;\n  }\n\n}\n\nReactiveData.moduleName = \"reactiveData\";\n\nclass ResizeColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startX = false;\n    this.startWidth = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerColumnOption(\"resizable\", true);\n  }\n\n  initialize() {\n    // if(this.table.options.resizableColumns){\n    this.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\n    this.subscribe(\"column-init\", this.layoutColumnHeader.bind(this)); // }\n  }\n\n  layoutCellHandles(cell) {\n    if (cell.row.type === \"row\") {\n      this.initializeColumn(\"cell\", cell.column, cell.element);\n    }\n  }\n\n  layoutColumnHeader(column) {\n    this.initializeColumn(\"header\", column, column.element);\n  }\n\n  initializeColumn(type, column, element) {\n    var self = this,\n        variableHeight = false,\n        mode = column.definition.resizable; //set column resize mode\n\n    if (type === \"header\") {\n      variableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\n      column.modules.resize = {\n        variableHeight: variableHeight\n      };\n    }\n\n    if (mode === true || mode == type) {\n      var handle = document.createElement('div');\n      handle.className = \"tabulator-col-resize-handle\";\n      var prevHandle = document.createElement('div');\n      prevHandle.className = \"tabulator-col-resize-handle prev\";\n      handle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n\n      var handleDown = function (e) {\n        var nearestColumn = column.getLastColumn();\n\n        if (nearestColumn && self._checkResizability(nearestColumn)) {\n          self.startColumn = column;\n\n          self._mouseDown(e, nearestColumn, handle);\n        }\n      };\n\n      handle.addEventListener(\"mousedown\", handleDown);\n      handle.addEventListener(\"touchstart\", handleDown, {\n        passive: true\n      }); //reszie column on  double click\n\n      handle.addEventListener(\"dblclick\", function (e) {\n        var col = column.getLastColumn();\n\n        if (col && self._checkResizability(col)) {\n          e.stopPropagation();\n          col.reinitializeWidth(true);\n        }\n      });\n      prevHandle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n\n      var prevHandleDown = function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            self.startColumn = column;\n\n            self._mouseDown(e, prevColumn, prevHandle);\n          }\n        }\n      };\n\n      prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n      prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n        passive: true\n      }); //resize column on double click\n\n      prevHandle.addEventListener(\"dblclick\", function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            e.stopPropagation();\n            prevColumn.reinitializeWidth(true);\n          }\n        }\n      });\n      element.appendChild(handle);\n      element.appendChild(prevHandle);\n    }\n  }\n\n  _checkResizability(column) {\n    return column.definition.resizable;\n  }\n\n  _mouseDown(e, column, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n\n    function mouseMove(e) {\n      // self.table.columnManager.tempScrollBlock();\n      if (self.table.rtl) {\n        column.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      } else {\n        column.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      }\n\n      self.table.columnManager.renderer.rerenderColumns(true);\n\n      if (!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n    }\n\n    function mouseUp(e) {\n      //block editor from taking action while resizing is taking place\n      if (self.startColumn.modules.edit) {\n        self.startColumn.modules.edit.blocked = false;\n      }\n\n      if (self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n\n      document.body.removeEventListener(\"mouseup\", mouseUp);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      self.dispatch(\"column-resized\", column);\n      self.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\n    }\n\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n    //block editor from taking action while resizing is taking place\n\n    if (self.startColumn.modules.edit) {\n      self.startColumn.modules.edit.blocked = true;\n    }\n\n    self.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\n    self.startWidth = column.getWidth();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n\n}\n\nResizeColumns.moduleName = \"resizeColumns\";\n\nclass ResizeRows extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startY = false;\n    this.startHeight = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerTableOption(\"resizableRows\", false); //resizable rows\n  }\n\n  initialize() {\n    if (this.table.options.resizableRows) {\n      this.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\n    }\n  }\n\n  initializeRow(row) {\n    var self = this,\n        rowEl = row.getElement();\n    var handle = document.createElement('div');\n    handle.className = \"tabulator-row-resize-handle\";\n    var prevHandle = document.createElement('div');\n    prevHandle.className = \"tabulator-row-resize-handle prev\";\n    handle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n\n    var handleDown = function (e) {\n      self.startRow = row;\n\n      self._mouseDown(e, row, handle);\n    };\n\n    handle.addEventListener(\"mousedown\", handleDown);\n    handle.addEventListener(\"touchstart\", handleDown, {\n      passive: true\n    });\n    prevHandle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n\n    var prevHandleDown = function (e) {\n      var prevRow = self.table.rowManager.prevDisplayRow(row);\n\n      if (prevRow) {\n        self.startRow = prevRow;\n\n        self._mouseDown(e, prevRow, prevHandle);\n      }\n    };\n\n    prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n    prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n      passive: true\n    });\n    rowEl.appendChild(handle);\n    rowEl.appendChild(prevHandle);\n  }\n\n  _mouseDown(e, row, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n\n    function mouseMove(e) {\n      row.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\n    }\n\n    function mouseUp(e) {\n      // //block editor from taking action while resizing is taking place\n      // if(self.startColumn.modules.edit){\n      // \tself.startColumn.modules.edit.blocked = false;\n      // }\n      document.body.removeEventListener(\"mouseup\", mouseMove);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      this.dispatchExternal(\"rowResized\", row.getComponent());\n    }\n\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n    //block editor from taking action while resizing is taking place\n    // if(self.startColumn.modules.edit){\n    // \tself.startColumn.modules.edit.blocked = true;\n    // }\n\n    self.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\n    self.startHeight = row.getHeight();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n\n}\n\nResizeRows.moduleName = \"resizeRows\";\n\nclass ResizeTable extends Module {\n  constructor(table) {\n    super(table);\n    this.binding = false;\n    this.observer = false;\n    this.containerObserver = false;\n    this.tableHeight = 0;\n    this.tableWidth = 0;\n    this.containerHeight = 0;\n    this.containerWidth = 0;\n    this.autoResize = false;\n    this.registerTableOption(\"autoResize\", true); //auto resize table\n  }\n\n  initialize() {\n    if (this.table.options.autoResize) {\n      var table = this.table,\n          tableStyle;\n      this.tableHeight = table.element.clientHeight;\n      this.tableWidth = table.element.clientWidth;\n\n      if (table.element.parentNode) {\n        this.containerHeight = table.element.parentNode.clientHeight;\n        this.containerWidth = table.element.parentNode.clientWidth;\n      }\n\n      if (typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\") {\n        this.autoResize = true;\n        this.observer = new ResizeObserver(entry => {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            var nodeHeight = Math.floor(entry[0].contentRect.height);\n            var nodeWidth = Math.floor(entry[0].contentRect.width);\n\n            if (this.tableHeight != nodeHeight || this.tableWidth != nodeWidth) {\n              this.tableHeight = nodeHeight;\n              this.tableWidth = nodeWidth;\n\n              if (table.element.parentNode) {\n                this.containerHeight = table.element.parentNode.clientHeight;\n                this.containerWidth = table.element.parentNode.clientWidth;\n              }\n\n              this.table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          }\n        });\n        this.observer.observe(table.element);\n        tableStyle = window.getComputedStyle(table.element);\n\n        if (this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))) {\n          this.containerObserver = new ResizeObserver(entry => {\n            if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n              var nodeHeight = Math.floor(entry[0].contentRect.height);\n              var nodeWidth = Math.floor(entry[0].contentRect.width);\n\n              if (this.containerHeight != nodeHeight || this.containerWidth != nodeWidth) {\n                this.containerHeight = nodeHeight;\n                this.containerWidth = nodeWidth;\n                this.tableHeight = table.element.clientHeight;\n                this.tableWidth = table.element.clientWidth;\n              }\n\n              table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          });\n          this.containerObserver.observe(this.table.element.parentNode);\n        }\n\n        this.subscribe(\"table-resize\", this.tableResized.bind(this));\n      } else {\n        this.binding = function () {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            table.columnManager.renderer.rerenderColumns(true);\n            table.redraw();\n          }\n        };\n\n        window.addEventListener(\"resize\", this.binding);\n      }\n\n      this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n    }\n  }\n\n  tableResized() {\n    this.table.rowManager.redraw();\n  }\n\n  clearBindings() {\n    if (this.binding) {\n      window.removeEventListener(\"resize\", this.binding);\n    }\n\n    if (this.observer) {\n      this.observer.unobserve(this.table.element);\n    }\n\n    if (this.containerObserver) {\n      this.containerObserver.unobserve(this.table.element.parentNode);\n    }\n  }\n\n}\n\nResizeTable.moduleName = \"resizeTable\";\n\nclass ResponsiveLayout extends Module {\n  constructor(table) {\n    super(table);\n    this.columns = [];\n    this.hiddenColumns = [];\n    this.mode = \"\";\n    this.index = 0;\n    this.collapseFormatter = [];\n    this.collapseStartOpen = true;\n    this.collapseHandleColumn = false;\n    this.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\n\n    this.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\n\n    this.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\n\n    this.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\n\n    this.registerColumnOption(\"responsive\");\n  } //generate responsive columns list\n\n\n  initialize() {\n    if (this.table.options.responsiveLayout) {\n      this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n      this.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\n\n      if (this.table.options.responsiveLayout === \"collapse\") {\n        this.subscribe(\"row-init\", this.initializeRow.bind(this));\n        this.subscribe(\"row-layout\", this.layoutRow.bind(this));\n      }\n    }\n  }\n\n  tableRedraw(force) {\n    if ([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1) {\n      if (!force) {\n        this.update();\n      }\n    }\n  }\n\n  initializeResponsivity() {\n    var columns = [];\n    this.mode = this.table.options.responsiveLayout;\n    this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\n    this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\n    this.hiddenColumns = []; //determine level of responsivity for each column\n\n    this.table.columnManager.columnsByIndex.forEach(function (column, i) {\n      if (column.modules.responsive) {\n        if (column.modules.responsive.order && column.modules.responsive.visible) {\n          column.modules.responsive.index = i;\n          columns.push(column);\n\n          if (!column.visible && self.mode === \"collapse\") {\n            self.hiddenColumns.push(column);\n          }\n        }\n      }\n    }); //sort list by responsivity\n\n    columns = columns.reverse();\n    columns = columns.sort(function (a, b) {\n      var diff = b.modules.responsive.order - a.modules.responsive.order;\n      return diff || b.modules.responsive.index - a.modules.responsive.index;\n    });\n    this.columns = columns;\n\n    if (this.mode === \"collapse\") {\n      this.generateCollapsedContent();\n    } //assign collapse column\n\n\n    for (let col of this.table.columnManager.columnsByIndex) {\n      if (col.definition.formatter == \"responsiveCollapse\") {\n        this.collapseHandleColumn = col;\n        break;\n      }\n    }\n\n    if (this.collapseHandleColumn) {\n      if (this.hiddenColumns.length) {\n        this.collapseHandleColumn.show();\n      } else {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  } //define layout information\n\n\n  initializeColumn(column) {\n    var def = column.getDefinition();\n    column.modules.responsive = {\n      order: typeof def.responsive === \"undefined\" ? 1 : def.responsive,\n      visible: def.visible === false ? false : true\n    };\n  }\n\n  initializeRow(row) {\n    var el;\n\n    if (row.type !== \"calc\") {\n      el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-responsive-collapse\");\n      row.modules.responsiveLayout = {\n        element: el,\n        open: this.collapseStartOpen\n      };\n\n      if (!this.collapseStartOpen) {\n        el.style.display = 'none';\n      }\n    }\n  }\n\n  layoutRow(row) {\n    var rowEl = row.getElement();\n\n    if (row.modules.responsiveLayout) {\n      rowEl.appendChild(row.modules.responsiveLayout.element);\n      this.generateCollapsedRowContent(row);\n    }\n  } //update column visibility\n\n\n  updateColumnVisibility(column, responsiveToggle) {\n    if (!responsiveToggle && column.modules.responsive) {\n      column.modules.responsive.visible = column.visible;\n      this.initializeResponsivity();\n    }\n  }\n\n  hideColumn(column) {\n    var colCount = this.hiddenColumns.length;\n    column.hide(false, true);\n\n    if (this.mode === \"collapse\") {\n      this.hiddenColumns.unshift(column);\n      this.generateCollapsedContent();\n\n      if (this.collapseHandleColumn && !colCount) {\n        this.collapseHandleColumn.show();\n      }\n    }\n  }\n\n  showColumn(column) {\n    var index;\n    column.show(false, true); //set column width to prevent calculation loops on uninitialized columns\n\n    column.setWidth(column.getWidth());\n\n    if (this.mode === \"collapse\") {\n      index = this.hiddenColumns.indexOf(column);\n\n      if (index > -1) {\n        this.hiddenColumns.splice(index, 1);\n      }\n\n      this.generateCollapsedContent();\n\n      if (this.collapseHandleColumn && !this.hiddenColumns.length) {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  } //redraw columns to fit space\n\n\n  update() {\n    var self = this,\n        working = true;\n\n    while (working) {\n      let width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\n      let diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\n\n      if (diff < 0) {\n        //table is too wide\n        let column = self.columns[self.index];\n\n        if (column) {\n          self.hideColumn(column);\n          self.index++;\n        } else {\n          working = false;\n        }\n      } else {\n        //table has spare space\n        let column = self.columns[self.index - 1];\n\n        if (column) {\n          if (diff > 0) {\n            if (diff >= column.getWidth()) {\n              self.showColumn(column);\n              self.index--;\n            } else {\n              working = false;\n            }\n          } else {\n            working = false;\n          }\n        } else {\n          working = false;\n        }\n      }\n\n      if (!self.table.rowManager.activeRowsCount) {\n        self.table.rowManager.renderEmptyScroll();\n      }\n    }\n  }\n\n  generateCollapsedContent() {\n    var self = this,\n        rows = this.table.rowManager.getDisplayRows();\n    rows.forEach(function (row) {\n      self.generateCollapsedRowContent(row);\n    });\n  }\n\n  generateCollapsedRowContent(row) {\n    var el, contents;\n\n    if (row.modules.responsiveLayout) {\n      el = row.modules.responsiveLayout.element;\n\n      while (el.firstChild) el.removeChild(el.firstChild);\n\n      contents = this.collapseFormatter(this.generateCollapsedRowData(row));\n\n      if (contents) {\n        el.appendChild(contents);\n      }\n    }\n  }\n\n  generateCollapsedRowData(row) {\n    var self = this,\n        data = row.getData(),\n        output = [],\n        mockCellComponent;\n    this.hiddenColumns.forEach(function (column) {\n      var value = column.getFieldValue(data);\n\n      if (column.definition.title && column.field) {\n        if (column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters) {\n          mockCellComponent = {\n            value: false,\n            data: {},\n            getValue: function () {\n              return value;\n            },\n            getData: function () {\n              return data;\n            },\n            getElement: function () {\n              return document.createElement(\"div\");\n            },\n            getRow: function () {\n              return row.getComponent();\n            },\n            getColumn: function () {\n              return column.getComponent();\n            }\n          };\n\n          function onRendered(callback) {\n            callback();\n          }\n\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\n          });\n        } else {\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: value\n          });\n        }\n      }\n    });\n    return output;\n  }\n\n  formatCollapsedData(data) {\n    var list = document.createElement(\"table\");\n    data.forEach(function (item) {\n      var row = document.createElement(\"tr\");\n      var titleData = document.createElement(\"td\");\n      var valueData = document.createElement(\"td\");\n      var node_content;\n      var titleHighlight = document.createElement(\"strong\");\n      titleData.appendChild(titleHighlight);\n      this.langBind(\"columns|\" + item.field, function (text) {\n        titleHighlight.innerText = text || item.title;\n      });\n\n      if (item.value instanceof Node) {\n        node_content = document.createElement(\"div\");\n        node_content.appendChild(item.value);\n        valueData.appendChild(node_content);\n      } else {\n        valueData.innerHTML = item.value;\n      }\n\n      row.appendChild(titleData);\n      row.appendChild(valueData);\n      list.appendChild(row);\n    }, this);\n    return Object.keys(data).length ? list : \"\";\n  }\n\n}\n\nResponsiveLayout.moduleName = \"responsiveLayout\";\n\nclass SelectRow extends Module {\n  constructor(table) {\n    super(table);\n    this.selecting = false; //flag selecting in progress\n\n    this.lastClickedRow = false; //last clicked row\n\n    this.selectPrev = []; //hold previously selected element for drag drop selection\n\n    this.selectedRows = []; //hold selected rows\n\n    this.headerCheckboxElement = null; // hold header select element\n\n    this.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\n\n    this.registerTableOption(\"selectableRangeMode\", \"drag\"); //highlight rows on hover\n\n    this.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\n\n    this.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\n\n    this.registerTableOption(\"selectableCheck\", function (data, row) {\n      return true;\n    }); //check wheather row is selectable\n\n    this.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\n    this.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\n    this.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\n    this.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\n    this.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.selectable !== false) {\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\n      this.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\n\n      if (this.table.options.selectable && !this.table.options.selectablePersistence) {\n        this.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\n      }\n    }\n  }\n\n  rowRetrieve(type, prevValue) {\n    return type === \"selected\" ? this.selectedRows : prevValue;\n  }\n\n  rowDeleted(row) {\n    this._deselectRow(row, true);\n  }\n\n  clearSelectionData(silent) {\n    this.selecting = false;\n    this.lastClickedRow = false;\n    this.selectPrev = [];\n    this.selectedRows = [];\n\n    if (silent !== true) {\n      this._rowSelectionChanged();\n    }\n  }\n\n  initializeRow(row) {\n    var self = this,\n        element = row.getElement(); // trigger end of row selection\n\n    var endSelect = function () {\n      setTimeout(function () {\n        self.selecting = false;\n      }, 50);\n      document.body.removeEventListener(\"mouseup\", endSelect);\n    };\n\n    row.modules.select = {\n      selected: false\n    }; //set row selection class\n\n    if (self.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      element.classList.add(\"tabulator-selectable\");\n      element.classList.remove(\"tabulator-unselectable\");\n\n      if (self.table.options.selectable && self.table.options.selectable != \"highlight\") {\n        if (self.table.options.selectableRangeMode === \"click\") {\n          element.addEventListener(\"click\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n\n              self.lastClickedRow = self.lastClickedRow || row;\n              var lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\n              var rowIdx = self.table.rowManager.getDisplayRowIndex(row);\n              var fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\n              var toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\n              var rows = self.table.rowManager.getDisplayRows().slice(0);\n              var toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\n\n              if (e.ctrlKey || e.metaKey) {\n                toggledRows.forEach(function (toggledRow) {\n                  if (toggledRow !== self.lastClickedRow) {\n                    if (self.table.options.selectable !== true && !self.isRowSelected(row)) {\n                      if (self.selectedRows.length < self.table.options.selectable) {\n                        self.toggleRow(toggledRow);\n                      }\n                    } else {\n                      self.toggleRow(toggledRow);\n                    }\n                  }\n                });\n                self.lastClickedRow = row;\n              } else {\n                self.deselectRows(undefined, true);\n\n                if (self.table.options.selectable !== true) {\n                  if (toggledRows.length > self.table.options.selectable) {\n                    toggledRows = toggledRows.slice(0, self.table.options.selectable);\n                  }\n                }\n\n                self.selectRows(toggledRows);\n              }\n\n              self.table._clearSelection();\n            } else if (e.ctrlKey || e.metaKey) {\n              self.toggleRow(row);\n              self.lastClickedRow = row;\n            } else {\n              self.deselectRows(undefined, true);\n              self.selectRows(row);\n              self.lastClickedRow = row;\n            }\n          });\n        } else {\n          element.addEventListener(\"click\", function (e) {\n            if (!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()) {\n              self.table._clearSelection();\n            }\n\n            if (!self.selecting) {\n              self.toggleRow(row);\n            }\n          });\n          element.addEventListener(\"mousedown\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n\n              self.selecting = true;\n              self.selectPrev = [];\n              document.body.addEventListener(\"mouseup\", endSelect);\n              document.body.addEventListener(\"keyup\", endSelect);\n              self.toggleRow(row);\n              return false;\n            }\n          });\n          element.addEventListener(\"mouseenter\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n\n              self.toggleRow(row);\n\n              if (self.selectPrev[1] == row) {\n                self.toggleRow(self.selectPrev[0]);\n              }\n            }\n          });\n          element.addEventListener(\"mouseout\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n\n              self.selectPrev.unshift(row);\n            }\n          });\n        }\n      }\n    } else {\n      element.classList.add(\"tabulator-unselectable\");\n      element.classList.remove(\"tabulator-selectable\");\n    }\n  } //toggle row selection\n\n\n  toggleRow(row) {\n    if (this.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      if (row.modules.select && row.modules.select.selected) {\n        this._deselectRow(row);\n      } else {\n        this._selectRow(row);\n      }\n    }\n  } //select a number of rows\n\n\n  selectRows(rows) {\n    var rowMatch;\n\n    switch (typeof rows) {\n      case \"undefined\":\n        this.table.rowManager.rows.forEach(row => {\n          this._selectRow(row, true, true);\n        });\n\n        this._rowSelectionChanged();\n\n        break;\n\n      case \"string\":\n        rowMatch = this.table.rowManager.findRow(rows);\n\n        if (rowMatch) {\n          this._selectRow(rowMatch, true, true);\n        } else {\n          this.table.rowManager.getRows(rows).forEach(row => {\n            this._selectRow(row, true, true);\n          });\n        }\n\n        this._rowSelectionChanged();\n\n        break;\n\n      default:\n        if (Array.isArray(rows)) {\n          rows.forEach(row => {\n            this._selectRow(row, true, true);\n          });\n\n          this._rowSelectionChanged();\n        } else {\n          this._selectRow(rows, false, true);\n        }\n\n        break;\n    }\n  } //select an individual row\n\n\n  _selectRow(rowInfo, silent, force) {\n    //handle max row count\n    if (!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force) {\n      if (this.selectedRows.length >= this.table.options.selectable) {\n        if (this.table.options.selectableRollingSelection) {\n          this._deselectRow(this.selectedRows[0]);\n        } else {\n          return false;\n        }\n      }\n    }\n\n    var row = this.table.rowManager.findRow(rowInfo);\n\n    if (row) {\n      if (this.selectedRows.indexOf(row) == -1) {\n        row.getElement().classList.add(\"tabulator-selected\");\n\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n\n        row.modules.select.selected = true;\n\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = true;\n        }\n\n        this.selectedRows.push(row);\n\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, true);\n        }\n\n        this.dispatchExternal(\"rowSelected\", row.getComponent());\n\n        this._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n\n  isRowSelected(row) {\n    return this.selectedRows.indexOf(row) !== -1;\n  } //deselect a number of rows\n\n\n  deselectRows(rows, silent) {\n    var self = this,\n        rowCount;\n\n    if (typeof rows == \"undefined\") {\n      rowCount = self.selectedRows.length;\n\n      for (let i = 0; i < rowCount; i++) {\n        self._deselectRow(self.selectedRows[0], true);\n      }\n\n      self._rowSelectionChanged(silent);\n    } else {\n      if (Array.isArray(rows)) {\n        rows.forEach(function (row) {\n          self._deselectRow(row, true);\n        });\n\n        self._rowSelectionChanged(silent);\n      } else {\n        self._deselectRow(rows, silent);\n      }\n    }\n  } //deselect an individual row\n\n\n  _deselectRow(rowInfo, silent) {\n    var self = this,\n        row = self.table.rowManager.findRow(rowInfo),\n        index;\n\n    if (row) {\n      index = self.selectedRows.findIndex(function (selectedRow) {\n        return selectedRow == row;\n      });\n\n      if (index > -1) {\n        row.getElement().classList.remove(\"tabulator-selected\");\n\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n\n        row.modules.select.selected = false;\n\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = false;\n        }\n\n        self.selectedRows.splice(index, 1);\n\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, false);\n        }\n\n        this.dispatchExternal(\"rowDeselected\", row.getComponent());\n\n        self._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n\n  getSelectedData() {\n    var data = [];\n    this.selectedRows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    return data;\n  }\n\n  getSelectedRows() {\n    var rows = [];\n    this.selectedRows.forEach(function (row) {\n      rows.push(row.getComponent());\n    });\n    return rows;\n  }\n\n  _rowSelectionChanged(silent) {\n    if (this.headerCheckboxElement) {\n      if (this.selectedRows.length === 0) {\n        this.headerCheckboxElement.checked = false;\n        this.headerCheckboxElement.indeterminate = false;\n      } else if (this.table.rowManager.rows.length === this.selectedRows.length) {\n        this.headerCheckboxElement.checked = true;\n        this.headerCheckboxElement.indeterminate = false;\n      } else {\n        this.headerCheckboxElement.indeterminate = true;\n        this.headerCheckboxElement.checked = false;\n      }\n    }\n\n    if (!silent) {\n      this.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\n    }\n  }\n\n  registerRowSelectCheckbox(row, element) {\n    if (!row._row.modules.select) {\n      row._row.modules.select = {};\n    }\n\n    row._row.modules.select.checkboxEl = element;\n  }\n\n  registerHeaderSelectCheckbox(element) {\n    this.headerCheckboxElement = element;\n  }\n\n  childRowSelection(row, select) {\n    var children = this.table.modules.dataTree.getChildren(row, true);\n\n    if (select) {\n      for (let child of children) {\n        this._selectRow(child, true);\n      }\n    } else {\n      for (let child of children) {\n        this._deselectRow(child, true);\n      }\n    }\n  }\n\n}\n\nSelectRow.moduleName = \"selectRow\"; //sort numbers\n\nfunction number$1(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var decimal = params.decimalSeparator;\n  var thousand = params.thousandSeparator;\n  var emptyAlign = 0;\n  a = String(a);\n  b = String(b);\n\n  if (thousand) {\n    a = a.split(thousand).join(\"\");\n    b = b.split(thousand).join(\"\");\n  }\n\n  if (decimal) {\n    a = a.split(decimal).join(\".\");\n    b = b.split(decimal).join(\".\");\n  }\n\n  a = parseFloat(a);\n  b = parseFloat(b); //handle non numeric values\n\n  if (isNaN(a)) {\n    emptyAlign = isNaN(b) ? 0 : -1;\n  } else if (isNaN(b)) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    return a - b;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort strings\n\n\nfunction string(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  var locale; //handle empty values\n\n  if (!a) {\n    emptyAlign = !b ? 0 : -1;\n  } else if (!b) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    switch (typeof params.locale) {\n      case \"boolean\":\n        if (params.locale) {\n          locale = this.langLocale();\n        }\n\n        break;\n\n      case \"string\":\n        locale = params.locale;\n        break;\n    }\n\n    return String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort datetime\n\n\nfunction datetime$1(a, b, aRow, bRow, column, dir, params) {\n  var DT = window.DateTime || luxon.DateTime;\n  var format = params.format || \"dd/MM/yyyy HH:mm:ss\",\n      alignEmptyValues = params.alignEmptyValues,\n      emptyAlign = 0;\n\n  if (typeof DT != \"undefined\") {\n    a = DT.fromFormat(String(a), format);\n    b = DT.fromFormat(String(b), format);\n\n    if (!a.isValid) {\n      emptyAlign = !b.isValid ? 0 : -1;\n    } else if (!b.isValid) {\n      emptyAlign = 1;\n    } else {\n      //compare valid values\n      return a - b;\n    } //fix empty values in position\n\n\n    if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n      emptyAlign *= -1;\n    }\n\n    return emptyAlign;\n  } else {\n    console.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\n  }\n} //sort date\n\n\nfunction date(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"dd/MM/yyyy\";\n  }\n\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n} //sort times\n\n\nfunction time(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"HH:mm\";\n  }\n\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n} //sort booleans\n\n\nfunction boolean(a, b, aRow, bRow, column, dir, params) {\n  var el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\n  var el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\n  return el1 - el2;\n} //sort if element contains any data\n\n\nfunction array(a, b, aRow, bRow, column, dir, params) {\n  var el1 = 0;\n  var el2 = 0;\n  var type = params.type || \"length\";\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n\n  function calc(value) {\n    switch (type) {\n      case \"length\":\n        return value.length;\n\n      case \"sum\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        });\n\n      case \"max\":\n        return Math.max.apply(null, value);\n\n      case \"min\":\n        return Math.min.apply(null, value);\n\n      case \"avg\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        }) / value.length;\n    }\n  } //handle non array values\n\n\n  if (!Array.isArray(a)) {\n    alignEmptyValues = !Array.isArray(b) ? 0 : -1;\n  } else if (!Array.isArray(b)) {\n    alignEmptyValues = 1;\n  } else {\n    //compare valid values\n    el1 = a ? calc(a) : 0;\n    el2 = b ? calc(b) : 0;\n    return el1 - el2;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort if element contains any data\n\n\nfunction exists(a, b, aRow, bRow, column, dir, params) {\n  var el1 = typeof a == \"undefined\" ? 0 : 1;\n  var el2 = typeof b == \"undefined\" ? 0 : 1;\n  return el1 - el2;\n} //sort alpha numeric strings\n\n\nfunction alphanum(as, bs, aRow, bRow, column, dir, params) {\n  var a,\n      b,\n      a1,\n      b1,\n      i = 0,\n      L,\n      rx = /(\\d+)|(\\D+)/g,\n      rd = /\\d/;\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0; //handle empty values\n\n  if (!as && as !== 0) {\n    emptyAlign = !bs && bs !== 0 ? 0 : -1;\n  } else if (!bs && bs !== 0) {\n    emptyAlign = 1;\n  } else {\n    if (isFinite(as) && isFinite(bs)) return as - bs;\n    a = String(as).toLowerCase();\n    b = String(bs).toLowerCase();\n    if (a === b) return 0;\n    if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n    a = a.match(rx);\n    b = b.match(rx);\n    L = a.length > b.length ? b.length : a.length;\n\n    while (i < L) {\n      a1 = a[i];\n      b1 = b[i++];\n\n      if (a1 !== b1) {\n        if (isFinite(a1) && isFinite(b1)) {\n          if (a1.charAt(0) === \"0\") a1 = \".\" + a1;\n          if (b1.charAt(0) === \"0\") b1 = \".\" + b1;\n          return a1 - b1;\n        } else return a1 > b1 ? 1 : -1;\n      }\n    }\n\n    return a.length > b.length;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n}\n\nvar defaultSorters = {\n  number: number$1,\n  string: string,\n  date: date,\n  time: time,\n  datetime: datetime$1,\n  boolean: boolean,\n  array: array,\n  exists: exists,\n  alphanum: alphanum\n};\n\nclass Sort extends Module {\n  constructor(table) {\n    super(table);\n    this.sortList = []; //holder current sort\n\n    this.changed = false; //has the sort changed since last render\n\n    this.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\n\n    this.registerTableOption(\"initialSort\", false); //initial sorting criteria\n\n    this.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\n\n    this.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\n\n    this.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\n\n    this.registerColumnOption(\"sorter\");\n    this.registerColumnOption(\"sorterParams\");\n    this.registerColumnOption(\"headerSort\", true);\n    this.registerColumnOption(\"headerSortStartingDir\");\n    this.registerColumnOption(\"headerSortTristate\");\n  }\n\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    this.registerDataHandler(this.sort.bind(this), 20);\n    this.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\n    this.registerTableFunction(\"getSorters\", this.getSort.bind(this));\n    this.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\n\n    if (this.table.options.sortMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteSortParams.bind(this));\n    }\n  }\n\n  tableBuilt() {\n    if (this.table.options.initialSort) {\n      this.setSort(this.table.options.initialSort);\n    }\n  }\n\n  remoteSortParams(data, config, silent, params) {\n    var sorters = this.getSort();\n    sorters.forEach(item => {\n      delete item.column;\n    });\n    params.sort = sorters;\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userSetSort(sortList, dir) {\n    this.setSort(sortList, dir); // this.table.rowManager.sorterRefresh();\n\n    this.refreshSort();\n  }\n\n  clearSort() {\n    this.clear(); // this.table.rowManager.sorterRefresh();\n\n    this.refreshSort();\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n  //initialize column header for sorting\n\n\n  initializeColumn(column) {\n    var sorter = false,\n        colEl,\n        arrowEl;\n\n    switch (typeof column.definition.sorter) {\n      case \"string\":\n        if (Sort.sorters[column.definition.sorter]) {\n          sorter = Sort.sorters[column.definition.sorter];\n        } else {\n          console.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\n        }\n\n        break;\n\n      case \"function\":\n        sorter = column.definition.sorter;\n        break;\n    }\n\n    column.modules.sort = {\n      sorter: sorter,\n      dir: \"none\",\n      params: column.definition.sorterParams || {},\n      startingDir: column.definition.headerSortStartingDir || \"asc\",\n      tristate: column.definition.headerSortTristate\n    };\n\n    if (column.definition.headerSort !== false) {\n      colEl = column.getElement();\n      colEl.classList.add(\"tabulator-sortable\");\n      arrowEl = document.createElement(\"div\");\n      arrowEl.classList.add(\"tabulator-col-sorter\");\n\n      if (typeof this.table.options.headerSortElement == \"object\") {\n        arrowEl.appendChild(this.table.options.headerSortElement);\n      } else {\n        arrowEl.innerHTML = this.table.options.headerSortElement;\n      } //create sorter arrow\n\n\n      column.titleHolderElement.appendChild(arrowEl);\n      column.modules.sort.element = arrowEl; //sort on click\n\n      colEl.addEventListener(\"click\", e => {\n        var dir = \"\",\n            sorters = [],\n            match = false;\n\n        if (column.modules.sort) {\n          if (column.modules.sort.tristate) {\n            if (column.modules.sort.dir == \"none\") {\n              dir = column.modules.sort.startingDir;\n            } else {\n              if (column.modules.sort.dir == column.modules.sort.startingDir) {\n                dir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\n              } else {\n                dir = \"none\";\n              }\n            }\n          } else {\n            switch (column.modules.sort.dir) {\n              case \"asc\":\n                dir = \"desc\";\n                break;\n\n              case \"desc\":\n                dir = \"asc\";\n                break;\n\n              default:\n                dir = column.modules.sort.startingDir;\n            }\n          }\n\n          if (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\n            sorters = this.getSort();\n            match = sorters.findIndex(sorter => {\n              return sorter.field === column.getField();\n            });\n\n            if (match > -1) {\n              sorters[match].dir = dir;\n\n              if (match != sorters.length - 1) {\n                match = sorters.splice(match, 1)[0];\n\n                if (dir != \"none\") {\n                  sorters.push(match);\n                }\n              }\n            } else {\n              if (dir != \"none\") {\n                sorters.push({\n                  column: column,\n                  dir: dir\n                });\n              }\n            } //add to existing sort\n\n\n            this.setSort(sorters);\n          } else {\n            if (dir == \"none\") {\n              this.clear();\n            } else {\n              //sort by column only\n              this.setSort(column, dir);\n            }\n          } // this.table.rowManager.sorterRefresh(!this.sortList.length);\n\n\n          this.refreshSort();\n        }\n      });\n    }\n  }\n\n  refreshSort() {\n    if (this.table.options.sortMode === \"remote\") {\n      this.reloadData();\n    } else {\n      this.refreshData(true);\n    } //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n\n  } //check if the sorters have changed since last use\n\n\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  } //return current sorters\n\n\n  getSort() {\n    var self = this,\n        sorters = [];\n    self.sortList.forEach(function (item) {\n      if (item.column) {\n        sorters.push({\n          column: item.column.getComponent(),\n          field: item.column.getField(),\n          dir: item.dir\n        });\n      }\n    });\n    return sorters;\n  } //change sort list and trigger sort\n\n\n  setSort(sortList, dir) {\n    var self = this,\n        newSortList = [];\n\n    if (!Array.isArray(sortList)) {\n      sortList = [{\n        column: sortList,\n        dir: dir\n      }];\n    }\n\n    sortList.forEach(function (item) {\n      var column;\n      column = self.table.columnManager.findColumn(item.column);\n\n      if (column) {\n        item.column = column;\n        newSortList.push(item);\n        self.changed = true;\n      } else {\n        console.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\n      }\n    });\n    self.sortList = newSortList;\n    this.dispatch(\"sort-changed\");\n  } //clear sorters\n\n\n  clear() {\n    this.setSort([]);\n  } //find appropriate sorter for column\n\n\n  findSorter(column) {\n    var row = this.table.rowManager.activeRows[0],\n        sorter = \"string\",\n        field,\n        value;\n\n    if (row) {\n      row = row.getData();\n      field = column.getField();\n\n      if (field) {\n        value = column.getFieldValue(row);\n\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              }\n            }\n\n            break;\n        }\n      }\n    }\n\n    return Sort.sorters[sorter];\n  } //work through sort list sorting data\n\n\n  sort(data) {\n    var self = this,\n        sortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\n        sortListActual = [],\n        rowComponents = [];\n\n    if (this.subscribedExternal(\"dataSorting\")) {\n      this.dispatchExternal(\"dataSorting\", self.getSort());\n    }\n\n    self.clearColumnHeaders();\n\n    if (this.table.options.sortMode !== \"remote\") {\n      //build list of valid sorters and trigger column specific callbacks before sort begins\n      sortList.forEach(function (item, i) {\n        var sortObj = item.column.modules.sort;\n\n        if (item.column && sortObj) {\n          //if no sorter has been defined, take a guess\n          if (!sortObj.sorter) {\n            sortObj.sorter = self.findSorter(item.column);\n          }\n\n          item.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\n          sortListActual.push(item);\n        }\n\n        self.setColumnHeader(item.column, item.dir);\n      }); //sort data\n\n      if (sortListActual.length) {\n        self._sortItems(data, sortListActual);\n      }\n    } else {\n      sortList.forEach(function (item, i) {\n        self.setColumnHeader(item.column, item.dir);\n      });\n    }\n\n    if (this.subscribedExternal(\"dataSorted\")) {\n      data.forEach(row => {\n        rowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\n    }\n\n    return data;\n  } //clear sort arrows on columns\n\n\n  clearColumnHeaders() {\n    this.table.columnManager.getRealColumns().forEach(function (column) {\n      if (column.modules.sort) {\n        column.modules.sort.dir = \"none\";\n        column.getElement().setAttribute(\"aria-sort\", \"none\");\n      }\n    });\n  } //set the column header sort direction\n\n\n  setColumnHeader(column, dir) {\n    column.modules.sort.dir = dir;\n    column.getElement().setAttribute(\"aria-sort\", dir);\n  } //sort each item in sort list\n\n\n  _sortItems(data, sortList) {\n    var sorterCount = sortList.length - 1;\n    data.sort((a, b) => {\n      var result;\n\n      for (var i = sorterCount; i >= 0; i--) {\n        let sortItem = sortList[i];\n        result = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\n\n        if (result !== 0) {\n          break;\n        }\n      }\n\n      return result;\n    });\n  } //process individual rows for a sort function on active data\n\n\n  _sortRow(a, b, column, dir, params) {\n    var el1Comp, el2Comp; //switch elements depending on search direction\n\n    var el1 = dir == \"asc\" ? a : b;\n    var el2 = dir == \"asc\" ? b : a;\n    a = column.getFieldValue(el1.getData());\n    b = column.getFieldValue(el2.getData());\n    a = typeof a !== \"undefined\" ? a : \"\";\n    b = typeof b !== \"undefined\" ? b : \"\";\n    el1Comp = el1.getComponent();\n    el2Comp = el2.getComponent();\n    return column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\n  }\n\n}\n\nSort.moduleName = \"sort\"; //load defaults\n\nSort.sorters = defaultSorters;\nvar defaultValidators = {\n  //is integer\n  integer: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  },\n  //is float\n  float: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && value % 1 !== 0;\n  },\n  //must be a number\n  numeric: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return !isNaN(value);\n  },\n  //must be a string\n  string: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return isNaN(value);\n  },\n  //maximum value\n  max: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return parseFloat(value) <= parameters;\n  },\n  //minimum value\n  min: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return parseFloat(value) >= parameters;\n  },\n  //starts with  value\n  starts: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\n  },\n  //ends with  value\n  ends: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\n  },\n  //minimum string length\n  minLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).length >= parameters;\n  },\n  //maximum string length\n  maxLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).length <= parameters;\n  },\n  //in provided value list\n  in: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    if (typeof parameters == \"string\") {\n      parameters = parameters.split(\"|\");\n    }\n\n    return value === \"\" || parameters.indexOf(value) > -1;\n  },\n  //must match provided regex\n  regex: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    var reg = new RegExp(parameters);\n    return reg.test(value);\n  },\n  //value must be unique in this column\n  unique: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    var unique = true;\n    var cellData = cell.getData();\n\n    var column = cell.getColumn()._getSelf();\n\n    this.table.rowManager.rows.forEach(function (row) {\n      var data = row.getData();\n\n      if (data !== cellData) {\n        if (value == column.getFieldValue(data)) {\n          unique = false;\n        }\n      }\n    });\n    return unique;\n  },\n  //must have a value\n  required: function (cell, value, parameters) {\n    return value !== \"\" && value !== null && typeof value !== \"undefined\";\n  }\n};\n\nclass Validate extends Module {\n  constructor(table) {\n    super(table);\n    this.invalidCells = [];\n    this.registerTableOption(\"validationMode\", \"blocking\");\n    this.registerColumnOption(\"validator\");\n    this.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\n    this.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\n    this.registerTableFunction(\"validate\", this.userValidate.bind(this));\n    this.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\n    this.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\n    this.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\n    this.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"cell-delete\", this.clearValidation.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n  } ///////////////////////////////////\n  ////////// Cell Functions /////////\n  ///////////////////////////////////\n\n\n  cellIsValid(cell) {\n    return cell.modules.validate ? !cell.modules.validate.invalid : true;\n  }\n\n  cellValidate(cell) {\n    return this.validate(cell.column.modules.validate, cell, cell.getValue());\n  } ///////////////////////////////////\n  ///////// Column Functions ////////\n  ///////////////////////////////////\n\n\n  columnValidate(column) {\n    var invalid = [];\n    column.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  } ///////////////////////////////////\n  ////////// Row Functions //////////\n  ///////////////////////////////////\n\n\n  rowValidate(row) {\n    var invalid = [];\n    row.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userClearCellValidation(cells) {\n    if (!cells) {\n      cells = this.getInvalidCells();\n    }\n\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n\n    cells.forEach(cell => {\n      this.clearValidation(cell._getSelf());\n    });\n  }\n\n  userValidate(cells) {\n    var output = []; //clear row data\n\n    this.table.rowManager.rows.forEach(function (row) {\n      var valid = row.validate();\n\n      if (valid !== true) {\n        output = output.concat(valid);\n      }\n    });\n    return output.length ? output : true;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.validator !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  } //validate\n\n\n  initializeColumn(column) {\n    var self = this,\n        config = [],\n        validator;\n\n    if (column.definition.validator) {\n      if (Array.isArray(column.definition.validator)) {\n        column.definition.validator.forEach(function (item) {\n          validator = self._extractValidator(item);\n\n          if (validator) {\n            config.push(validator);\n          }\n        });\n      } else {\n        validator = this._extractValidator(column.definition.validator);\n\n        if (validator) {\n          config.push(validator);\n        }\n      }\n\n      column.modules.validate = config.length ? config : false;\n    }\n  }\n\n  _extractValidator(value) {\n    var type, params, pos;\n\n    switch (typeof value) {\n      case \"string\":\n        pos = value.indexOf(':');\n\n        if (pos > -1) {\n          type = value.substring(0, pos);\n          params = value.substring(pos + 1);\n        } else {\n          type = value;\n        }\n\n        return this._buildValidator(type, params);\n\n      case \"function\":\n        return this._buildValidator(value);\n\n      case \"object\":\n        return this._buildValidator(value.type, value.parameters);\n    }\n  }\n\n  _buildValidator(type, params) {\n    var func = typeof type == \"function\" ? type : Validate.validators[type];\n\n    if (!func) {\n      console.warn(\"Validator Setup Error - No matching validator found:\", type);\n      return false;\n    } else {\n      return {\n        type: typeof type == \"function\" ? \"function\" : type,\n        func: func,\n        params: params\n      };\n    }\n  }\n\n  validate(validators, cell, value) {\n    var self = this,\n        valid = [],\n        invalidIndex = this.invalidCells.indexOf(cell);\n\n    if (validators) {\n      validators.forEach(function (item) {\n        if (!item.func.call(self, cell.getComponent(), value, item.params)) {\n          valid.push({\n            type: item.type,\n            parameters: item.params\n          });\n        }\n      });\n    }\n\n    valid = valid.length ? valid : true;\n\n    if (!cell.modules.validate) {\n      cell.modules.validate = {};\n    }\n\n    if (valid === true) {\n      cell.modules.validate.invalid = false;\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    } else {\n      cell.modules.validate.invalid = true;\n\n      if (this.table.options.validationMode !== \"manual\") {\n        cell.getElement().classList.add(\"tabulator-validation-fail\");\n      }\n\n      if (invalidIndex == -1) {\n        this.invalidCells.push(cell);\n      }\n    }\n\n    return valid;\n  }\n\n  getInvalidCells() {\n    var output = [];\n    this.invalidCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n\n  clearValidation(cell) {\n    var invalidIndex;\n\n    if (cell.modules.validate && cell.modules.validate.invalid) {\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      cell.modules.validate.invalid = false;\n      invalidIndex = this.invalidCells.indexOf(cell);\n\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    }\n  }\n\n}\n\nValidate.moduleName = \"validate\"; //load defaults\n\nValidate.validators = defaultValidators;\nvar modules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AccessorModule: Accessor,\n  AjaxModule: Ajax,\n  ClipboardModule: Clipboard,\n  ColumnCalcsModule: ColumnCalcs,\n  DataTreeModule: DataTree,\n  DownloadModule: Download,\n  EditModule: Edit,\n  ExportModule: Export,\n  FilterModule: Filter,\n  FormatModule: Format,\n  FrozenColumnsModule: FrozenColumns,\n  FrozenRowsModule: FrozenRows,\n  GroupRowsModule: GroupRows,\n  HistoryModule: History,\n  HtmlTableImportModule: HtmlTableImport,\n  InteractionModule: Interaction,\n  KeybindingsModule: Keybindings,\n  MenuModule: Menu,\n  MoveColumnsModule: MoveColumns,\n  MoveRowsModule: MoveRows,\n  MutatorModule: Mutator,\n  PageModule: Page,\n  PersistenceModule: Persistence,\n  PrintModule: Print,\n  ReactiveDataModule: ReactiveData,\n  ResizeColumnsModule: ResizeColumns,\n  ResizeRowsModule: ResizeRows,\n  ResizeTableModule: ResizeTable,\n  ResponsiveLayoutModule: ResponsiveLayout,\n  SelectRowModule: SelectRow,\n  SortModule: Sort,\n  ValidateModule: Validate\n});\nvar defaultOptions = {\n  debugEventsExternal: false,\n  //flag to console log events\n  debugEventsInternal: false,\n  //flag to console log events\n  debugInvalidOptions: true,\n  //allow toggling of invalid option warnings\n  height: false,\n  //height of tabulator\n  minHeight: false,\n  //minimum height of tabulator\n  maxHeight: false,\n  //maximum height of tabulator\n  columnMaxWidth: false,\n  //minimum global width for a column\n  columnHeaderVertAlign: \"top\",\n  //vertical alignment of column headers\n  columns: [],\n  //store for colum header info\n  columnDefaults: {},\n  //store column default props\n  data: false,\n  //default starting data\n  autoColumns: false,\n  //build columns from data row structure\n  autoColumnsDefinitions: false,\n  nestedFieldSeparator: \".\",\n  //separator for nested data\n  tooltipGenerationMode: \"load\",\n  //when to generate tooltips\n  footerElement: false,\n  //hold footer element\n  index: \"id\",\n  //filed for row index\n  textDirection: \"auto\",\n  addRowPos: \"bottom\",\n  //position to insert blank rows, top|bottom\n  headerVisible: true,\n  //hide header\n  renderVertical: \"virtual\",\n  renderHorizontal: \"basic\",\n  renderVerticalBuffer: 0,\n  // set virtual DOM buffer size\n  scrollToRowPosition: \"top\",\n  scrollToRowIfVisible: true,\n  scrollToColumnPosition: \"left\",\n  scrollToColumnIfVisible: true,\n  rowFormatter: false,\n  rowFormatterPrint: null,\n  rowFormatterClipboard: null,\n  rowFormatterHtmlOutput: null,\n  placeholder: false,\n  dataLoader: true,\n  dataLoaderLoading: false,\n  dataLoaderError: false,\n  dataSendParams: {},\n  dataReceiveParams: {}\n};\n\nclass OptionsList {\n  constructor(table, msgType) {\n    let defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.table = table;\n    this.msgType = msgType;\n    this.registeredDefaults = Object.assign({}, defaults);\n  }\n\n  register(option, value) {\n    this.registeredDefaults[option] = value;\n  }\n\n  generate(defaultOptions) {\n    let userOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var output = Object.assign({}, this.registeredDefaults);\n    Object.assign(output, defaultOptions);\n\n    if (userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions) {\n      for (var key in userOptions) {\n        if (!output.hasOwnProperty(key)) {\n          console.warn(\"Invalid \" + this.msgType + \" option:\", key);\n        }\n      }\n    }\n\n    for (var key in output) {\n      if (key in userOptions) {\n        output[key] = userOptions[key];\n      } else {\n        if (Array.isArray(output[key])) {\n          output[key] = Object.assign([], output[key]);\n        } else if (typeof output[key] === \"object\" && output[key] !== null) {\n          output[key] = Object.assign({}, output[key]);\n        } else if (typeof output[key] === \"undefined\") {\n          delete output[key];\n        }\n      }\n    }\n\n    return output;\n  }\n\n}\n\nclass Renderer extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.elementVertical = table.rowManager.element;\n    this.elementHorizontal = table.columnManager.element;\n    this.tableElement = table.rowManager.tableElement;\n    this.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\n  } ///////////////////////////////////\n  /////// Internal Bindings /////////\n  ///////////////////////////////////\n\n\n  initialize() {//initialize core functionality\n  }\n\n  clearRows() {//clear down existing rows layout\n  }\n\n  clearColumns() {//clear down existing columns layout\n  }\n\n  reinitializeColumnWidths(columns) {//resize columns to fit data\n  }\n\n  renderRows() {//render rows from a clean slate\n  }\n\n  renderColumns() {//render columns from a clean slate\n  }\n\n  rerenderRows(callback) {\n    // rerender rows and keep position\n    if (callback) {\n      callback();\n    }\n  }\n\n  rerenderColumns(update, blockRedraw) {//rerender columns\n  }\n\n  renderRowCells(row) {//render the cells in a row\n  }\n\n  rerenderRowCells(row, force) {//rerender the cells in a row\n  }\n\n  scrollColumns(left, dir) {//handle horizontal scrolling\n  }\n\n  scrollRows(top, dir) {//handle vertical scolling\n  }\n\n  resize() {//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\n  }\n\n  scrollToRow(row) {//scroll to a specific row\n  }\n\n  scrollToRowNearestTop(row) {//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\n  }\n\n  visibleRows(includingBuffer) {\n    //return the visible rows\n    return [];\n  } ///////////////////////////////////\n  //////// Helper Functions /////////\n  ///////////////////////////////////\n\n\n  rows() {\n    return this.table.rowManager.getDisplayRows();\n  }\n\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  } ///////////////////////////////////\n  /////// External Triggers /////////\n  /////// (DO NOT OVERRIDE) /////////\n  ///////////////////////////////////\n\n\n  clear() {\n    //clear down existing layout\n    this.clearRows();\n    this.clearColumns();\n  }\n\n  render() {\n    //render from a clean slate\n    this.renderRows();\n    this.renderColumns();\n  }\n\n  rerender(callback) {\n    // rerender and keep position\n    this.rerenderRows();\n    this.rerenderColumns();\n  }\n\n  scrollToRowPosition(row, position, ifVisible) {\n    var rowIndex = this.rows().indexOf(row),\n        rowEl = row.getElement(),\n        offset = 0;\n    return new Promise((resolve, reject) => {\n      if (rowIndex > -1) {\n        if (typeof ifVisible === \"undefined\") {\n          ifVisible = this.table.options.scrollToRowIfVisible;\n        } //check row visibility\n\n\n        if (!ifVisible) {\n          if (Helpers.elVisible(rowEl)) {\n            offset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\n\n            if (offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight) {\n              resolve();\n              return false;\n            }\n          }\n        }\n\n        if (typeof position === \"undefined\") {\n          position = this.table.options.scrollToRowPosition;\n        }\n\n        if (position === \"nearest\") {\n          position = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\";\n        } //scroll to row\n\n\n        this.scrollToRow(row); //align to correct position\n\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - (this.elementVertical.scrollHeight - rowEl.offsetTop) / 2;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight / 2;\n            }\n\n            break;\n\n          case \"bottom\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\n            }\n\n            break;\n        }\n\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Row not visible\");\n        reject(\"Scroll Error - Row not visible\");\n      }\n    });\n  }\n\n}\n\nclass BaiscHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n  }\n\n  renderRowCells(row) {\n    row.cells.forEach(cell => {\n      row.element.appendChild(cell.getElement());\n      cell.cellRendered();\n    });\n  }\n\n  reinitializeColumnWidths(columns) {\n    columns.forEach(function (column) {\n      column.reinitializeWidth();\n    });\n  }\n\n}\n\nclass VirtualDomHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n    this.leftCol = 0;\n    this.rightCol = 0;\n    this.scrollLeft = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n    this.fitDataColAvg = 0;\n    this.window = 200; //pixel margin to make column visible before it is shown on screen\n\n    this.initialized = false;\n    this.columns = [];\n  }\n\n  initialize() {\n    this.compatabilityCheck();\n  }\n\n  compatabilityCheck() {\n    var columns = this.options(\"columns\"),\n        frozen = false,\n        ok = true;\n\n    if (this.options(\"layout\") == \"fitDataTable\") {\n      console.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\n      ok = false;\n    }\n\n    if (this.options(\"responsiveLayout\")) {\n      console.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\n      ok = false;\n    }\n\n    if (this.options(\"rtl\")) {\n      console.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\n      ok = false;\n    }\n\n    if (columns) {\n      frozen = columns.find(col => {\n        return col.frozen;\n      });\n\n      if (frozen) {\n        console.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\n        ok = false;\n      }\n    } // if(!ok){\n    // \toptions.virtualDomHoz = false;\n    // }\n\n\n    return ok;\n  } //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n\n  renderColumns(row, force) {\n    this.dataChange();\n  }\n\n  scrollColumns(left, dir) {\n    if (this.scrollLeft != left) {\n      this.scrollLeft = left;\n      this.scroll(left - (this.vDomScrollPosLeft + this.window));\n    }\n  }\n\n  rerenderColumns(update, blockRedraw) {\n    var old = {\n      cols: this.columns,\n      leftCol: this.leftCol,\n      rightCol: this.rightCol\n    };\n\n    if (update && !this.initialized) {\n      return;\n    }\n\n    this.clear();\n    this.scrollLeft = this.elementVertical.scrollLeft;\n    this.vDomScrollPosLeft = this.scrollLeft - this.window;\n    this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n    var colPos = 0;\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      var config = {};\n\n      if (column.visible) {\n        var width = column.getWidth();\n        config.leftPos = colPos;\n        config.rightPos = colPos + width;\n        config.width = width;\n\n        if (this.options(\"layout\") === \"fitData\") {\n          config.fitDataCheck = true;\n        }\n\n        if (colPos + width > this.vDomScrollPosLeft && colPos < this.vDomScrollPosRight) {\n          //column is visible\n          if (this.leftCol == -1) {\n            this.leftCol = this.columns.length;\n            this.vDomPadLeft = colPos;\n          }\n\n          this.rightCol = this.columns.length;\n        } else {\n          // column is hidden\n          if (this.leftCol !== -1) {\n            this.vDomPadRight += width;\n          }\n        }\n\n        this.columns.push(column);\n        column.modules.vdomHoz = config;\n        colPos += width;\n      }\n    });\n    this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    this.initialized = true;\n\n    if (!blockRedraw) {\n      if (!update || this.reinitChanged(old)) {\n        this.reinitializeRows();\n      }\n    }\n\n    this.elementVertical.scrollLeft = this.scrollLeft;\n  }\n\n  renderRowCells(row) {\n    if (this.initialized) {\n      this.initializeRow(row);\n    } else {\n      row.cells.forEach(cell => {\n        row.element.appendChild(cell.getElement());\n        cell.cellRendered();\n      });\n    }\n  }\n\n  rerenderRowCells(row, force) {\n    this.reinitializeRow(row, force);\n  }\n\n  reinitializeColumnWidths(columns) {\n    for (let i = this.leftCol; i <= this.rightCol; i++) {\n      this.columns[i].reinitializeWidth();\n    }\n  } //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n\n  deinitialize() {\n    this.initialized = false;\n  }\n\n  clear() {\n    this.columns = [];\n    this.leftCol = -1;\n    this.rightCol = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n  }\n\n  dataChange() {\n    var change = false,\n        collsWidth = 0,\n        colEnd = 0,\n        row,\n        rowEl;\n\n    if (this.options(\"layout\") === \"fitData\") {\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        if (!column.definition.width && column.visible) {\n          change = true;\n        }\n      });\n\n      if (change) {\n        if (change && this.table.rowManager.getDisplayRows().length) {\n          this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n          var row = this.chain(\"rows-sample\", [1], [], () => {\n            return this.table.rowManager.getDisplayRows()[0];\n          })[0];\n\n          if (row) {\n            rowEl = row.getElement();\n            row.generateCells();\n            this.tableElement.appendChild(rowEl);\n\n            for (var colEnd = 0; colEnd < row.cells.length; colEnd++) {\n              let cell = row.cells[colEnd];\n              rowEl.appendChild(cell.getElement());\n              cell.column.reinitializeWidth();\n              collsWidth += cell.column.getWidth();\n\n              if (collsWidth > this.vDomScrollPosRight) {\n                break;\n              }\n            }\n\n            rowEl.parentNode.removeChild(rowEl);\n            this.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\n\n            for (colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++) {\n              this.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\n            }\n\n            this.rerenderColumns(false, true);\n          }\n        }\n      }\n    } else {\n      if (this.options(\"layout\") === \"fitColumns\") {\n        this.layoutRefresh();\n        this.rerenderColumns(false, true);\n      }\n    }\n  }\n\n  reinitChanged(old) {\n    var match = true;\n\n    if (old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol) {\n      return true;\n    }\n\n    old.cols.forEach((col, i) => {\n      if (col !== this.columns[i]) {\n        match = false;\n      }\n    });\n    return !match;\n  }\n\n  reinitializeRows() {\n    var rows = this.table.rowManager.getVisibleRows();\n    rows.forEach(row => {\n      this.reinitializeRow(row, true);\n    });\n  }\n\n  scroll(diff) {\n    this.vDomScrollPosLeft += diff;\n    this.vDomScrollPosRight += diff;\n\n    if (diff > this.elementVertical.clientWidth * .8) {\n      this.rerenderColumns();\n    } else {\n      if (diff > 0) {\n        //scroll right\n        this.addColRight();\n        this.removeColLeft();\n      } else {\n        //scroll left\n        this.addColLeft();\n        this.removeColRight();\n      }\n    }\n  }\n\n  colPositionAdjust(start, end, diff) {\n    for (let i = start; i < end; i++) {\n      let column = this.columns[i];\n      column.modules.vdomHoz.leftPos += diff;\n      column.modules.vdomHoz.rightPos += diff;\n    }\n  }\n\n  addColRight() {\n    var column = this.columns[this.rightCol + 1],\n        rows;\n\n    if (column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n      this.rightCol++;\n\n      if (this.rightCol >= this.columns.length - 1) {\n        this.vDomPadRight = 0;\n      } else {\n        this.vDomPadRight -= column.getWidth();\n      }\n\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.addColRight();\n    }\n  }\n\n  addColLeft() {\n    var column = this.columns[this.leftCol - 1],\n        rows;\n\n    if (column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft) {\n      var rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().prepend(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n\n      if (!this.leftCol) {\n        this.vDomPadLeft = 0;\n      } else {\n        this.vDomPadLeft -= column.getWidth();\n      }\n\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol--;\n      this.addColLeft();\n    }\n  }\n\n  removeColRight(column) {\n    var column = this.columns[this.rightCol],\n        rows;\n\n    if (column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      column.modules.vdomHoz.visible = false;\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().removeChild(cell.getElement());\n        }\n      });\n      this.vDomPadRight += column.getWidth();\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.rightCol--;\n      this.removeColRight();\n    }\n  }\n\n  removeColLeft() {\n    var column = this.columns[this.leftCol],\n        rows;\n\n    if (column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        var cell, el;\n\n        if (row.type !== \"group\") {\n          cell = row.getCell(column);\n\n          if (cell) {\n            el = cell.getElement();\n\n            if (el.parentNode) {\n              row.getElement().removeChild(el);\n            }\n          }\n        }\n      });\n      this.vDomPadLeft += column.getWidth();\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol++;\n      this.removeColLeft();\n    }\n  }\n\n  fitDataColActualWidthCheck(column) {\n    var newWidth, widthDiff;\n\n    if (column.modules.vdomHoz.fitDataCheck) {\n      column.reinitializeWidth();\n      newWidth = column.getWidth();\n      widthDiff = newWidth - column.modules.vdomHoz.width;\n\n      if (widthDiff) {\n        column.modules.vdomHoz.rightPos += widthDiff;\n        column.modules.vdomHoz.width = newWidth;\n        this.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\n      }\n\n      column.modules.vdomHoz.fitDataCheck = false;\n    }\n  }\n\n  initializeRow(row) {\n    if (row.type !== \"group\") {\n      row.modules.vdomHoz = {\n        leftCol: this.leftCol,\n        rightCol: this.rightCol\n      };\n\n      for (let i = this.leftCol; i <= this.rightCol; i++) {\n        let column = this.columns[i];\n\n        if (column && column.visible) {\n          let cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      }\n    }\n  }\n\n  reinitializeRow(row, force) {\n    if (row.type !== \"group\") {\n      if (force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol) {\n        var rowEl = row.getElement();\n\n        while (rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\n\n        this.initializeRow(row);\n      }\n    }\n  }\n\n}\n\nclass ColumnManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.blockHozScrollEvent = false;\n    this.headersElement = null;\n    this.element = null; //containing element\n\n    this.columns = []; // column definition object\n\n    this.columnsByIndex = []; //columns by index\n\n    this.columnsByField = {}; //columns by field\n\n    this.scrollLeft = 0;\n    this.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\n    this.renderer = null;\n  } ////////////// Setup Functions /////////////////\n\n\n  initialize() {\n    this.initializeRenderer();\n    this.headersElement = this.createHeadersElement();\n    this.element = this.createHeaderElement();\n    this.element.insertBefore(this.headersElement, this.element.firstChild);\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n  }\n\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomHorizontal,\n      \"basic\": BaiscHorizontal\n    };\n\n    if (typeof this.table.options.renderHorizontal === \"string\") {\n      renderClass = renderers[this.table.options.renderHorizontal];\n    } else {\n      renderClass = this.table.options.renderHorizontal;\n    }\n\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\n    }\n  }\n\n  createHeadersElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-headers\");\n    el.setAttribute(\"role\", \"row\");\n    return el;\n  }\n\n  createHeaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-header\");\n    el.setAttribute(\"role\", \"rowgroup\");\n\n    if (!this.table.options.headerVisible) {\n      el.classList.add(\"tabulator-header-hidden\");\n    }\n\n    return el;\n  } //return containing element\n\n\n  getElement() {\n    return this.element;\n  } //return header containing element\n\n\n  getHeadersElement() {\n    return this.headersElement;\n  } //scroll horizontally to match table body\n\n\n  scrollHorizontal(left) {\n    var hozAdjust = 0,\n        scrollWidth = this.element.scrollWidth - this.table.element.clientWidth; // this.tempScrollBlock();\n\n    this.element.scrollLeft = left; //adjust for vertical scrollbar moving table when present\n\n    if (left > scrollWidth) {\n      hozAdjust = left - scrollWidth;\n      this.element.style.marginLeft = -hozAdjust + \"px\";\n    } else {\n      this.element.style.marginLeft = 0;\n    }\n\n    this.scrollLeft = left;\n    this.renderer.scrollColumns(left);\n  } ///////////// Column Setup Functions /////////////\n\n\n  generateColumnsFromRowData(data) {\n    var cols = [],\n        definitions = this.table.options.autoColumnsDefinitions,\n        row,\n        sorter;\n\n    if (data && data.length) {\n      row = data[0];\n\n      for (var key in row) {\n        let col = {\n          field: key,\n          title: key\n        };\n        let value = row[key];\n\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n\n          case \"object\":\n            if (Array.isArray(value)) {\n              sorter = \"array\";\n            } else {\n              sorter = \"string\";\n            }\n\n            break;\n\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              } else {\n                sorter = \"string\";\n              }\n            }\n\n            break;\n        }\n\n        col.sorter = sorter;\n        cols.push(col);\n      }\n\n      if (definitions) {\n        switch (typeof definitions) {\n          case \"function\":\n            this.table.options.columns = definitions.call(this.table, cols);\n            break;\n\n          case \"object\":\n            if (Array.isArray(definitions)) {\n              cols.forEach(col => {\n                var match = definitions.find(def => {\n                  return def.field === col.field;\n                });\n\n                if (match) {\n                  Object.assign(col, match);\n                }\n              });\n            } else {\n              cols.forEach(col => {\n                if (definitions[col.field]) {\n                  Object.assign(col, definitions[col.field]);\n                }\n              });\n            }\n\n            this.table.options.columns = cols;\n            break;\n        }\n      } else {\n        this.table.options.columns = cols;\n      }\n\n      this.setColumns(this.table.options.columns);\n    }\n  }\n\n  setColumns(cols, row) {\n    while (this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\n\n    this.columns = [];\n    this.columnsByIndex = [];\n    this.columnsByField = {};\n    this.dispatch(\"columns-loading\");\n    cols.forEach((def, i) => {\n      this._addColumn(def);\n    });\n\n    this._reIndexColumns();\n\n    this.dispatch(\"columns-loaded\");\n    this.renderer.rerenderColumns(false, true);\n    this.redraw(true);\n  }\n\n  _addColumn(definition, before, nextToColumn) {\n    var column = new Column$1(definition, this),\n        colEl = column.getElement(),\n        index = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\n\n    if (nextToColumn && index > -1) {\n      var topColumn = nextToColumn.getTopColumn();\n      var parentIndex = this.columns.indexOf(topColumn);\n      var nextEl = topColumn.getElement();\n\n      if (before) {\n        this.columns.splice(parentIndex, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl);\n      } else {\n        this.columns.splice(parentIndex + 1, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\n      }\n    } else {\n      if (before) {\n        this.columns.unshift(column);\n        this.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\n      } else {\n        this.columns.push(column);\n        this.headersElement.appendChild(column.getElement());\n      }\n    }\n\n    column.columnRendered();\n    return column;\n  }\n\n  registerColumnField(col) {\n    if (col.definition.field) {\n      this.columnsByField[col.definition.field] = col;\n    }\n  }\n\n  registerColumnPosition(col) {\n    this.columnsByIndex.push(col);\n  }\n\n  _reIndexColumns() {\n    this.columnsByIndex = [];\n    this.columns.forEach(function (column) {\n      column.reRegisterPosition();\n    });\n  } //ensure column headers take up the correct amount of space in column groups\n\n\n  verticalAlignHeaders() {\n    var minHeight = 0;\n    this.columns.forEach(column => {\n      var height;\n      column.clearVerticalAlign();\n      height = column.getHeight();\n\n      if (height > minHeight) {\n        minHeight = height;\n      }\n    });\n    this.columns.forEach(column => {\n      column.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\n    });\n    this.table.rowManager.adjustTableSize();\n  } //////////////// Column Details /////////////////\n\n\n  findColumn(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Column$1) {\n        //subject is column element\n        return subject;\n      } else if (subject instanceof ColumnComponent) {\n        //subject is public column component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the column header\n        let match = this.columns.find(column => {\n          return column.element === subject;\n        });\n        return match || false;\n      }\n    } else {\n      //subject should be treated as the field name of the column\n      return this.columnsByField[subject] || false;\n    } //catch all for any other type of input\n\n\n    return false;\n  }\n\n  getColumnByField(field) {\n    return this.columnsByField[field];\n  }\n\n  getColumnsByFieldRoot(root) {\n    var matches = [];\n    Object.keys(this.columnsByField).forEach(field => {\n      var fieldRoot = field.split(\".\")[0];\n\n      if (fieldRoot === root) {\n        matches.push(this.columnsByField[field]);\n      }\n    });\n    return matches;\n  }\n\n  getColumnByIndex(index) {\n    return this.columnsByIndex[index];\n  }\n\n  getFirstVisibleColumn(index) {\n    var index = this.columnsByIndex.findIndex(col => {\n      return col.visible;\n    });\n    return index > -1 ? this.columnsByIndex[index] : false;\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  findColumnIndex(column) {\n    return this.columnsByIndex.findIndex(col => {\n      return column === col;\n    });\n  } //return all columns that are not groups\n\n\n  getRealColumns() {\n    return this.columnsByIndex;\n  } //travers across columns and call action\n\n\n  traverse(callback) {\n    this.columnsByIndex.forEach((column, i) => {\n      callback(column, i);\n    });\n  } //get defintions of actual columns\n\n\n  getDefinitions(active) {\n    var output = [];\n    this.columnsByIndex.forEach(column => {\n      if (!active || active && column.visible) {\n        output.push(column.getDefinition());\n      }\n    });\n    return output;\n  } //get full nested definition tree\n\n\n  getDefinitionTree() {\n    var output = [];\n    this.columns.forEach(column => {\n      output.push(column.getDefinition(true));\n    });\n    return output;\n  }\n\n  getComponents(structured) {\n    var output = [],\n        columns = structured ? this.columns : this.columnsByIndex;\n    columns.forEach(column => {\n      output.push(column.getComponent());\n    });\n    return output;\n  }\n\n  getWidth() {\n    var width = 0;\n    this.columnsByIndex.forEach(column => {\n      if (column.visible) {\n        width += column.getWidth();\n      }\n    });\n    return width;\n  }\n\n  moveColumn(from, to, after) {\n    this.moveColumnActual(from, to, after);\n    to.element.parentNode.insertBefore(from.element, to.element);\n\n    if (after) {\n      to.element.parentNode.insertBefore(to.element, from.element);\n    }\n\n    this.verticalAlignHeaders();\n    this.table.rowManager.reinitialize();\n  }\n\n  moveColumnActual(from, to, after) {\n    if (from.parent.isGroup) {\n      this._moveColumnInArray(from.parent.columns, from, to, after);\n    } else {\n      this._moveColumnInArray(this.columns, from, to, after);\n    }\n\n    this._moveColumnInArray(this.columnsByIndex, from, to, after, true);\n\n    this.renderer.rerenderColumns(true);\n    this.dispatch(\"column-moved\", from, to, after);\n\n    if (this.subscribedExternal(\"columnMoved\")) {\n      this.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\n    }\n  }\n\n  _moveColumnInArray(columns, from, to, after, updateRows) {\n    var fromIndex = columns.indexOf(from),\n        toIndex,\n        rows = [];\n\n    if (fromIndex > -1) {\n      columns.splice(fromIndex, 1);\n      toIndex = columns.indexOf(to);\n\n      if (toIndex > -1) {\n        if (after) {\n          toIndex = toIndex + 1;\n        }\n      } else {\n        toIndex = fromIndex;\n      }\n\n      columns.splice(toIndex, 0, from);\n\n      if (updateRows) {\n        rows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\n        rows = rows.concat(this.table.rowManager.rows);\n        rows.forEach(function (row) {\n          if (row.cells.length) {\n            var cell = row.cells.splice(fromIndex, 1)[0];\n            row.cells.splice(toIndex, 0, cell);\n          }\n        });\n      }\n    }\n  }\n\n  scrollToColumn(column, position, ifVisible) {\n    var left = 0,\n        offset = 0,\n        adjust = 0,\n        colEl = column.getElement();\n    return new Promise((resolve, reject) => {\n      if (typeof position === \"undefined\") {\n        position = this.table.options.scrollToColumnPosition;\n      }\n\n      if (typeof ifVisible === \"undefined\") {\n        ifVisible = this.table.options.scrollToColumnIfVisible;\n      }\n\n      if (column.visible) {\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            adjust = -this.element.clientWidth / 2;\n            break;\n\n          case \"right\":\n            adjust = colEl.clientWidth - this.headersElement.clientWidth;\n            break;\n        } //check column visibility\n\n\n        if (!ifVisible) {\n          offset = colEl.offsetLeft;\n\n          if (offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth) {\n            return false;\n          }\n        } //calculate scroll position\n\n\n        left = colEl.offsetLeft + adjust;\n        left = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth), 0);\n        this.table.rowManager.scrollHorizontal(left);\n        this.scrollHorizontal(left);\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Column not visible\");\n        reject(\"Scroll Error - Column not visible\");\n      }\n    });\n  } //////////////// Cell Management /////////////////\n\n\n  generateCells(row) {\n    var cells = [];\n    this.columnsByIndex.forEach(column => {\n      cells.push(column.generateCell(row));\n    });\n    return cells;\n  } //////////////// Column Management /////////////////\n\n\n  getFlexBaseWidth() {\n    var totalWidth = this.table.element.clientWidth,\n        //table element width\n    fixedWidth = 0; //adjust for vertical scrollbar if present\n\n    if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n      totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n    }\n\n    this.columnsByIndex.forEach(function (column) {\n      var width, minWidth, colWidth;\n\n      if (column.visible) {\n        width = column.definition.width || 0;\n        minWidth = parseInt(column.minWidth);\n\n        if (typeof width == \"string\") {\n          if (width.indexOf(\"%\") > -1) {\n            colWidth = totalWidth / 100 * parseInt(width);\n          } else {\n            colWidth = parseInt(width);\n          }\n        } else {\n          colWidth = width;\n        }\n\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n      }\n    });\n    return fixedWidth;\n  }\n\n  addColumn(definition, before, nextToColumn) {\n    return new Promise((resolve, reject) => {\n      var column = this._addColumn(definition, before, nextToColumn);\n\n      this._reIndexColumns();\n\n      this.dispatch(\"column-add\", definition, before, nextToColumn);\n\n      if (this.layoutMode() != \"fitColumns\") {\n        column.reinitializeWidth();\n      }\n\n      this.redraw(true);\n      this.table.rowManager.reinitialize();\n      this.renderer.rerenderColumns();\n      resolve(column);\n    });\n  } //remove column from system\n\n\n  deregisterColumn(column) {\n    var field = column.getField(),\n        index; //remove from field list\n\n    if (field) {\n      delete this.columnsByField[field];\n    } //remove from index list\n\n\n    index = this.columnsByIndex.indexOf(column);\n\n    if (index > -1) {\n      this.columnsByIndex.splice(index, 1);\n    } //remove from column list\n\n\n    index = this.columns.indexOf(column);\n\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n\n    this.verticalAlignHeaders();\n    this.redraw();\n  } //redraw columns\n\n\n  redraw(force) {\n    if (Helpers.elVisible(this.element)) {\n      this.verticalAlignHeaders();\n    }\n\n    if (force) {\n      this.table.rowManager.resetScroll();\n      this.table.rowManager.reinitialize();\n    }\n\n    if (!this.confirm(\"table-redrawing\", force)) {\n      this.layoutRefresh();\n    }\n\n    this.dispatch(\"table-redraw\", force);\n    this.table.footerManager.redraw();\n  }\n\n}\n\nclass BaiscVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n\n  clearRows() {\n    var element = this.tableElement; // element.children.detach();\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.scrollTop = 0;\n    element.scrollLeft = 0;\n    element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n  }\n\n  renderRows() {\n    var element = this.tableElement,\n        onlyGroupHeaders = true;\n    this.rows().forEach((row, index) => {\n      this.styleRow(row, index);\n      element.appendChild(row.getElement());\n      row.initialize(true);\n\n      if (row.type !== \"group\") {\n        onlyGroupHeaders = false;\n      }\n    });\n\n    if (onlyGroupHeaders) {\n      element.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    } else {\n      element.style.minWidth = \"\";\n    }\n  }\n\n  rerenderRows(callback) {\n    this.render();\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  scrollToRowNearestTop(row) {\n    var rowTop = Helpers.elOffset(row.getElement()).top;\n    return !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\n  }\n\n  scrollToRow(row) {\n    var rowEl = row.getElement();\n    this.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\n  }\n\n  visibleRows(includingBuffer) {\n    return this.rows();\n  }\n\n}\n\nclass VirtualDomVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomRowHeight = 20; //approximation of row heights for padding\n\n    this.vDomTop = 0; //hold position for first rendered row in the virtual DOM\n\n    this.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\n\n    this.vDomScrollPosTop = 0; //last scroll position of the vDom top;\n\n    this.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\n\n    this.vDomTopPad = 0; //hold value of padding for top of virtual DOM\n\n    this.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\n\n    this.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\n\n    this.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\n\n    this.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\n\n    this.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\n\n    this.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\n\n    this.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\n  } //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n\n  clearRows() {\n    var element = this.tableElement; // element.children.detach();\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.style.paddingTop = \"\";\n    element.style.paddingBottom = \"\"; // element.style.minWidth = \"\";\n\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n    this.elementVertical.scrollTop = 0;\n    this.elementVertical.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomTop = 0;\n    this.vDomBottom = 0;\n    this.vDomTopPad = 0;\n    this.vDomBottomPad = 0;\n    this.vDomScrollPosTop = 0;\n    this.vDomScrollPosBottom = 0;\n  }\n\n  renderRows() {\n    this._virtualRenderFill();\n  }\n\n  rerenderRows(callback) {\n    var scrollTop = this.elementVertical.scrollTop;\n    var topRow = false;\n    var topOffset = false;\n    var left = this.table.rowManager.scrollLeft;\n    var rows = this.rows();\n\n    for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n      if (rows[i]) {\n        var diff = scrollTop - rows[i].getElement().offsetTop;\n\n        if (topOffset === false || Math.abs(diff) < topOffset) {\n          topOffset = diff;\n          topRow = i;\n        } else {\n          break;\n        }\n      }\n    }\n\n    rows.forEach(row => {\n      row.deinitializeHeight();\n    });\n\n    if (callback) {\n      callback();\n    }\n\n    this._virtualRenderFill(topRow === false ? this.rows.length - 1 : topRow, true, topOffset || 0);\n\n    this.scrollColumns(left);\n  }\n\n  scrollColumns(left) {\n    this.table.rowManager.scrollHorizontal(left);\n  }\n\n  scrollRows(top, dir) {\n    var topDiff = top - this.vDomScrollPosTop;\n    var bottomDiff = top - this.vDomScrollPosBottom;\n    var margin = this.vDomWindowBuffer * 2;\n    var rows = this.rows();\n    this.scrollTop = top;\n\n    if (-topDiff > margin || bottomDiff > margin) {\n      //if big scroll redraw table;\n      var left = this.table.rowManager.scrollLeft;\n\n      this._virtualRenderFill(Math.floor(this.elementVertical.scrollTop / this.elementVertical.scrollHeight * rows.length));\n\n      this.scrollColumns(left);\n    } else {\n      if (dir) {\n        //scrolling up\n        if (topDiff < 0) {\n          this._addTopRow(rows, -topDiff);\n        }\n\n        if (bottomDiff < 0) {\n          //hide bottom row if needed\n          if (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer) {\n            this._removeBottomRow(rows, -bottomDiff);\n          } else {\n            this.vDomScrollPosBottom = this.scrollTop;\n          }\n        }\n      } else {\n        if (bottomDiff >= 0) {\n          this._addBottomRow(rows, bottomDiff);\n        } //scrolling down\n\n\n        if (topDiff >= 0) {\n          //hide top row if needed\n          if (this.scrollTop > this.vDomWindowBuffer) {\n            this._removeTopRow(rows, topDiff);\n          } else {\n            this.vDomScrollPosTop = this.scrollTop;\n          }\n        }\n      }\n    }\n  }\n\n  resize() {\n    this.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\n  }\n\n  scrollToRowNearestTop(row) {\n    var rowIndex = this.rows().indexOf(row);\n    return !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\n  }\n\n  scrollToRow(row) {\n    var index = this.rows().indexOf(row);\n\n    if (index > -1) {\n      this._virtualRenderFill(index, true);\n    }\n  }\n\n  visibleRows(includingBuffer) {\n    var topEdge = this.elementVertical.scrollTop,\n        bottomEdge = this.elementVertical.clientHeight + topEdge,\n        topFound = false,\n        topRow = 0,\n        bottomRow = 0,\n        rows = this.rows();\n\n    if (includingBuffer) {\n      topRow = this.vDomTop;\n      bottomRow = this.vDomBottom;\n    } else {\n      for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n        if (rows[i]) {\n          if (!topFound) {\n            if (topEdge - rows[i].getElement().offsetTop >= 0) {\n              topRow = i;\n            } else {\n              topFound = true;\n\n              if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n                bottomRow = i;\n              } else {\n                break;\n              }\n            }\n          } else {\n            if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n              bottomRow = i;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return rows.slice(topRow, bottomRow + 1);\n  } //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n  //full virtual render\n\n\n  _virtualRenderFill(position, forceMove, offset) {\n    var element = this.tableElement,\n        holder = this.elementVertical,\n        topPad = 0,\n        rowsHeight = 0,\n        heightOccupied = 0,\n        topPadHeight = 0,\n        i = 0,\n        rows = this.rows(),\n        rowsCount = rows.length,\n        containerHeight = this.elementVertical.clientHeight;\n    position = position || 0;\n    offset = offset || 0;\n\n    if (!position) {\n      this.clear();\n    } else {\n      while (element.firstChild) element.removeChild(element.firstChild); //check if position is too close to bottom of table\n\n\n      heightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\n\n      if (heightOccupied < containerHeight) {\n        position -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\n\n        if (position < 0) {\n          position = 0;\n        }\n      } //calculate initial pad\n\n\n      topPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight), this.vDomWindowMinMarginRows), position);\n      position -= topPad;\n    }\n\n    if (rowsCount && Helpers.elVisible(this.elementVertical)) {\n      this.vDomTop = position;\n      this.vDomBottom = position - 1;\n\n      while ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount - 1) {\n        var index = this.vDomBottom + 1,\n            row = rows[index],\n            rowHeight = 0;\n        this.styleRow(row, index);\n        element.appendChild(row.getElement());\n        row.initialize();\n\n        if (!row.heightInitialized) {\n          row.normalizeHeight(true);\n        }\n\n        rowHeight = row.getHeight();\n\n        if (i < topPad) {\n          topPadHeight += rowHeight;\n        } else {\n          rowsHeight += rowHeight;\n        }\n\n        if (rowHeight > this.vDomWindowBuffer) {\n          this.vDomWindowBuffer = rowHeight * 2;\n        }\n\n        this.vDomBottom++;\n        i++;\n      }\n\n      if (!position) {\n        this.vDomTopPad = 0; //adjust rowheight to match average of rendered elements\n\n        this.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\n        this.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom - 1);\n        this.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\n      } else {\n        this.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : this.vDomRowHeight * this.vDomTop + offset;\n        this.vDomBottomPad = this.vDomBottom == rowsCount - 1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\n      }\n\n      element.style.paddingTop = this.vDomTopPad + \"px\";\n      element.style.paddingBottom = this.vDomBottomPad + \"px\";\n\n      if (forceMove) {\n        this.scrollTop = this.vDomTopPad + topPadHeight + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\n      }\n\n      this.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight); //adjust for horizontal scrollbar if present (and not at top of table)\n\n      if (this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove) {\n        this.scrollTop += this.elementVertical.offsetHeight - containerHeight;\n      }\n\n      this.vDomScrollPosTop = this.scrollTop;\n      this.vDomScrollPosBottom = this.scrollTop;\n      holder.scrollTop = this.scrollTop;\n      this.dispatch(\"render-virtual-fill\");\n    }\n  }\n\n  _addTopRow(rows, fillableSpace) {\n    var table = this.tableElement,\n        addedRows = [],\n        paddingAdjust = 0,\n        index = this.vDomTop - 1,\n        i = 0;\n\n    while (true) {\n      if (this.vDomTop) {\n        let row = rows[index],\n            rowHeight,\n            initialized;\n\n        if (row && i < this.vDomMaxRenderChain) {\n          rowHeight = row.getHeight() || this.vDomRowHeight;\n          initialized = row.initialized;\n\n          if (fillableSpace >= rowHeight) {\n            this.styleRow(row, index);\n            table.insertBefore(row.getElement(), table.firstChild);\n\n            if (!row.initialized || !row.heightInitialized) {\n              addedRows.push(row);\n            }\n\n            row.initialize();\n\n            if (!initialized) {\n              rowHeight = row.getElement().offsetHeight;\n\n              if (rowHeight > this.vDomWindowBuffer) {\n                this.vDomWindowBuffer = rowHeight * 2;\n              }\n            }\n\n            fillableSpace -= rowHeight;\n            paddingAdjust += rowHeight;\n            this.vDomTop--;\n            index--;\n            i++;\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n\n    this._quickNormalizeRowHeight(addedRows);\n\n    if (paddingAdjust) {\n      this.vDomTopPad -= paddingAdjust;\n\n      if (this.vDomTopPad < 0) {\n        this.vDomTopPad = index * this.vDomRowHeight;\n      }\n\n      if (index < 1) {\n        this.vDomTopPad = 0;\n      }\n\n      table.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop -= paddingAdjust;\n    }\n  }\n\n  _removeTopRow(rows, fillableSpace) {\n    var removableRows = [],\n        paddingAdjust = 0,\n        i = 0;\n\n    while (true) {\n      let row = rows[this.vDomTop],\n          rowHeight;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n\n        if (fillableSpace >= rowHeight) {\n          this.vDomTop++;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n\n    if (paddingAdjust) {\n      this.vDomTopPad += paddingAdjust;\n      this.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\n    }\n  }\n\n  _addBottomRow(rows, fillableSpace) {\n    var table = this.tableElement,\n        addedRows = [],\n        paddingAdjust = 0,\n        index = this.vDomBottom + 1,\n        i = 0;\n\n    while (true) {\n      let row = rows[index],\n          rowHeight,\n          initialized;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        initialized = row.initialized;\n\n        if (fillableSpace >= rowHeight) {\n          this.styleRow(row, index);\n          table.appendChild(row.getElement());\n\n          if (!row.initialized || !row.heightInitialized) {\n            addedRows.push(row);\n          }\n\n          row.initialize();\n\n          if (!initialized) {\n            rowHeight = row.getElement().offsetHeight;\n\n            if (rowHeight > this.vDomWindowBuffer) {\n              this.vDomWindowBuffer = rowHeight * 2;\n            }\n          }\n\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          this.vDomBottom++;\n          index++;\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n\n    this._quickNormalizeRowHeight(addedRows);\n\n    if (paddingAdjust) {\n      this.vDomBottomPad -= paddingAdjust;\n\n      if (this.vDomBottomPad < 0 || index == rows.length - 1) {\n        this.vDomBottomPad = 0;\n      }\n\n      table.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom += paddingAdjust;\n    }\n  }\n\n  _removeBottomRow(rows, fillableSpace) {\n    var removableRows = [],\n        paddingAdjust = 0,\n        i = 0;\n\n    while (true) {\n      let row = rows[this.vDomBottom],\n          rowHeight;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n\n        if (fillableSpace >= rowHeight) {\n          this.vDomBottom--;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n\n    if (paddingAdjust) {\n      this.vDomBottomPad += paddingAdjust;\n\n      if (this.vDomBottomPad < 0) {\n        this.vDomBottomPad = 0;\n      }\n\n      this.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom -= paddingAdjust;\n    }\n  }\n\n  _quickNormalizeRowHeight(rows) {\n    for (let row of rows) {\n      row.calcHeight();\n    }\n\n    for (let row of rows) {\n      row.setCellHeight();\n    }\n  }\n\n}\n\nclass RowManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.element = this.createHolderElement(); //containing element\n\n    this.tableElement = this.createTableElement(); //table element\n\n    this.heightFixer = this.createTableElement(); //table element\n\n    this.firstRender = false; //handle first render\n\n    this.renderMode = \"virtual\"; //current rendering mode\n\n    this.fixedHeight = false; //current rendering mode\n\n    this.rows = []; //hold row data objects\n\n    this.activeRowsPipeline = []; //hold caluclation of active rows\n\n    this.activeRows = []; //rows currently available to on display in the table\n\n    this.activeRowsCount = 0; //count of active rows\n\n    this.displayRows = []; //rows currently on display in the table\n\n    this.displayRowsCount = 0; //count of display rows\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.rowNumColumn = false; //hold column component for row number column\n\n    this.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\n\n    this.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\n\n    this.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\n\n    this.dataPipeline = []; //hold data pipeline tasks\n\n    this.displayPipeline = []; //hold data display pipeline tasks\n\n    this.renderer = null;\n  } //////////////// Setup Functions /////////////////\n\n\n  createHolderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-tableholder\");\n    el.setAttribute(\"tabindex\", 0);\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n\n  createTableElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-table\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  } //return containing element\n\n\n  getElement() {\n    return this.element;\n  } //return table element\n\n\n  getTableElement() {\n    return this.tableElement;\n  } //return position of row in table\n\n\n  getRowPosition(row, active) {\n    if (active) {\n      return this.activeRows.indexOf(row);\n    } else {\n      return this.rows.indexOf(row);\n    }\n  }\n\n  initialize() {\n    this.initializeRenderer(); //initialize manager\n\n    this.element.appendChild(this.tableElement);\n    this.firstRender = true; //scroll header along with table body\n\n    this.element.addEventListener(\"scroll\", () => {\n      var left = this.element.scrollLeft,\n          leftDir = this.scrollLeft > left,\n          top = this.element.scrollTop,\n          topDir = this.scrollTop > top; //handle horizontal scrolling\n\n      if (this.scrollLeft != left) {\n        this.scrollLeft = left;\n        this.dispatch(\"scroll-horizontal\", left, leftDir);\n        this.dispatchExternal(\"scrollHorizontal\", left, leftDir);\n      } //handle verical scrolling\n\n\n      if (this.scrollTop != top) {\n        this.scrollTop = top;\n        this.renderer.scrollRows(top, topDir);\n        this.dispatch(\"scroll-vertical\", top, topDir);\n        this.dispatchExternal(\"scrollVertical\", top, topDir);\n      }\n    });\n  } ////////////////// Row Manipulation //////////////////\n\n\n  findRow(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        return subject;\n      } else if (subject instanceof RowComponent$1) {\n        //subject is public row component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the row\n        let match = this.rows.find(row => {\n          return row.getElement() === subject;\n        });\n        return match || false;\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      return false;\n    } else {\n      //subject should be treated as the index of the row\n      let match = this.rows.find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n      return match || false;\n    } //catch all for any other type of input\n\n\n    return false;\n  }\n\n  getRowFromDataObject(data) {\n    var match = this.rows.find(row => {\n      return row.data === data;\n    });\n    return match || false;\n  }\n\n  getRowFromPosition(position, active) {\n    if (active) {\n      return this.activeRows[position];\n    } else {\n      return this.rows[position];\n    }\n  }\n\n  scrollToRow(row, position, ifVisible) {\n    return this.renderer.scrollToRowPosition(row, position, ifVisible);\n  } ////////////////// Data Handling //////////////////\n\n\n  setData(data, renderInPosition, columnsChanged) {\n    return new Promise((resolve, reject) => {\n      if (renderInPosition && this.getDisplayRows().length) {\n        if (this.table.options.pagination) {\n          this._setDataActual(data, true);\n        } else {\n          this.reRenderInPosition(() => {\n            this._setDataActual(data);\n          });\n        }\n      } else {\n        if (this.table.options.autoColumns && columnsChanged && this.table.initialized) {\n          this.table.columnManager.generateColumnsFromRowData(data);\n        }\n\n        this.resetScroll();\n\n        this._setDataActual(data);\n      }\n\n      resolve();\n    });\n  }\n\n  _setDataActual(data, renderInPosition) {\n    this.dispatchExternal(\"dataProcessing\", data);\n\n    this._wipeElements();\n\n    if (Array.isArray(data)) {\n      this.dispatch(\"data-processing\", data);\n      data.forEach((def, i) => {\n        if (def && typeof def === \"object\") {\n          var row = new Row(def, this);\n          this.rows.push(row);\n        } else {\n          console.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\n        }\n      });\n      this.refreshActiveData(false, false, renderInPosition);\n      this.dispatch(\"data-processed\", data);\n      this.dispatchExternal(\"dataProcessed\", data);\n    } else {\n      console.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\n    }\n  }\n\n  _wipeElements() {\n    this.dispatch(\"rows-wipe\");\n    this.rows.forEach(row => {\n      row.wipe();\n    });\n    this.rows = [];\n    this.activeRows = [];\n    this.activeRowsPipeline = [];\n    this.activeRowsCount = 0;\n    this.displayRows = [];\n    this.displayRowsCount = 0;\n    this.adjustTableSize();\n  }\n\n  deleteRow(row, blockRedraw) {\n    var allIndex = this.rows.indexOf(row),\n        activeIndex = this.activeRows.indexOf(row);\n\n    if (activeIndex > -1) {\n      this.activeRows.splice(activeIndex, 1);\n    }\n\n    if (allIndex > -1) {\n      this.rows.splice(allIndex, 1);\n    }\n\n    this.setActiveRows(this.activeRows);\n    this.displayRowIterator(rows => {\n      var displayIndex = rows.indexOf(row);\n\n      if (displayIndex > -1) {\n        rows.splice(displayIndex, 1);\n      }\n    });\n\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n\n    this.regenerateRowNumbers();\n    this.dispatchExternal(\"rowDeleted\", row.getComponent());\n\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.getData());\n    }\n  }\n\n  addRow(data, pos, index, blockRedraw) {\n    var row = this.addRowActual(data, pos, index, blockRedraw);\n    this.dispatch(\"row-added\", row, data, pos, index);\n    return row;\n  } //add multiple rows\n\n\n  addRows(data, pos, index) {\n    var rows = [];\n    return new Promise((resolve, reject) => {\n      pos = this.findAddRowPos(pos);\n\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      data.length - 1;\n\n      if (typeof index == \"undefined\" && pos || typeof index !== \"undefined\" && !pos) {\n        data.reverse();\n      }\n\n      data.forEach((item, i) => {\n        var row = this.addRow(item, pos, index, true);\n        rows.push(row);\n        this.dispatch(\"row-added\", row, data, pos, index);\n      });\n      this.refreshActiveData(false, false, true);\n      this.regenerateRowNumbers();\n\n      if (rows.length) {\n        this._clearPlaceholder();\n      }\n\n      resolve(rows);\n    });\n  }\n\n  findAddRowPos(pos) {\n    if (typeof pos === \"undefined\") {\n      pos = this.table.options.addRowPos;\n    }\n\n    if (pos === \"pos\") {\n      pos = true;\n    }\n\n    if (pos === \"bottom\") {\n      pos = false;\n    }\n\n    return pos;\n  }\n\n  addRowActual(data, pos, index, blockRedraw) {\n    var row = data instanceof Row ? data : new Row(data || {}, this),\n        top = this.findAddRowPos(pos),\n        allIndex = -1,\n        activeIndex,\n        chainResult;\n\n    if (!index) {\n      chainResult = this.chain(\"row-adding-position\", [row, top], null, {\n        index,\n        top\n      });\n      index = chainResult.index;\n      top = chainResult.top;\n    }\n\n    if (typeof index !== \"undefined\") {\n      index = this.findRow(index);\n    }\n\n    index = this.chain(\"row-adding-index\", [row, index, top], null, index);\n\n    if (index) {\n      allIndex = this.rows.indexOf(index);\n    }\n\n    if (index && allIndex > -1) {\n      activeIndex = this.activeRows.indexOf(index);\n      this.displayRowIterator(function (rows) {\n        var displayIndex = rows.indexOf(index);\n\n        if (displayIndex > -1) {\n          rows.splice(top ? displayIndex : displayIndex + 1, 0, row);\n        }\n      });\n\n      if (activeIndex > -1) {\n        this.activeRows.splice(top ? activeIndex : activeIndex + 1, 0, row);\n      }\n\n      this.rows.splice(top ? allIndex : allIndex + 1, 0, row);\n    } else {\n      if (top) {\n        this.displayRowIterator(function (rows) {\n          rows.unshift(row);\n        });\n        this.activeRows.unshift(row);\n        this.rows.unshift(row);\n      } else {\n        this.displayRowIterator(function (rows) {\n          rows.push(row);\n        });\n        this.activeRows.push(row);\n        this.rows.push(row);\n      }\n    }\n\n    this.setActiveRows(this.activeRows);\n    this.dispatchExternal(\"rowAdded\", row.getComponent());\n\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n    }\n\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n\n    return row;\n  }\n\n  moveRow(from, to, after) {\n    this.dispatch(\"row-move\", from, to, after);\n    this.moveRowActual(from, to, after);\n    this.regenerateRowNumbers();\n    this.dispatch(\"row-moved\", from, to, after);\n    this.dispatchExternal(\"rowMoved\", from.getComponent());\n  }\n\n  moveRowActual(from, to, after) {\n    this.moveRowInArray(this.rows, from, to, after);\n    this.moveRowInArray(this.activeRows, from, to, after);\n    this.displayRowIterator(rows => {\n      this.moveRowInArray(rows, from, to, after);\n    });\n    this.dispatch(\"row-moving\", from, to, after);\n  }\n\n  moveRowInArray(rows, from, to, after) {\n    var fromIndex, toIndex, start, end;\n\n    if (from !== to) {\n      fromIndex = rows.indexOf(from);\n\n      if (fromIndex > -1) {\n        rows.splice(fromIndex, 1);\n        toIndex = rows.indexOf(to);\n\n        if (toIndex > -1) {\n          if (after) {\n            rows.splice(toIndex + 1, 0, from);\n          } else {\n            rows.splice(toIndex, 0, from);\n          }\n        } else {\n          rows.splice(fromIndex, 0, from);\n        }\n      } //restyle rows\n\n\n      if (rows === this.getDisplayRows()) {\n        start = fromIndex < toIndex ? fromIndex : toIndex;\n        end = toIndex > fromIndex ? toIndex : fromIndex + 1;\n\n        for (let i = start; i <= end; i++) {\n          if (rows[i]) {\n            this.styleRow(rows[i], i);\n          }\n        }\n      }\n    }\n  }\n\n  clearData() {\n    this.setData([]);\n  }\n\n  getRowIndex(row) {\n    return this.findRowIndex(row, this.rows);\n  }\n\n  getDisplayRowIndex(row) {\n    var index = this.getDisplayRows().indexOf(row);\n    return index > -1 ? index : false;\n  }\n\n  nextDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n        nextRow = false;\n\n    if (index !== false && index < this.displayRowsCount - 1) {\n      nextRow = this.getDisplayRows()[index + 1];\n    }\n\n    if (nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")) {\n      return this.nextDisplayRow(nextRow, rowOnly);\n    }\n\n    return nextRow;\n  }\n\n  prevDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n        prevRow = false;\n\n    if (index) {\n      prevRow = this.getDisplayRows()[index - 1];\n    }\n\n    if (rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")) {\n      return this.prevDisplayRow(prevRow, rowOnly);\n    }\n\n    return prevRow;\n  }\n\n  findRowIndex(row, list) {\n    var rowIndex;\n    row = this.findRow(row);\n\n    if (row) {\n      rowIndex = list.indexOf(row);\n\n      if (rowIndex > -1) {\n        return rowIndex;\n      }\n    }\n\n    return false;\n  }\n\n  getData(active, transform) {\n    var output = [],\n        rows = this.getRows(active);\n    rows.forEach(function (row) {\n      if (row.type == \"row\") {\n        output.push(row.getData(transform || \"data\"));\n      }\n    });\n    return output;\n  }\n\n  getComponents(active) {\n    var output = [],\n        rows = this.getRows(active);\n    rows.forEach(function (row) {\n      output.push(row.getComponent());\n    });\n    return output;\n  }\n\n  getDataCount(active) {\n    var rows = this.getRows(active);\n    return rows.length;\n  }\n\n  scrollHorizontal(left) {\n    this.scrollLeft = left;\n    this.element.scrollLeft = left;\n    this.dispatch(\"scroll-horizontal\", left);\n  }\n\n  registerDataPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.dataPipeline.push({\n        handler,\n        priority\n      });\n      this.dataPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Data pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n\n  registerDisplayPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.displayPipeline.push({\n        handler,\n        priority\n      });\n      this.displayPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Display pipeline handlers must have a priority in order to be registered\");\n    }\n  } //set active data set\n\n\n  refreshActiveData(handler, skipStage, renderInPosition) {\n    var table = this.table,\n        stage = \"\",\n        index = 0,\n        cascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"];\n\n    if (typeof handler === \"function\") {\n      index = this.dataPipeline.findIndex(item => {\n        return item.handler === handler;\n      });\n\n      if (index > -1) {\n        stage = \"dataPipeline\";\n\n        if (skipStage) {\n          if (index == this.dataPipeline.length - 1) {\n            stage = \"display\";\n          } else {\n            index++;\n          }\n        }\n      } else {\n        index = this.displayPipeline.findIndex(item => {\n          return item.handler === handler;\n        });\n\n        if (index > -1) {\n          stage = \"displayPipeline\";\n\n          if (skipStage) {\n            if (index == this.displayPipeline.length - 1) {\n              stage = \"end\";\n            } else {\n              index++;\n            }\n          }\n        } else {\n          console.error(\"Unable to refresh data, invalid handler provided\", handler);\n          return;\n        }\n      }\n    } else {\n      stage = handler || \"all\";\n      index = 0;\n    }\n\n    if (this.redrawBlock) {\n      if (!this.redrawBlockRestoreConfig || this.redrawBlockRestoreConfig && (this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index || cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))) {\n        this.redrawBlockRestoreConfig = {\n          handler: handler,\n          skipStage: skipStage,\n          renderInPosition: renderInPosition,\n          stage: stage,\n          index: index\n        };\n      }\n\n      return;\n    } else {\n      this.dispatch(\"data-refeshing\");\n\n      if (!handler) {\n        this.activeRowsPipeline[0] = this.rows.slice(0);\n      } //cascade through data refresh stages\n\n\n      switch (stage) {\n        case \"all\": //handle case where alldata needs refreshing\n\n        case \"dataPipeline\":\n          for (let i = index; i < this.dataPipeline.length; i++) {\n            let result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\n            this.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\n          }\n\n          this.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\n          this.regenerateRowNumbers();\n\n        case \"display\":\n          index = 0;\n          this.resetDisplayRows();\n\n        case \"displayPipeline\":\n          for (let i = index; i < this.displayPipeline.length; i++) {\n            let result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\n            this.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\n          }\n\n        //case to handle scenario when trying to skip past end stage\n      }\n\n      if (Helpers.elVisible(this.element)) {\n        if (renderInPosition) {\n          this.reRenderInPosition();\n        } else {\n          if (!handler) {\n            this.table.columnManager.renderer.renderColumns();\n          }\n\n          this.renderTable();\n\n          if (table.options.layoutColumnsOnNewData) {\n            this.table.columnManager.redraw(true);\n          }\n        }\n      }\n\n      this.dispatch(\"data-refeshed\");\n    }\n  } //regenerate row numbers for row number formatter if in use\n\n\n  regenerateRowNumbers() {\n    if (this.rowNumColumn) {\n      this.activeRows.forEach(row => {\n        var cell = row.getCell(this.rowNumColumn);\n\n        if (cell) {\n          cell._generateContents();\n        }\n      });\n    }\n  }\n\n  setActiveRows(activeRows) {\n    this.activeRows = activeRows;\n    this.activeRowsCount = this.activeRows.length;\n  } //reset display rows array\n\n\n  resetDisplayRows() {\n    this.displayRows = [];\n    this.displayRows.push(this.activeRows.slice(0));\n    this.displayRowsCount = this.displayRows[0].length;\n  }\n\n  getNextDisplayIndex() {\n    return this.displayRows.length;\n  } //set display row pipeline data\n\n\n  setDisplayRows(displayRows, index) {\n    var output = true;\n\n    if (index && typeof this.displayRows[index] != \"undefined\") {\n      this.displayRows[index] = displayRows;\n      output = true;\n    } else {\n      this.displayRows.push(displayRows);\n      output = index = this.displayRows.length - 1;\n    }\n\n    if (index == this.displayRows.length - 1) {\n      this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n    }\n\n    return output;\n  }\n\n  getDisplayRows(index) {\n    if (typeof index == \"undefined\") {\n      return this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : [];\n    } else {\n      return this.displayRows[index] || [];\n    }\n  }\n\n  getVisibleRows(chain, viewable) {\n    var rows = Object.assign([], this.renderer.visibleRows(!viewable));\n\n    if (chain) {\n      rows = this.chain(\"rows-visible\", [viewable], rows, rows);\n    }\n\n    return rows;\n  } //repeat action accross display rows\n\n\n  displayRowIterator(callback) {\n    this.activeRowsPipeline.forEach(callback);\n    this.displayRows.forEach(callback);\n    this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n  } //return only actual rows (not group headers etc)\n\n\n  getRows(type) {\n    var rows;\n\n    switch (type) {\n      case \"active\":\n        rows = this.activeRows;\n        break;\n\n      case \"display\":\n        rows = this.table.rowManager.getDisplayRows();\n        break;\n\n      case \"visible\":\n        rows = this.getVisibleRows(true);\n        break;\n\n      default:\n        rows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\n    }\n\n    return rows;\n  } ///////////////// Table Rendering /////////////////\n  //trigger rerender of table in current position\n\n\n  reRenderInPosition(callback) {\n    if (this.redrawBlock) {\n      if (callback) {\n        callback();\n      } else {\n        this.redrawBlockRederInPosition = true;\n      }\n    } else {\n      this.renderer.rerenderRows(callback);\n    }\n  }\n\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomVertical,\n      \"basic\": BaiscVertical\n    };\n\n    if (typeof this.table.options.renderVertical === \"string\") {\n      renderClass = renderers[this.table.options.renderVertical];\n    } else {\n      renderClass = this.table.options.renderVertical;\n    }\n\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n\n      if (this.table.element.clientHeight || this.table.options.height) {\n        this.fixedHeight = true;\n      } else {\n        this.fixedHeight = false;\n      }\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderVertical);\n    }\n  }\n\n  getRenderMode() {\n    return this.renderMode;\n  }\n\n  renderTable() {\n    this.dispatchExternal(\"renderStarted\");\n    this.element.scrollTop = 0;\n\n    this._clearTable();\n\n    if (this.displayRowsCount) {\n      this.renderer.renderRows();\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.layoutRefresh();\n      }\n    } else {\n      this.renderEmptyScroll();\n    }\n\n    if (!this.fixedHeight) {\n      this.adjustTableSize();\n    }\n\n    this.dispatch(\"table-layout\");\n\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n\n    this.dispatchExternal(\"renderComplete\");\n  } //show scrollbars on empty table div\n\n\n  renderEmptyScroll() {\n    if (this.table.options.placeholder) {\n      this.tableElement.style.display = \"none\";\n    } else {\n      this.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\"; // this.tableElement.style.minHeight = \"1px\";\n      // this.tableElement.style.visibility = \"hidden\";\n    }\n  }\n\n  _clearTable() {\n    var element = this.tableElement;\n\n    this._clearPlaceholder();\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.renderer.clearRows();\n  }\n\n  _showPlaceholder() {\n    if (this.table.options.placeholder) {\n      this.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\n      this.getElement().appendChild(this.table.options.placeholder);\n      this.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\n    }\n  }\n\n  _clearPlaceholder() {\n    if (this.table.options.placeholder && this.table.options.placeholder.parentNode) {\n      this.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\n    }\n  }\n\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  } //normalize height of active rows\n\n\n  normalizeHeight() {\n    this.activeRows.forEach(function (row) {\n      row.normalizeHeight();\n    });\n  } //adjust the height of the table holder to fit in the Tabulator element\n\n\n  adjustTableSize() {\n    var initialHeight = this.element.clientHeight;\n\n    if (this.renderer.verticalFillMode === \"fill\") {\n      let otherHeight = Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\n\n      if (this.fixedHeight) {\n        this.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\n      } else {\n        this.element.style.height = \"\";\n        this.element.style.height = this.table.element.clientHeight - otherHeight + \"px\";\n        this.element.scrollTop = this.scrollTop;\n      }\n\n      this.renderer.resize(); //check if the table has changed size when dealing with variable height tables\n\n      if (!this.fixedHeight && initialHeight != this.element.clientHeight) {\n        if (this.subscribed(\"table-resize\")) {\n          this.dispatch(\"table-resize\");\n        } else {\n          this.redraw();\n        }\n      }\n    }\n  } //renitialize all rows\n\n\n  reinitialize() {\n    this.rows.forEach(function (row) {\n      row.reinitialize(true);\n    });\n  } //prevent table from being redrawn\n\n\n  blockRedraw() {\n    this.redrawBlock = true;\n    this.redrawBlockRestoreConfig = false;\n  } //restore table redrawing\n\n\n  restoreRedraw() {\n    this.redrawBlock = false;\n\n    if (this.redrawBlockRestoreConfig) {\n      this.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition);\n      this.redrawBlockRestoreConfig = false;\n    } else {\n      if (this.redrawBlockRederInPosition) {\n        this.reRenderInPosition();\n      }\n    }\n\n    this.redrawBlockRederInPosition = false;\n  } //redraw table\n\n\n  redraw(force) {\n    var left = this.scrollLeft;\n    this.adjustTableSize();\n    this.table.tableWidth = this.table.element.clientWidth;\n\n    if (!force) {\n      this.reRenderInPosition();\n      this.scrollHorizontal(left);\n\n      if (!this.displayRowsCount) {\n        if (this.table.options.placeholder) {\n          this.getElement().appendChild(this.table.options.placeholder);\n        }\n      }\n    } else {\n      this.renderTable();\n    }\n  }\n\n  resetScroll() {\n    this.element.scrollLeft = 0;\n    this.element.scrollTop = 0;\n\n    if (this.table.browser === \"ie\") {\n      var event = document.createEvent(\"Event\");\n      event.initEvent(\"scroll\", false, true);\n      this.element.dispatchEvent(event);\n    } else {\n      this.element.dispatchEvent(new Event('scroll'));\n    }\n  }\n\n}\n\nclass FooterManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.active = false;\n    this.element = this.createElement(); //containing element\n\n    this.external = false;\n    this.links = [];\n    this.initializeElement();\n  }\n\n  initialize() {\n    this.initializeElement();\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-footer\");\n    return el;\n  }\n\n  initializeElement() {\n    if (this.table.options.footerElement) {\n      switch (typeof this.table.options.footerElement) {\n        case \"string\":\n          if (this.table.options.footerElement[0] === \"<\") {\n            this.element.innerHTML = this.table.options.footerElement;\n          } else {\n            this.external = true;\n            this.element = document.querySelector(this.table.options.footerElement);\n          }\n\n          break;\n\n        default:\n          this.element = this.table.options.footerElement;\n          break;\n      }\n    }\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  append(element, parent) {\n    this.activate(parent);\n    this.element.appendChild(element);\n    this.table.rowManager.adjustTableSize();\n  }\n\n  prepend(element, parent) {\n    this.activate(parent);\n    this.element.insertBefore(element, this.element.firstChild);\n    this.table.rowManager.adjustTableSize();\n  }\n\n  remove(element) {\n    element.parentNode.removeChild(element);\n    this.deactivate();\n  }\n\n  deactivate(force) {\n    if (!this.element.firstChild || force) {\n      if (!this.external) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      this.active = false;\n    }\n  }\n\n  activate(parent) {\n    if (!this.active) {\n      this.active = true;\n\n      if (!this.external) {\n        this.table.element.appendChild(this.getElement());\n        this.table.element.style.display = '';\n      }\n    }\n\n    if (parent) {\n      this.links.push(parent);\n    }\n  }\n\n  redraw() {\n    this.links.forEach(function (link) {\n      link.footerRedraw();\n    });\n  }\n\n}\n\nclass InteractionManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.el = null;\n    this.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\n    this.previousTargets = {};\n    this.listeners = [\"click\", \"dblclick\", \"contextmenu\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mousemove\", \"touchstart\", \"touchend\"];\n    this.componentMap = {\n      \"tabulator-cell\": \"cell\",\n      \"tabulator-row\": \"row\",\n      \"tabulator-group\": \"group\",\n      \"tabulator-col\": \"column\"\n    };\n    this.pseudoTrackers = {\n      \"row\": {\n        subscriber: null,\n        target: null\n      },\n      \"cell\": {\n        subscriber: null,\n        target: null\n      },\n      \"group\": {\n        subscriber: null,\n        target: null\n      },\n      \"column\": {\n        subscriber: null,\n        target: null\n      }\n    };\n    this.pseudoTracking = false;\n  }\n\n  initialize() {\n    this.el = this.table.element;\n    this.buildListenerMap();\n    this.bindSubscriptionWatchers();\n  }\n\n  buildListenerMap() {\n    var listenerMap = {};\n    this.listeners.forEach(listener => {\n      listenerMap[listener] = {\n        handler: null,\n        components: []\n      };\n    });\n    this.listeners = listenerMap;\n  }\n\n  bindPseudoEvents() {\n    Object.keys(this.pseudoTrackers).forEach(key => {\n      this.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\n      this.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\n    });\n    this.pseudoTracking = true;\n  }\n\n  pseudoMouseEnter(key, e, target) {\n    if (this.pseudoTrackers[key].target !== target) {\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n      }\n\n      this.pseudoMouseLeave(key, e);\n      this.pseudoTrackers[key].target = target;\n      this.dispatch(key + \"-mouseenter\", e, target);\n    }\n  }\n\n  pseudoMouseLeave(key, e) {\n    var leaveList = Object.keys(this.pseudoTrackers),\n        linkedKeys = {\n      \"row\": [\"cell\"],\n      \"cell\": [\"row\"]\n    };\n    leaveList = leaveList.filter(item => {\n      var links = linkedKeys[key];\n      return item !== key && (!links || links && !links.includes(item));\n    });\n    leaveList.forEach(key => {\n      var target = this.pseudoTrackers[key].target;\n\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n        this.pseudoTrackers[key].target = null;\n      }\n    });\n  }\n\n  bindSubscriptionWatchers() {\n    var listeners = Object.keys(this.listeners),\n        components = Object.values(this.componentMap);\n\n    for (let comp of components) {\n      for (let listener of listeners) {\n        let key = comp + \"-\" + listener;\n        this.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\n      }\n    }\n\n    this.subscribe(\"table-destroy\", this.clearWatchers.bind(this));\n  }\n\n  subscriptionChanged(component, key, added) {\n    var listener = this.listeners[key].components,\n        index = listener.indexOf(component),\n        changed = false;\n\n    if (added) {\n      if (index === -1) {\n        listener.push(component);\n        changed = true;\n      }\n    } else {\n      if (!this.subscribed(component + \"-\" + key)) {\n        if (index > -1) {\n          listener.splice(index, 1);\n          changed = true;\n        }\n      }\n    }\n\n    if ((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking) {\n      this.bindPseudoEvents();\n    }\n\n    if (changed) {\n      this.updateEventListeners();\n    }\n  }\n\n  updateEventListeners() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n\n      if (listener.components.length) {\n        if (!listener.handler) {\n          listener.handler = this.track.bind(this, key);\n          this.el.addEventListener(key, listener.handler); // this.el.addEventListener(key, listener.handler, {passive: true})\n        }\n      } else {\n        if (listener.handler) {\n          this.el.removeEventListener(key, listener.handler);\n          listener.handler = null;\n        }\n      }\n    }\n  }\n\n  track(type, e) {\n    var path = e.composedPath && e.composedPath() || e.path;\n    var targets = this.findTargets(path);\n    targets = this.bindComponents(type, targets);\n    this.triggerEvents(type, e, targets);\n\n    if (this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length) {\n      this.pseudoMouseLeave(\"none\", e);\n    }\n  }\n\n  findTargets(path) {\n    var targets = {};\n    let componentMap = Object.keys(this.componentMap);\n\n    for (let el of path) {\n      let classList = el.classList ? [...el.classList] : [];\n      let abort = classList.filter(item => {\n        return this.abortClasses.includes(item);\n      });\n\n      if (abort.length) {\n        break;\n      }\n\n      let elTargets = classList.filter(item => {\n        return componentMap.includes(item);\n      });\n\n      for (let target of elTargets) {\n        targets[this.componentMap[target]] = el;\n      }\n    }\n\n    if (targets.group && targets.group === targets.row) {\n      delete targets.row;\n    }\n\n    return targets;\n  }\n\n  bindComponents(type, targets) {\n    //ensure row component is looked up before cell\n    var keys = Object.keys(targets).reverse(),\n        listener = this.listeners[type],\n        targetMatches = {};\n\n    for (let key of keys) {\n      let component;\n      let target = targets[key];\n      let previousTarget = this.previousTargets[key];\n\n      if (previousTarget && previousTarget.target === target) {\n        component = previousTarget.component;\n      } else {\n        switch (key) {\n          case \"row\":\n          case \"group\":\n            if (listener.components.includes(\"row\") || listener.components.includes(\"cell\")) {\n              let rows = this.table.rowManager.getVisibleRows(true);\n              component = rows.find(row => {\n                return row.getElement() === target;\n              });\n            }\n\n            break;\n\n          case \"column\":\n            if (listener.components.includes(\"column\")) {\n              component = this.table.columnManager.findColumn(target);\n            }\n\n            break;\n\n          case \"cell\":\n            if (listener.components.includes(\"cell\")) {\n              component = targets[\"row\"].findCell(target);\n            }\n\n            break;\n        }\n      }\n\n      if (component) {\n        targets[key] = component;\n        targetMatches[key] = {\n          target: target,\n          component: component\n        };\n      }\n    }\n\n    this.previousTargets = targetMatches;\n    return targets;\n  }\n\n  triggerEvents(type, e, targets) {\n    var listener = this.listeners[type];\n\n    for (let key in targets) {\n      if (targets[key] && listener.components.includes(key)) {\n        this.dispatch(key + \"-\" + type, e, targets[key]);\n      }\n    }\n  }\n\n  clearWatchers() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n\n      if (listener.handler) {\n        this.el.removeEventListener(key, listener.handler);\n        listener.handler = null;\n      }\n    }\n  }\n\n}\n\nclass ComponentFunctionBinder {\n  constructor(table) {\n    this.table = table;\n    this.bindings = {};\n  }\n\n  bind(type, funcName, handler) {\n    if (!this.bindings[type]) {\n      this.bindings[type] = {};\n    }\n\n    if (this.bindings[type][funcName]) {\n      console.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder);\n    } else {\n      this.bindings[type][funcName] = handler;\n    }\n  }\n\n  handle(type, component, name) {\n    if (this.bindings[type] && this.bindings[type][name]) {\n      return this.bindings[type][name].bind(null, component);\n    } else {\n      if (name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")) {\n        console.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\");\n      }\n    }\n  }\n\n}\n\nclass DataLoader extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.loaderElement = this.createLoaderElement(); //loader message div\n\n    this.msgElement = this.createMsgElement(); //message element\n\n    this.loadingElement = null;\n    this.errorElement = null;\n    this.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\n\n    this.loading = false;\n  }\n\n  initialize() {\n    var template;\n    this.loaderElement.appendChild(this.msgElement);\n\n    if (this.table.options.dataLoaderLoading) {\n      if (typeof this.table.options.dataLoaderLoading == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderLoading.trim();\n        this.loadingElement = template.firstElementChild;\n      } else {\n        this.loadingElement = this.table.options.dataLoaderLoading;\n      }\n    }\n\n    if (this.table.options.dataLoaderError) {\n      if (typeof this.table.options.dataLoaderError == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderError.trim();\n        this.errorElement = template.firstElementChild;\n      } else {\n        this.errorElement = this.table.options.dataLoaderError;\n      }\n    }\n  }\n\n  createLoaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader\");\n    return el;\n  }\n\n  createMsgElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader-msg\");\n    el.setAttribute(\"role\", \"alert\");\n    return el;\n  }\n\n  load(data, params, config, replace, silent) {\n    var requestNo = ++this.requestOrder;\n    this.dispatchExternal(\"dataLoading\", data); //parse json data to array\n\n    if (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)) {\n      data = JSON.parse(data);\n    }\n\n    if (this.confirm(\"data-loading\", [data, params, config, silent])) {\n      this.loading = true;\n\n      if (!silent) {\n        this.showLoader();\n      } //get params for request\n\n\n      params = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\n      params = this.mapParams(params, this.table.options.dataSendParams);\n      var result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\n      return result.then(response => {\n        if (!Array.isArray(response) && typeof response == \"object\") {\n          response = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\n        }\n\n        var rowData = this.chain(\"data-loaded\", response, null, response);\n\n        if (requestNo == this.requestOrder) {\n          this.hideLoader();\n\n          if (rowData !== false) {\n            this.dispatchExternal(\"dataLoaded\", rowData);\n            this.table.rowManager.setData(rowData, replace, !replace);\n          }\n        } else {\n          console.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\n        }\n      }).catch(error => {\n        console.error(\"Data Load Error: \", error);\n        this.dispatchExternal(\"dataLoadError\", error);\n\n        if (!silent) {\n          this.showError();\n        }\n\n        setTimeout(() => {\n          this.hideLoader();\n        }, 3000);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dispatchExternal(\"dataLoaded\", data);\n\n      if (!data) {\n        data = [];\n      }\n\n      this.table.rowManager.setData(data, replace, !replace);\n      return Promise.resolve();\n    }\n  }\n\n  mapParams(params, map) {\n    var output = {};\n\n    for (let key in params) {\n      output[map.hasOwnProperty(key) ? map[key] : key] = params[key];\n    }\n\n    return output;\n  }\n\n  objectInvert(obj) {\n    var output = {};\n\n    for (let key in obj) {\n      output[obj[key]] = key;\n    }\n\n    return output;\n  }\n\n  blockActiveLoad() {\n    this.requestOrder++;\n  }\n\n  showLoader() {\n    var shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\n\n    if (shouldLoad) {\n      this.hideLoader();\n\n      while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n\n      this.msgElement.classList.remove(\"tabulator-error\");\n      this.msgElement.classList.add(\"tabulator-loading\");\n\n      if (this.loadingElement) {\n        this.msgElement.appendChild(this.loadingElement);\n      } else {\n        this.msgElement.innerHTML = this.langText(\"data|loading\");\n      }\n\n      this.table.element.appendChild(this.loaderElement);\n    }\n  }\n\n  showError() {\n    this.hideLoader();\n\n    while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n\n    this.msgElement.classList.remove(\"tabulator-loading\");\n    this.msgElement.classList.add(\"tabulator-error\");\n\n    if (this.errorElement) {\n      this.msgElement.appendChild(this.errorElement);\n    } else {\n      this.msgElement.innerHTML = this.langText(\"data|error\");\n    }\n\n    this.table.element.appendChild(this.loaderElement);\n  }\n\n  hideLoader() {\n    if (this.loaderElement.parentNode) {\n      this.loaderElement.parentNode.removeChild(this.loaderElement);\n    }\n  }\n\n}\n\nclass ExternalEventBus {\n  constructor(table, optionsList, debug) {\n    this.table = table;\n    this.events = {};\n    this.optionsList = optionsList || {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.debug = debug;\n  }\n\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n\n    this.subscriptionNotifiers[key].push(callback);\n\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n\n  subscribe(key, callback) {\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n\n    this.events[key].push(callback);\n\n    this._notifiySubscriptionChange(key, true);\n  }\n\n  unsubscribe(key, callback) {\n    var index;\n\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item === callback;\n        });\n\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      } else {\n        delete this.events[key];\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n\n    this._notifiySubscriptionChange(key, false);\n  }\n\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n\n  _dispatch() {\n    var args = Array.from(arguments),\n        key = args.shift(),\n        result;\n\n    if (this.events[key]) {\n      this.events[key].forEach((callback, i) => {\n        let callResult = callback.apply(this.table, args);\n\n        if (!i) {\n          result = callResult;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  _debugDispatch() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"ExternalEvent:\" + args[0];\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._dispatch(...arguments);\n  }\n\n}\n\nclass InternalEventBus {\n  constructor(debug) {\n    this.events = {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\n    this.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\n    this.debug = debug;\n  }\n\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n\n    this.subscriptionNotifiers[key].push(callback);\n\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n\n  subscribe(key, callback) {\n    let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;\n\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n\n    this.events[key].push({\n      callback,\n      priority\n    });\n    this.events[key].sort((a, b) => {\n      return a.priority - b.priority;\n    });\n\n    this._notifiySubscriptionChange(key, true);\n  }\n\n  unsubscribe(key, callback) {\n    var index;\n\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item.callback === callback;\n        });\n\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n\n    this._notifiySubscriptionChange(key, false);\n  }\n\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n\n  _chain(key, args, initialValue, fallback) {\n    var value = initialValue;\n\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        value = subscriber.callback.apply(this, args.concat([value]));\n      });\n      return value;\n    } else {\n      return typeof fallback === \"function\" ? fallback() : fallback;\n    }\n  }\n\n  _confirm(key, args) {\n    var confirmed = false;\n\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        if (subscriber.callback.apply(this, args)) {\n          confirmed = true;\n        }\n      });\n    }\n\n    return confirmed;\n  }\n\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n\n  _dispatch() {\n    var args = Array.from(arguments),\n        key = args.shift();\n\n    if (this.events[key]) {\n      this.events[key].forEach(subscriber => {\n        let callResult = subscriber.callback.apply(this, args);\n      });\n    }\n  }\n\n  _debugDispatch() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._dispatch(...arguments);\n  }\n\n  _debugChain() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._chain(...arguments);\n  }\n\n  _debugConfirm() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._confirm(...arguments);\n  }\n\n}\n\nclass TableRegistry {\n  static register(table) {\n    TableRegistry.tables.push(table);\n  }\n\n  static deregister(table) {\n    var index = TableRegistry.tables.indexOf(table);\n\n    if (index > -1) {\n      TableRegistry.tables.splice(index, 1);\n    }\n  }\n\n  static lookupTable(query, silent) {\n    var results = [],\n        matches,\n        match;\n\n    if (typeof query === \"string\") {\n      matches = document.querySelectorAll(query);\n\n      if (matches.length) {\n        for (var i = 0; i < matches.length; i++) {\n          match = TableRegistry.matchElement(matches[i]);\n\n          if (match) {\n            results.push(match);\n          }\n        }\n      }\n    } else if (typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement || query instanceof Tabulator) {\n      match = TableRegistry.matchElement(query);\n\n      if (match) {\n        results.push(match);\n      }\n    } else if (Array.isArray(query)) {\n      query.forEach(function (item) {\n        results = results.concat(TableRegistry.lookupTable(item));\n      });\n    } else {\n      if (!silent) {\n        console.warn(\"Table Connection Error - Invalid Selector\", query);\n      }\n    }\n\n    return results;\n  }\n\n  static matchElement(element) {\n    return TableRegistry.tables.find(function (table) {\n      return element instanceof Tabulator ? table === element : table.element === element;\n    });\n  }\n\n}\n\nTableRegistry.tables = []; //resize columns to fit data they contain\n\nfunction fitData(columns) {\n  this.table.columnManager.renderer.reinitializeColumnWidths(columns);\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n} //resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\n\n\nfunction fitDataGeneral(columns) {\n  columns.forEach(function (column) {\n    column.reinitializeWidth();\n  });\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n} //resize columns to fit data the contain and stretch last column to fill table\n\n\nfunction fitDataStretch(columns) {\n  var colsWidth = 0,\n      tableWidth = this.table.rowManager.element.clientWidth,\n      gap = 0,\n      lastCol = false;\n  columns.forEach((column, i) => {\n    if (!column.widthFixed) {\n      column.reinitializeWidth();\n    }\n\n    if (this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible) {\n      lastCol = column;\n    }\n\n    if (column.visible) {\n      colsWidth += column.getWidth();\n    }\n  });\n\n  if (lastCol) {\n    gap = tableWidth - colsWidth + lastCol.getWidth();\n\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      lastCol.setWidth(0);\n      this.table.modules.responsiveLayout.update();\n    }\n\n    if (gap > 0) {\n      lastCol.setWidth(gap);\n    } else {\n      lastCol.reinitializeWidth();\n    }\n  } else {\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      this.table.modules.responsiveLayout.update();\n    }\n  }\n} //resize columns to fit\n\n\nfunction fitColumns(columns) {\n  var totalWidth = this.table.element.clientWidth; //table element width\n\n  var fixedWidth = 0; //total width of columns with a defined width\n\n  var flexWidth = 0; //total width available to flexible columns\n\n  var flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\n\n  var flexColWidth = 0; //desired width of flexible columns\n\n  var flexColumns = []; //array of flexible width columns\n\n  var fixedShrinkColumns = []; //array of fixed width columns that can shrink\n\n  var flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\n\n  var overflowWidth = 0; //horizontal overflow width\n\n  var gapFill = 0; //number of pixels to be added to final column to close and half pixel gaps\n\n  function calcWidth(width) {\n    var colWidth;\n\n    if (typeof width == \"string\") {\n      if (width.indexOf(\"%\") > -1) {\n        colWidth = totalWidth / 100 * parseInt(width);\n      } else {\n        colWidth = parseInt(width);\n      }\n    } else {\n      colWidth = width;\n    }\n\n    return colWidth;\n  } //ensure columns resize to take up the correct amount of space\n\n\n  function scaleColumns(columns, freeSpace, colWidth, shrinkCols) {\n    var oversizeCols = [],\n        oversizeSpace = 0,\n        remainingSpace = 0,\n        nextColWidth = 0,\n        remainingFlexGrowUnits = flexGrowUnits,\n        gap = 0,\n        changeUnits = 0,\n        undersizeCols = [];\n\n    function calcGrow(col) {\n      return colWidth * (col.column.definition.widthGrow || 1);\n    }\n\n    function calcShrink(col) {\n      return calcWidth(col.width) - colWidth * (col.column.definition.widthShrink || 0);\n    }\n\n    columns.forEach(function (col, i) {\n      var width = shrinkCols ? calcShrink(col) : calcGrow(col);\n\n      if (col.column.minWidth >= width) {\n        oversizeCols.push(col);\n      } else {\n        if (col.column.maxWidth && col.column.maxWidth < width) {\n          col.width = col.column.maxWidth;\n          freeSpace -= col.column.maxWidth;\n          remainingFlexGrowUnits -= shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n\n          if (remainingFlexGrowUnits) {\n            colWidth = Math.floor(freeSpace / remainingFlexGrowUnits);\n          }\n        } else {\n          undersizeCols.push(col);\n          changeUnits += shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n        }\n      }\n    });\n\n    if (oversizeCols.length) {\n      oversizeCols.forEach(function (col) {\n        oversizeSpace += shrinkCols ? col.width - col.column.minWidth : col.column.minWidth;\n        col.width = col.column.minWidth;\n      });\n      remainingSpace = freeSpace - oversizeSpace;\n      nextColWidth = changeUnits ? Math.floor(remainingSpace / changeUnits) : remainingSpace;\n      gap = remainingSpace - nextColWidth * changeUnits;\n      gap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\n    } else {\n      gap = changeUnits ? freeSpace - Math.floor(freeSpace / changeUnits) * changeUnits : freeSpace;\n      undersizeCols.forEach(function (column) {\n        column.width = shrinkCols ? calcShrink(column) : calcGrow(column);\n      });\n    }\n\n    return gap;\n  }\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  } //adjust for vertical scrollbar if present\n\n\n  if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n    totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n  }\n\n  columns.forEach(function (column) {\n    var width, minWidth, colWidth;\n\n    if (column.visible) {\n      width = column.definition.width;\n      minWidth = parseInt(column.minWidth);\n\n      if (width) {\n        colWidth = calcWidth(width);\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n\n        if (column.definition.widthShrink) {\n          fixedShrinkColumns.push({\n            column: column,\n            width: colWidth > minWidth ? colWidth : minWidth\n          });\n          flexShrinkUnits += column.definition.widthShrink;\n        }\n      } else {\n        flexColumns.push({\n          column: column,\n          width: 0\n        });\n        flexGrowUnits += column.definition.widthGrow || 1;\n      }\n    }\n  }); //calculate available space\n\n  flexWidth = totalWidth - fixedWidth; //calculate correct column size\n\n  flexColWidth = Math.floor(flexWidth / flexGrowUnits); //generate column widths\n\n  var gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false); //increase width of last column to account for rounding errors\n\n  if (flexColumns.length && gapFill > 0) {\n    flexColumns[flexColumns.length - 1].width += +gapFill;\n  } //caculate space for columns to be shrunk into\n\n\n  flexColumns.forEach(function (col) {\n    flexWidth -= col.width;\n  });\n  overflowWidth = Math.abs(gapFill) + flexWidth; //shrink oversize columns if there is no available space\n\n  if (overflowWidth > 0 && flexShrinkUnits) {\n    gapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\n  } //decrease width of last column to account for rounding errors\n\n\n  if (fixedShrinkColumns.length) {\n    fixedShrinkColumns[fixedShrinkColumns.length - 1].width -= gapFill;\n  }\n\n  flexColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n  fixedShrinkColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n}\n\nvar defaultModes = {\n  fitData: fitData,\n  fitDataFill: fitDataGeneral,\n  fitDataTable: fitDataGeneral,\n  fitDataStretch: fitDataStretch,\n  fitColumns: fitColumns\n};\n\nclass Layout extends Module {\n  constructor(table) {\n    super(table, \"layout\");\n    this.mode = null;\n    this.registerTableOption(\"layout\", \"fitData\"); //layout type\n\n    this.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\n\n    this.registerColumnOption(\"widthGrow\");\n    this.registerColumnOption(\"widthShrink\");\n  } //initialize layout system\n\n\n  initialize() {\n    var layout = this.table.options.layout;\n\n    if (Layout.modes[layout]) {\n      this.mode = layout;\n    } else {\n      console.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\n      this.mode = 'fitData';\n    }\n\n    this.table.element.setAttribute(\"tabulator-layout\", this.mode);\n  }\n\n  getMode() {\n    return this.mode;\n  } //trigger table layout\n\n\n  layout() {\n    Layout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\n    this.dispatch(\"layout-refreshed\");\n  }\n\n}\n\nLayout.moduleName = \"layout\"; //load defaults\n\nLayout.modes = defaultModes;\nvar defaultLangs = {\n  \"default\": {\n    //hold default locale text\n    \"groups\": {\n      \"item\": \"item\",\n      \"items\": \"items\"\n    },\n    \"columns\": {},\n    \"data\": {\n      \"loading\": \"Loading\",\n      \"error\": \"Error\"\n    },\n    \"pagination\": {\n      \"page_size\": \"Page Size\",\n      \"page_title\": \"Show Page\",\n      \"first\": \"First\",\n      \"first_title\": \"First Page\",\n      \"last\": \"Last\",\n      \"last_title\": \"Last Page\",\n      \"prev\": \"Prev\",\n      \"prev_title\": \"Prev Page\",\n      \"next\": \"Next\",\n      \"next_title\": \"Next Page\",\n      \"all\": \"All\"\n    },\n    \"headerFilters\": {\n      \"default\": \"filter column...\",\n      \"columns\": {}\n    }\n  }\n};\n\nclass Localize extends Module {\n  constructor(table) {\n    super(table);\n    this.locale = \"default\"; //current locale\n\n    this.lang = false; //current language\n\n    this.bindings = {}; //update events to call when locale is changed\n\n    this.langList = {};\n    this.registerTableOption(\"locale\", false); //current system language\n\n    this.registerTableOption(\"langs\", {});\n  }\n\n  initialize() {\n    this.langList = Helpers.deepClone(Localize.langs);\n\n    if (this.table.options.columnDefaults.headerFilterPlaceholder !== false) {\n      this.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\n    }\n\n    for (let locale in this.table.options.langs) {\n      this.installLang(locale, this.table.options.langs[locale]);\n    }\n\n    this.setLocale(this.table.options.locale);\n    this.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\n    this.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\n    this.registerTableFunction(\"getLang\", this.getLang.bind(this));\n  } //set header placehoder\n\n\n  setHeaderFilterPlaceholder(placeholder) {\n    this.langList.default.headerFilters.default = placeholder;\n  } //set header filter placeholder by column\n\n\n  setHeaderFilterColumnPlaceholder(column, placeholder) {\n    this.langList.default.headerFilters.columns[column] = placeholder;\n\n    if (this.lang && !this.lang.headerFilters.columns[column]) {\n      this.lang.headerFilters.columns[column] = placeholder;\n    }\n  } //setup a lang description object\n\n\n  installLang(locale, lang) {\n    if (this.langList[locale]) {\n      this._setLangProp(this.langList[locale], lang);\n    } else {\n      this.langList[locale] = lang;\n    }\n  }\n\n  _setLangProp(lang, values) {\n    for (let key in values) {\n      if (lang[key] && typeof lang[key] == \"object\") {\n        this._setLangProp(lang[key], values[key]);\n      } else {\n        lang[key] = values[key];\n      }\n    }\n  } //set current locale\n\n\n  setLocale(desiredLocale) {\n    desiredLocale = desiredLocale || \"default\"; //fill in any matching languge values\n\n    function traverseLang(trans, path) {\n      for (var prop in trans) {\n        if (typeof trans[prop] == \"object\") {\n          if (!path[prop]) {\n            path[prop] = {};\n          }\n\n          traverseLang(trans[prop], path[prop]);\n        } else {\n          path[prop] = trans[prop];\n        }\n      }\n    } //determing correct locale to load\n\n\n    if (desiredLocale === true && navigator.language) {\n      //get local from system\n      desiredLocale = navigator.language.toLowerCase();\n    }\n\n    if (desiredLocale) {\n      //if locale is not set, check for matching top level locale else use default\n      if (!this.langList[desiredLocale]) {\n        let prefix = desiredLocale.split(\"-\")[0];\n\n        if (this.langList[prefix]) {\n          console.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\n          desiredLocale = prefix;\n        } else {\n          console.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\n          desiredLocale = \"default\";\n        }\n      }\n    }\n\n    this.locale = desiredLocale; //load default lang template\n\n    this.lang = Helpers.deepClone(this.langList.default || {});\n\n    if (desiredLocale != \"default\") {\n      traverseLang(this.langList[desiredLocale], this.lang);\n    }\n\n    this.dispatchExternal(\"localized\", this.locale, this.lang);\n\n    this._executeBindings();\n  } //get current locale\n\n\n  getLocale(locale) {\n    return this.locale;\n  } //get lang object for given local or current if none provided\n\n\n  getLang(locale) {\n    return locale ? this.langList[locale] : this.lang;\n  } //get text for current locale\n\n\n  getText(path, value) {\n    var path = value ? path + \"|\" + value : path,\n        pathArray = path.split(\"|\"),\n        text = this._getLangElement(pathArray, this.locale); // if(text === false){\n    // \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\n    // }\n\n\n    return text || \"\";\n  } //traverse langs object and find localized copy\n\n\n  _getLangElement(path, locale) {\n    var root = this.lang;\n    path.forEach(function (level) {\n      var rootPath;\n\n      if (root) {\n        rootPath = root[level];\n\n        if (typeof rootPath != \"undefined\") {\n          root = rootPath;\n        } else {\n          root = false;\n        }\n      }\n    });\n    return root;\n  } //set update binding\n\n\n  bind(path, callback) {\n    if (!this.bindings[path]) {\n      this.bindings[path] = [];\n    }\n\n    this.bindings[path].push(callback);\n    callback(this.getText(path), this.lang);\n  } //itterate through bindings and trigger updates\n\n\n  _executeBindings() {\n    for (let path in this.bindings) {\n      this.bindings[path].forEach(binding => {\n        binding(this.getText(path), this.lang);\n      });\n    }\n  }\n\n}\n\nLocalize.moduleName = \"localize\"; //load defaults\n\nLocalize.langs = defaultLangs;\n\nclass Comms extends Module {\n  constructor(table) {\n    super(table);\n  }\n\n  initialize() {\n    this.registerTableFunction(\"tableComms\", this.receive.bind(this));\n  }\n\n  getConnections(selectors) {\n    var connections = [],\n        connection;\n    connection = TableRegistry.lookupTable(selectors);\n    connection.forEach(con => {\n      if (this.table !== con) {\n        connections.push(con);\n      }\n    });\n    return connections;\n  }\n\n  send(selectors, module, action, data) {\n    var connections = this.getConnections(selectors);\n    connections.forEach(connection => {\n      connection.tableComms(this.table.element, module, action, data);\n    });\n\n    if (!connections.length && selectors) {\n      console.warn(\"Table Connection Error - No tables matching selector found\", selectors);\n    }\n  }\n\n  receive(table, module, action, data) {\n    if (this.table.modExists(module)) {\n      return this.table.modules[module].commsReceived(table, action, data);\n    } else {\n      console.warn(\"Inter-table Comms Error - no such module:\", module);\n    }\n  }\n\n}\n\nComms.moduleName = \"comms\";\nvar coreModules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LayoutModule: Layout,\n  LocalizeModule: Localize,\n  CommsModule: Comms\n});\n\nclass ModuleBinder {\n  constructor(tabulator, modules) {\n    this.bindStaticFuctionality(tabulator);\n    this.bindModules(tabulator, coreModules, true);\n\n    if (modules) {\n      this.bindModules(tabulator, modules);\n    }\n  }\n\n  bindStaticFuctionality(tabulator) {\n    tabulator.moduleBindings = {};\n\n    tabulator.extendModule = function (name, property, values) {\n      if (tabulator.moduleBindings[name]) {\n        var source = tabulator.moduleBindings[name][property];\n\n        if (source) {\n          if (typeof values == \"object\") {\n            for (let key in values) {\n              source[key] = values[key];\n            }\n          } else {\n            console.warn(\"Module Error - Invalid value type, it must be an object\");\n          }\n        } else {\n          console.warn(\"Module Error - property does not exist:\", property);\n        }\n      } else {\n        console.warn(\"Module Error - module does not exist:\", name);\n      }\n    };\n\n    tabulator.registerModule = function (modules) {\n      if (!Array.isArray(modules)) {\n        modules = [modules];\n      }\n\n      modules.forEach(mod => {\n        tabulator.registerModuleBinding(mod);\n      });\n    };\n\n    tabulator.registerModuleBinding = function (mod) {\n      tabulator.moduleBindings[mod.moduleName] = mod;\n    };\n\n    tabulator.findTable = function (query) {\n      var results = TableRegistry.lookupTable(query, true);\n      return Array.isArray(results) && !results.length ? false : results;\n    }; //ensure that module are bound to instantiated function\n\n\n    tabulator.prototype.bindModules = function () {\n      this.modules = {};\n\n      for (var name in tabulator.moduleBindings) {\n        let mod = tabulator.moduleBindings[name];\n        this.modules[name] = new mod(this);\n\n        if (mod.prototype.moduleCore) {\n          this.modulesCore[name] = this.modules[name];\n        } else {\n          this.modulesRegular[name] = this.modules[name];\n        }\n      }\n    };\n  }\n\n  bindModules(tabulator, modules, core) {\n    var mods = Object.values(modules);\n\n    if (core) {\n      mods.forEach(mod => {\n        mod.prototype.moduleCore = true;\n      });\n    }\n\n    tabulator.registerModule(mods);\n  }\n\n}\n\nclass Tabulator {\n  constructor(element, options) {\n    this.options = {};\n    this.columnManager = null; // hold Column Manager\n\n    this.rowManager = null; //hold Row Manager\n\n    this.footerManager = null; //holder Footer Manager\n\n    this.vdomHoz = null; //holder horizontal virtual dom\n\n    this.externalEvents = null; //handle external event messaging\n\n    this.eventBus = null; //handle internal event messaging\n\n    this.interactionMonitor = false; //track user interaction\n\n    this.browser = \"\"; //hold current browser type\n\n    this.browserSlow = false; //handle reduced functionality for slower browsers\n\n    this.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\n\n    this.rtl = false; //check if the table is in RTL mode\n\n    this.originalElement = null; //hold original table element if it has been replaced\n\n    this.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\n\n    this.dataLoader = false; //bind component functions\n\n    this.modules = {}; //hold all modules bound to this table\n\n    this.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\n\n    this.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\n\n    this.optionsList = new OptionsList(this, \"table constructor\");\n    this.initialized = false;\n\n    if (this.initializeElement(element)) {\n      this.initialzeCoreSystems(options); //delay table creation to allow event bindings immediately after the constructor\n\n      setTimeout(() => {\n        this._create();\n      });\n    }\n\n    TableRegistry.register(this); //register table for inter-device communication\n  }\n\n  initializeElement(element) {\n    if (typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement) {\n      this.element = element;\n      return true;\n    } else if (typeof element === \"string\") {\n      this.element = document.querySelector(element);\n\n      if (this.element) {\n        return true;\n      } else {\n        console.error(\"Tabulator Creation Error - no element found matching selector: \", element);\n        return false;\n      }\n    } else {\n      console.error(\"Tabulator Creation Error - Invalid element provided:\", element);\n      return false;\n    }\n  }\n\n  initialzeCoreSystems(options) {\n    this.columnManager = new ColumnManager(this);\n    this.rowManager = new RowManager(this);\n    this.footerManager = new FooterManager(this);\n    this.dataLoader = new DataLoader(this);\n    this.bindModules();\n    this.options = this.optionsList.generate(Tabulator.defaultOptions, options);\n\n    this._clearObjectPointers();\n\n    this._mapDeprecatedFunctionality();\n\n    this.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\n    this.eventBus = new InternalEventBus(this.options.debugEventsInternal);\n    this.interactionMonitor = new InteractionManager(this);\n    this.dataLoader.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n    this.footerManager.initialize();\n  } //convert deprecated functionality to new functions\n\n\n  _mapDeprecatedFunctionality() {//all previously deprecated functionality removed in the 5.0 release\n  }\n\n  _clearSelection() {\n    this.element.classList.add(\"tabulator-block-select\");\n\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n\n    this.element.classList.remove(\"tabulator-block-select\");\n  } //create table\n\n\n  _create() {\n    this.externalEvents.dispatch(\"tableBuilding\");\n    this.eventBus.dispatch(\"table-building\");\n\n    this._rtlCheck();\n\n    this._buildElement();\n\n    this._initializeTable();\n\n    this._loadInitialData();\n\n    this.initialized = true;\n    this.externalEvents.dispatch(\"tableBuilt\");\n  }\n\n  _rtlCheck() {\n    var style = window.getComputedStyle(this.element);\n\n    switch (this.options.textDirection) {\n      case \"auto\":\n        if (style.direction !== \"rtl\") {\n          break;\n        }\n\n      case \"rtl\":\n        this.element.classList.add(\"tabulator-rtl\");\n        this.rtl = true;\n        break;\n\n      case \"ltr\":\n        this.element.classList.add(\"tabulator-ltr\");\n\n      default:\n        this.rtl = false;\n    }\n  } //clear pointers to objects in default config object\n\n\n  _clearObjectPointers() {\n    this.options.columns = this.options.columns.slice(0);\n\n    if (this.options.data && !this.options.reactiveData) {\n      this.options.data = this.options.data.slice(0);\n    }\n  } //build tabulator element\n\n\n  _buildElement() {\n    var element = this.element,\n        options = this.options,\n        newElement;\n\n    if (element.tagName === \"TABLE\") {\n      this.originalElement = this.element;\n      newElement = document.createElement(\"div\"); //transfer attributes to new element\n\n      var attributes = element.attributes; // loop through attributes and apply them on div\n\n      for (var i in attributes) {\n        if (typeof attributes[i] == \"object\") {\n          newElement.setAttribute(attributes[i].name, attributes[i].value);\n        }\n      } // replace table with div element\n\n\n      element.parentNode.replaceChild(newElement, element);\n      this.element = element = newElement;\n    }\n\n    element.classList.add(\"tabulator\");\n    element.setAttribute(\"role\", \"grid\"); //empty element\n\n    while (element.firstChild) element.removeChild(element.firstChild); //set table height\n\n\n    if (options.height) {\n      options.height = isNaN(options.height) ? options.height : options.height + \"px\";\n      element.style.height = options.height;\n    } //set table min height\n\n\n    if (options.minHeight !== false) {\n      options.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\n      element.style.minHeight = options.minHeight;\n    } //set table maxHeight\n\n\n    if (options.maxHeight !== false) {\n      options.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\n      element.style.maxHeight = options.maxHeight;\n    }\n  } //initialize core systems and modules\n\n\n  _initializeTable() {\n    var element = this.element,\n        options = this.options;\n    this.interactionMonitor.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n\n    this._detectBrowser(); //initialize core modules\n\n\n    for (let key in this.modulesCore) {\n      let mod = this.modulesCore[key];\n      mod.initialize();\n    } //configure placeholder element\n\n\n    if (typeof options.placeholder == \"string\") {\n      var el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-placeholder\");\n      var span = document.createElement(\"span\");\n      span.innerHTML = options.placeholder;\n      el.appendChild(span);\n      options.placeholder = el;\n    } //build table elements\n\n\n    element.appendChild(this.columnManager.getElement());\n    element.appendChild(this.rowManager.getElement());\n\n    if (options.footerElement) {\n      this.footerManager.activate();\n    }\n\n    if (options.autoColumns && options.data) {\n      this.columnManager.generateColumnsFromRowData(this.options.data);\n    } //initialize regular modules\n\n\n    for (let key in this.modulesRegular) {\n      let mod = this.modulesRegular[key];\n      mod.initialize();\n    }\n\n    this.columnManager.setColumns(options.columns);\n    this.eventBus.dispatch(\"table-built\");\n  }\n\n  _loadInitialData() {\n    this.dataLoader.load(this.options.data);\n  } //deconstructor\n\n\n  destroy() {\n    var element = this.element;\n    TableRegistry.deregister(this); //deregister table from inter-device communication\n\n    this.eventBus.dispatch(\"table-destroy\"); //clear row data\n\n    this.rowManager.rows.forEach(function (row) {\n      row.wipe();\n    });\n    this.rowManager.rows = [];\n    this.rowManager.activeRows = [];\n    this.rowManager.displayRows = []; //clear DOM\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.classList.remove(\"tabulator\");\n  }\n\n  _detectBrowser() {\n    var ua = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (ua.indexOf(\"Trident\") > -1) {\n      this.browser = \"ie\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Edge\") > -1) {\n      this.browser = \"edge\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Firefox\") > -1) {\n      this.browser = \"firefox\";\n      this.browserSlow = false;\n    } else {\n      this.browser = \"other\";\n      this.browserSlow = false;\n    }\n\n    this.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0, 4));\n  } ////////////////// Data Handling //////////////////\n  //block table redrawing\n\n\n  blockRedraw() {\n    return this.rowManager.blockRedraw();\n  } //restore table redrawing\n\n\n  restoreRedraw() {\n    return this.rowManager.restoreRedraw();\n  } //local data from local file\n\n\n  setDataFromLocalFile(extensions) {\n    return new Promise((resolve, reject) => {\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = extensions || \".json,application/json\";\n      input.addEventListener(\"change\", e => {\n        var file = input.files[0],\n            reader = new FileReader(),\n            data;\n        reader.readAsText(file);\n\n        reader.onload = e => {\n          try {\n            data = JSON.parse(reader.result);\n          } catch (e) {\n            console.warn(\"File Load Error - File contents is invalid JSON\", e);\n            reject(e);\n            return;\n          }\n\n          this.setData(data).then(data => {\n            resolve(data);\n          }).catch(err => {\n            resolve(err);\n          });\n        };\n\n        reader.onerror = e => {\n          console.warn(\"File Load Error - Unable to read file\");\n          reject();\n        };\n      });\n      input.click();\n    });\n  } //load data\n\n\n  setData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, false);\n    } else {\n      console.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\");\n    }\n  } //clear data\n\n\n  clearData() {\n    this.dataLoader.blockActiveLoad();\n    this.rowManager.clearData();\n  } //get table data array\n\n\n  getData(active) {\n    return this.rowManager.getData(active);\n  } //get table data array count\n\n\n  getDataCount(active) {\n    return this.rowManager.getDataCount(active);\n  } //replace data, keeping table in position with same sort\n\n\n  replaceData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, true, true);\n    } else {\n      console.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  } //update table data\n\n\n  updateData(data) {\n    var responses = 0;\n\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n\n            if (row) {\n              responses++;\n              row.updateData(item).then(() => {\n                responses--;\n\n                if (!responses) {\n                  resolve();\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  addData(data, pos, index) {\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n\n        if (data) {\n          this.rowManager.addRows(data, pos, index).then(rows => {\n            var output = [];\n            rows.forEach(function (row) {\n              output.push(row.getComponent());\n            });\n            resolve(output);\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  } //update table data\n\n\n  updateOrAddData(data) {\n    var rows = [],\n        responses = 0;\n\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n            responses++;\n\n            if (row) {\n              row.updateData(item).then(() => {\n                responses--;\n                rows.push(row.getComponent());\n\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            } else {\n              this.rowManager.addRows(item).then(newRows => {\n                responses--;\n                rows.push(newRows[0].getComponent());\n\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  } //get row object\n\n\n  getRow(index) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", index);\n      return false;\n    }\n  } //get row object\n\n\n  getRowFromPosition(position, active) {\n    var row = this.rowManager.getRowFromPosition(position, active);\n\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", position);\n      return false;\n    }\n  } //delete row from table\n\n\n  deleteRow(index) {\n    var foundRows = [];\n\n    if (!Array.isArray(index)) {\n      index = [index];\n    } //find matching rows\n\n\n    for (let item of index) {\n      let row = this.rowManager.findRow(item, true);\n\n      if (row) {\n        foundRows.push(row);\n      } else {\n        console.error(\"Delete Error - No matching row found:\", item);\n        return Promise.reject(\"Delete Error - No matching row found\");\n      }\n    } //sort rows into correct order to ensure smooth delete from table\n\n\n    foundRows.sort((a, b) => {\n      return this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\n    }); //delete rows\n\n    foundRows.forEach(row => {\n      row.delete();\n    });\n    this.rowManager.reRenderInPosition();\n    return Promise.resolve();\n  } //add row to table\n\n\n  addRow(data, pos, index) {\n    if (this.initialized) {\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n\n      return this.rowManager.addRows(data, pos, index).then(rows => {\n        return rows[0].getComponent();\n      });\n    } else {\n      console.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  } //update a row if it exitsts otherwise create it\n\n\n  updateOrAddRow(index, data) {\n    var row = this.rowManager.findRow(index);\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (row) {\n      return row.updateData(data).then(() => {\n        return row.getComponent();\n      });\n    } else {\n      return this.rowManager.addRows(data).then(rows => {\n        return rows[0].getComponent();\n      });\n    }\n  } //update row data\n\n\n  updateRow(index, data) {\n    var row = this.rowManager.findRow(index);\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (row) {\n      return row.updateData(data).then(() => {\n        return Promise.resolve(row.getComponent());\n      });\n    } else {\n      console.warn(\"Update Error - No matching row found:\", index);\n      return Promise.reject(\"Update Error - No matching row found\");\n    }\n  } //scroll to row in DOM\n\n\n  scrollToRow(index, position, ifVisible) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return this.rowManager.scrollToRow(row, position, ifVisible);\n    } else {\n      console.warn(\"Scroll Error - No matching row found:\", index);\n      return Promise.reject(\"Scroll Error - No matching row found\");\n    }\n  }\n\n  moveRow(from, to, after) {\n    var fromRow = this.rowManager.findRow(from);\n\n    if (fromRow) {\n      fromRow.moveToRow(to, after);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", from);\n    }\n  }\n\n  getRows(active) {\n    return this.rowManager.getComponents(active);\n  } //get position of row in table\n\n\n  getRowPosition(index, active) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return this.rowManager.getRowPosition(row, active);\n    } else {\n      console.warn(\"Position Error - No matching row found:\", index);\n      return false;\n    }\n  } /////////////// Column Functions  ///////////////\n\n\n  setColumns(definition) {\n    if (this.initialized) {\n      this.columnManager.setColumns(definition);\n    } else {\n      console.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\");\n    }\n  }\n\n  getColumns(structured) {\n    return this.columnManager.getComponents(structured);\n  }\n\n  getColumn(field) {\n    var col = this.columnManager.findColumn(field);\n\n    if (col) {\n      return col.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  getColumnDefinitions() {\n    return this.columnManager.getDefinitionTree();\n  }\n\n  showColumn(field) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      column.show();\n    } else {\n      console.warn(\"Column Show Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  hideColumn(field) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      column.hide();\n    } else {\n      console.warn(\"Column Hide Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  toggleColumn(field) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      if (column.visible) {\n        column.hide();\n      } else {\n        column.show();\n      }\n    } else {\n      console.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  addColumn(definition, before, field) {\n    var column = this.columnManager.findColumn(field);\n    return this.columnManager.addColumn(definition, before, column).then(column => {\n      return column.getComponent();\n    });\n  }\n\n  deleteColumn(field) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      return column.delete();\n    } else {\n      console.warn(\"Column Delete Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n\n  updateColumnDefinition(field, definition) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      return column.updateDefinition(definition);\n    } else {\n      console.warn(\"Column Update Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n\n  moveColumn(from, to, after) {\n    var fromColumn = this.columnManager.findColumn(from);\n    var toColumn = this.columnManager.findColumn(to);\n\n    if (fromColumn) {\n      if (toColumn) {\n        this.columnManager.moveColumn(fromColumn, toColumn, after);\n      } else {\n        console.warn(\"Move Error - No matching column found:\", toColumn);\n      }\n    } else {\n      console.warn(\"Move Error - No matching column found:\", from);\n    }\n  } //scroll to column in DOM\n\n\n  scrollToColumn(field, position, ifVisible) {\n    return new Promise((resolve, reject) => {\n      var column = this.columnManager.findColumn(field);\n\n      if (column) {\n        return this.columnManager.scrollToColumn(column, position, ifVisible);\n      } else {\n        console.warn(\"Scroll Error - No matching column found:\", field);\n        return Promise.reject(\"Scroll Error - No matching column found\");\n      }\n    });\n  } //////////// General Public Functions ////////////\n  //redraw list without updating data\n\n\n  redraw(force) {\n    if (this.initialized) {\n      this.columnManager.redraw(force);\n      this.rowManager.redraw(force);\n    } else {\n      console.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  setHeight(height) {\n    this.options.height = isNaN(height) ? height : height + \"px\";\n    this.element.style.height = this.options.height;\n    this.rowManager.initializeRenderer();\n    this.rowManager.redraw();\n  } //////////////////// Event Bus ///////////////////\n\n\n  on(key, callback) {\n    this.externalEvents.subscribe(key, callback);\n  }\n\n  off(key, callback) {\n    this.externalEvents.unsubscribe(key, callback);\n  }\n\n  dispatchEvent() {\n    var args = Array.from(arguments),\n        key = args.shift();\n    this.externalEvents.dispatch(...arguments);\n  } ////////////// Extension Management //////////////\n\n\n  modExists(plugin, required) {\n    if (this.modules[plugin]) {\n      return true;\n    } else {\n      if (required) {\n        console.error(\"Tabulator Module Not Installed: \" + plugin);\n      }\n\n      return false;\n    }\n  }\n\n  module(key) {\n    var mod = this.modules[key];\n\n    if (!mod) {\n      console.error(\"Tabulator module not installed: \" + key);\n    }\n\n    return mod;\n  }\n\n} //default setup options\n\n\nTabulator.defaultOptions = defaultOptions; //bind modules and static functionality\n\nnew ModuleBinder(Tabulator); //tabulator with all modules installed\n\nclass TabulatorFull extends Tabulator {} //bind modules and static functionality\n\n\nnew ModuleBinder(TabulatorFull, modules);\n\nclass PseudoRow {\n  constructor(type) {\n    this.type = type;\n    this.element = this._createElement();\n  }\n\n  _createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    return el;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  getComponent() {\n    return false;\n  }\n\n  getData() {\n    return {};\n  }\n\n  getHeight() {\n    return this.element.outerHeight;\n  }\n\n  initialize() {}\n\n  reinitialize() {}\n\n  normalizeHeight() {}\n\n  generateCells() {}\n\n  reinitializeHeight() {}\n\n  calcHeight() {}\n\n  setCellHeight() {}\n\n  clearCellHeight() {}\n\n}\n\nexport { Accessor as AccessorModule, Ajax as AjaxModule, CalcComponent, CellComponent, Clipboard as ClipboardModule, ColumnCalcs as ColumnCalcsModule, ColumnComponent, DataTree as DataTreeModule, Download as DownloadModule, Edit as EditModule, Export as ExportModule, Filter as FilterModule, Format as FormatModule, FrozenColumns as FrozenColumnsModule, FrozenRows as FrozenRowsModule, GroupComponent, GroupRows as GroupRowsModule, History as HistoryModule, HtmlTableImport as HtmlTableImportModule, Interaction as InteractionModule, Keybindings as KeybindingsModule, Menu as MenuModule, Module, MoveColumns as MoveColumnsModule, MoveRows as MoveRowsModule, Mutator as MutatorModule, Page as PageModule, Persistence as PersistenceModule, Print as PrintModule, PseudoRow, ReactiveData as ReactiveDataModule, Renderer, ResizeColumns as ResizeColumnsModule, ResizeRows as ResizeRowsModule, ResizeTable as ResizeTableModule, ResponsiveLayout as ResponsiveLayoutModule, RowComponent$1 as RowComponent, SelectRow as SelectRowModule, Sort as SortModule, Tabulator, TabulatorFull, Validate as ValidateModule };","map":{"version":3,"mappings":"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","names":["CoreFeature","constructor","table","reloadData","data","silent","dataLoader","load","undefined","langText","modules","localize","getText","arguments","langBind","bind","langLocale","getLocale","commsConnections","comms","getConnections","commsSend","send","layoutMode","layout","getMode","layoutRefresh","subscribe","eventBus","unsubscribe","subscribed","key","subscriptionChange","dispatch","chain","confirm","dispatchExternal","externalEvents","subscribedExternal","subscriptionChangeExternal","options","setOption","value","module","Module","name","_handler","initialize","registerTableOption","optionsList","register","registerColumnOption","columnManager","registerTableFunction","func","console","warn","registerComponentFunction","component","handler","componentFunctionBinder","registerDataHandler","priority","rowManager","registerDataPipelineHandler","registerDisplayHandler","registerDisplayPipelineHandler","refreshData","renderInPosition","refreshActiveData","Helpers","elVisible","el","offsetWidth","offsetHeight","elOffset","box","getBoundingClientRect","top","window","pageYOffset","document","documentElement","clientTop","left","pageXOffset","clientLeft","deepClone","obj","clone","list","objectProto","__proto__","arrayProto","Object","assign","Array","isArray","i","subject","match","copy","findIndex","item","unshift","Accessor","allowedTypes","initializeColumn","transformRow","column","config","forEach","type","charAt","toUpperCase","slice","accessor","definition","lookupAccessor","params","accessors","row","rowComponent","getComponent","traverse","colCompnent","getFieldValue","setFieldValue","moduleName","defautlAccessors","method","generateParamsList","prefix","output","concat","push","serializeParams","encoded","encodeURIComponent","join","url","keys","length","toLowerCase","includes","contentType","Promise","resolve","reject","urlGenerator","call","ajaxContentType","contentTypeFormatters","headers","body","Accept","mode","location","origin","credentials","fetch","then","response","ok","json","catch","error","status","statusText","JSON","stringify","form","FormData","append","Ajax","loaderPromise","ajaxRequestFunc","defaultLoaderPromise","ajaxURLGenerator","defaultURLGenerator","ajaxParams","setParams","ajaxConfig","setConfig","ajaxURL","setUrl","getUrl","requestDataCheck","requestData","previousData","sendRequest","update","getParams","_loadDefaultConfig","force","defaultConfig","ajaxRequesting","ajaxResponse","defaultPasteActions","replace","rows","insert","defaultPasteParsers","clipboard","headerFindSuccess","columns","columnMap","pasteParser","pasteAction","customSelection","rowRange","element","addEventListener","e","plain","clipboardCopyFormatter","html","export","genereateHTMLTable","setData","clipboardData","paste","setPasteParser","clipboardPasteParser","reset","blocked","generatePlainContent","col","rowData","range","internal","sel","textRange","getSelection","selectNodeContents","removeAllRanges","selection","moveToElementText","setPasteAction","action","parser","modExists","mutateData","checkPaseOrigin","tagName","valid","getPasteData","getData","Clipboard","pasteActions","CalcComponent","get","target","receiver","transform","getElement","getTable","getCells","_row","cell","cells","getCell","_getSelf","getValue","getOldValue","getInitialValue","getRow","getField","getColumn","setValue","mutate","restoreOldValue","restoreInitialValue","checkHeight","Cell","initialValue","oldValue","height","width","build","generateElement","className","setAttribute","_configureCell","field","vertAligns","bottom","middle","hozAligns","right","center","vertAlign","hozAlign","cssClass","split","classNames","add","tooltipGenerationMode","_generateTooltip","visible","_generateContents","val","appendChild","innerHTML","cellRendered","tooltip","loaded","changed","setValueProcessData","setValueActual","layoutElement","setWidth","clearWidth","getWidth","setMinWidth","minWidth","setMaxWidth","maxWidth","clearHeight","style","setHeight","getHeight","show","hide","delete","redrawBlock","parentNode","deleteCell","getIndex","ColumnComponent","_column","getDefinition","isVisible","isGroup","toggle","getSubColumns","getParentColumn","scrollTo","move","to","after","toColumn","moveColumn","getNextColumn","getPrevColumn","updateDefinition","result","defaultColumnOptions","parent","def","createElement","contentElement","titleHolderElement","titleElement","groupElement","createGroupElement","fieldStructure","widthStyled","maxWidthStyled","minWidthStyled","Column","newCol","Column$1","attachColumn","checkColumnVisibility","classList","mapDefinitions","defaults","checkDefinition","indexOf","setField","nestedFieldSeparator","_getNestedData","_getFlatData","registerColumnPosition","registerColumnField","reRegisterPosition","_mapDepricatedFunctionality","setTooltip","_initialize","_buildGroupHeader","_bindEvents","dblTap","tapHold","tap","headerClick","headerDblClick","headerContext","passive","headerDblTap","clearTimeout","_buildColumnHeader","classeNames","_buildColumnHeaderContent","_buildColumnHeaderTitle","stopPropagation","text","_formatColumnHeaderTitle","contents","textAlign","headerHozAlign","structure","dataObj","_setFlatData","_setNestedData","verticalAlign","parentHeight","alignment","paddingTop","clientHeight","clearVerticalAlign","minHeight","bindModuleColumns","getGroupElement","getFirstColumn","getLastColumn","getColumns","getTopColumn","colDefs","updateBranches","responsiveToggle","display","verticalAlignHeaders","matchChildWidths","childWidth","removeChild","index","child","setWidthActual","isNaN","Math","checkCellHeights","heightInitialized","offsetParent","clearCellHeight","cellCount","deregisterColumn","renderer","rerenderColumns","columnRendered","generateCell","nextColumn","_nextVisibleColumn","prevColumn","_prevVisibleColumn","reinitializeWidth","fitToData","updates","RowComponent$1","getPosition","normalizeHeight","reformat","getNextRow","getPrevRow","Row","heightStyled","manualHeight","outerHeight","created","create","detachElement","generateCells","initialized","firstChild","renderRowCells","reinitializeHeight","deinitializeHeight","reinitialize","calcHeight","resizableRows","maxHeight","max","setCellHeight","updateData","tempData","newRowData","updatedData","getColumnsByFieldRoot","attrname","rowFormatter","findColumn","getCellIndex","findCell","nextRow","prevRow","moveToRow","toRow","moveRowActual","deleteActual","getRowIndex","detatchModules","deleteRow","blockRedraw","deleteCells","wipe","getGroup","defaultCalculations","values","calcParams","precision","parseFloat","toString","Number","ColumnCalcs","topCalcs","botCalcs","genColumn","topElement","botElement","topRow","botRow","botInitialized","initializeColumnCheck","rowsUpdated","recalcActiveRows","tableRedraw","recalc","userRecalc","visibleRows","groupBy","recalcRowGroup","cellValueChanged","topCalcParams","botCalcParams","topCalc","bottomCalc","botCalc","removeCalcs","topInitialized","initializeTopRow","initializeBottomRow","scrollHorizontal","rowsToData","generateRow","recalcAll","groupRows","getChildGroups","groups","group","recalcGroup","calcs","generateRowData","generateTopRow","generateBottomRow","dataTree","dataTreeChildColumnCalcs","open","pos","format","formatter","paramKey","columnCalcs","hasTopCalcs","hasBottomCalcs","redraw","getResults","getGroups","results","getGroupResults","subGroups","subGroupResults","subgroup","groupObj","DataTree","indent","collapseEl","expandEl","elementField","startOpen","displayIndex","collapseRow","expandRow","toggleRow","getTreeParent","dataTreeBranchElement","branchEl","dummyEl","dataTreeCollapseElement","dataTreeExpandElement","initializeRow","layoutRow","rowDelete","rowDataChanged","initializeElementField","firstCol","getFirstVisibleColumn","getRowChildren","columnMoving","childArray","children","controlEl","reinitializeRowChildren","getTreeChildren","generateControlElement","insertBefore","rtl","marginRight","marginLeft","paddingRight","parseInt","getPropertyValue","oldControl","cloneNode","replaceChild","setDisplayIndex","getDisplayIndex","getRows","getChildren","allChildren","filter","subChildren","sub","generateChildren","childData","childRow","getFilteredTreeChildren","childIndex","findChildIndex","addTreeChildRow","RowComponent","HTMLElement","recurse","getChildField","redrawNeeded","csv","setFileContents","fileContents","pdf","autoTableParams","rowGroupStyles","fontStyle","fontSize","cellPadding","fillColor","rowCalcStyles","jsPDFParams","title","header","content","colSpan","rowSpan","styles","doc","jspdf","autoTable","xlsx","sheetName","workbook","tableFeatures","Sheets","generateSheet","merges","worksheet","s","c","r","Date","XLSX","sheet_add_aoa","sheets","sheet","sheetOnly","active","intercept","s2ab","ArrayBuffer","view","Uint8Array","buf","bookType","bookSST","defaultDownloaders","Download","blob","downloadToTab","download","buildLink","mime","interceptCallback","filename","downloadFunc","generateExportList","groupHeader","groupHeaderDownload","triggerDownload","newTab","downloadReady","createObjectURL","navigator","commsReceived","downloaders","maskInput","maskLetter","maskNumber","maskWildcard","fillSymbols","symbol","mask","char","input","onRendered","success","cancel","editorParams","boxSizing","cellValue","preventScroll","onChange","keyCode","textarea","vertNav","count","scrollHeight","padding","whiteSpace","resize","focus","setTimeout","heightNow","stopImmediatePropagation","number","removeEventListener","blurFunc","select","cellEl","initialDisplayValue","listEl","multiselect","dataItems","currentItem","displayItems","currentItems","blurable","blockListShow","searchWord","searchWordTimeout","getUniqueColumnValues","displayList","processComplexListItem","label","itemParams","elementAttributes","setItem","dataList","inputValues","b","a","fillList","tabIndex","toggleItem","chooseItem","setCurrentItem","remove","behavior","block","inline","fillInput","unsetItem","hideList","chooseItems","len","cancelItem","showList","parseItems","offset","removeScrollListener","self","character","event","cursor","readOnly","unsetItems","preventDefault","scrollTovalue","autocomplete","uniqueColumnValues","genUniqueColumnValues","sortValuesList","sort","reverse","items","matches","addNotice","searchingPlaceholder","fillListIfNotEmpty","err","intialLoad","term","notice","clearList","searchEl","Node","itemList","listItemFormatter","current","showInputValue","filterList","star","maxStars","size","getElementsByTagName","getAttribute","stars","starsHolder","starChange","browser","buildStar","nextStar","starHolder","changeValue","textOverflow","progress","min","percent","handle","bar","mouseDrag","mouseDragWidth","updateValue","position","tickCross","tristate","indetermValue","indetermState","marginTop","indeterminate","checked","blur","defaultEditors","Edit","currentCell","mouseClick","invalidEdit","editors","getEditedCells","clearCellEdited","navigatePrev","navigateNext","navigateLeft","cellisEdited","cellCancelEdit","bindEditor","clearEdited","rowDeleteCheck","cancelEdit","keybindingNavigateNext","newRow","addRow","nav","edit","nextCell","prevDisplayRow","navigateRight","nextDisplayRow","navigateUp","navigateDown","findNextEditableCell","allowEdit","findPrevEditableCell","prevCell","columnDeleteCheck","editor","check","getCurrentCell","clearEditor","validate","cellValidate","cellEditCancelled","button","focusCellNoEvent","recursionBlock","editCell","forceEdit","focusScrollAdjust","getRenderMode","scrollTop","bottomEdge","rowEl","offsetTop","topEdge","scrollLeft","rightEdge","leftEdge","frozenColumns","rightMargin","vDomPadLeft","offsetLeft","rendered","cellEditor","edited","cellEditing","editIndex","editedCells","ExportRow","ExportColumn","depth","Export","cloneTableStyle","colVisProp","columnHeaders","genereateTable","genereateTableElement","rowLookup","findRow","getVisibleRows","selectRow","selectedRows","pagination","generateColumnGroupHeaders","columnGroups","colData","processColumnGroup","maxDepth","groupData","subGroup","subGroupData","columnVisCheck","headersToExportRows","headerDepth","exportRows","parseColumnGroup","bodyToExportRows","columnsByIndex","rowGroups","exportCols","headerEl","bodyEl","setup","mapElementStyles","lookupTableStyles","oddRow","querySelector","evenRow","firstGroup","getElementsByClassName","genereateHeaderElement","genereateGroupElement","genereateCalcElement","genereateRowElement","cellWrapper","formatExportValue","firstCell","renderedCallback","holder","getHtml","from","lookup","fromStyle","getComputedStyle","props","defaultFilters","rowVal","filterVal","filterParams","RegExp","String","keywords","keyword","startsWith","endsWith","Filter","headerFilters","headerFilterColumns","prevHeaderFilterChangeCheck","searchRows","searchData","userSetFilter","userRefreshFilter","userSetHeaderFilterFocus","getHeaderFilters","setHeaderFilterFocus","initializeColumnHeaderFilter","showHeaderFilterElements","tableBuilt","remoteFilterParams","setFilter","initialFilter","initialHeaderFilter","userAddFilter","userGetHeaderFilterValue","userSetHeaderFilterValue","userRemoveFilter","userClearFilter","userClearHeaderFilter","headerFilter","setHeaderFilterColumnPlaceholder","filterChangeCheck","filterFunc","prevSuccess","emptyFunc","headerFilterFunc","colVal","refreshFilter","attrType","tagType","generateHeaderFilterElement","filterElement","editorElement","typingTimer","searchTrigger","headerElement","headerFilterEmptyCheck","headerFilterParams","headerFilterLiveFilterDelay","headerFilterLiveFilter","hideHeaderFilterElements","getHeaderFilterValue","setHeaderFilterValue","reloadHeaderFilter","tableInitialized","trackChanges","hasChanged","addFilter","findFilter","filters","getColumnByField","findSubFilters","getFilters","all","ajax","filtersToArray","removeFilter","splice","clearFilter","clearHeaderFilter","search","activeRows","activeRowComponents","filterMode","rowList","filterRow","filterRecurse","subFilter","formatterParams","emptyToSpace","sanitizeHTML","floatVal","sign","integer","decimal","rgx","decimalSym","thousandSym","symbolAfter","negativeSign","toFixed","link","urlPrefix","labelField","urlField","image","src","tickCross$1","empty","truthy","allowTruthy","tick","cross","datetime","DT","DateTime","luxon","outputFormat","invalid","newDatetime","inputFormat","timezone","datetimediff","suffix","humanize","date","unit","star$1","starActive","starInactive","traffic","colors","color","percentValue","progress$1","legendAlign","legend","legendColor","barEl","backgroundColor","barContainer","legendEl","CellComponent","holderEl","responsiveCollapse","isOpen","toggleList","checkbox","toggleSelect","registerRowSelectCheckbox","deselectRow","registerHeaderSelectCheckbox","defaultFormatters","plaintext","html$1","textarea$1","money","buttonTick","buttonCross","rownum","rowSelection","formatterPrint","print","lookupFormatter","formatterClipboard","htmlOutput","Format","formatHeader","titleFormatter","callback","mockCell","titleFormatterParams","formatValue","entityMap","getFormatter","formatters","leftColumns","rightColumns","leftMargin","initializationMode","headersElement","layoutCell","margin","edge","frozenCheck","scrollEndTimer","calcMargins","layoutColumnPosition","layoutCalcRows","_calcSpace","layoutGroupCalcs","frozen","parentEl","leftParents","allCells","getColGroupParentElement","getDisplayRows","tableElement","FrozenColumns","isRowFrozen","isFrozen","freezeRow","adjustTableSize","unfreezeRow","detachRow","styleRows","FrozenRows","_group","Proxy","getKey","getSubGroups","getParentGroup","toggleVisibility","Group","level","generator","oldGroup","groupManager","hasSubGroups","old","groupList","elementContents","arrowElement","createValueGroups","createElements","arrow","moveRow","initializeGroupHeader","addBindings","toggleElement","groupContextMenu","menu","initializeGroup","groupTap","groupDblTap","groupTapHold","groupToggleElement","_createGroup","groupID","groupKey","_addRowToGroup","groupIDLookups","allowedValues","_addRow","insertRow","conformRowData","toIndex","generateGroupHeaderContents","updateGroupRows","scrollHeader","removeRow","groupValues","removeGroup","getHeadersAndRows","_visSet","noCalc","getRowCount","setDisplayRows","prev","getRowGroup","compoment","getPath","path","childNodes","headerGenerator","displayHandler","setGroupBy","setGroupValues","configureGroupSetup","rowDeleting","scrollHeaders","rowAddingIndex","rowSample","cols","getRealColumns","lookupFunc","prevValue","virtualRenderFill","assignRowToGroup","moveRowInArray","setGroupStartOpen","groupStartOpen","setGroupHeader","userGetGroups","userGetGroupedData","rowGetGroup","rowMoving","toGroup","fromGroup","cellUpdated","generateGroups","groupComponents","pullGroupListData","groupListData","getGroupedData","countGroups","createGroup","oldGroups","assignRowToExistingGroup","newGroupNeeded","reassignRowToGroup","oldGroupPath","newGroupPath","getExpectedPath","samePath","oldRowGroup","groupPath","groupId","GroupRows","cellEdit","rowAdd","_rebindRow","newValue","History","history","clear","rowAdded","rowMoved","posFrom","posTo","rowDeleted","getHistoryUndoSize","getHistoryRedoSize","clearComponentHistory","undo","redo","oldRow","defaultUndoers","redoers","defaultRedoers","HtmlTableImport","fieldIndex","tableElementCheck","originalElement","parseTable","_extractOptions","_extractHeaders","_generateBlankHeaders","defaultOptions","attributes","optionsArr","attrib","_attribValue","_findCol","exists","trim","eventMap","rowClick","rowDblClick","rowContext","rowMouseEnter","rowMouseLeave","rowMouseOver","rowMouseOut","rowMouseMove","rowTap","rowDblTap","rowTapHold","cellClick","cellDblClick","cellContext","cellMouseEnter","cellMouseLeave","cellMouseOver","cellMouseOut","cellMouseMove","cellTap","cellDblTap","cellTapHold","headerMouseEnter","headerMouseLeave","headerMouseOver","headerMouseOut","headerMouseMove","headerTap","headerTapHold","groupClick","groupDblClick","groupContext","groupMouseEnter","groupMouseLeave","groupMouseOver","groupMouseOut","groupMouseMove","subscribers","touchSubscribers","columnSubscribers","touchWatchers","tapDbl","cellContentsSelectionFixer","createTextRange","addRange","initializeExternalEvents","subscriptionChanged","added","subscribeTouchEvents","unsubscribeTouchEvents","notouch","dispatchEvent","handleTouch","watchers","componentObj","Interaction","defaultBindings","navPrev","navNext","navUp","navDown","scrollPageUp","scrollPageDown","scrollToEnd","copyToClipboard","defaultActions","keyBlock","newPos","scrollMax","scrollToRow","scrollToStart","navLeft","navRight","Keybindings","watchKeys","bindings","keybindings","mergedBindings","pressedKeys","mapBindings","actions","mapBinding","symbolsList","binding","ctrl","shift","meta","symbols","bindEvents","keyupBinding","code","keydownBinding","clearBindings","checkBinding","Menu","menuElements","blurEvent","escEvent","nestedMenuBlock","contextMenu","initializeColumnHeader","headerMenu","headerMenuEl","LoadMenuEvent","initializeCell","clickMenu","rowContextMenu","rowClickMenu","loadMenu","touch","MouseEvent","menuEl","hideMenu","itemEl","disabled","hideOldSubMenus","positionMenu","pop","x","y","parentOffset","pageX","pageY","docHeight","positionReversedX","escMenu","MoveColumns","placeholderElement","hoverElement","checkTimeout","checkPeriod","moving","toCol","startX","autoScrollMargin","autoScrollTimeout","endMove","createPlaceholderElement","movableColumns","colEl","touches","bindTouchEvents","startXMove","nextCol","prevCol","nextColWidth","prevColWidth","nextColWidthLast","prevColWidthLast","diff","moveToCol","moveHover","startMove","_bindMouseMove","mousemove","_unbindMouseMove","movingCells","toColAfter","xPos","touchMove","scrollPos","MoveRows","toRowAfter","hasHandle","tableRowDropEvent","connection","connectionSelectorsTables","connectionElements","connections","connectedTable","connectedRow","movableRows","movableRowsConnectedTables","connectionSelectorsElements","movableRowsConnectedElements","nextSibling","tableRowDrop","which","rowHandle","startYMove","nextRowHeight","prevRowHeight","nextRowHeightLast","prevRowHeightLast","setStartPosition","connectToTables","clientWidth","pointerEvents","startY","disconnectFromTables","moveHoverConnections","moveHoverTable","yPos","rowHolder","elementRowDrop","connectionTables","query","dropEvent","connect","mouseup","disconnect","dropComplete","sender","movableRowsSender","prototype","receivers","fromRow","fromTable","defaultMutators","Mutator","enabled","mutator","lookupMutator","transformCell","enable","disable","Page","initialLoad","dataChanging","pageSizes","setMaxPage","userSetPageSize","initialLoadComplete","remotePageParams","_parseRemoteData","progressiveLoad","restOnRenderBefore","rowAddingPosition","dispRows","calculatePageSizes","paginationSize","testElRow","visibility","testElCell","floor","generatePageSizeSelectList","userSetPageToRow","setPageToRow","scrollVertical","dir","nextPage","firstBut","prevBut","nextBut","pageSizeSelect","paginationSizeSelector","initializePaginator","pageSelectLabel","lastBut","setPage","previousPage","paginationElement","setPageSize","pagesElement","footerManager","paginationInitialPage","paginationButtonCount","initializeProgressive","setMaxRows","rowCount","page","trigger","_setPageButtons","leftSize","rightSize","_generatePageButton","footerRedraw","getPage","getPageMax","getPageSize","start","end","finally","addRows","footer","defaultReaders","local","id","localStorage","cookie","cookiePos","expireDate","setDate","Persistence","defWatcherBlock","localStorageTest","testKey","removeItem","persistence","persistenceMode","persistenceID","retreivedData","readFunc","persistenceReaderFunc","readers","writeFunc","persistenceWriterFunc","retreiveData","save","eventSave","sorters","initialSort","getColumnLayout","setColumnLayout","setColumns","set","mergeDefinition","newCols","_findColumn","oldCols","find","parseColumns","validateSorters","getGroupConfig","getPageConfig","definitions","excludedKeys","defStore","colDef","defaultWriters","Print","manualBlock","replaceTable","cleanup","printFullscreen","scrollY","footerEl","tableEl","headerContent","footerContent","printHeader","printFooter","printFormatter","scrollX","ReactiveData","origFuncs","currentVersion","watchData","version","unwatchData","enumerable","configurable","args","apply","defineProperty","getRowFromDataObject","newRows","startRow","oldRows","writable","watchRow","watchTreeChildren","rebuildTree","childField","watchKey","getOwnPropertyDescriptor","unwatchRow","unblock","ResizeColumns","prevHandle","layoutCellHandles","layoutColumnHeader","variableHeight","resizable","_mouseDown","nearestColumn","handleDown","colIndex","prevHandleDown","_checkResizability","browserSlow","mouseUp","startColumn","mouseMove","ResizeRows","startHeight","observer","containerWidth","autoResize","tableStyle","tableHeight","containerHeight","ResizeObserver","entry","nodeHeight","contentRect","nodeWidth","fixedHeight","containerObserver","browserMobile","tableResized","ResizeTable","ResponsiveLayout","hiddenColumns","collapseStartOpen","initializeResponsivity","responsiveLayout","collapseFormatter","responsiveLayoutCollapseFormatter","generateCollapsedContent","collapseHandleColumn","responsive","order","generateCollapsedRowContent","updateColumnVisibility","hideColumn","colCount","showColumn","working","headerVisible","activeRowsCount","generateCollapsedRowData","mockCellComponent","formatCollapsedData","titleData","node_content","titleHighlight","valueData","SelectRow","selecting","lastClickedRow","selectPrev","headerCheckboxElement","selectRows","deselectRows","isRowSelected","rowRetrieve","clearSelectionData","endSelect","selected","selectableCheck","selectable","shiftKey","rowIdx","getDisplayRowIndex","fromRowIdx","lastClickedRowIdx","toRowIdx","toggledRows","toggledRow","_clearSelection","rowMatch","_rowSelectionChanged","_selectRow","rowInfo","selectableRollingSelection","dataTreeSelectPropagate","childRowSelection","_deselectRow","selectedRow","checkboxEl","getSelectedData","getSelectedRows","alignEmptyValues","decimalSeparator","thousand","thousandSeparator","emptyAlign","string","aRow","bRow","locale","localeCompare","datetime$1","el1","el2","calc","d","alphanum","as","bs","a1","b1","L","rx","rd","isFinite","defaultSorters","time","boolean","array","Sort","sortList","remoteSortParams","userSetSort","setSort","clearSort","sorter","arrowEl","startingDir","headerSortStartingDir","headerSort","headerSortElement","columnHeaderSortMulti","refreshSort","getSort","newSortList","findSorter","sortOrderReverse","sortListActual","rowComponents","sortMode","sortObj","_sortItems","clearColumnHeaders","setColumnHeader","_sortRow","el1Comp","el2Comp","parameters","float","numeric","starts","ends","minLength","maxLength","in","regex","reg","unique","cellData","required","Validate","getInvalidCells","clearValidation","cellIsValid","columnValidate","rowValidate","userClearCellValidation","userValidate","validator","_extractValidator","_buildValidator","validators","invalidIndex","invalidCells","validationMode","ResizeColumnsModule","ResizeRowsModule","ResizeTableModule","ResponsiveLayoutModule","SelectRowModule","SortModule","ValidateModule","debugEventsExternal","debugEventsInternal","debugInvalidOptions","columnMaxWidth","columnHeaderVertAlign","columnDefaults","autoColumns","autoColumnsDefinitions","footerElement","textDirection","addRowPos","renderVertical","renderHorizontal","renderVerticalBuffer","scrollToRowPosition","scrollToRowIfVisible","scrollToColumnPosition","scrollToColumnIfVisible","rowFormatterPrint","rowFormatterClipboard","rowFormatterHtmlOutput","placeholder","dataLoaderLoading","dataLoaderError","dataSendParams","dataReceiveParams","OptionsList","msgType","registeredDefaults","option","generate","userOptions","Renderer","clearRows","clearColumns","reinitializeColumnWidths","renderRows","renderColumns","rerenderRows","rerenderRowCells","scrollColumns","scrollRows","scrollToRowNearestTop","styleRow","render","rerender","ifVisible","rowIndex","elementVertical","BaiscHorizontal","VirtualDomHorizontal","rightCol","vDomScrollPosRight","compatabilityCheck","scroll","leftCol","vDomScrollPosLeft","colPos","vdomHoz","paddingLeft","reinitChanged","reinitializeRows","deinitialize","vDomPadRight","dataChange","change","collsWidth","colEnd","reinitializeRow","removeColRight","colPositionAdjust","leftPos","rightPos","addColRight","addColLeft","prepend","removeColLeft","fitDataColActualWidthCheck","newWidth","widthDiff","fitDataCheck","ColumnManager","blockHozScrollEvent","RendererVirtualDomHorizontal","initializeRenderer","renderClass","renderers","createHeadersElement","createHeaderElement","getHeadersElement","hozAdjust","scrollWidth","generateColumnsFromRowData","_addColumn","nextToColumn","topColumn","parentIndex","before","nextEl","columnsByField","_reIndexColumns","getColumnByIndex","findColumnIndex","getDefinitions","getDefinitionTree","getComponents","structured","moveColumnActual","_moveColumnInArray","fromIndex","updateRows","scrollToColumn","adjust","getFlexBaseWidth","totalWidth","fixedWidth","colWidth","addColumn","BaiscVertical","onlyGroupHeaders","rowTop","VirtualDomVertical","vDomRowHeight","vDomTop","vDomScrollPosBottom","vDomBottomPad","vDomTopNewRows","paddingBottom","vDomScrollPosTop","topOffset","topDiff","bottomDiff","_addTopRow","vDomScrollHeight","_addBottomRow","_removeTopRow","topFound","bottomRow","_virtualRenderFill","forceMove","topPad","rowsHeight","heightOccupied","topPadHeight","rowsCount","vDomWindowBuffer","vDomBottom","rowHeight","fillableSpace","addedRows","paddingAdjust","_quickNormalizeRowHeight","vDomTopPad","removableRows","vDomMaxRenderChain","_removeBottomRow","RowManager","createTableElement","heightFixer","firstRender","renderMode","displayRows","displayRowsCount","rowNumColumn","dataPipeline","createHolderElement","getTableElement","getRowPosition","leftDir","topDir","getRowFromPosition","_setDataActual","_wipeElements","activeRowsPipeline","allIndex","activeIndex","displayRowIterator","regenerateRowNumbers","_showPlaceholder","addRowActual","_clearPlaceholder","findAddRowPos","chainResult","setActiveRows","reRenderInPosition","clearData","findRowIndex","rowOnly","getDataCount","skipStage","stage","cascadeOrder","redrawBlockRestoreConfig","displayPipeline","resetDisplayRows","getNextDisplayIndex","redrawBlockRederInPosition","renderTable","_clearTable","renderEmptyScroll","initialHeight","otherHeight","restoreRedraw","tableWidth","resetScroll","FooterManager","external","initializeElement","deactivate","activate","links","InteractionManager","abortClasses","previousTargets","listeners","componentMap","pseudoTrackers","subscriber","buildListenerMap","bindSubscriptionWatchers","listener","listenerMap","components","bindPseudoEvents","pseudoMouseEnter","pseudoMouseLeave","linkedKeys","leaveList","updateEventListeners","track","targets","findTargets","pseudoTracking","bindComponents","targetMatches","previousTarget","triggerEvents","ComponentFunctionBinder","funcName","hanlder","DataLoader","msgElement","createMsgElement","errorElement","requestOrder","loading","template","loadingElement","createLoaderElement","showLoader","mapParams","hideLoader","showError","map","objectInvert","blockActiveLoad","shouldLoad","loaderElement","debug","events","subscriptionNotifiers","_notifiySubscriptionChange","notifiers","_dispatch","_debugDispatch","_debugConfirm","_chain","fallback","_confirm","confirmed","callResult","_debugChain","TableRegistry","lookupTable","matchElement","Tabulator","fitData","fitDataStretch","colsWidth","gap","lastCol","flexGrowUnits","flexColWidth","flexColumns","fixedShrinkColumns","flexShrinkUnits","overflowWidth","gapFill","calcWidth","scaleColumns","freeSpace","shrinkCols","oversizeCols","oversizeSpace","remainingSpace","remainingFlexGrowUnits","changeUnits","undersizeCols","calcGrow","calcShrink","widthShrink","flexWidth","defaultModes","fitDataFill","fitDataTable","fitColumns","Layout","defaultLangs","Localize","lang","langList","headerFilterPlaceholder","setHeaderFilterPlaceholder","langs","default","installLang","_setLangProp","setLocale","desiredLocale","traverseLang","trans","getLang","pathArray","_getLangElement","root","rootPath","_executeBindings","Comms","selectors","con","coreModules","LayoutModule","LocalizeModule","CommsModule","ModuleBinder","tabulator","bindModules","bindStaticFuctionality","source","property","registerModule","mod","modulesCore","modulesRegular","mods","interactionMonitor","_create","initialzeCoreSystems","_clearObjectPointers","_mapDeprecatedFunctionality","_loadInitialData","_rtlCheck","reactiveData","_buildElement","newElement","_initializeTable","_detectBrowser","span","destroy","ua","test","setDataFromLocalFile","extensions","accept","file","reader","FileReader","onload","replaceData","responses","parse","addData","updateOrAddData","foundRows","updateOrAddRow","updateRow","getColumnDefinitions","toggleColumn","deleteColumn","updateColumnDefinition","fromColumn","on","off","plugin","TabulatorFull","PseudoRow","_createElement"],"sources":["D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\CoreFeature.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\Module.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Helpers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\defaults\\accessors.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\Accessor.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\config.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\urlGenerator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\loaderPromise.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\contentTypeFormatters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\Ajax.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteActions.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteParsers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\Clipboard.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\CalcComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\CellComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\Cell.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\column\\ColumnComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\column\\defaults\\options.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\column\\Column.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\row\\RowComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\row\\Row.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\defaults\\calculations.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\ColumnCalcs.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\DataTree\\DataTree.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\csv.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\json.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\pdf.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\xlsx.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\html.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\Download.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\inputMask.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\input.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\textarea.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\number.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\range.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\select.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\autocomplete.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\star.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\progress.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\tickCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\Edit.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportRow.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportColumn.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\Export.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\defaults\\filters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\Filter.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\plaintext.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\html.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\textarea.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\money.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\link.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\image.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\tickCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetime.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetimediff.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\lookup.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\star.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\traffic.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\progress.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\color.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonTick.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rownum.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\handle.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\responsiveCollapse.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rowSelection.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\Format.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenColumns\\FrozenColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenRows\\FrozenRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\Group.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\undoers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\redoers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\History.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\HtmlTableImport\\HtmlTableImport.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Interaction\\Interaction.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\bindings.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\actions.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\Keybindings.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Menu\\Menu.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveColumns\\MoveColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveRows\\MoveRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\defaults\\mutators.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\Mutator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\Page.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\readers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\writers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\Persistence.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Print\\Print.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ReactiveData\\ReactiveData.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeColumns\\ResizeColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeRows\\ResizeRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeTable\\ResizeTable.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\ResponsiveLayout\\ResponsiveLayout.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\SelectRow\\SelectRow.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\number.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\string.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\datetime.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\date.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\time.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\boolean.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\array.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\exists.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\alphanum.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\Sort.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\defaults\\validators.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\Validate.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\defaults\\options.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\OptionsList.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\Renderer.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicHorizontal.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomHorizontal.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\ColumnManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicVertical.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomVertical.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\RowManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\FooterManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InteractionMonitor.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ComponentFunctionBinder.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\DataLoader.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ExternalEventBus.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InternalEventBus.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\TableRegistry.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitData.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataGeneral.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataStretch.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\Layout.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\defaults\\langs.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\Localize.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\modules\\Comms\\Comms.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ModuleBinder.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\Tabulator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\TabulatorFull.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\react-tabulator\\node_modules\\tabulator-tables\\src\\js\\core\\row\\PseudoRow.js"],"sourcesContent":["export default class CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// DataLoad /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\treloadData(data, silent){\r\n\t\treturn this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t///////////// Localization ///////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlangText(){\r\n\t\treturn this.table.modules.localize.getText(...arguments);\r\n\t}\r\n\r\n\tlangBind(){\r\n\t\treturn this.table.modules.localize.bind(...arguments);\r\n\t}\r\n\r\n\tlangLocale(){\r\n\t\treturn this.table.modules.localize.getLocale(...arguments);\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t////////// Inter Table Comms /////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tcommsConnections(){\r\n\t\treturn this.table.modules.comms.getConnections(...arguments);\r\n\t}\r\n\r\n\tcommsSend(){\r\n\t\treturn this.table.modules.comms.send(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Layout  /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlayoutMode(){\r\n\t\treturn this.table.modules.layout.getMode();\r\n\t}\r\n\r\n\tlayoutRefresh(){\r\n\t\treturn this.table.modules.layout.layout();\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// Event Bus ////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tsubscribe(){\r\n\t\treturn this.table.eventBus.subscribe(...arguments);\r\n\t}\r\n\r\n\tunsubscribe(){\r\n\t\treturn this.table.eventBus.unsubscribe(...arguments);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.table.eventBus.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChange(){\r\n\t\treturn this.table.eventBus.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\tdispatch(){\r\n\t\treturn this.table.eventBus.dispatch(...arguments);\r\n\t}\r\n\r\n\tchain(){\r\n\t\treturn this.table.eventBus.chain(...arguments);\r\n\t}\r\n\r\n\tconfirm(){\r\n\t\treturn this.table.eventBus.confirm(...arguments);\r\n\t}\r\n\r\n\tdispatchExternal(){\r\n\t\treturn this.table.externalEvents.dispatch(...arguments);\r\n\t}\r\n\r\n\tsubscribedExternal(key){\r\n\t\treturn this.table.externalEvents.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChangeExternal(){\r\n\t\treturn this.table.externalEvents.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Options /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\toptions(key){\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\tsetOption(key, value){\r\n\t\tif(typeof value !== \"undefined\"){\r\n\t\t\tthis.table.options[key] = value;\r\n\t\t}\r\n\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Modules /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tmodule(key){\r\n\t\treturn this.table.module(key);\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nclass Module extends CoreFeature{\r\n\r\n\tconstructor(table, name){\r\n\t\tsuper(table);\r\n\r\n\t\tthis._handler = null;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// setup module when table is initialized, to be overriden in module\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Options Registration ///////\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableOption(key, value){\r\n\t\tthis.table.optionsList.register(key, value);\r\n\t}\r\n\r\n\tregisterColumnOption(key, value){\r\n\t\tthis.table.columnManager.optionsList.register(key, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/// Public Function Registation ///\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableFunction(name, func){\r\n\t\tif(typeof this.table[name] === \"undefined\"){\r\n\t\t\tthis.table[name] = func;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Unable to bind table function, name already in use\", name)\r\n\t\t}\r\n\t}\r\n\r\n\tregisterComponentFunction(component, func, handler){\r\n\t\treturn this.table.componentFunctionBinder.bind(component, func, handler);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Data Pipeline //////////\r\n\t///////////////////////////////////\r\n\r\n\tregisterDataHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDataPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\tregisterDisplayHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDisplayPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\trefreshData(renderInPosition, handler){\r\n\t\tif(!handler){\r\n\t\t\thandler = this._handler;\r\n\t\t}\r\n\r\n\t\tif(handler){\r\n\t\t\tthis.table.rowManager.refreshActiveData(handler, false, renderInPosition);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Module;","export default class Helpers{\r\n\r\n\tstatic elVisible(el){\r\n\t\treturn !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\r\n\t}\r\n\r\n\tstatic elOffset(el){\r\n\t\tvar box = el.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop: box.top + window.pageYOffset - document.documentElement.clientTop,\r\n\t\t\tleft: box.left + window.pageXOffset - document.documentElement.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\tstatic deepClone(obj, clone, list = []){\r\n\t\tvar objectProto = {}.__proto__,\r\n\t\tarrayProto = [].__proto__;\r\n\r\n\t\tif (!clone){\r\n\t\t\tclone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\r\n\t\t}\r\n\r\n\t\tfor(var i in obj) {\r\n\t\t\tlet subject = obj[i],\r\n\t\t\tmatch, copy;\r\n\r\n\t\t\tif(subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)){\r\n\t\t\t\tmatch = list.findIndex((item) => {\r\n\t\t\t\t\treturn item.subject === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(match > -1){\r\n\t\t\t\t\tclone[i] = list[match].copy;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcopy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\r\n\r\n\t\t\t\t\tlist.unshift({subject, copy});\r\n\r\n\t\t\t\t\tclone[i] = this.deepClone(subject, copy, list);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n}","export default {}","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defautlAccessors from './defaults/accessors.js';\r\n\r\nclass Accessor extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"] //list of accessor types\r\n\r\n\t\tthis.registerColumnOption(\"accessor\");\r\n\t\tthis.registerColumnOption(\"accessorParams\");\r\n\t\tthis.registerColumnOption(\"accessorData\");\r\n\t\tthis.registerColumnOption(\"accessorDataParams\");\r\n\t\tthis.registerColumnOption(\"accessorDownload\");\r\n\t\tthis.registerColumnOption(\"accessorDownloadParams\");\r\n\t\tthis.registerColumnOption(\"accessorClipboard\");\r\n\t\tthis.registerColumnOption(\"accessorClipboardParams\");\r\n\t\tthis.registerColumnOption(\"accessorPrint\");\r\n\t\tthis.registerColumnOption(\"accessorPrintParams\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutputParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\r\n\t}\r\n\r\n\t//initialize column accessor\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\taccessor;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\taccessor = this.lookupAccessor(column.definition[key]);\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\taccessor:accessor,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.accessor = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupAccessor(value){\r\n\t\tvar accessor = false;\r\n\r\n\t\t//set column accessor\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Accessor.accessors[value]){\r\n\t\t\t\taccessor = Accessor.accessors[value]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\taccessor = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn accessor;\r\n\t}\r\n\r\n\t//apply accessor to row\r\n\ttransformRow(row, type){\r\n\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\trowComponent = row.getComponent();\r\n\r\n\t\t//clone data object with deep copy to isolate internal data from returned result\r\n\t\tvar data = Helpers.deepClone(row.data || {});\r\n\r\n\t\tthis.table.columnManager.traverse(function(column){\r\n\t\t\tvar value, accessor, params, colCompnent;\r\n\r\n\t\t\tif(column.modules.accessor){\r\n\r\n\t\t\t\taccessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tvalue = column.getFieldValue(data);\r\n\r\n\t\t\t\t\tif(value != \"undefined\"){\r\n\t\t\t\t\t\tcolCompnent = column.getComponent();\r\n\t\t\t\t\t\tparams = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\r\n\t\t\t\t\t\tcolumn.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\n//load defaults\r\nAccessor.moduleName = \"accessor\";\r\nAccessor.accessors = defautlAccessors;\r\n\r\nexport default Accessor;","export default {\r\n\tmethod: \"GET\",\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nfunction serializeParams(params){\r\n\tvar output = generateParamsList(params),\r\n\tencoded = [];\r\n\r\n\toutput.forEach(function(item){\r\n\t\tencoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\r\n\t});\r\n\r\n\treturn encoded.join(\"&\");\r\n}\r\n\r\nexport default function(url, config, params){\r\n\tif(url){\r\n\t\tif(params && Object.keys(params).length){\r\n\t\t\tif(!config.method || config.method.toLowerCase() == \"get\"){\r\n\t\t\t\tconfig.method = \"get\";\r\n\r\n\t\t\t\turl += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn url;\r\n};","export default function(url, config, params){\r\n\tvar contentType;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t//set url\r\n\t\turl = this.urlGenerator.call(this.table, url, config, params);\r\n\r\n\t\t//set body content if not GET request\r\n\t\tif(config.method.toUpperCase() != \"GET\"){\r\n\t\t\tcontentType = typeof this.table.options.ajaxContentType === \"object\" ?  this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\r\n\t\t\tif(contentType){\r\n\r\n\t\t\t\tfor(var key in contentType.headers){\r\n\t\t\t\t\tif(!config.headers){\r\n\t\t\t\t\t\tconfig.headers = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof config.headers[key] === \"undefined\"){\r\n\t\t\t\t\t\tconfig.headers[key] = contentType.headers[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconfig.body = contentType.body.call(this, url, config, params);\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(url){\r\n\t\t\t//configure headers\r\n\t\t\tif(typeof config.headers === \"undefined\"){\r\n\t\t\t\tconfig.headers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers.Accept === \"undefined\"){\r\n\t\t\t\tconfig.headers.Accept = \"application/json\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers[\"X-Requested-With\"] === \"undefined\"){\r\n\t\t\t\tconfig.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.mode === \"undefined\"){\r\n\t\t\t\tconfig.mode = \"cors\";\r\n\t\t\t}\r\n\r\n\t\t\tif(config.mode == \"cors\"){\r\n\t\t\t\tif(typeof config.headers[\"Origin\"] === \"undefined\"){\r\n\t\t\t\t\tconfig.headers[\"Origin\"] = window.location.origin;\r\n\t\t\t\t}\r\n        \r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'same-origin';\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'include';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//send request\r\n\t\t\tfetch(url, config)\r\n\t\t\t.then((response)=>{\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\tresponse.json()\r\n\t\t\t\t\t.then((data)=>{\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t}).catch((error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\tconsole.warn(\"Ajax Load Error - Invalid JSON returned\", error);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\r\n\t\t\t\t\treject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \", error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Ajax Load Error - No URL Set\");\r\n\t\t\tresolve([]);\r\n\t\t}\r\n\t});\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nexport default {\r\n\t\"json\":{\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\t\t\treturn JSON.stringify(params);\r\n\t\t},\r\n\t},\r\n\t\"form\":{\r\n\t\theaders:{\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\r\n\t\t\tvar output = generateParamsList(params),\r\n\t\t\tform = new FormData();\r\n\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tform.append(item.key, item.value);\r\n\t\t\t});\r\n\r\n\t\t\treturn form;\r\n\t\t},\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultConfig from './defaults/config.js';\r\nimport defaultURLGenerator from './defaults/urlGenerator.js';\r\nimport defaultLoaderPromise from './defaults/loaderPromise.js';\r\nimport defaultContentTypeFormatters from './defaults/contentTypeFormatters.js';\r\n\r\nclass Ajax extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = false; //hold config object for ajax request\r\n\t\tthis.url = \"\"; //request URL\r\n\t\tthis.urlGenerator = false;\r\n\t\tthis.params = false; //request parameters\r\n\r\n\t\tthis.loaderPromise = false;\r\n\r\n\t\tthis.registerTableOption(\"ajaxURL\", false); //url for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxURLGenerator\", false);\r\n\t\tthis.registerTableOption(\"ajaxParams\", {});  //params for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxRequestFunc\", false); //promise function\r\n\r\n\t\tthis.registerTableOption(\"ajaxRequesting\", function(){});\r\n\t\tthis.registerTableOption(\"ajaxResponse\", false);\r\n\r\n\t\tthis.contentTypeFormatters = Ajax.contentTypeFormatters;\r\n\t}\r\n\r\n\t//initialize setup options\r\n\tinitialize(){\r\n\t\tthis.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\r\n\t\tthis.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\r\n\r\n\t\tif(this.table.options.ajaxParams){\r\n\t\t\tthis.setParams(this.table.options.ajaxParams);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxConfig){\r\n\t\t\tthis.setConfig(this.table.options.ajaxConfig);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxURL){\r\n\t\t\tthis.setUrl(this.table.options.ajaxURL);\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\r\n\r\n\t\tthis.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\r\n\t\tthis.subscribe(\"data-load\", this.requestData.bind(this));\r\n\t}\r\n\r\n\r\n\trequestDataCheck(data, params, config, silent){\r\n\t\treturn !!((!data && this.url) || typeof data === \"string\");\r\n\t}\r\n\r\n\trequestData(data, params, config, silent, previousData){\r\n\t\tif(this.requestDataCheck(data)){\r\n\t\t\tif(data){\r\n\t\t\t\tthis.setUrl(data);\r\n\t\t\t}\r\n\r\n\t\t\tif(params){\r\n\t\t\t\tthis.setParams(params, true);\r\n\t\t\t}\r\n\r\n\t\t\tif(config){\r\n\t\t\t\tthis.setConfig(config);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.sendRequest();\r\n\t\t}else{\r\n\t\t\treturn previousData;\r\n\t\t}\r\n\t}\r\n\r\n\t//set ajax params\r\n\tsetParams(params, update){\r\n\t\tif(update){\r\n\t\t\tthis.params = this.params || {};\r\n\r\n\t\t\tfor(let key in params){\r\n\t\t\t\tthis.params[key] = params[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.params = params;\r\n\t\t}\r\n\t}\r\n\r\n\tgetParams(){\r\n\t\treturn this.params || {};\r\n\t}\r\n\r\n\t//load config object\r\n\tsetConfig(config){\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(typeof config == \"string\"){\r\n\t\t\tthis.config.method = config;\r\n\t\t}else{\r\n\t\t\tfor(let key in config){\r\n\t\t\t\tthis.config[key] = config[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create config object from default\r\n\t_loadDefaultConfig(force){\r\n\t\tif(!this.config || force){\r\n\r\n\t\t\tthis.config = {};\r\n\r\n\t\t\t//load base config from defaults\r\n\t\t\tfor(let key in Ajax.defaultConfig){\r\n\t\t\t\tthis.config[key] = Ajax.defaultConfig[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set request url\r\n\tsetUrl(url){\r\n\t\tthis.url = url;\r\n\t}\r\n\r\n\t//get request url\r\n\tgetUrl(){\r\n\t\treturn this.url;\r\n\t}\r\n\r\n\t//send ajax request\r\n\tsendRequest(silent){\r\n\t\tvar url = this.url,\r\n\t\tesc, query;\r\n\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false){\r\n\t\t\treturn this.loaderPromise(url, this.config, this.params)\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tif(this.table.options.ajaxResponse){\r\n\t\t\t\t\tdata = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAjax.moduleName = \"ajax\";\r\n\r\n//load defaults\r\nAjax.defaultConfig = defaultConfig;\r\nAjax.defaultURLGenerator = defaultURLGenerator;\r\nAjax.defaultLoaderPromise = defaultLoaderPromise;\r\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\r\n\r\nexport default Ajax;","export default {\r\n\treplace:function(rows){\r\n\t\treturn this.table.setData(rows);\r\n\t},\r\n\tupdate:function(rows){\r\n\t\treturn this.table.updateOrAddData(rows);\r\n\t},\r\n\tinsert:function(rows){\r\n\t\treturn this.table.addData(rows);\r\n\t},\r\n};","export default {\r\n\ttable:function(clipboard){\r\n\t\tvar data = [],\r\n\t\tsuccess = false,\r\n\t\theaderFindSuccess = true,\r\n\t\tcolumns = this.table.columnManager.columns,\r\n\t\tcolumnMap = [],\r\n\t\trows = [];\r\n\r\n\t\t//get data from clipboard into array of columns and rows.\r\n\t\tclipboard = clipboard.split(\"\\n\");\r\n\r\n\t\tclipboard.forEach(function(row){\r\n\t\t\tdata.push(row.split(\"\\t\"));\r\n\t\t});\r\n\r\n\t\tif(data.length && !(data.length === 1 && data[0].length < 2)){\r\n\t\t\tsuccess = true;\r\n\r\n\t\t\t//check if headers are present by title\r\n\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\treturn value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//check if column headers are present by field\r\n\t\t\tif(!headerFindSuccess){\r\n\t\t\t\theaderFindSuccess = true;\r\n\t\t\t\tcolumnMap = [];\r\n\r\n\t\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\t\treturn value && column.field && value.trim() && column.field.trim() === value.trim();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!headerFindSuccess){\r\n\t\t\t\t\tcolumnMap = this.table.columnManager.columnsByIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//remove header row if found\r\n\t\t\tif(headerFindSuccess){\r\n\t\t\t\tdata.shift();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach(function(item){\r\n\t\t\t\tvar row = {};\r\n\r\n\t\t\t\titem.forEach(function(value, i){\r\n\t\t\t\t\tif(columnMap[i]){\r\n\t\t\t\t\t\trow[columnMap[i].field] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\trows.push(row);\r\n\t\t\t});\r\n\r\n\t\t\treturn rows;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultPasteActions from './defaults/pasteActions.js';\r\nimport defaultPasteParsers from './defaults/pasteParsers.js';\r\n\r\nclass Clipboard extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = true;\r\n\t\tthis.pasteParser = function(){};\r\n\t\tthis.pasteAction = function(){};\r\n\t\tthis.customSelection = false;\r\n\t\tthis.rowRange = false;\r\n\t\tthis.blocked = true; //block copy actions not originating from this command\r\n\r\n\t\tthis.registerTableOption(\"clipboard\", false); //enable clipboard\r\n\t\tthis.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\r\n\t\tthis.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\r\n\t\tthis.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\r\n\t\tthis.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\r\n\t\tthis.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\r\n\t\tthis.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\r\n\r\n\t\tthis.registerColumnOption(\"clipboard\");\r\n\t\tthis.registerColumnOption(\"titleClipboard\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.mode = this.table.options.clipboard;\r\n\r\n\t\tthis.rowRange = this.table.options.clipboardCopyRowRange;\r\n\r\n\t\tif(this.mode === true || this.mode === \"copy\"){\r\n\t\t\tthis.table.element.addEventListener(\"copy\", (e) => {\r\n\t\t\t\tvar plain, html, list;\r\n\r\n\t\t\t\tif(!this.blocked){\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tif(this.customSelection){\r\n\t\t\t\t\t\tplain = this.customSelection;\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tvar list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\r\n\r\n\t\t\t\t\t\thtml = this.table.modules.export.genereateHTMLTable(list);\r\n\t\t\t\t\t\tplain = html ? this.generatePlainContent(list) : \"\";\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t\thtml = this.table.options.clipboardCopyFormatter(\"html\", html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (window.clipboardData && window.clipboardData.setData) {\r\n\t\t\t\t\t\twindow.clipboardData.setData('Text', plain);\r\n\t\t\t\t\t} else if (e.clipboardData && e.clipboardData.setData) {\r\n\t\t\t\t\t\te.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\r\n\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchExternal(\"clipboardCopied\", plain, html);\r\n\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.mode === true || this.mode === \"paste\"){\r\n\t\t\tthis.table.element.addEventListener(\"paste\", (e) => {\r\n\t\t\t\tthis.paste(e);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.setPasteParser(this.table.options.clipboardPasteParser);\r\n\t\tthis.setPasteAction(this.table.options.clipboardPasteAction);\r\n\r\n\t\tthis.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.blocked = true;\r\n\t\tthis.customSelection = false;\r\n\t}\r\n\r\n\tgeneratePlainContent (list) {\r\n\t\tvar output = [];\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tvar value = \"\";\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tif(row.type === \"group\"){\r\n\t\t\t\t\t\tcol.value = col.component.getKey();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(col.value === null){\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\t\tvalue = JSON.stringify(col.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tvalue = col.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput.push(rowData.join(\"\\t\"));\r\n\t\t});\r\n\r\n\t\treturn output.join(\"\\n\");\r\n\t}\r\n\r\n\tcopy (range, internal) {\r\n\t\tvar range, sel, textRange;\r\n\t\tthis.blocked = false;\r\n\t\tthis.customSelection = false;\r\n\r\n\t\tif (this.mode === true || this.mode === \"copy\") {\r\n\r\n\t\t\tthis.rowRange = range || this.table.options.clipboardCopyRowRange;\r\n\r\n\t\t\tif (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\r\n\t\t\t\trange = document.createRange();\r\n\t\t\t\trange.selectNodeContents(this.table.element);\r\n\t\t\t\tsel = window.getSelection();\r\n\r\n\t\t\t\tif (sel.toString() && internal) {\r\n\t\t\t\t\tthis.customSelection = sel.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t} else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\r\n\t\t\t\ttextRange = document.body.createTextRange();\r\n\t\t\t\ttextRange.moveToElementText(this.table.element);\r\n\t\t\t\ttextRange.select();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.execCommand('copy');\r\n\r\n\t\t\tif (sel) {\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//PASTE EVENT HANDLING\r\n\tsetPasteAction(action){\r\n\r\n\t\tswitch(typeof action){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteAction = Clipboard.pasteActions[action];\r\n\r\n\t\t\tif(!this.pasteAction){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste action found:\", action);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteAction = action;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tsetPasteParser(parser){\r\n\t\tswitch(typeof parser){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteParser = Clipboard.pasteParsers[parser];\r\n\r\n\t\t\tif(!this.pasteParser){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste parser found:\", parser);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteParser = parser;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpaste(e){\r\n\t\tvar data, rowData, rows;\r\n\r\n\t\tif(this.checkPaseOrigin(e)){\r\n\r\n\t\t\tdata = this.getPasteData(e);\r\n\r\n\t\t\trowData = this.pasteParser.call(this, data);\r\n\r\n\t\t\tif(rowData){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\t\t\trowData = this.mutateData(rowData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trows = this.pasteAction.call(this, rowData);\r\n\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\r\n\t\t\t}else{\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasteError\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmutateData(data){\r\n\t\tvar output = [];\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\toutput.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\toutput = data;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tcheckPaseOrigin(e){\r\n\t\tvar valid = true;\r\n\r\n\t\tif(e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell){\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetPasteData(e){\r\n\t\tvar data;\r\n\r\n\t\tif (window.clipboardData && window.clipboardData.getData) {\r\n\t\t\tdata = window.clipboardData.getData('Text');\r\n\t\t} else if (e.clipboardData && e.clipboardData.getData) {\r\n\t\t\tdata = e.clipboardData.getData('text/plain');\r\n\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\r\n\t\t\tdata = e.originalEvent.clipboardData.getData('text/plain');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nClipboard.moduleName = \"clipboard\";\r\n\r\n//load defaults\r\nClipboard.pasteActions = defaultPasteActions;\r\nClipboard.pasteParsers = defaultPasteParsers;\r\n\r\nexport default Clipboard;","class CalcComponent{\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n}\r\n\r\nexport default CalcComponent;","//public cell object\r\nexport default class CellComponent {\r\n\r\n\tconstructor (cell){\r\n\t\tthis._cell = cell;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this._cell.getValue();\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this._cell.getOldValue();\r\n\t}\r\n\r\n\tgetInitialValue(){\r\n\t\treturn this._cell.initialValue;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._cell.getElement();\r\n\t}\r\n\r\n\tgetRow(){\r\n\t\treturn this._cell.row.getComponent();\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn this._cell.row.getData();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._cell.column.getField();\r\n\t}\r\n\r\n\tgetColumn(){\r\n\t\treturn this._cell.column.getComponent();\r\n\t}\r\n\r\n\tsetValue(value, mutate){\r\n\t\tif(typeof mutate == \"undefined\"){\r\n\t\t\tmutate = true;\r\n\t\t}\r\n\r\n\t\tthis._cell.setValue(value, mutate);\r\n\t}\r\n\r\n\trestoreOldValue(){\r\n\t\tthis._cell.setValueActual(this._cell.getOldValue());\r\n\t}\r\n\r\n\trestoreInitialValue(){\r\n\t\tthis._cell.setValueActual(this._cell.initialValue);\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\tthis._cell.checkHeight();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._cell.table;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._cell;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport CellComponent from './CellComponent.js';\r\n\r\nexport default class Cell extends CoreFeature{\r\n\tconstructor(column, row){\r\n\t\tsuper(column.table);\r\n\r\n\t\tthis.table = column.table;\r\n\t\tthis.column = column;\r\n\t\tthis.row = row;\r\n\t\tthis.element = null;\r\n\t\tthis.value = null;\r\n\t\tthis.initialValue;\r\n\t\tthis.oldValue = null;\r\n\t\tthis.modules = {};\r\n\r\n\t\tthis.height = null;\r\n\t\tthis.width = null;\r\n\t\tthis.minWidth = null;\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.loaded = false; //track if the cell has been added to the DOM yet\r\n\r\n\t\tthis.build();\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\t//generate element\r\n\tbuild(){\r\n\t\tthis.generateElement();\r\n\r\n\t\tthis.setWidth();\r\n\r\n\t\tthis._configureCell();\r\n\r\n\t\tthis.setValueActual(this.column.getFieldValue(this.row.data));\r\n\r\n\t\tthis.initialValue = this.value;\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.element = document.createElement('div');\r\n\t\tthis.element.className = \"tabulator-cell\";\r\n\t\tthis.element.setAttribute(\"role\", \"gridcell\");\r\n\t\tthis.element = this.element;\r\n\t}\r\n\r\n\t_configureCell(){\r\n\t\tvar element = this.element,\r\n\t\tfield = this.column.getField(),\r\n\t\tvertAligns = {\r\n\t\t\ttop:\"flex-start\",\r\n\t\t\tbottom:\"flex-end\",\r\n\t\t\tmiddle:\"center\",\r\n\t\t},\r\n\t\thozAligns = {\r\n\t\t\tleft:\"flex-start\",\r\n\t\t\tright:\"flex-end\",\r\n\t\t\tcenter:\"center\",\r\n\t\t};\r\n\r\n\t\t//set text alignment\r\n\t\telement.style.textAlign = this.column.hozAlign;\r\n\r\n\t\tif(this.column.vertAlign){\r\n\t\t\telement.style.display = \"inline-flex\";\r\n\r\n\t\t\telement.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\r\n\r\n\t\t\tif(this.column.hozAlign){\r\n\t\t\t\telement.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\t\t\telement.setAttribute(\"tabulator-field\", field);\r\n\t\t}\r\n\r\n\t\t//add class to cell if needed\r\n\t\tif(this.column.definition.cssClass){\r\n\t\t\tvar classNames = this.column.definition.cssClass.split(\" \")\r\n\t\t\tclassNames.forEach((className) => {\r\n\t\t\t\telement.classList.add(className)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//update tooltip on mouse enter\r\n\t\tif (this.table.options.tooltipGenerationMode === \"hover\"){\r\n\t\t\telement.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\t\tthis._generateTooltip();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"cell-init\", this);\r\n\r\n\t\t//hide cell if not visible\r\n\t\tif(!this.column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//generate cell contents\r\n\t_generateContents(){\r\n\t\tvar val;\r\n\r\n\t\tval = this.chain(\"cell-format\", this, null, () => {\r\n\t\t\treturn this.element.innerHTML = this.value;\r\n\t\t});\r\n\r\n\t\tswitch(typeof val){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(val instanceof Node){\r\n\r\n\t\t\t\t//clear previous cell contents\r\n\t\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\t\tthis.element.appendChild(val);\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.innerHTML = \"\";\r\n\r\n\t\t\t\tif(val != null){\r\n\t\t\t\t\tconsole.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tthis.element.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tthis.element.innerHTML = val;\r\n\t\t}\r\n\t}\r\n\r\n\tcellRendered(){\r\n\t\tthis.dispatch(\"cell-rendered\", this);\r\n\t}\r\n\r\n\t//generate tooltip text\r\n\t_generateTooltip(){\r\n\t\tvar tooltip = this.column.tooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\ttooltip = this.value;\r\n\t\t\t}else if(typeof(tooltip) == \"function\"){\r\n\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof tooltip === \"undefined\"){\r\n\t\t\t\ttooltip = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////////// Getters ////////////////////\r\n\tgetElement(containerOnly){\r\n\t\tif(!this.loaded){\r\n\t\t\tthis.loaded = true;\r\n\t\t\tif(!containerOnly){\r\n\t\t\t\tthis.layoutElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this.oldValue;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tsetValue(value, mutate){\r\n\t\tvar changed = this.setValueProcessData(value, mutate);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-updated\", this);\r\n\r\n\t\t\tthis.cellRendered();\r\n\r\n\t\t\tthis.dispatchExternal(\"cellEdited\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetValueProcessData(value, mutate){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.value != value){\r\n\r\n\t\t\tchanged = true;\r\n\r\n\t\t\tif(mutate){\r\n\t\t\t\tvalue = this.chain(\"cell-value-changing\", [this, value], null, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setValueActual(value);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-changed\", this);\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\tsetValueActual(value){\r\n\t\tthis.oldValue = this.value;\r\n\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.dispatch(\"cell-value-save-before\", this);\r\n\r\n\t\tthis.column.setFieldValue(this.row.data, value);\r\n\r\n\t\tthis.dispatch(\"cell-value-save-after\", this);\r\n\r\n\t\tif(this.loaded){\r\n\t\t\tthis.layoutElement();\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutElement(){\r\n\t\tthis._generateContents();\r\n\t\tthis._generateTooltip();\r\n\r\n\t\tthis.dispatch(\"cell-layout\", this);\r\n\t}\r\n\r\n\tsetWidth(){\r\n\t\tthis.width = this.column.width;\r\n\t\tthis.element.style.width = this.column.widthStyled;\r\n\t}\r\n\r\n\tclearWidth(){\r\n\t\tthis.width = \"\";\r\n\t\tthis.element.style.width = \"\";\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this.width || this.element.offsetWidth;\r\n\t}\r\n\r\n\tsetMinWidth(){\r\n\t\tthis.minWidth = this.column.minWidth;\r\n\t\tthis.element.style.minWidth = this.column.minWidthStyled;\r\n\t}\r\n\r\n\tsetMaxWidth(){\r\n\t\tthis.maxWidth = this.column.maxWidth;\r\n\t\tthis.element.style.maxWidth = this.column.maxWidthStyled;\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\t// var height = this.element.css(\"height\");\r\n\t\tthis.row.reinitializeHeight();\r\n\t}\r\n\r\n\tclearHeight(){\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.height = null;\r\n\t}\r\n\r\n\tsetHeight(){\r\n\t\tthis.height = this.row.height;\r\n\t\tthis.element.style.height =  this.row.heightStyled;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.height || this.element.offsetHeight;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.element.style.display = \"none\";\r\n\t}\r\n\r\n\tdelete(){\r\n\t\tthis.dispatch(\"cell-delete\", this);\r\n\r\n\t\tif(!this.table.rowManager.redrawBlock && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.column.deleteCell(this);\r\n\t\tthis.row.deleteCell(this);\r\n\t\tthis.calcs = {};\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this.row.getCellIndex(this);\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new CellComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","//public column object\r\nexport default class ColumnComponent {\r\n\tconstructor (column){\r\n\t\tthis._column = column;\r\n\t\tthis.type = \"ColumnComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._column.table.componentFunctionBinder.handle(\"column\", target._column, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._column.getElement();\r\n\t}\r\n\r\n\tgetDefinition(){\r\n\t\treturn this._column.getDefinition();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._column.getField();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._column.cells.forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._column.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.show();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.hide();\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tif(this._column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._column.delete();\r\n\t}\r\n\r\n\tgetSubColumns(){\r\n\t\tvar output = [];\r\n\r\n\t\tif(this._column.columns.length){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\toutput.push(column.getComponent());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetParentColumn(){\r\n\t\treturn this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._column.table.columnManager.scrollToColumn(this._column);\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._column.table;\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tvar toColumn = this._column.table.columnManager.findColumn(to);\r\n\r\n\t\tif(toColumn){\r\n\t\t\tthis._column.table.columnManager.moveColumn(this._column, toColumn, after)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t}\r\n\t}\r\n\r\n\tgetNextColumn(){\r\n\t\tvar nextCol = this._column.nextColumn();\r\n\r\n\t\treturn nextCol ? nextCol.getComponent() : false;\r\n\t}\r\n\r\n\tgetPrevColumn(){\r\n\t\tvar prevCol = this._column.prevColumn();\r\n\r\n\t\treturn prevCol ? prevCol.getComponent() : false;\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\treturn this._column.updateDefinition(updates);\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this._column.getWidth();\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tvar result;\r\n\r\n\t\tif(width === true){\r\n\t\t\tresult =  this._column.reinitializeWidth(true);\r\n\t\t}else{\r\n\t\t\tresult =  this._column.setWidth(width);\r\n\t\t}\r\n\r\n\t\tthis._column.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\treturn result;\r\n\t}\r\n}","export default {\r\n\t\"title\": undefined,\r\n\t\"field\": undefined,\r\n\t\"columns\": undefined,\r\n\t\"visible\": undefined,\r\n\t\"hozAlign\": undefined,\r\n\t\"vertAlign\": undefined,\r\n\t\"width\": undefined,\r\n\t\"minWidth\": 40,\r\n\t\"maxWidth\": undefined,\r\n\t\"tooltip\": undefined,\r\n\t\"cssClass\": undefined,\r\n\t\"variableHeight\": undefined,\r\n\t\"headerTooltip\": undefined,\r\n\t\"headerVertical\": undefined,\r\n\t\"headerHozAlign\": undefined,\r\n\t\"editableTitle\": undefined,\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport ColumnComponent from './ColumnComponent.js';\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport Cell from '../cell/Cell.js';\r\n\r\nclass Column extends CoreFeature{\r\n\r\n\tconstructor(def, parent){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.definition = def; //column definition\r\n\t\tthis.parent = parent; //hold parent object\r\n\t\tthis.type = \"column\"; //type of element\r\n\t\tthis.columns = []; //child columns\r\n\t\tthis.cells = []; //cells bound to this column\r\n\t\tthis.element = this.createElement(); //column header element\r\n\t\tthis.contentElement = false;\r\n\t\tthis.titleHolderElement = false;\r\n\t\tthis.titleElement = false;\r\n\t\tthis.groupElement = this.createGroupElement(); //column group holder element\r\n\t\tthis.isGroup = false;\r\n\t\tthis.tooltip = false; //hold column tooltip\r\n\t\tthis.hozAlign = \"\"; //horizontal text alignment\r\n\t\tthis.vertAlign = \"\"; //vert text alignment\r\n\r\n\t\t//multi dimensional filed handling\r\n\t\tthis.field =\"\";\r\n\t\tthis.fieldStructure = \"\";\r\n\t\tthis.getFieldValue = \"\";\r\n\t\tthis.setFieldValue = \"\";\r\n\r\n\t\tthis.titleFormatterRendered = false;\r\n\r\n\t\tthis.mapDefinitions();\r\n\r\n\t\tthis.setField(this.definition.field);\r\n\r\n\t\tthis.modules = {}; //hold module variables;\r\n\r\n\t\tthis.width = null; //column width\r\n\t\tthis.widthStyled = \"\"; //column width prestyled to improve render efficiency\r\n\t\tthis.maxWidth = null; //column maximum width\r\n\t\tthis.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\r\n\t\tthis.minWidth = null; //column minimum width\r\n\t\tthis.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\r\n\t\tthis.widthFixed = false; //user has specified a width for this column\r\n\r\n\t\tthis.visible = true; //default visible state\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\t//initialize column\r\n\t\tif(this.definition.columns){\r\n\r\n\t\t\tthis.isGroup = true;\r\n\r\n\t\t\tthis.definition.columns.forEach((def, i) => {\r\n\t\t\t\tvar newCol = new Column(def, this);\r\n\t\t\t\tthis.attachColumn(newCol);\r\n\t\t\t});\r\n\r\n\t\t\tthis.checkColumnVisibility();\r\n\t\t}else{\r\n\t\t\tparent.registerColumnField(this);\r\n\t\t}\r\n\r\n\t\tthis._initialize();\r\n\r\n\t\tthis.bindModuleColumns();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.setAttribute(\"role\", \"columnheader\");\r\n\t\tel.setAttribute(\"aria-sort\", \"none\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateGroupElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col-group-cols\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tmapDefinitions(){\r\n\t\tvar defaults = this.table.options.columnDefaults;\r\n\r\n\t\t//map columnDefaults onto column definitions\r\n\t\tif(defaults){\r\n\t\t\tfor(let key in defaults){\r\n\t\t\t\tif(typeof this.definition[key] === \"undefined\"){\r\n\t\t\t\t\tthis.definition[key] = defaults[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.definition = this.table.columnManager.optionsList.generate(Column.defaultOptionList, this.definition)\r\n\t}\r\n\r\n\tcheckDefinition(){\r\n\t\tObject.keys(this.definition).forEach((key) => {\r\n\t\t\tif(Column.defaultOptionList.indexOf(key) === -1){\r\n\t\t\t\tconsole.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetField(field){\r\n\t\tthis.field = field;\r\n\t\tthis.fieldStructure = field ? (this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field]) : [];\r\n\t\tthis.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\r\n\t\tthis.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnPosition(column){\r\n\t\tthis.parent.registerColumnPosition(column);\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnField(column){\r\n\t\tthis.parent.registerColumnField(column);\r\n\t}\r\n\r\n\t//trigger position registration\r\n\treRegisterPosition(){\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolumn.reRegisterPosition();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.registerColumnPosition(this);\r\n\t\t}\r\n\t}\r\n\r\n\t_mapDepricatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\tsetTooltip(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\t//set header tooltips\r\n\t\tvar tooltip = def.headerTooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\tif(def.field){\r\n\t\t\t\t\tthis.langBind(\"columns|\" + def.field, (value) => {\r\n\t\t\t\t\t\tthis.element.setAttribute(\"title\", value || def.title);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.element.setAttribute(\"title\", def.title);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof(tooltip) == \"function\"){\r\n\t\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element\r\n\t_initialize(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(def.headerVertical){\r\n\t\t\tthis.element.classList.add(\"tabulator-col-vertical\");\r\n\r\n\t\t\tif(def.headerVertical === \"flip\"){\r\n\t\t\t\tthis.element.classList.add(\"tabulator-col-vertical-flip\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.contentElement = this._bindEvents();\r\n\r\n\t\tthis.contentElement = this._buildColumnHeaderContent();\r\n\r\n\t\tthis.element.appendChild(this.contentElement);\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis._buildGroupHeader();\r\n\t\t}else{\r\n\t\t\tthis._buildColumnHeader();\r\n\t\t}\r\n\r\n\t\tthis.setTooltip();\r\n\r\n\t\tthis.dispatch(\"column-init\", this);\r\n\r\n\t\t//update header tooltip on mouse enter\r\n\t\tthis.element.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\tthis.setTooltip();\r\n\t\t});\r\n\t}\r\n\r\n\t_bindEvents(){\r\n\t\tvar def = this.definition,\r\n\t\tdblTap,\ttapHold, tap;\r\n\r\n\t\t//setup header click event bindings\r\n\t\tif(typeof(def.headerClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"click\", (e) => {def.headerClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"dblclick\", (e) => {def.headerDblClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerContext) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"contextmenu\", (e) => {def.headerContext(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\t//setup header tap event bindings\r\n\t\tif(typeof(def.headerTap) == \"function\"){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tdef.headerTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblTap) == \"function\"){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tdef.headerDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerTapHold) == \"function\"){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(function(){\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tdef.headerTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for header\r\n\t_buildColumnHeader(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tthis.dispatch(\"column-layout\", this);\r\n\r\n\t\t//set column visibility\r\n\t\tif(typeof def.visible != \"undefined\"){\r\n\t\t\tif(def.visible){\r\n\t\t\t\tthis.show(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.hide(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(def.cssClass){\r\n\t\t\tvar classeNames = def.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(def.field){\r\n\t\t\tthis.element.setAttribute(\"tabulator-field\", def.field);\r\n\t\t}\r\n\r\n\t\t//set min width if present\r\n\t\tthis.setMinWidth(parseInt(def.minWidth));\r\n\r\n\t\tif(def.maxWidth){\r\n\t\t\tthis.setMaxWidth(parseInt(def.maxWidth));\r\n\t\t}\r\n\r\n\t\tthis.reinitializeWidth();\r\n\r\n\t\t//set tooltip if present\r\n\t\tthis.tooltip = this.definition.tooltip;\r\n\r\n\t\t//set orizontal text alignment\r\n\t\tthis.hozAlign = this.definition.hozAlign;\r\n\t\tthis.vertAlign = this.definition.vertAlign;\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\t}\r\n\r\n\t_buildColumnHeaderContent(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tvar contentElement = document.createElement(\"div\");\r\n\t\tcontentElement.classList.add(\"tabulator-col-content\");\r\n\r\n\t\tthis.titleHolderElement = document.createElement(\"div\");\r\n\t\tthis.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\r\n\r\n\t\tcontentElement.appendChild(this.titleHolderElement);\r\n\r\n\t\tthis.titleElement = this._buildColumnHeaderTitle();\r\n\r\n\t\tthis.titleHolderElement.appendChild(this.titleElement);\r\n\r\n\t\treturn contentElement;\r\n\t}\r\n\r\n\t//build title element of column\r\n\t_buildColumnHeaderTitle(){\r\n\t\tvar def = this.definition,\r\n\t\ttitle;\r\n\r\n\t\tvar titleHolderElement = document.createElement(\"div\");\r\n\t\ttitleHolderElement.classList.add(\"tabulator-col-title\");\r\n\r\n\t\tif(def.editableTitle){\r\n\t\t\tvar titleElement = document.createElement(\"input\");\r\n\t\t\ttitleElement.classList.add(\"tabulator-title-editor\");\r\n\r\n\t\t\ttitleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\ttitleElement.focus();\r\n\t\t\t});\r\n\r\n\t\t\ttitleElement.addEventListener(\"change\", () => {\r\n\t\t\t\tdef.title = titleElement.value;\r\n\t\t\t\tthis.dispatchExternal(\"columnTitleChanged\", this.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\ttitleHolderElement.appendChild(titleElement);\r\n\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\ttitleElement.value = text || (def.title || \"&nbsp;\");\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\ttitleElement.value  = def.title || \"&nbsp;\";\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, text || (def.title || \"&nbsp;\"));\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn titleHolderElement;\r\n\t}\r\n\r\n\t_formatColumnHeaderTitle(el, title){\r\n\t\tvar contents = this.chain(\"column-format\", [this, title, el], null, () => {\r\n\t\t\treturn title;\r\n\t\t});\r\n\r\n\t\tswitch(typeof contents){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(contents instanceof Node){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}else{\r\n\t\t\t\tel.innerHTML = \"\";\r\n\t\t\t\tconsole.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tel.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tel.innerHTML = contents;\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for column group\r\n\t_buildGroupHeader(){\r\n\t\tthis.element.classList.add(\"tabulator-col-group\");\r\n\t\tthis.element.setAttribute(\"role\", \"columngroup\");\r\n\t\tthis.element.setAttribute(\"aria-title\", this.definition.title);\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(this.definition.cssClass){\r\n\t\t\tvar classeNames = this.definition.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\r\n\t\tthis.element.appendChild(this.groupElement);\r\n\t}\r\n\r\n\t//flat field lookup\r\n\t_getFlatData(data){\r\n\t\treturn data[this.field];\r\n\t}\r\n\r\n\t//nested field lookup\r\n\t_getNestedData(data){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length,\r\n\t\toutput;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tdataObj = dataObj[structure[i]];\r\n\r\n\t\t\toutput = dataObj;\r\n\r\n\t\t\tif(!dataObj){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//flat field set\r\n\t_setFlatData(data, value){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t//nested field set\r\n\t_setNestedData(data, value){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tif(i == length -1){\r\n\t\t\t\tdataObj[structure[i]] = value;\r\n\t\t\t}else{\r\n\t\t\t\tif(!dataObj[structure[i]]){\r\n\t\t\t\t\tif(typeof value !== \"undefined\"){\r\n\t\t\t\t\t\tdataObj[structure[i]] = {};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataObj = dataObj[structure[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//attach column to this group\r\n\tattachColumn(column){\r\n\t\tif(this.groupElement){\r\n\t\t\tthis.columns.push(column);\r\n\t\t\tthis.groupElement.appendChild(column.getElement());\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Warning - Column being attached to another column instead of column group\");\r\n\t\t}\r\n\t}\r\n\r\n\t//vertically align header in column\r\n\tverticalAlign(alignment, height){\r\n\r\n\t\t//calculate height of column header and group holder element\r\n\t\tvar parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : (height || this.parent.getHeadersElement().clientHeight);\r\n\t\t// var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\r\n\r\n\t\tthis.element.style.height = parentHeight + \"px\";\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.groupElement.style.minHeight = (parentHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t}\r\n\r\n\t\t//vertically align cell contents\r\n\t\tif(!this.isGroup && alignment !== \"top\"){\r\n\t\t\tif(alignment === \"bottom\"){\r\n\t\t\t\tthis.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.paddingTop = ((this.element.clientHeight - this.contentElement.offsetHeight) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.verticalAlign(alignment);\r\n\t\t});\r\n\t}\r\n\r\n\t//clear vertical alignmenet\r\n\tclearVerticalAlign(){\r\n\t\tthis.element.style.paddingTop = \"\";\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.element.style.minHeight = \"\";\r\n\t\tthis.groupElement.style.minHeight = \"\";\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\t\t});\r\n\t}\r\n\r\n\tbindModuleColumns (){\r\n\t\t//check if rownum formatter is being used on a column\r\n\t\tif(this.definition.formatter == \"rownum\"){\r\n\t\t\tthis.table.rowManager.rowNumColumn = this;\r\n\t\t}\r\n\t}\r\n\r\n\t//// Retreive Column Information ////\r\n\t//return column header element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return colunm group element\r\n\tgetGroupElement(){\r\n\t\treturn this.groupElement;\r\n\t}\r\n\r\n\t//return field name\r\n\tgetField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\t//return the first column in a group\r\n\tgetFirstColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[0].getFirstColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return the last column in a group\r\n\tgetLastColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[this.columns.length -1].getLastColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetCells(){\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\t//retreive the top column in a group of columns\r\n\tgetTopColumn(){\r\n\t\tif(this.parent.isGroup){\r\n\t\t\treturn this.parent.getTopColumn();\r\n\t\t}else{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\t//return column definition object\r\n\tgetDefinition(updateBranches){\r\n\t\tvar colDefs = [];\r\n\r\n\t\tif(this.isGroup && updateBranches){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolDefs.push(column.getDefinition(true));\r\n\t\t\t});\r\n\r\n\t\t\tthis.definition.columns = colDefs;\r\n\t\t}\r\n\r\n\t\treturn this.definition;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tcheckColumnVisibility(){\r\n\t\tvar visible = false;\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(visible){\r\n\t\t\tthis.show();\r\n\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t}else{\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//show column\r\n\tshow(silent, responsiveToggle){\r\n\t\tif(!this.visible){\r\n\t\t\tthis.visible = true;\r\n\r\n\t\t\tthis.element.style.display = \"\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.show();\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isGroup && this.width === null){\r\n\t\t\t\tthis.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tthis.dispatch(\"column-show\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//hide column\r\n\thide(silent, responsiveToggle){\r\n\t\tif(this.visible){\r\n\t\t\tthis.visible = false;\r\n\r\n\t\t\tthis.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.hide();\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatch(\"column-hide\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmatchChildWidths(){\r\n\t\tvar childWidth = 0;\r\n\r\n\t\tif(this.contentElement && this.columns.length){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\tchildWidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.contentElement.style.maxWidth = (childWidth - 1) + \"px\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveChild(child){\r\n\t\tvar index = this.columns.indexOf(child);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.columns.length){\r\n\t\t\tthis.delete();\r\n\t\t}\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tthis.widthFixed = true;\r\n\t\tthis.setWidthActual(width);\r\n\t}\r\n\r\n\tsetWidthActual(width){\r\n\t\tif(isNaN(width)){\r\n\t\t\twidth = Math.floor((this.table.element.clientWidth/100) * parseInt(width));\r\n\t\t}\r\n\r\n\t\twidth = Math.max(this.minWidth, width);\r\n\r\n\t\tif(this.maxWidth){\r\n\t\t\twidth = Math.min(this.maxWidth, width);\r\n\t\t}\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.widthStyled = width ? width + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.width = this.widthStyled;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.setWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.parent.isGroup){\r\n\t\t\tthis.parent.matchChildWidths();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width\", this);\r\n\t}\r\n\r\n\tcheckCellHeights(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tif(cell.row.heightInitialized){\r\n\t\t\t\tif(cell.row.getElement().offsetParent !== null){\r\n\t\t\t\t\trows.push(cell.row);\r\n\t\t\t\t\tcell.row.clearCellHeight();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcell.row.heightInitialized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.calcHeight();\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.setCellHeight();\r\n\t\t});\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\twidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\twidth = this.width;\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.offsetHeight;\r\n\t}\r\n\r\n\tsetMinWidth(minWidth){\r\n\t\tthis.minWidth = minWidth;\r\n\t\tthis.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.minWidth = this.minWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMinWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tsetMaxWidth(maxWidth){\r\n\t\tthis.maxWidth = maxWidth;\r\n\t\tthis.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.maxWidth = this.maxWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMaxWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar index;\r\n\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\t\tcolumn.delete();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"column-delete\", this);\r\n\r\n\t\t\tvar cellCount = this.cells.length;\r\n\r\n\t\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\t\tthis.cells[0].delete();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element = false;\r\n\t\t\tthis.contentElement = false;\r\n\t\t\tthis.titleElement = false;\r\n\t\t\tthis.groupElement = false;\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.removeChild(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.deregisterColumn(this);\r\n\r\n\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tcolumnRendered(){\r\n\t\tif(this.titleFormatterRendered){\r\n\t\t\tthis.titleFormatterRendered();\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\t//generate cell for this column\r\n\tgenerateCell(row){\r\n\t\tvar cell = new Cell(this, row);\r\n\r\n\t\tthis.cells.push(cell);\r\n\r\n\t\treturn cell;\r\n\t}\r\n\r\n\tnextColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._nextVisibleColumn(index + 1) : false;\r\n\t}\r\n\r\n\t_nextVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._nextVisibleColumn(index + 1);\r\n\t}\r\n\r\n\tprevColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._prevVisibleColumn(index - 1) : false;\r\n\t}\r\n\r\n\t_prevVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._prevVisibleColumn(index - 1);\r\n\t}\r\n\r\n\treinitializeWidth(force){\r\n\t\tthis.widthFixed = false;\r\n\r\n\t\t//set width if present\r\n\t\tif(typeof this.definition.width !== \"undefined\" && !force){\r\n\t\t\tthis.setWidth(this.definition.width);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width-fit-before\", this);\r\n\r\n\t\tthis.fitToData();\r\n\r\n\t\tthis.dispatch(\"column-width-fit-after\", this);\r\n\t}\r\n\r\n\t//set column width to maximum cell width for non group columns\r\n\tfitToData(){\r\n\t\tif(this.isGroup){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.widthFixed){\r\n\t\t\tthis.element.style.width = \"\";\r\n\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tcell.clearWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar maxWidth = this.element.offsetWidth;\r\n\r\n\t\tif(!this.width || !this.widthFixed){\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tvar width = cell.getWidth();\r\n\r\n\t\t\t\tif(width > maxWidth){\r\n\t\t\t\t\tmaxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(maxWidth){\r\n\t\t\t\tthis.setWidthActual(maxWidth + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\tvar definition;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tif(!this.parent.isGroup){\r\n\t\t\t\tdefinition = Object.assign({}, this.getDefinition());\r\n\t\t\t\tdefinition = Object.assign(definition, updates);\r\n\r\n\t\t\t\treturn this.table.columnManager.addColumn(definition, false, this)\r\n\t\t\t\t.then((column) => {\r\n\r\n\t\t\t\t\tif(definition.field == this.field){\r\n\t\t\t\t\t\tthis.field = false; //cleair field name to prevent deletion of duplicate column from arrays\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new ColumnComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nColumn.defaultOptionList = defaultOptions;\r\n\r\nexport default Column;","//public row object\r\nexport default class RowComponent {\r\n\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this._row.getData(\"data\")[this._row.table.options.index];\r\n\t}\r\n\r\n\tgetPosition(active){\r\n\t\treturn this._row.table.rowManager.getRowPosition(this._row, active);\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._row.delete();\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._row.table.rowManager.scrollToRow(this._row);\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tthis._row.moveToRow(to, after);\r\n\t}\r\n\r\n\tupdate(data){\r\n\t\treturn this._row.updateData(data);\r\n\t}\r\n\r\n\tnormalizeHeight(){\r\n\t\tthis._row.normalizeHeight(true);\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n\r\n\treformat(){\r\n\t\treturn this._row.reinitialize();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetNextRow(){\r\n\t\tvar row = this._row.nextRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n\r\n\tgetPrevRow(){\r\n\t\tvar row = this._row.prevRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport RowComponent from './RowComponent.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Row extends CoreFeature{\r\n\tconstructor (data, parent, type = \"row\"){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.data = {};\r\n\t\tthis.type = type; //type of element\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {}; //hold module variables;\r\n\t\tthis.cells = [];\r\n\t\tthis.height = 0; //hold element height\r\n\t\tthis.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\r\n\t\tthis.manualHeight = false; //user has manually set row height\r\n\t\tthis.outerHeight = 0; //holde lements outer height\r\n\t\tthis.initialized = false; //element has been rendered\r\n\t\tthis.heightInitialized = false; //element has resized cells to fit\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.created = false;\r\n\r\n\t\tthis.setData(data);\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tif(!this.created){\r\n\t\t\tthis.created = true;\r\n\t\t\tthis.generateElement();\r\n\t\t}\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\tthis.element = el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\tthis.create();\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.createElement();\r\n\t\tthis.dispatch(\"row-init\", this);\r\n\t}\r\n\r\n\tgenerateCells(){\r\n\t\tthis.cells = this.table.columnManager.generateCells(this);\r\n\t}\r\n\r\n\t//functions to setup on first render\r\n\tinitialize(force){\r\n\t\tthis.create();\r\n\r\n\t\tif(!this.initialized || force){\r\n\r\n\t\t\tthis.deleteCells();\r\n\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tthis.dispatch(\"row-layout-before\", this);\r\n\r\n\t\t\tthis.generateCells();\r\n\r\n\t\t\tthis.table.columnManager.renderer.renderRowCells(this);\r\n\r\n\t\t\tif(force){\r\n\t\t\t\tthis.normalizeHeight();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-layout\", this);\r\n\r\n\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tthis.initialized = true;\r\n\r\n\t\t\tthis.dispatch(\"row-layout-after\", this);\r\n\t\t}else{\r\n\t\t\tthis.table.columnManager.renderer.rerenderRowCells(this);\r\n\t\t}\r\n\t}\r\n\r\n\treinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\tdeinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\t}\r\n\r\n\treinitialize(children){\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(!this.manualHeight){\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.heightStyled = \"\";\r\n\t\t}\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"row-relayout\", this);\r\n\t}\r\n\r\n\t//get heights when doing bulk row style calcs in virtual DOM\r\n\tcalcHeight(force){\r\n\r\n\t\tvar maxHeight = 0,\r\n\t\tminHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tvar height = cell.getHeight();\r\n\t\t\tif(height > maxHeight){\r\n\t\t\t\tmaxHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.height = Math.max(maxHeight, minHeight);\r\n\t\t}else{\r\n\t\t\tthis.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\r\n\t\t}\r\n\r\n\t\tthis.heightStyled = this.height ? this.height + \"px\" : \"\";\r\n\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t}\r\n\r\n\t//set of cells\r\n\tsetCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setHeight();\r\n\t\t});\r\n\r\n\t\tthis.heightInitialized = true;\r\n\t}\r\n\r\n\tclearCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.clearHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(force){\r\n\t\tif(force){\r\n\t\t\tthis.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis.calcHeight(force);\r\n\r\n\t\tthis.setCellHeight();\r\n\t}\r\n\r\n\t//set height of rows\r\n\tsetHeight(height, force){\r\n\t\tif(this.height != height || force){\r\n\r\n\t\t\tthis.manualHeight = true;\r\n\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.heightStyled = height ? height + \"px\" : \"\";\r\n\r\n\t\t\tthis.setCellHeight();\r\n\r\n\t\t\t// this.outerHeight = this.element.outerHeight();\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\t//return rows outer Width\r\n\tgetWidth(){\r\n\t\treturn this.element.offsetWidth;\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Data Management /////////////////\r\n\tsetData(data){\r\n\t\tthis.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\r\n\r\n\t\tthis.dispatch(\"row-data-init-after\", this);\r\n\t}\r\n\r\n\t//update the rows data\r\n\tupdateData(updatedData){\r\n\t\tvar visible = this.element && Helpers.elVisible(this.element),\r\n\t\ttempData = {},\r\n\t\tnewRowData;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof updatedData === \"string\"){\r\n\t\t\t\tupdatedData = JSON.parse(updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-before\", this);\r\n\r\n\t\t\tif(this.subscribed(\"row-data-changing\")){\r\n\t\t\t\ttempData = Object.assign(tempData, this.data);\r\n\t\t\t\ttempData = Object.assign(tempData, updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tnewRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\r\n\r\n\t\t\t//set data\r\n\t\t\tfor (var attrname in newRowData) {\r\n\t\t\t\tthis.data[attrname] = newRowData[attrname];\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-after\", this);\r\n\r\n\t\t\t//update affected cells only\r\n\t\t\tfor (var attrname in updatedData) {\r\n\r\n\t\t\t\tlet columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\r\n\r\n\t\t\t\tcolumns.forEach((column) => {\r\n\t\t\t\t\tlet cell = this.getCell(column.getField());\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tlet value = column.getFieldValue(newRowData);\r\n\t\t\t\t\t\tif(cell.getValue() != value){\r\n\t\t\t\t\t\t\tcell.setValueProcessData(value);\r\n\r\n\t\t\t\t\t\t\tif(visible){\r\n\t\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//Partial reinitialization if visible\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.normalizeHeight(true);\r\n\r\n\t\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.initialized = false;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t\tthis.heightStyled = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-changed\", this, visible, updatedData);\r\n\r\n\t\t\t//this.reinitialize();\r\n\r\n\t\t\tthis.dispatchExternal(\"rowUpdated\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\tif(transform){\r\n\t\t\treturn this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\r\n\t\t}\r\n\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar match = false;\r\n\r\n\t\tcolumn = this.table.columnManager.findColumn(column);\r\n\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\tmatch = this.cells.find(function(cell){\r\n\t\t\treturn cell.column === column;\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetCellIndex(findCell){\r\n\t\treturn this.cells.findIndex(function(cell){\r\n\t\t\treturn cell === findCell;\r\n\t\t});\r\n\t}\r\n\r\n\tfindCell(subject){\r\n\t\treturn this.cells.find((cell) => {\r\n\t\t\treturn cell.element === subject;\r\n\t\t});\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\tnextRow(){\r\n\t\tvar row = this.table.rowManager.nextDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tprevRow(){\r\n\t\tvar row = this.table.rowManager.prevDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tmoveToRow(to, before){\r\n\t\tvar toRow = this.table.rowManager.findRow(to);\r\n\r\n\t\tif(toRow){\r\n\t\t\tthis.table.rowManager.moveRowActual(this, toRow, !before);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"display\", false, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", to);\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////// Actions  /////////////////////\r\n\tdelete(){\r\n\t\tthis.dispatch(\"row-delete\", this);\r\n\r\n\t\tthis.deleteActual();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tdeleteActual(blockRedraw){\r\n\t\tvar index = this.table.rowManager.getRowIndex(this);\r\n\r\n\t\tthis.detatchModules();\r\n\r\n\t\tthis.table.rowManager.deleteRow(this, blockRedraw);\r\n\r\n\t\tthis.deleteCells();\r\n\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\t\tthis.element = false;\r\n\r\n\t\tthis.dispatch(\"row-deleted\", this);\r\n\t}\r\n\r\n\tdetatchModules(){\r\n\t\tthis.dispatch(\"row-deleting\", this);\r\n\t}\r\n\r\n\tdeleteCells(){\r\n\t\tvar cellCount = this.cells.length;\r\n\r\n\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\tthis.cells[0].delete();\r\n\t\t}\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.detatchModules();\r\n\t\tthis.deleteCells();\r\n\r\n\t\tif(this.element){\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {};\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this.modules.group || false;\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new RowComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","export default {\r\n\t\"avg\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn Number(sum) + Number(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput = output / values.length;\r\n\r\n\t\t\toutput = precision !== false ? output.toFixed(precision) : output;\r\n\t\t}\r\n\r\n\t\treturn parseFloat(output).toString();\r\n\t},\r\n\t\"max\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value > output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"min\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value < output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"sum\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tvalue = Number(value);\r\n\r\n\t\t\t\toutput += !isNaN(value) ? Number(value) : 0;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn precision !== false ? output.toFixed(precision) : output;\r\n\t},\r\n\t\"concat\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn String(sum) + String(value);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n\t\"count\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\toutput ++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport CalcComponent from './CalcComponent.js';\r\n\r\nimport Cell from '../../core/cell/Cell.js';\r\nimport Column from '../../core/column/Column.js';\r\nimport Row from '../../core/row/Row.js';\r\n\r\nimport defaultCalculations from './defaults/calculations.js';\r\n\r\nclass ColumnCalcs extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topCalcs = [];\r\n\t\tthis.botCalcs = [];\r\n\t\tthis.genColumn = false;\r\n\t\tthis.topElement = this.createElement();\r\n\t\tthis.botElement = this.createElement();\r\n\t\tthis.topRow = false;\r\n\t\tthis.botRow = false;\r\n\t\tthis.topInitialized = false;\r\n\t\tthis.botInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"columnCalcs\", true);\r\n\r\n\t\tthis.registerColumnOption(\"topCalc\");\r\n\t\tthis.registerColumnOption(\"topCalcParams\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatterParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalc\");\r\n\t\tthis.registerColumnOption(\"bottomCalcParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatterParams\");\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-calcs-holder\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.genColumn = new Column({field:\"value\"}, this);\r\n\r\n\t\tthis.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\t\tthis.subscribe(\"rows-visible\", this.visibleRows.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\r\n\t\tthis.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\r\n\t\tif(force){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tuserRecalc(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tvisibleRows(viewable, rows){\r\n\t\tif(this.topRow){\r\n\t\t\trows.unshift(this.topRow);\r\n\t\t}\r\n\r\n\t\tif(this.botRow){\r\n\t\t\trows.push(this.botRow);\r\n\t\t}\r\n\t\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(row){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.recalcRowGroup(this);\r\n\t\t}else{\r\n\t\t\tthis.recalcActiveRows();\r\n\t\t}\r\n\t}\r\n\r\n\trecalcActiveRows(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tif(cell.column.definition.topCalc || cell.column.definition.bottomCalc){\r\n\t\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\"){\r\n\t\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"table\"){\r\n\t\t\t\t\tthis.recalcRowGroup(cell.row);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(column.definition.topCalc || column.definition.bottomCalc){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column calcs\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition\r\n\r\n\t\tvar config = {\r\n\t\t\ttopCalcParams:def.topCalcParams || {},\r\n\t\t\tbotCalcParams:def.bottomCalcParams || {},\r\n\t\t};\r\n\r\n\t\tif(def.topCalc){\r\n\r\n\t\t\tswitch(typeof def.topCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.topCalc]){\r\n\t\t\t\t\tconfig.topCalc = ColumnCalcs.calculations[def.topCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.topCalc = def.topCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.topCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.topCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeTopRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(def.bottomCalc){\r\n\t\t\tswitch(typeof def.bottomCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.bottomCalc]){\r\n\t\t\t\t\tconfig.botCalc = ColumnCalcs.calculations[def.bottomCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.botCalc = def.bottomCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.botCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.botCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeBottomRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//dummy functions to handle being mock column manager\r\n\tregisterColumnField(){};\r\n\r\n\tremoveCalcs(){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.topInitialized){\r\n\t\t\tthis.topInitialized = false;\r\n\t\t\tthis.topElement.parentNode.removeChild(this.topElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(this.botInitialized){\r\n\t\t\tthis.botInitialized = false;\r\n\t\t\tthis.table.footerManager.remove(this.botElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTopRow(){\r\n\t\tif(!this.topInitialized){\r\n\t\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\t\t\tthis.topInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeBottomRow(){\r\n\t\tif(!this.botInitialized){\r\n\t\t\tthis.table.footerManager.prepend(this.botElement);\r\n\t\t\tthis.botInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tif(this.botInitialized && this.botRow){\r\n\t\t\tthis.botRow.getElement().style.marginLeft = (-left) + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\trecalc(rows){\r\n\t\tvar data, row;\r\n\r\n\t\tif(this.topInitialized || this.botInitialized){\r\n\t\t\tdata = this.rowsToData(rows);\r\n\r\n\t\t\tif(this.topInitialized){\r\n\t\t\t\tif(this.topRow){\r\n\t\t\t\t\tthis.topRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"top\", this.rowsToData(rows))\r\n\t\t\t\tthis.topRow = row;\r\n\t\t\t\twhile(this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\r\n\t\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.botInitialized){\r\n\t\t\t\tif(this.botRow){\r\n\t\t\t\t\tthis.botRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"bottom\", this.rowsToData(rows))\r\n\t\t\t\tthis.botRow = row;\r\n\t\t\t\twhile(this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\r\n\t\t\t\tthis.botElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\t//set resizable handles\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tthis.table.modules.frozenColumns.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcRowGroup(row){\r\n\t\tthis.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\r\n\t}\r\n\r\n\trecalcAll(){\r\n\t\tif(this.topCalcs.length || this.botCalcs.length){\r\n\t\t\tif(this.table.options.columnCalcs !== \"group\"){\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.groupBy && this.table.options.columnCalcs !== \"table\"){\r\n\r\n\r\n\t\t\t\tvar groups = this.table.modules.groupRows.getChildGroups();\r\n\r\n\t\t\t\tgroups.forEach((group) => {\r\n\t\t\t\t\tthis.recalcGroup(group);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcGroup(group){\r\n\t\tvar data, rowData;\r\n\r\n\t\tif(group){\r\n\t\t\tif(group.calcs){\r\n\t\t\t\tif(group.calcs.bottom){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"bottom\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.bottom.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.bottom.reinitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(group.calcs.top){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"top\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.top.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.top.reinitialize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//generate top stats row\r\n\tgenerateTopRow(rows){\r\n\t\treturn this.generateRow(\"top\", this.rowsToData(rows));\r\n\t}\r\n\t//generate bottom stats row\r\n\tgenerateBottomRow(rows){\r\n\t\treturn this.generateRow(\"bottom\", this.rowsToData(rows));\r\n\t}\r\n\r\n\trowsToData(rows){\r\n\t\tvar data = [];\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\tdata.push(row.getData());\r\n\r\n\t\t\tif(this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs){\r\n\t\t\t\tif(row.modules.dataTree.open){\r\n\t\t\t\t\tvar children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\r\n\t\t\t\t\tdata = data.concat(children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRow(pos, data){\r\n\t\tvar rowData = this.generateRowData(pos, data),\r\n\t\trow;\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.disable();\r\n\t\t}\r\n\r\n\t\trow = new Row(rowData, this, \"calc\");\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.enable();\r\n\t\t}\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\r\n\r\n\t\trow.component = false;\r\n\r\n\t\trow.getComponent = () => {\r\n\t\t\tif(!row.component){\r\n\t\t\t\trow.component = new CalcComponent(row);\r\n\t\t\t}\r\n\r\n\t\t\treturn row.component;\r\n\t\t};\r\n\r\n\t\trow.generateCells = () => {\r\n\r\n\t\t\tvar cells = [];\r\n\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\r\n\t\t\t\t\t//set field name of mock column\r\n\t\t\t\t\tthis.genColumn.setField(column.getField());\r\n\t\t\t\t\tthis.genColumn.hozAlign = column.hozAlign;\r\n\r\n\t\t\t\t\tif(column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")){\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\r\n\t\t\t\t\t\t\tparams: column.definition[pos + \"CalcFormatterParams\"] || {},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(\"plaintext\"),\r\n\t\t\t\t\t\t\tparams:{}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//ensure css class defintion is replicated to calculation cell\r\n\t\t\t\t\tthis.genColumn.definition.cssClass = column.definition.cssClass;\r\n\r\n\t\t\t\t\t//generate cell and assign to correct column\r\n\t\t\t\t\tvar cell = new Cell(this.genColumn, row);\r\n\t\t\t\t\tcell.getElement();\r\n\t\t\t\t\tcell.column = column;\r\n\t\t\t\t\tcell.setWidth();\r\n\r\n\t\t\t\t\tcolumn.cells.push(cell);\r\n\t\t\t\t\tcells.push(cell);\r\n\r\n\t\t\t\t\tif(!column.visible){\r\n\t\t\t\t\t\tcell.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\trow.cells = cells;\r\n\t\t};\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRowData(pos, data){\r\n\t\tvar rowData = {},\r\n\t\tcalcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\r\n\t\ttype = pos == \"top\" ? \"topCalc\" : \"botCalc\",\r\n\t\tparams, paramKey;\r\n\r\n\t\tcalcs.forEach(function(column){\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tif(column.modules.columnCalcs && column.modules.columnCalcs[type]){\r\n\t\t\t\tdata.forEach(function(item){\r\n\t\t\t\t\tvalues.push(column.getFieldValue(item));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparamKey = type + \"Params\";\r\n\t\t\t\tparams = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\r\n\r\n\t\t\t\tcolumn.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\thasTopCalcs(){\r\n\t\treturn\t!!(this.topCalcs.length);\r\n\t}\r\n\r\n\thasBottomCalcs(){\r\n\t\treturn\t!!(this.botCalcs.length);\r\n\t}\r\n\r\n\t//handle table redraw\r\n\tredraw(){\r\n\t\tif(this.topRow){\r\n\t\t\tthis.topRow.normalizeHeight(true);\r\n\t\t}\r\n\t\tif(this.botRow){\r\n\t\t\tthis.botRow.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\t//return the calculated\r\n\tgetResults(){\r\n\t\tvar results = {},\r\n\t\tgroups;\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tgroups = this.table.modules.groupRows.getGroups(true);\r\n\r\n\t\t\tgroups.forEach((group) => {\r\n\t\t\t\tresults[group.getKey()] = this.getGroupResults(group);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tresults = {\r\n\t\t\t\ttop: this.topRow ? this.topRow.getData() : {},\r\n\t\t\t\tbottom: this.botRow ? this.botRow.getData() : {},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t//get results from a group\r\n\tgetGroupResults(group){\r\n\t\tvar groupObj = group._getSelf(),\r\n\t\tsubGroups = group.getSubGroups(),\r\n\t\tsubGroupResults = {},\r\n\t\tresults = {};\r\n\r\n\t\tsubGroups.forEach((subgroup) => {\r\n\t\t\tsubGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\r\n\t\t});\r\n\r\n\t\tresults = {\r\n\t\t\ttop: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\r\n\t\t\tbottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\r\n\t\t\tgroups: subGroupResults,\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n}\r\n\r\nColumnCalcs.moduleName = \"columnCalcs\";\r\n\r\n//load defaults\r\nColumnCalcs.calculations = defaultCalculations;\r\n\r\nexport default ColumnCalcs;","import Module from '../../core/Module.js';\r\n\r\nimport Row from '../../core/row/Row.js';\r\n\r\nclass DataTree extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.indent = 10;\r\n\t\tthis.field = \"\";\r\n\t\tthis.collapseEl = null;\r\n\t\tthis.expandEl = null;\r\n\t\tthis.branchEl = null;\r\n\t\tthis.elementField = false;\r\n\r\n\t\tthis.startOpen = function(){};\r\n\r\n\t\tthis.displayIndex = 0;\r\n\r\n\t\tthis.registerTableOption(\"dataTree\", false); //enable data tree\r\n\t\tthis.registerTableOption(\"dataTreeFilter\", true); //filter child rows\r\n\t\tthis.registerTableOption(\"dataTreeSort\", true); //sort child rows\r\n\t\tthis.registerTableOption(\"dataTreeElementColumn\", false);\r\n\t\tthis.registerTableOption(\"dataTreeBranchElement\", true);//show data tree branch element\r\n\t\tthis.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\r\n\t\tthis.registerTableOption(\"dataTreeChildField\", \"_children\");//data tre column field to look for child rows\r\n\t\tthis.registerTableOption(\"dataTreeCollapseElement\", false);//data tree row collapse element\r\n\t\tthis.registerTableOption(\"dataTreeExpandElement\", false);//data tree row expand element\r\n\t\tthis.registerTableOption(\"dataTreeStartExpanded\", false);\r\n\t\tthis.registerTableOption(\"dataTreeChildColumnCalcs\", false);//include visible data tree rows in column calculations\r\n\t\tthis.registerTableOption(\"dataTreeSelectPropagate\", false);//seleccting a parent row selects its children\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tvar dummyEl = null,\r\n\t\t\toptions = this.table.options;\r\n\r\n\t\t\tthis.field = options.dataTreeChildField;\r\n\t\t\tthis.indent = options.dataTreeChildIndent;\r\n\r\n\t\t\tif(options.dataTreeBranchElement){\r\n\r\n\t\t\t\tif(options.dataTreeBranchElement === true){\r\n\t\t\t\t\tthis.branchEl = document.createElement(\"div\");\r\n\t\t\t\t\tthis.branchEl.classList.add(\"tabulator-data-tree-branch\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(typeof options.dataTreeBranchElement === \"string\"){\r\n\t\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\t\tdummyEl.innerHTML = options.dataTreeBranchElement;\r\n\t\t\t\t\t\tthis.branchEl = dummyEl.firstChild;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.branchEl = options.dataTreeBranchElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeCollapseElement){\r\n\t\t\t\tif(typeof options.dataTreeCollapseElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeCollapseElement;\r\n\t\t\t\t\tthis.collapseEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.collapseEl = options.dataTreeCollapseElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseEl = document.createElement(\"div\");\r\n\t\t\t\tthis.collapseEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.collapseEl.tabIndex = 0;\r\n\t\t\t\tthis.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeExpandElement){\r\n\t\t\t\tif(typeof options.dataTreeExpandElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeExpandElement;\r\n\t\t\t\t\tthis.expandEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.expandEl = options.dataTreeExpandElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandEl = document.createElement(\"div\");\r\n\t\t\t\tthis.expandEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.expandEl.tabIndex = 0;\r\n\t\t\t\tthis.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\r\n\t\t\t}\r\n\r\n\r\n\t\t\tswitch(typeof options.dataTreeStartExpanded){\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tthis.startOpen = options.dataTreeStartExpanded;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded[index];\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowDelete.bind(this),0);\r\n\t\t\tthis.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.initializeElementField.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 30);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeElementField(){\r\n\t\tvar firstCol = this.table.columnManager.getFirstVisibleColumn();\r\n\r\n\t\tthis.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\r\n\t}\r\n\t\r\n\tgetRowChildren(row){\r\n\t\treturn this.getTreeChildren(row, true);\r\n\t}\r\n\r\n\tcolumnMoving(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\trows = rows.concat(this.getTreeChildren(row, false, true));\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowDataChanged(row, visible, updatedData){\r\n\t\tif(this.redrawNeeded(updatedData)){\r\n\t\t\tthis.initializeRow(row);\r\n\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tvar field = cell.column.getField();\r\n\r\n\t\tif(field === this.elementField){\r\n\t\t\tthis.layoutRow(cell.row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar childArray = row.getData()[this.field];\r\n\t\tvar isArray = Array.isArray(childArray);\r\n\r\n\t\tvar children = isArray || (!isArray && typeof childArray === \"object\" && childArray !== null);\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.branchEl){\r\n\t\t\trow.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\r\n\t\t}\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.controlEl){\r\n\t\t\trow.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\r\n\t\t}\r\n\r\n\t\trow.modules.dataTree = {\r\n\t\t\tindex: row.modules.dataTree ? row.modules.dataTree.index : 0,\r\n\t\t\topen: children ? (row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0)) : false,\r\n\t\t\tcontrolEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\r\n\t\t\tbranchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\r\n\t\t\tparent: row.modules.dataTree ? row.modules.dataTree.parent : false,\r\n\t\t\tchildren:children,\r\n\t\t};\r\n\t}\r\n\r\n\treinitializeRowChildren(row){\r\n\t\tvar children = this.getTreeChildren(row, false, true);\r\n\r\n\t\tchildren.forEach(function(child){\r\n\t\t\tchild.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\r\n\t\tel = cell.getElement(),\r\n\t\tconfig = row.modules.dataTree;\r\n\r\n\t\tif(config.branchEl){\r\n\t\t\tif(config.branchEl.parentNode){\r\n\t\t\t\tconfig.branchEl.parentNode.removeChild(config.branchEl);\r\n\t\t\t}\r\n\t\t\tconfig.branchEl = false;\r\n\t\t}\r\n\r\n\t\tif(config.controlEl){\r\n\t\t\tif(config.controlEl.parentNode){\r\n\t\t\t\tconfig.controlEl.parentNode.removeChild(config.controlEl);\r\n\t\t\t}\r\n\t\t\tconfig.controlEl = false;\r\n\t\t}\r\n\r\n\t\tthis.generateControlElement(row, el);\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\r\n\r\n\t\tif(config.index){\r\n\t\t\tif(this.branchEl){\r\n\t\t\t\tconfig.branchEl = this.branchEl.cloneNode(true);\r\n\t\t\t\tel.insertBefore(config.branchEl, el.firstChild);\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tconfig.branchEl.style.marginRight = (((config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconfig.branchEl.style.marginLeft = (((config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tel.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateControlElement(row, el){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tel = el || row.getCells()[0].getElement(),\r\n\t\toldControl = config.controlEl;\r\n\r\n\t\tif(config.children !== false){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tconfig.controlEl = this.collapseEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.collapseRow(row);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconfig.controlEl = this.expandEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.expandRow(row);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconfig.controlEl.addEventListener(\"mousedown\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tif(oldControl && oldControl.parentNode === el){\r\n\t\t\t\toldControl.parentNode.replaceChild(config.controlEl,oldControl);\r\n\t\t\t}else{\r\n\t\t\t\tel.insertBefore(config.controlEl, el.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetDisplayIndex (index) {\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex () {\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\tgetRows(rows){\r\n\t\tvar output = [];\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar config, children;\r\n\r\n\t\t\toutput.push(row);\r\n\r\n\t\t\tif(row instanceof Row){\r\n\r\n\t\t\t\trow.create();\r\n\r\n\t\t\t\tconfig = row.modules.dataTree.children;\r\n\r\n\t\t\t\tif(!config.index && config.children !== false){\r\n\t\t\t\t\tchildren = this.getChildren(row);\r\n\r\n\t\t\t\t\tchildren.forEach((child) => {\r\n\t\t\t\t\t\tchild.create();\r\n\t\t\t\t\t\toutput.push(child);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildren(row, allChildren){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tchildren = [],\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children !== false && (config.open || allChildren)){\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"sort\") && this.table.options.dataTreeSort){\r\n\t\t\t\tthis.table.modules.sort.sort(children);\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((child) => {\r\n\t\t\t\toutput.push(child);\r\n\r\n\t\t\t\tvar subChildren = this.getChildren(child);\r\n\r\n\t\t\t\tsubChildren.forEach((sub) => {\r\n\t\t\t\t\toutput.push(sub);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateChildren(row){\r\n\t\tvar children = [];\r\n\r\n\t\tvar childArray = row.getData()[this.field];\r\n\r\n\t\tif(!Array.isArray(childArray)){\r\n\t\t\tchildArray = [childArray];\r\n\t\t}\r\n\r\n\t\tchildArray.forEach((childData) => {\r\n\t\t\tvar childRow = new Row(childData || {}, this.table.rowManager);\r\n\r\n\t\t\tchildRow.create();\r\n\r\n\t\t\tchildRow.modules.dataTree.index = row.modules.dataTree.index + 1;\r\n\t\t\tchildRow.modules.dataTree.parent = row;\r\n\r\n\t\t\tif(childRow.modules.dataTree.children){\r\n\t\t\t\tchildRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\r\n\t\t\t}\r\n\t\t\tchildren.push(childRow);\r\n\t\t});\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\texpandRow(row, silent){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = true;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\tcollapseRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = false;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tif(config.open){\r\n\t\t\t\tthis.collapseRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetTreeParent(row){\r\n\t\treturn row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\r\n\t}\r\n\r\n\tgetFilteredTreeChildren(row){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [], children;\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(childRow);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\trowDelete(row){\r\n\t\tvar parent = row.modules.dataTree.parent,\r\n\t\tchildIndex;\r\n\r\n\t\tif(parent){\r\n\t\t\tchildIndex = this.findChildIndex(row, parent);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\tparent.data[this.field].splice(childIndex, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!parent.data[this.field].length){\r\n\t\t\t\tdelete parent.data[this.field];\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeRow(parent);\r\n\t\t\tthis.layoutRow(parent);\r\n\t\t}\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\taddTreeChildRow(row, data, top, index){\r\n\t\tvar childIndex = false;\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(row.data[this.field])){\r\n\t\t\trow.data[this.field] = [];\r\n\r\n\t\t\trow.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tchildIndex = this.findChildIndex(index, row);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\trow.data[this.field].splice((top ? childIndex : childIndex + 1), 0, data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndex === false){\r\n\t\t\tif(top){\r\n\t\t\t\trow.data[this.field].unshift(data);\r\n\t\t\t}else{\r\n\t\t\t\trow.data[this.field].push(data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.initializeRow(row);\r\n\t\tthis.layoutRow(row);\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\tfindChildIndex(subject, parent){\r\n\t\tvar match = false;\r\n\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\tmatch = subject.data;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\tmatch = subject._getSelf().data;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\tif(parent.modules.dataTree){\r\n\t\t\t\t\tmatch = parent.modules.dataTree.children.find((childRow) => {\r\n\t\t\t\t\t\treturn childRow instanceof Row ? childRow.element === subject : false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tmatch = match.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\tmatch = false\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tmatch = parent.data[this.field].find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(match){\r\n\r\n\t\t\tif(Array.isArray(parent.data[this.field])){\r\n\t\t\t\tmatch = parent.data[this.field].indexOf(match);\r\n\t\t\t}\r\n\r\n\t\t\tif(match == -1){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetTreeChildren(row, component, recurse){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tconfig.children.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(component ? childRow.getComponent() : childRow);\r\n\r\n\t\t\t\t\tif(recurse){\r\n\t\t\t\t\t\toutput = output.concat(this.getTreeChildren(childRow, component, recurse));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\tredrawNeeded(data){\r\n\t\tconsole.log(\"needed?\", data)\r\n\t\treturn (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\r\n\t}\r\n}\r\n\r\nDataTree.moduleName = \"dataTree\";\r\n\r\nexport default DataTree;","export default function(list, options, setFileContents){\r\n\tvar delimiter = options && options.delimiter ? options.delimiter : \",\",\r\n\tfileContents = [],\r\n\theaders = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = [];\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"header\":\r\n\t\t\trow.columns.forEach((col, i) => {\r\n\t\t\t\tif(col && col.depth === 1){\r\n\t\t\t\t\theaders[i] = typeof col.value == \"undefined\"  || col.value === null ? \"\" : ('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item.join(delimiter));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(headers.length){\r\n\t\tfileContents.unshift(headers.join(delimiter));\r\n\t}\r\n\r\n\tfileContents = fileContents.join(\"\\n\");\r\n\r\n\tif(options.bom){\r\n\t\tfileContents = \"\\ufeff\" + fileContents;\r\n\t}\r\n\r\n\tsetFileContents(fileContents, \"text/csv\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar fileContents = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\titem[col.component.getField()] = col.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfileContents = JSON.stringify(fileContents, null, '\\t');\r\n\r\n\tsetFileContents(fileContents, \"application/json\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar header = [],\r\n\tbody = [],\r\n\tautoTableParams = {},\r\n\trowGroupStyles = options.rowGroupStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 12,\r\n\t\tcellPadding: 6,\r\n\t\tfillColor: 220,\r\n\t},\r\n\trowCalcStyles = options.rowCalcStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 10,\r\n\t\tcellPadding: 4,\r\n\t\tfillColor: 232,\r\n\t},\r\n\tjsPDFParams = options.jsPDF || {},\r\n\ttitle = options && options.title ? options.title : \"\";\r\n\r\n\tif(!jsPDFParams.orientation){\r\n\t\tjsPDFParams.orientation = options.orientation || \"landscape\";\r\n\t}\r\n\r\n\tif(!jsPDFParams.unit){\r\n\t\tjsPDFParams.unit = \"pt\";\r\n\t}\r\n\r\n\t//parse row list\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\theader.push(parseRow(row));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tbody.push(parseRow(row, rowGroupStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tbody.push(parseRow(row, rowCalcStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\tbody.push(parseRow(row));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction parseRow(row, styles){\r\n\t\tvar rowData = [];\r\n\r\n\t\trow.columns.forEach((col) =>{\r\n\t\t\tvar cell;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell = {\r\n\t\t\t\t\tcontent:col.value,\r\n\t\t\t\t\tcolSpan:col.width,\r\n\t\t\t\t\trowSpan:col.height,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(styles){\r\n\t\t\t\t\tcell.styles = styles;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(cell);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\r\n\t//configure PDF\r\n\tvar doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\r\n\r\n\tif(options && options.autoTable){\r\n\t\tif(typeof options.autoTable === \"function\"){\r\n\t\t\tautoTableParams = options.autoTable(doc) || {};\r\n\t\t}else{\r\n\t\t\tautoTableParams = options.autoTable;\r\n\t\t}\r\n\t}\r\n\r\n\tif(title){\r\n\t\tautoTableParams.didDrawPage = function(data) {\r\n\t\t\tdoc.text(title, 40, 30);\r\n\t\t};\r\n\t}\r\n\r\n\tautoTableParams.head = header;\r\n\tautoTableParams.body = body;\r\n\r\n\tdoc.autoTable(autoTableParams);\r\n\r\n\tif(options && options.documentProcessing){\r\n\t\toptions.documentProcessing(doc);\r\n\t}\r\n\r\n\tsetFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\r\n};","import CoreFeature from '../../../../core/CoreFeature.js';\r\n\r\nexport default function(list, options, setFileContents){\r\n\tvar self = this,\r\n\tsheetName = options.sheetName || \"Sheet1\",\r\n\tworkbook = XLSX.utils.book_new(),\r\n\ttableFeatures = new CoreFeature(this),\r\n\toutput;\r\n\r\n\tworkbook.SheetNames = [];\r\n\tworkbook.Sheets = {};\r\n\r\n\tfunction generateSheet(){\r\n\t\tvar rows = [],\r\n\t\tmerges = [],\r\n\t\tworksheet = {},\r\n\t\trange = {s: {c:0, r:0}, e: {c:(list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0), r:list.length }};\r\n\r\n\t\t//parse row list\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach(function(col, j){\r\n\r\n\t\t\t\tif(col){\r\n\t\t\t\t\trowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\r\n\r\n\t\t\t\t\tif(col.width > 1 || col.height > -1){\r\n\t\t\t\t\t\tif(col.height > 1 || col.width > 1){\r\n\t\t\t\t\t\t\tmerges.push({s:{r:i,c:j},e:{r:i + col.height - 1,c:j + col.width - 1}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowData.push(\"\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trows.push(rowData);\r\n\t\t});\r\n\r\n\t\t//convert rows to worksheet\r\n\t\tXLSX.utils.sheet_add_aoa(worksheet, rows);\r\n\r\n\t\tworksheet['!ref'] = XLSX.utils.encode_range(range);\r\n\r\n\t\tif(merges.length){\r\n\t\t\tworksheet[\"!merges\"] = merges;\r\n\t\t}\r\n\r\n\t\treturn worksheet;\r\n\t}\r\n\r\n\tif(options.sheetOnly){\r\n\t\tsetFileContents(generateSheet());\r\n\t\treturn;\r\n\t}\r\n\r\n\tif(options.sheets){\r\n\t\tfor(var sheet in options.sheets){\r\n\r\n\t\t\tif(options.sheets[sheet] === true){\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\t\t\t\tworkbook.Sheets[sheet] = generateSheet();\r\n\t\t\t}else{\r\n\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\r\n\t\t\t\ttableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\",{\r\n\t\t\t\t\ttype:\"xlsx\",\r\n\t\t\t\t\toptions:{sheetOnly:true},\r\n\t\t\t\t\tactive:self.active,\r\n\t\t\t\t\tintercept:function(data){\r\n\t\t\t\t\t\tworkbook.Sheets[sheet] = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tworkbook.SheetNames.push(sheetName);\r\n\t\tworkbook.Sheets[sheetName] = generateSheet();\r\n\t}\r\n\r\n\tif(options.documentProcessing){\r\n\t\tworkbook = options.documentProcessing(workbook);\r\n\t}\r\n\r\n\t//convert workbook to binary array\r\n\tfunction s2ab(s) {\r\n\t\tvar buf = new ArrayBuffer(s.length);\r\n\t\tvar view = new Uint8Array(buf);\r\n\t\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n\t\t\treturn buf;\r\n\t}\r\n\r\n\toutput = XLSX.write(workbook, {bookType:'xlsx', bookSST:true, type: 'binary'});\r\n\r\n\tsetFileContents(s2ab(output), \"application/octet-stream\");\r\n};","export default function(list, options, setFileContents){\r\n\tif(this.modExists(\"export\", true)){\r\n\t\tsetFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\r\n\t}\r\n};","import csv from './downloaders/csv.js';\r\nimport json from './downloaders/json.js';\r\nimport pdf from './downloaders/pdf.js';\r\nimport xlsx from './downloaders/xlsx.js';\r\nimport html from './downloaders/html.js';\r\n\r\nexport default {\r\n\tcsv:csv,\r\n\tjson:json,\r\n\tpdf:pdf,\r\n\txlsx:xlsx,\r\n\thtml:html,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultDownloaders from './defaults/downloaders.js';\r\n\r\nclass Download extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerTableOption(\"downloadReady\", function(data, blob){return blob;}); //function to manipulate download data\r\n\t\tthis.registerTableOption(\"downloadConfig\", {}); //download config\r\n\t\tthis.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\r\n\r\n\t\tthis.registerColumnOption(\"download\");\r\n\t\tthis.registerColumnOption(\"titleDownload\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"download\", this.download.bind(this));\r\n\t\tthis.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tdownloadToTab(type, filename, options, active){\r\n\t\tthis.download(type, filename, options, active, true);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//trigger file download\r\n\tdownload(type, filename, options, range, interceptCallback){\r\n\t\tvar downloadFunc = false;\r\n\r\n\t\tfunction buildLink(data, mime){\r\n\t\t\tif(interceptCallback){\r\n\t\t\t\tif(interceptCallback === true){\r\n\t\t\t\t\tthis.triggerDownload(data, mime, type, filename, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinterceptCallback(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.triggerDownload(data, mime, type, filename);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(typeof type == \"function\"){\r\n\t\t\tdownloadFunc = type;\r\n\t\t}else{\r\n\t\t\tif(Download.downloaders[type]){\r\n\t\t\t\tdownloadFunc = Download.downloaders[type];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Download Error - No such download type found: \", type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(downloadFunc){\r\n\t\t\tvar list = this.generateExportList(range);\r\n\r\n\t\t\tdownloadFunc.call(this.table, list , options || {}, buildLink.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateExportList(range){\r\n\t\tvar list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\r\n\r\n\t\t//assign group header formatter\r\n\t\tvar groupHeader = this.table.options.groupHeaderDownload;\r\n\r\n\t\tif(groupHeader && !Array.isArray(groupHeader)){\r\n\t\t\tgroupHeader = [groupHeader];\r\n\t\t}\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar group;\r\n\r\n\t\t\tif(row.type === \"group\"){\r\n\t\t\t\tgroup = row.columns[0];\r\n\r\n\t\t\t\tif(groupHeader && groupHeader[row.indent]){\r\n\t\t\t\t\tgroup.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn list;\r\n\t}\r\n\r\n\ttriggerDownload(data, mime, type, filename, newTab){\r\n\t\tvar element = document.createElement('a'),\r\n\t\tblob = new Blob([data],{type:mime}),\r\n\t\tfilename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\r\n\r\n\t\tblob = this.table.options.downloadReady(data, blob);\r\n\r\n\t\tif(blob){\r\n\r\n\t\t\tif(newTab){\r\n\t\t\t\twindow.open(window.URL.createObjectURL(blob));\r\n\t\t\t}else{\r\n\t\t\t\tif(navigator.msSaveOrOpenBlob){\r\n\t\t\t\t\tnavigator.msSaveOrOpenBlob(blob, filename);\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.setAttribute('href', window.URL.createObjectURL(blob));\r\n\r\n\t\t\t\t\t//set file title\r\n\t\t\t\t\telement.setAttribute('download', filename);\r\n\r\n\t\t\t\t\t//trigger download\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\r\n\t\t\t\t\t//remove temporary link element\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"downloadComplete\");\r\n\t\t}\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"intercept\":\r\n\t\t\tthis.download(data.type, \"\", data.options, data.active, data.intercept);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nDownload.moduleName = \"download\";\r\n\r\n//load defaults\r\nDownload.downloaders = defaultDownloaders;\r\n\r\nexport default Download;","export default function maskInput(el, options){\r\n\tvar mask = options.mask,\r\n\tmaskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\r\n\tmaskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\r\n\tmaskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\",\r\n\tsuccess = false;\r\n\r\n\tfunction fillSymbols(index){\r\n\t\tvar symbol = mask[index];\r\n\t\tif(typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber){\r\n\t\t\tel.value = el.value + \"\" + symbol;\r\n\t\t\tfillSymbols(index+1);\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"keydown\", (e) => {\r\n\t\tvar index = el.value.length,\r\n\t\tchar = e.key;\r\n\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(index >= mask.length){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tsuccess = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(mask[index]){\r\n\t\t\t\t\tcase maskLetter:\r\n\t\t\t\t\tif(char.toUpperCase() == char.toLowerCase()){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskNumber:\r\n\t\t\t\t\tif(isNaN(char)){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskWildcard:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(char !== mask[index]){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t});\r\n\r\n\tel.addEventListener(\"keyup\", (e) => {\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(options.maskAutoFill){\r\n\t\t\t\tfillSymbols(el.value.length);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tif(!el.placeholder){\r\n\t\tel.placeholder = mask;\r\n\t}\r\n\r\n\tif(options.maskAutoFill){\r\n\t\tfillSymbols(el.value.length);\r\n\t}\r\n}","import maskInput from '../../inputMask.js';\r\n\r\n//input element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\t//create and style input\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(e){\r\n\t\tif(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\t\t\tif(success(input.value)){\r\n\t\t\t\tcellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur or change\r\n\tinput.addEventListener(\"change\", onChange);\r\n\tinput.addEventListener(\"blur\", onChange);\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\t// case 9:\r\n\t\t\tcase 13:\r\n\t\t\tonChange(e);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//resizable text area element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n    var self = this,\r\n    cellValue = cell.getValue(),\r\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\r\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\"  ? cellValue : \"\"),\r\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\r\n    input = document.createElement(\"textarea\"),\r\n    scrollHeight = 0;\r\n\r\n    //create and style input\r\n    input.style.display = \"block\";\r\n    input.style.padding = \"2px\";\r\n    input.style.height = \"100%\";\r\n    input.style.width = \"100%\";\r\n    input.style.boxSizing = \"border-box\";\r\n    input.style.whiteSpace = \"pre-wrap\";\r\n    input.style.resize = \"none\";\r\n\r\n    if(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n        for (let key in editorParams.elementAttributes){\r\n            if(key.charAt(0) == \"+\"){\r\n                key = key.slice(1);\r\n                input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n            }else{\r\n                input.setAttribute(key, editorParams.elementAttributes[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    input.value = value;\r\n\r\n    onRendered(function(){\r\n        input.focus({preventScroll: true});\r\n        input.style.height = \"100%\";\r\n\r\n        input.scrollHeight;\r\n        input.style.height = input.scrollHeight + \"px\";\r\n        cell.getRow().normalizeHeight();\r\n    });\r\n\r\n    function onChange(e){\r\n\r\n        if(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\r\n            if(success(input.value)){\r\n                cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cell.getRow().normalizeHeight();\r\n            },300)\r\n        }else{\r\n            cancel();\r\n        }\r\n    }\r\n\r\n    //submit new value on blur or change\r\n    input.addEventListener(\"change\", onChange);\r\n    input.addEventListener(\"blur\", onChange);\r\n\r\n    input.addEventListener(\"keyup\", function(){\r\n\r\n        input.style.height = \"\";\r\n\r\n        var heightNow = input.scrollHeight;\r\n\r\n        input.style.height = heightNow + \"px\";\r\n\r\n        if(heightNow != scrollHeight){\r\n            scrollHeight = heightNow;\r\n            cell.getRow().normalizeHeight();\r\n        }\r\n    });\r\n\r\n    input.addEventListener(\"keydown\", function(e){\r\n\r\n        switch(e.keyCode){\r\n            case 27:\r\n            cancel();\r\n            break;\r\n\r\n            case 38: //up arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n\r\n            break;\r\n\r\n            case 40: //down arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart !== input.value.length)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n            break;\r\n\r\n            case 35:\r\n            case 36:\r\n            e.stopPropagation();\r\n            break;\r\n        }\r\n    });\r\n\r\n    if(editorParams.mask){\r\n        maskInput(input, editorParams);\r\n    }\r\n\r\n    return input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"number\");\r\n\r\n\tif(typeof editorParams.max != \"undefined\"){\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif(typeof editorParams.min != \"undefined\"){\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif(typeof editorParams.step != \"undefined\"){\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tvar blurFunc = function(e){\r\n\t\tonChange();\r\n\t};\r\n\r\n\tonRendered(function () {\r\n\t\t//submit new value on blur\r\n\t\tinput.removeEventListener(\"blur\", blurFunc);\r\n\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\r\n\t\t//submit new value on blur\r\n\t\tinput.addEventListener(\"blur\", blurFunc);\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value !== cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tif(vertNav == \"editor\"){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"range\");\r\n\r\n\tif (typeof editorParams.max != \"undefined\") {\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif (typeof editorParams.min != \"undefined\") {\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif (typeof editorParams.step != \"undefined\") {\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tonRendered(function () {\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value != cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tonChange();\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\n\r\n//dropdown select editor\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? (Array.isArray(initialValue) ? initialValue : [initialValue]) : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : []),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tmultiselect = editorParams.multiselect,\r\n\tdataItems = [],\r\n\tcurrentItem = {},\r\n\tdisplayItems = [],\r\n\tcurrentItems = [],\r\n\tblurable = true,\r\n\tblockListShow = false,\r\n\tsearchWord = \"\",\r\n\tsearchWordTimeout = null;\r\n\r\n\tif(Array.isArray(editorParams) || (!Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values)){\r\n\t\tconsole.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\r\n\t\teditorParams = {values:editorParams};\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create select lookup list:\", field);\r\n\t\t}\r\n\r\n\t\treturn Object.keys(output);\r\n\t}\r\n\r\n\tfunction parseItems(inputValues, curentValues){\r\n\t\tvar dataList = [];\r\n\t\tvar displayList = [];\r\n\r\n\t\tfunction processComplexListItem(item){\r\n\t\t\tvar item = {\r\n\t\t\t\tlabel:item.label,\r\n\t\t\t\tvalue:item.value,\r\n\t\t\t\titemParams:item.itemParams,\r\n\t\t\t\telementAttributes: item.elementAttributes,\r\n\t\t\t\telement:false,\r\n\t\t\t};\r\n\r\n\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t// }\r\n\r\n\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\tsetItem(item);\r\n\t\t\t}\r\n\r\n\t\t\tdataList.push(item);\r\n\t\t\tdisplayList.push(item);\r\n\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\tif(typeof inputValues == \"function\"){\r\n\t\t\tinputValues = inputValues(cell);\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\t\t\t\tvar item;\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\r\n\t\t\t\t\tif(value.options){\r\n\t\t\t\t\t\titem = {\r\n\t\t\t\t\t\t\tlabel:value.label,\r\n\t\t\t\t\t\t\tgroup:true,\r\n\t\t\t\t\t\t\titemParams:value.itemParams,\r\n\t\t\t\t\t\t\telementAttributes:value.elementAttributes,\r\n\t\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdisplayList.push(item);\r\n\r\n\t\t\t\t\t\tvalue.options.forEach(function(item){\r\n\t\t\t\t\t\t\tprocessComplexListItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tprocessComplexListItem(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\titem = {\r\n\t\t\t\t\t\tlabel:value,\r\n\t\t\t\t\t\tvalue:value,\r\n\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\t\tsetItem(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataList.push(item);\r\n\t\t\t\t\tdisplayList.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\tlabel:inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t\telement:false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\tsetItem(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataList.push(item);\r\n\t\t\t\tdisplayList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(editorParams.sortValuesList){\r\n\t\t\tdataList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tdisplayList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList !== \"asc\"){\r\n\t\t\t\tdataList.reverse();\r\n\t\t\t\tdisplayList.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdataItems = dataList;\r\n\t\tdisplayItems = displayList;\r\n\r\n\t\tfillList();\r\n\t}\r\n\r\n\tfunction fillList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\titem.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\r\n\t\t\t\tif(item.group){\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-group\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\r\n\t\t\t\t\tel.addEventListener(\"click\", function(){\r\n\t\t\t\t\t\tblockListShow = true;\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tblockListShow = false;\r\n\t\t\t\t\t\t}, 10);\r\n\r\n\t\t\t\t\t\t// setCurrentItem(item);\r\n\t\t\t\t\t\t// chooseItem();\r\n\t\t\t\t\t\tif(multiselect){\r\n\t\t\t\t\t\t\ttoggleItem(item);\r\n\t\t\t\t\t\t\tinput.focus();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tchooseItem(item);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// if(item === currentItem){\r\n\t\t\t\t\t// \tel.classList.add(\"active\");\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(currentItems.indexOf(item) > -1){\r\n\t\t\t\t\t\tel.classList.add(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.elementAttributes && typeof item.elementAttributes == \"object\"){\r\n\t\t\t\t\tfor (let key in item.elementAttributes){\r\n\t\t\t\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\t\t\t\tkey = key.slice(1);\r\n\t\t\t\t\t\t\tel.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tel.setAttribute(key, item.elementAttributes[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction setCurrentItem(item, active){\r\n\r\n\t\tif(!multiselect && currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"focused\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item.element){\r\n\t\t\titem.element.classList.add(\"focused\");\r\n\t\t\tif(active){\r\n\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// function chooseItem(){\r\n\t// \thideList();\r\n\r\n\t// \tif(initialValue !== currentItem.value){\r\n\t// \t\tinitialValue = currentItem.value;\r\n\t// \t\tsuccess(currentItem.value);\r\n\t// \t}else{\r\n\t// \t\tcancel();\r\n\t// \t}\r\n\t// }\r\n\r\n\tfunction setItem(item) {\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index == -1){\r\n\t\t\tcurrentItems.push(item);\r\n\t\t\tsetCurrentItem(item, true);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\t}\r\n\r\n\tfunction unsetItem(index) {\r\n\t\tvar item = currentItems[index];\r\n\r\n\t\tif(index > -1){\r\n\t\t\tcurrentItems.splice(index, 1);\r\n\t\t\tif(item.element){\r\n\t\t\t\titem.element.classList.remove(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toggleItem(item) {\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tunsetItem(index);\r\n\t\t}else{\r\n\t\t\tif(multiselect !== true && currentItems.length >= multiselect){\r\n\t\t\t\tunsetItem(0);\r\n\t\t\t}\r\n\r\n\t\t\tsetItem(item);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\r\n\t}\r\n\r\n\tfunction chooseItem(item){\r\n\t\thideList();\r\n\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tif(item){\r\n\t\t\tinput.value = item.label;\r\n\t\t\tsuccess(item.value);\r\n\t\t}\r\n\r\n\t\tinitialDisplayValue = [item.value];\r\n\t}\r\n\r\n\r\n\tfunction chooseItems(silent){\r\n\t\tif(!silent){\r\n\t\t\thideList();\r\n\t\t}\r\n\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.value);\r\n\t\t});\r\n\r\n\t\tinitialDisplayValue = output;\r\n\r\n\t\tsuccess(output);\r\n\t}\r\n\r\n\tfunction fillInput(){\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.label);\r\n\t\t});\r\n\r\n\t\tinput.value = output.join(\", \");\r\n\r\n\t\tif(self.currentCell === false){\r\n\t\t\tchooseItems(true);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction unsetItems() {\r\n\r\n\t\tvar len = currentItems.length;\r\n\r\n\t\tfor(let i = 0; i < len; i++){\r\n\t\t\tunsetItem(0);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tcurrentItems = [];\r\n\r\n\t\tif(!listEl.parentNode){\r\n\t\t\tif(editorParams.values === true){\r\n\t\t\t\tparseItems(getUniqueColumnValues(), initialDisplayValue);\r\n\t\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\t\tparseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\r\n\t\t\t}else{\r\n\t\t\t\tparseItems(editorParams.values || [], initialDisplayValue);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\r\n\r\n\t\t\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tblurable = false;\r\n\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tblurable = true;\r\n\t\t\t\t}, 10);\r\n\t\t\t});\r\n\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\tfunction scrollTovalue(char){\r\n\r\n\t\tclearTimeout(searchWordTimeout);\r\n\r\n\t\tvar character = String.fromCharCode(event.keyCode).toLowerCase();\r\n\t\tsearchWord += character.toLowerCase();\r\n\r\n\t\tvar match = dataItems.find((item) => {\r\n\t\t\treturn typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tsetCurrentItem(match, !multiselect);\r\n\t\t}\r\n\r\n\t\tsearchWordTimeout = setTimeout(() => {\r\n\t\t\tsearchWord = \"\";\r\n\t\t}, 800)\r\n\t}\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\tinput.style.cursor = \"default\";\r\n\tinput.readOnly = (this.currentCell != false);\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\";\r\n\r\n\t// if(editorParams.values === true){\r\n\t// \tparseItems(getUniqueColumnValues(), initialValue);\r\n\t// }else if(typeof editorParams.values === \"string\"){\r\n\t// \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\r\n\t// }else{\r\n\t// \tparseItems(editorParams.values || [], initialValue);\r\n\t// }\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tif(!input.value){\r\n\t\t\tunsetItems();\r\n\t\t\tchooseItems();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(dataItems[index - 1], !multiselect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < dataItems.length - 1)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < dataItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[0], !multiselect);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[index + 1], !multiselect);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\t// chooseItem();\r\n\r\n\t\t\tif(multiselect){\r\n\t\t\t\ttoggleItem();\r\n\t\t\t}else{\r\n\t\t\t\tchooseItem();\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(self.currentCell === false){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif(e.keyCode >= 38 && e.keyCode <= 90){\r\n\t\t\t\tscrollTovalue(e.keyCode);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tif(multiselect){\r\n\t\t\t\tchooseItems();\r\n\t\t\t}else{\r\n\t\t\t\tcancelItem();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tif(!blockListShow){\r\n\t\t\tshowList();\r\n\t\t}\r\n\t});\r\n\r\n\t//style list element\r\n\tlistEl = document.createElement(\"div\");\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\nimport maskInput from '../../inputMask.js';\r\n\r\n//autocomplete\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\"),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tallItems = [],\r\n\tdisplayItems = [],\r\n\tvalues = [],\r\n\tcurrentItem = false,\r\n\tblurable = true,\r\n\tuniqueColumnValues = false;\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"search\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style list element\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\tblurable = false;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tblurable = true;\r\n\t\t}, 10);\r\n\t});\r\n\r\n\r\n\tfunction genUniqueColumnValues(){\r\n\t\tif(editorParams.values === true){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues();\r\n\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues(editorParams.values);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList){\r\n\t\t\t\tif(editorParams.sortValuesList == \"asc\"){\r\n\t\t\t\t\toutput = Object.keys(output).sort();\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput = Object.keys(output).sort().reverse();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\toutput = Object.keys(output);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\r\n\t\t}\r\n\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction filterList(term, intialLoad){\r\n\t\tvar matches = [],\r\n\t\tvalues, items, searchEl;\r\n\r\n\t\t//lookup base values list\r\n\t\tif(uniqueColumnValues){\r\n\t\t\tvalues = uniqueColumnValues;\r\n\t\t}else{\r\n\t\t\tvalues = editorParams.values || [];\r\n\t\t}\r\n\r\n\t\tif(editorParams.searchFunc){\r\n\t\t\tmatches = editorParams.searchFunc(term, values);\r\n\r\n\t\t\tif(matches instanceof Promise){\r\n\r\n\t\t\t\taddNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\r\n\r\n\t\t\t\tmatches.then((result) => {\r\n\t\t\t\t\tfillListIfNotEmpty(parseItems(result), intialLoad);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tconsole.err(\"error in autocomplete search promise:\", err);\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tfillListIfNotEmpty(parseItems(matches), intialLoad);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\titems = parseItems(values);\r\n\r\n\t\t\tif(term === \"\"){\r\n\t\t\t\tif(editorParams.showListOnEmpty){\r\n\t\t\t\t\tmatches = items;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\titems.forEach(function(item){\r\n\t\t\t\t\tif(item.value !== null || typeof item.value !== \"undefined\"){\r\n\t\t\t\t\t\tif(String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1){\r\n\t\t\t\t\t\t\tmatches.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfillListIfNotEmpty(matches, intialLoad);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addNotice(notice){\r\n\t\tvar searchEl = document.createElement(\"div\");\r\n\r\n\t\tclearList();\r\n\r\n\t\tif(notice !== false){\r\n\t\t\tsearchEl.classList.add(\"tabulator-edit-select-list-notice\");\r\n\t\t\tsearchEl.tabIndex = 0;\r\n\r\n\t\t\tif(notice instanceof Node){\r\n\t\t\t\tsearchEl.appendChild(notice);\r\n\t\t\t}else{\r\n\t\t\t\tsearchEl.innerHTML = notice;\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(searchEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseItems(inputValues){\r\n\t\tvar itemList = [];\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\r\n\t\t\t\tvar item = {};\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\r\n\t\t\t\t\titem.value = value.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\r\n\t\t\t\t\titem.value = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\ttitle:editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn itemList;\r\n\t}\r\n\r\n\tfunction clearList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\t}\r\n\r\n\tfunction fillListIfNotEmpty(items, intialLoad){\r\n\t\tif(items.length){\r\n\t\t\tfillList(items, intialLoad);\r\n\t\t}else{\r\n\t\t\tif(editorParams.emptyPlaceholder){\r\n\t\t\t\taddNotice(editorParams.emptyPlaceholder);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction fillList(items, intialLoad){\r\n\t\tvar current = false;\r\n\r\n\t\tclearList();\r\n\r\n\t\tdisplayItems = items;\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\tel.innerHTML = item.title;\r\n\r\n\t\t\t\tel.addEventListener(\"click\", function(e){\r\n\t\t\t\t\tsetCurrentItem(item);\r\n\t\t\t\t\tchooseItem();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\t\t\t\tif(intialLoad && item.value == initialValue){\r\n\t\t\t\t\tinput.value = item.title;\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item === currentItem){\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\r\n\t\tif(!current){\r\n\t\t\tsetCurrentItem(false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction chooseItem(){\r\n\t\thideList();\r\n\r\n\t\tif(currentItem){\r\n\t\t\tif(initialValue !== currentItem.value){\r\n\t\t\t\tinitialValue = currentItem.value;\r\n\t\t\t\tinput.value = currentItem.title;\r\n\t\t\t\tsuccess(currentItem.value);\r\n\t\t\t}else{\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(editorParams.freetext){\r\n\t\t\t\tinitialValue = input.value;\r\n\t\t\t\tsuccess(input.value);\r\n\t\t\t}else{\r\n\t\t\t\tif(editorParams.allowEmpty && input.value === \"\"){\r\n\t\t\t\t\tinitialValue = input.value;\r\n\t\t\t\t\tsuccess(input.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tif(!listEl.parentNode){\r\n\t\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setCurrentItem(item, showInputValue){\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item && item.element){\r\n\t\t\titem.element.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(displayItems[index - 1]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetCurrentItem(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < displayItems.length - 1)){\r\n\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < displayItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[0]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[index + 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\t// e.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tchooseItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 36: //home\r\n\t\t\tcase 35: //end\r\n\t\t\t//prevent table navigation while using input element\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"keyup\", function(e){\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //up arrow\r\n\t\t\tcase 40: //right arrow\r\n\t\t\tcase 13: //enter\r\n\t\t\tcase 27: //escape\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tfilterList(input.value);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tfilterList(input.value);\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tchooseItem();\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tvar value = initialDisplayValue;\r\n\t\tgenUniqueColumnValues();\r\n\t\tshowList();\r\n\t\tinput.value = value;\r\n\t\tfilterList(value, true);\r\n\t});\r\n\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\tgenUniqueColumnValues();\r\n\tinput.value = initialDisplayValue;\r\n\tfilterList(initialDisplayValue, true);\r\n\r\n\treturn input;\r\n};","//star rating\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\telement = cell.getElement(),\r\n\tvalue = cell.getValue(),\r\n\tmaxStars = element.getElementsByTagName(\"svg\").length || 5,\r\n\tsize = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\r\n\tstars = [],\r\n\tstarsHolder = document.createElement(\"div\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n\r\n\r\n\t//change star type\r\n\tfunction starChange(val){\r\n\t\tstars.forEach(function(star, i){\r\n\t\t\tif(i < val){\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-active\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}else{\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-inactive\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//build stars\r\n\tfunction buildStar(i){\r\n\r\n\t\tvar starHolder =  document.createElement(\"span\");\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\r\n\t\tstars.push(nextStar);\r\n\r\n\t\tstarHolder.addEventListener(\"mouseenter\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tstarChange(i);\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"mousemove\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tsuccess(i);\r\n\t\t\telement.blur();\r\n\t\t});\r\n\r\n\t\tstarHolder.appendChild(nextStar);\r\n\t\tstarsHolder.appendChild(starHolder);\r\n\r\n\t}\r\n\r\n\t//handle keyboard navigation value change\r\n\tfunction changeValue(val){\r\n\t\tvalue = val;\r\n\t\tstarChange(val);\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\t//style holding element\r\n\tstarsHolder.style.verticalAlign = \"middle\";\r\n\tstarsHolder.style.display = \"inline-block\";\r\n\tstarsHolder.style.padding = \"4px\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", size);\r\n\tstar.setAttribute(\"height\", size);\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tstarsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tstarsHolder.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create correct number of stars\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tbuildStar(i);\r\n\t}\r\n\r\n\t//ensure value does not exceed number of stars\r\n\tvalue = Math.min(parseInt(value), maxStars);\r\n\r\n\t// set initial styling of stars\r\n\tstarChange(value);\r\n\r\n\tstarsHolder.addEventListener(\"mousemove\", function(e){\r\n\t\tstarChange(0);\r\n\t});\r\n\r\n\tstarsHolder.addEventListener(\"click\", function(e){\r\n\t\tsuccess(0);\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(e){\r\n\t\tcancel();\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\tchangeValue(value + 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tchangeValue(value - 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tsuccess(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn starsHolder;\r\n};","//draggable progress bar\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar element = cell.getElement(),\r\n\tmax = typeof editorParams.max === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\")) || 100) : editorParams.max,\r\n\tmin = typeof editorParams.min === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\")) || 0) : editorParams.min,\r\n\tpercent = (max - min) / 100,\r\n\tvalue = cell.getValue() || 0,\r\n\thandle = document.createElement(\"div\"),\r\n\tbar = document.createElement(\"div\"),\r\n\tmouseDrag, mouseDragWidth;\r\n\r\n\t//set new value\r\n\tfunction updateValue(){\r\n\t\tvar style = window.getComputedStyle(element, null);\r\n\r\n\t\tvar calcVal = (percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\")))/100))) + min;\r\n\t\tsuccess(calcVal);\r\n\t\telement.setAttribute(\"aria-valuenow\", calcVal);\r\n\t\telement.setAttribute(\"aria-label\", value);\r\n\t}\r\n\r\n\t//style handle\r\n\thandle.style.position = \"absolute\";\r\n\thandle.style.right = \"0\";\r\n\thandle.style.top = \"0\";\r\n\thandle.style.bottom = \"0\";\r\n\thandle.style.width = \"5px\";\r\n\thandle.classList.add(\"tabulator-progress-handle\");\r\n\r\n\t//style bar\r\n\tbar.style.display = \"inline-block\";\r\n\tbar.style.position = \"relative\";\r\n\t// bar.style.top = \"8px\";\r\n\t// bar.style.bottom = \"8px\";\r\n\t// bar.style.left = \"4px\";\r\n\t// bar.style.marginRight = \"4px\";\r\n\tbar.style.height = \"100%\";\r\n\tbar.style.backgroundColor = \"#488CE9\";\r\n\tbar.style.maxWidth = \"100%\";\r\n\tbar.style.minWidth = \"0%\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tbar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tbar.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.padding = \"4px 4px\";\r\n\r\n\t//make sure value is in range\r\n\tvalue = Math.min(parseFloat(value), max);\r\n\tvalue = Math.max(parseFloat(value), min);\r\n\r\n\t//workout percentage\r\n\tvalue = Math.round((value - min) / percent);\r\n\t// bar.style.right = value + \"%\";\r\n\tbar.style.width = value + \"%\";\r\n\r\n\telement.setAttribute(\"aria-valuemin\", min);\r\n\telement.setAttribute(\"aria-valuemax\", max);\r\n\r\n\tbar.appendChild(handle);\r\n\r\n\thandle.addEventListener(\"mousedown\", function(e){\r\n\t\tmouseDrag = e.screenX;\r\n\t\tmouseDragWidth = bar.offsetWidth;\r\n\t});\r\n\r\n\thandle.addEventListener(\"mouseover\", function(){\r\n\t\thandle.style.cursor = \"ew-resize\";\r\n\t});\r\n\r\n\telement.addEventListener(\"mousemove\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\tbar.style.width = (mouseDragWidth + e.screenX - mouseDrag) + \"px\";\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"mouseup\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\tmouseDrag = false;\r\n\t\t\tmouseDragWidth = false;\r\n\r\n\t\t\tupdateValue();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth + element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth - element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tcase 13: //enter\r\n\t\t\tupdateValue();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(){\r\n\t\tcancel();\r\n\t});\r\n\r\n\treturn bar;\r\n};","//checkbox\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar value = cell.getValue(),\r\n\tinput = document.createElement(\"input\"),\r\n\ttristate = editorParams.tristate,\r\n\tindetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\r\n\tindetermState = false;\r\n\r\n\tinput.setAttribute(\"type\", \"checkbox\");\r\n\tinput.style.marginTop = \"5px\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = value;\r\n\r\n\tif(tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")){\r\n\t\tindetermState = true;\r\n\t\tinput.indeterminate = true;\r\n\t}\r\n\r\n\tif(this.table.browser != \"firefox\"){ //prevent blur issue on mac firefox\r\n\t\tonRendered(function(){\r\n\t\t\tinput.focus({preventScroll: true});\r\n\t\t});\r\n\t}\r\n\r\n\tinput.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus();\r\n\t});\r\n\r\n\tfunction setValue(blur){\r\n\t\tif(tristate){\r\n\t\t\tif(!blur){\r\n\t\t\t\tif(input.checked && !indetermState){\r\n\t\t\t\t\tinput.checked = false;\r\n\t\t\t\t\tinput.indeterminate = true;\r\n\t\t\t\t\tindetermState = true;\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tindetermState = false;\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(indetermState){\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn input.checked;\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"change\", function(e){\r\n\t\tsuccess(setValue());\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tsuccess(setValue(true));\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tif(e.keyCode == 13){\r\n\t\t\tsuccess(setValue());\r\n\t\t}\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tcancel();\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import input from './editors/input.js';\r\nimport textarea from './editors/textarea.js';\r\nimport number from './editors/number.js';\r\nimport range from './editors/range.js';\r\nimport select from './editors/select.js';\r\nimport autocomplete from './editors/autocomplete.js';\r\nimport star from './editors/star.js';\r\nimport progress from './editors/progress.js';\r\nimport tickCross from './editors/tickCross.js';\r\n\r\nexport default {\r\n\tinput:input,\r\n\ttextarea:textarea,\r\n    number:number,\r\n    range:range,\r\n\tselect:select,\r\n\tautocomplete:autocomplete,\r\n\tstar:star,\r\n\tprogress:progress,\r\n\ttickCross:tickCross,\r\n};","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultEditors from './defaults/editors.js';\r\n\r\nclass Edit extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.currentCell = false; //hold currently editing cell\r\n\t\tthis.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\r\n\t\tthis.recursionBlock = false; //prevent focus recursion\r\n\t\tthis.invalidEdit = false;\r\n\t\tthis.editedCells = [];\r\n\r\n\t\tthis.editors = Edit.editors;\r\n\r\n\t\tthis.registerColumnOption(\"editable\");\r\n\t\tthis.registerColumnOption(\"editor\");\r\n\t\tthis.registerColumnOption(\"editorParams\");\r\n\r\n\t\tthis.registerColumnOption(\"cellEditing\");\r\n\t\tthis.registerColumnOption(\"cellEdited\");\r\n\t\tthis.registerColumnOption(\"cellEditCancelled\");\r\n\r\n\t\tthis.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\r\n\t\tthis.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-init\", this.bindEditor.bind(this));\r\n\t\tthis.subscribe(\"cell-delete\", this.clearEdited.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\r\n\r\n\t\tthis.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Keybinding Functions ///////\r\n\t///////////////////////////////////\r\n\r\n\tkeybindingNavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnewRow = this.options(\"tabEndNewRow\");\r\n\r\n\t\tif(cell){\r\n\t\t\tif(!this.navigateNext(e)){\r\n\t\t\t\tif(newRow){\r\n\t\t\t\t\tcell.getElement().firstChild.blur();\r\n\r\n\t\t\t\t\tif(newRow === true){\r\n\t\t\t\t\t\tnewRow = this.table.addRow({})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(typeof newRow == \"function\"){\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(newRow(cell.row.getComponent()))\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(Object.assign({}, newRow));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewRow.then(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tnav.next();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Cell Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\tcellisEdited(cell){\r\n\t\treturn !! cell.modules.edit && cell.modules.edit.edited;\r\n\t}\r\n\r\n\tcellCancelEdit(cell){\r\n\t\tif(cell === this.currentCell){\r\n\t\t\tthis.table.modules.edit.cancelEdit();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cancel Editor Error - This cell is not currently being edited \");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tclearCellEdited(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.modules.edit.getEditedCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.modules.edit.clearEdited(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tnavigatePrev(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, prevRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateLeft();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tprevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(prevRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateRight();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(nextRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(nextRow, -1);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateLeft(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findPrevEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateRight(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findNextEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateUp(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateDown(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfindNextEditableCell(row, index){\r\n\t\tvar nextCell = false;\r\n\r\n\t\tif(index < row.cells.length-1){\r\n\t\t\tfor(var i = index+1; i < row.cells.length; i++){\r\n\t\t\t\tlet cell = row.cells[i];\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tlet allowEdit = true;\r\n\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tnextCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nextCell;\r\n\t}\r\n\r\n\tfindPrevEditableCell(row, index){\r\n\t\tvar prevCell = false;\r\n\r\n\t\tif(index > 0){\r\n\t\t\tfor(var i = index-1; i >= 0; i--){\r\n\t\t\t\tlet cell = row.cells[i],\r\n\t\t\t\tallowEdit = true;\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tprevCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn prevCell;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.editor !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\tcolumnDeleteCheck(column){\r\n\t\tif(this.currentCell && this.currentCell.column === column){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\trowDeleteCheck(row){\r\n\t\tif(this.currentCell && this.currentCell.row === row){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column editor\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {\r\n\t\t\teditor:false,\r\n\t\t\tblocked:false,\r\n\t\t\tcheck:column.definition.editable,\r\n\t\t\tparams:column.definition.editorParams || {}\r\n\t\t};\r\n\r\n\t\t//set column editor\r\n\t\tswitch(typeof column.definition.editor){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(this.editors[column.definition.editor]){\r\n\t\t\t\tconfig.editor = this.editors[column.definition.editor];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Editor Error - No such editor found: \", column.definition.editor);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.editor = column.definition.editor;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(column.definition.editor === true){\r\n\t\t\t\tif(typeof column.definition.formatter !== \"function\"){\r\n\t\t\t\t\tif(this.editors[column.definition.formatter]){\r\n\t\t\t\t\t\tconfig.editor = this.editors[column.definition.formatter];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconfig.editor = this.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(config.editor){\r\n\t\t\tcolumn.modules.edit = config;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentCell(){\r\n\t\treturn this.currentCell ? this.currentCell.getComponent() : false;\r\n\t}\r\n\r\n\tclearEditor(cancel){\r\n\t\tvar cell = this.currentCell,\r\n\t\tcellEl;\r\n\r\n\t\tthis.invalidEdit = false;\r\n\r\n\t\tconsole.log(\"clear\", cancel, cell, cell.validate)\r\n\r\n\t\tif(cell){\r\n\t\t\tthis.currentCell = false;\r\n\r\n\t\t\tcellEl = cell.getElement();\r\n\r\n\t\t\tif(cancel){\r\n\t\t\t\tif(cell.column.modules.validate && this.table.modExists(\"validate\")){\r\n\t\t\t\t\tthis.table.modules.validate.cellValidate(cell);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tcellEl.classList.remove(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tcellEl.classList.remove(\"tabulator-editing\");\r\n\r\n\t\t\twhile(cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\r\n\r\n\t\t\tcell.row.getElement().classList.remove(\"tabulator-row-editing\");\r\n\t\t}\r\n\t}\r\n\r\n\tcancelEdit(){\r\n\t\tif(this.currentCell){\r\n\t\t\tvar cell = this.currentCell;\r\n\t\t\tvar component = this.currentCell.getComponent();\r\n\r\n\t\t\tthis.clearEditor(true);\r\n\t\t\tcell.setValueActual(cell.getValue());\r\n\t\t\tcell.cellRendered();\r\n\r\n\t\t\tif(cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight){\r\n\t\t\t\tcell.row.normalizeHeight(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(cell.column.definition.cellEditCancelled){\r\n\t\t\t\tcell.column.definition.cellEditCancelled.call(this.table, component);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"edit-cancelled\", cell);\r\n\t\t\tthis.dispatchExternal(\"cellEditCancelled\", component);\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a cell\r\n\tbindEditor(cell){\r\n\t\tif(cell.column.modules.edit){\r\n\t\t\tvar self = this,\r\n\t\t\telement = cell.getElement(true);\r\n\r\n\t\t\telement.setAttribute(\"tabindex\", 0);\r\n\r\n\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\tif(!element.classList.contains(\"tabulator-editing\")){\r\n\t\t\t\t\telement.focus({preventScroll: true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif (e.button === 2) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.mouseClick = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"focus\", function(e){\r\n\t\t\t\tif(!self.recursionBlock){\r\n\t\t\t\t\tself.edit(cell, e, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfocusCellNoEvent(cell, block){\r\n\t\tthis.recursionBlock = true;\r\n\r\n\t\tif(!(block && this.table.browser === \"ie\")){\r\n\t\t\tcell.getElement().focus({preventScroll: true});\r\n\t\t}\r\n\r\n\t\tthis.recursionBlock = false;\r\n\t}\r\n\r\n\teditCell(cell, forceEdit){\r\n\t\tthis.focusCellNoEvent(cell);\r\n\t\tthis.edit(cell, false, forceEdit);\r\n\t}\r\n\r\n\tfocusScrollAdjust(cell){\r\n\t\tif(this.table.rowManager.getRenderMode() == \"virtual\"){\r\n\t\t\tvar topEdge = this.table.rowManager.element.scrollTop,\r\n\t\t\tbottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\r\n\t\t\trowEl = cell.row.getElement(),\r\n\t\t\toffset = rowEl.offsetTop;\r\n\r\n\t\t\tif(rowEl.offsetTop < topEdge){\r\n\t\t\t\tthis.table.rowManager.element.scrollTop -= (topEdge - rowEl.offsetTop);\r\n\t\t\t}else{\r\n\t\t\t\tif(rowEl.offsetTop + rowEl.offsetHeight  > bottomEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollTop += (rowEl.offsetTop + rowEl.offsetHeight - bottomEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar leftEdge = this.table.rowManager.element.scrollLeft,\r\n\t\t\trightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\r\n\t\t\tcellEl = cell.getElement(),\r\n\t\t\toffset = cellEl.offsetLeft;\r\n\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tleftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\r\n\t\t\t\trightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\t\tleftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t\trightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t}\r\n\r\n\t\t\tif(cellEl.offsetLeft < leftEdge){\r\n\r\n\t\t\t\tthis.table.rowManager.element.scrollLeft -= (leftEdge - cellEl.offsetLeft);\r\n\t\t\t}else{\r\n\t\t\t\tif(cellEl.offsetLeft + cellEl.offsetWidth  > rightEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollLeft += (cellEl.offsetLeft + cellEl.offsetWidth - rightEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tedit(cell, e, forceEdit){\r\n\t\tvar self = this,\r\n\t\tallowEdit = true,\r\n\t\trendered = function(){},\r\n\t\telement = cell.getElement(),\r\n\t\tcellEditor, component, params;\r\n\r\n\t\t//prevent editing if another cell is refusing to leave focus (eg. validation fail)\r\n\t\tif(this.currentCell){\r\n\t\t\tif(!this.invalidEdit){\r\n\t\t\t\tthis.cancelEdit();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tvar valid = true;\r\n\r\n\t\t\t\tif(cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\"){\r\n\t\t\t\t\tvalid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(valid === true || self.table.options.validationMode === \"highlight\"){\r\n\t\t\t\t\tself.clearEditor();\r\n\r\n\r\n\t\t\t\t\tif(!cell.modules.edit){\r\n\t\t\t\t\t\tcell.modules.edit = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.modules.edit.edited = true;\r\n\r\n\t\t\t\t\tif(self.editedCells.indexOf(cell) == -1){\r\n\t\t\t\t\t\tself.editedCells.push(cell);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.setValue(value, true);\r\n\r\n\t\t\t\t\tif(valid !== true){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.invalidEdit = true;\r\n\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\tself.focusCellNoEvent(cell, true);\r\n\t\t\t\t\trendered();\r\n\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call success on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tself.cancelEdit();\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call cancel on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trendered = callback;\r\n\t\t}\r\n\r\n\t\tif(!cell.column.modules.edit.blocked){\r\n\t\t\tif(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\r\n\t\t\tswitch(typeof cell.column.modules.edit.check){\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(allowEdit || forceEdit){\r\n\r\n\t\t\t\tself.cancelEdit();\r\n\r\n\t\t\t\tself.currentCell = cell;\r\n\r\n\t\t\t\tthis.focusScrollAdjust(cell);\r\n\r\n\t\t\t\tcomponent = cell.getComponent();\r\n\r\n\t\t\t\tif(this.mouseClick){\r\n\t\t\t\t\tthis.mouseClick = false;\r\n\r\n\t\t\t\t\tif(cell.column.definition.cellClick){\r\n\t\t\t\t\t\tcell.column.definition.cellClick.call(this.table, e, component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(cell.column.definition.cellEditing){\r\n\t\t\t\t\tcell.column.definition.cellEditing.call(this.table, component);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"cellEditing\", component);\r\n\r\n\t\t\t\tparams = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\r\n\r\n\t\t\t\tcellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\r\n\r\n\t\t\t\t//if editor returned, add to DOM, if false, abort edit\r\n\t\t\t\tif(cellEditor !== false){\r\n\r\n\t\t\t\t\tif(cellEditor instanceof Node){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-editing\");\r\n\t\t\t\t\t\tcell.row.getElement().classList.add(\"tabulator-row-editing\");\r\n\t\t\t\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\t\t\t\t\telement.appendChild(cellEditor);\r\n\r\n\t\t\t\t\t\t//trigger onRendered Callback\r\n\t\t\t\t\t\trendered();\r\n\r\n\t\t\t\t\t\t//prevent editing from triggering rowClick event\r\n\t\t\t\t\t\tvar children = element.children;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\t\tchildren[i].addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\r\n\t\t\t\t\t\telement.blur();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.mouseClick = false;\r\n\t\t\t\telement.blur();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.mouseClick = false;\r\n\t\t\telement.blur();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetEditedCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.editedCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearEdited(cell){\r\n\t\tvar editIndex;\r\n\r\n\t\tif(cell.modules.edit && cell.modules.edit.edited){\r\n\t\t\tcell.modules.edit.edited = false;\r\n\r\n\t\t\tif(cell.modules.validate){\r\n\t\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\teditIndex = this.editedCells.indexOf(cell);\r\n\r\n\t\tif(editIndex > -1){\r\n\t\t\tthis.editedCells.splice(editIndex, 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nEdit.moduleName = \"edit\";\r\n\r\n//load defaults\r\nEdit.editors = defaultEditors;\r\n\r\n\r\nexport default Edit;","class ExportRow{\r\n\tconstructor(type, columns, component, indent){\r\n\t\tthis.type = type;\r\n\t\tthis.columns = columns;\r\n\t\tthis.component = component || false;\r\n\t\tthis.indent = indent || 0;\r\n\t}\r\n}\r\n\r\nexport default ExportRow;","class ExportColumn{\r\n\tconstructor(value, component, width, height, depth){\r\n\t\tthis.value = value;\r\n\t\tthis.component = component || false;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n}\r\n\r\nexport default ExportColumn;","import Module from '../../core/Module.js';\r\n\r\nimport ExportRow from './ExportRow.js';\r\nimport ExportColumn from './ExportColumn.js';\r\n\r\nclass Export extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = {};\r\n\t\tthis.cloneTableStyle = true;\r\n\t\tthis.colVisProp = \"\";\r\n\r\n\t\tthis.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\r\n\r\n\t\tthis.registerColumnOption(\"htmlOutput\");\r\n\t\tthis.registerColumnOption(\"titleHtmlOutput\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tgenerateExportList(config, style, range, colVisProp){\r\n\t\tthis.cloneTableStyle = style;\r\n\t\tthis.config = config || {};\r\n\t\tthis.colVisProp = colVisProp;\r\n\r\n\t\tvar headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\r\n\t\tvar body = this.bodyToExportRows(this.rowLookup(range));\r\n\r\n\t\treturn headers.concat(body);\r\n\t}\r\n\r\n\tgenereateTable(config, style, range, colVisProp){\r\n\t\tvar list = this.generateExportList(config, style, range, colVisProp);\r\n\r\n\t\treturn this.genereateTableElement(list);\r\n\t}\r\n\r\n\trowLookup(range){\r\n\t\tvar rows = [];\r\n\r\n\t\tif(typeof range == \"function\"){\r\n\t\t\trange.call(this.table).forEach((row) =>{\r\n\t\t\t\trow = this.table.rowManager.findRow(row);\r\n\r\n\t\t\t\tif(row){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tswitch(range){\r\n\t\t\t\tcase true:\r\n\t\t\t\tcase \"visible\":\r\n\t\t\t\trows = this.table.rowManager.getVisibleRows(false, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\trows = this.table.rowManager.rows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selected\":\r\n\t\t\t\trows = this.table.modules.selectRow.selectedRows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"active\":\r\n\t\t\t\tdefault:\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Object.assign([], rows);\r\n\t}\r\n\r\n\tgenerateColumnGroupHeaders(){\r\n\t\tvar output = [];\r\n\r\n\t\tvar columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar colData = this.processColumnGroup(column);\r\n\r\n\t\t\tif(colData){\r\n\t\t\t\toutput.push(colData);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tprocessColumnGroup(column){\r\n\t\tvar subGroups = column.columns,\r\n\t\tmaxDepth = 0,\r\n\t\ttitle = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\r\n\r\n\t\tvar groupData = {\r\n\t\t\ttitle:title,\r\n\t\t\tcolumn:column,\r\n\t\t\tdepth:1,\r\n\t\t};\r\n\r\n\t\tif(subGroups.length){\r\n\t\t\tgroupData.subGroups = [];\r\n\t\t\tgroupData.width = 0;\r\n\r\n\t\t\tsubGroups.forEach((subGroup) => {\r\n\t\t\t\tvar subGroupData = this.processColumnGroup(subGroup);\r\n\r\n\t\t\t\tif(subGroupData){\r\n\t\t\t\t\tgroupData.width += subGroupData.width;\r\n\t\t\t\t\tgroupData.subGroups.push(subGroupData);\r\n\r\n\t\t\t\t\tif(subGroupData.depth > maxDepth){\r\n\t\t\t\t\t\tmaxDepth = subGroupData.depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgroupData.depth += maxDepth;\r\n\r\n\t\t\tif(!groupData.width){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.columnVisCheck(column)){\r\n\t\t\t\tgroupData.width = 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn groupData;\r\n\t}\r\n\r\n\tcolumnVisCheck(column){\r\n\t\treturn column.definition[this.colVisProp] !== false && (column.visible || (!column.visible && column.definition[this.colVisProp]));\r\n\t}\r\n\r\n\theadersToExportRows(columns){\r\n\t\tvar headers = [],\r\n\t\theaderDepth = 0,\r\n\t\texportRows = [];\r\n\r\n\t\tfunction parseColumnGroup(column, level){\r\n\r\n\t\t\tvar depth = headerDepth - level;\r\n\r\n\t\t\tif(typeof headers[level] === \"undefined\"){\r\n\t\t\t\theaders[level] = [];\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.height = column.subGroups ? 1 : (depth - column.depth) + 1;\r\n\r\n\t\t\theaders[level].push(column);\r\n\r\n\t\t\tif(column.height > 1){\r\n\t\t\t\tfor(let i = 1; i < column.height; i ++){\r\n\r\n\t\t\t\t\tif(typeof headers[level + i] === \"undefined\"){\r\n\t\t\t\t\t\theaders[level + i] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\theaders[level + i].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.width > 1){\r\n\t\t\t\tfor(let i = 1; i < column.width; i ++){\r\n\t\t\t\t\theaders[level].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.subGroups){\r\n\t\t\t\tcolumn.subGroups.forEach(function(subGroup){\r\n\t\t\t\t\tparseColumnGroup(subGroup, level+1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//calculate maximum header debth\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tif(column.depth > headerDepth){\r\n\t\t\t\theaderDepth = column.depth;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tparseColumnGroup(column,0);\r\n\t\t});\r\n\r\n\t\theaders.forEach((header) => {\r\n\t\t\tvar columns = [];\r\n\r\n\t\t\theader.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\tcolumns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumns.push(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\texportRows.push(new ExportRow(\"header\", columns));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tbodyToExportRows(rows){\r\n\r\n\t\tvar columns = [];\r\n\t\tvar exportRows = [];\r\n\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tif (this.columnVisCheck(column)) {\r\n\t\t\t\tcolumns.push(column.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized){\r\n\t\t\t\trows.unshift(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized){\r\n\t\t\t\trows.push(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn this.config.rowGroups !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\treturn this.config.columnCalcs !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\treturn !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar rowData = row.getData(this.colVisProp);\r\n\t\t\tvar exportCols = [];\r\n\t\t\tvar indent = 0;\r\n\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tindent = row.level;\r\n\t\t\t\texportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\" :\r\n\t\t\t\tcase \"row\" :\r\n\t\t\t\tcolumns.forEach((col) => {\r\n\t\t\t\t\texportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tindent = row.modules.dataTree.index;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\texportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tgenereateTableElement(list){\r\n\t\tvar table = document.createElement(\"table\"),\r\n\t\theaderEl = document.createElement(\"thead\"),\r\n\t\tbodyEl = document.createElement(\"tbody\"),\r\n\t\tstyles = this.lookupTableStyles(),\r\n\t\trowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\r\n\t\tsetup = {};\r\n\r\n\t\tsetup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\r\n\r\n\t\tif(this.table.options.dataTree &&this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tsetup.treeElementField = this.table.modules.dataTree.elementField;\r\n\t\t}\r\n\r\n\t\t//assign group header formatter\r\n\t\tsetup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\r\n\r\n\t\tif(setup.groupHeader && !Array.isArray(setup.groupHeader)){\r\n\t\t\tsetup.groupHeader = [setup.groupHeader];\r\n\t\t}\r\n\r\n\t\ttable.classList.add(\"tabulator-print-table\");\r\n\r\n\t\tthis.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\r\n\t\tif(list.length > 1000){\r\n\t\t\tconsole.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\r\n\t\t}\r\n\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"header\":\r\n\t\t\t\theaderEl.appendChild(this.genereateHeaderElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\tlet rowEl = this.genereateRowElement(row, setup, styles);\r\n\t\t\t\tthis.mapElementStyles(((i % 2) && styles.evenRow) ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\t\t\tbodyEl.appendChild(rowEl);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(headerEl.innerHTML){\r\n\t\t\ttable.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\ttable.appendChild(bodyEl);\r\n\r\n\r\n\t\tthis.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\r\n\t\treturn table;\r\n\t}\r\n\r\n\tlookupTableStyles(){\r\n\t\tvar styles = {};\r\n\r\n\t\t//lookup row styles\r\n\t\tif(this.cloneTableStyle && window.getComputedStyle){\r\n\t\t\tstyles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\r\n\t\t\tstyles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\r\n\r\n\t\t\tif(styles.firstRow){\r\n\t\t\t\tstyles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\r\n\t\t\t\tstyles.firstCell = styles.styleCells[0];\r\n\t\t\t\tstyles.lastCell = styles.styleCells[styles.styleCells.length - 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tgenereateHeaderElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trow.columns.forEach((column) => {\r\n\t\t\tif(column){\r\n\t\t\t\tvar cellEl = document.createElement(\"th\");\r\n\t\t\t\tvar classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tcellEl.colSpan = column.width;\r\n\t\t\t\tcellEl.rowSpan = column.height;\r\n\r\n\t\t\t\tcellEl.innerHTML = column.value;\r\n\r\n\t\t\t\tif(this.cloneTableStyle){\r\n\t\t\t\t\tcellEl.style.boxSizing = \"border-box\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\t\t\t\tthis.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\t\t\tif(column.component._column.visible){\r\n\t\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.component._column.definition.width){\r\n\t\t\t\t\t\tcellEl.style.width = column.component._column.definition.width + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.component._column.parent){\r\n\t\t\t\t\tthis.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateGroupElement(row, setup, styles){\r\n\r\n\t\tvar rowEl = document.createElement(\"tr\"),\r\n\t\tcellEl = document.createElement(\"td\"),\r\n\t\tgroup = row.columns[0];\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\tif(setup.groupHeader && setup.groupHeader[row.indent]){\r\n\t\t\tgroup.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t}else{\r\n\t\t\tif(setup.groupHeader === false){\r\n\t\t\t\tgroup.value = group.value;\r\n\t\t\t}else{\r\n\t\t\t\tgroup.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcellEl.colSpan = group.width;\r\n\t\tcellEl.innerHTML = group.value;\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-group\");\r\n\t\trowEl.classList.add(\"tabulator-group-level-\" + row.indent);\r\n\r\n\t\tif(group.component.isVisible()){\r\n\t\t\trowEl.classList.add(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tthis.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\tthis.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\trowEl.appendChild(cellEl);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateCalcElement(row, setup, styles){\r\n\t\tvar rowEl = this.genereateRowElement(row, setup, styles);\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-calcs\");\r\n\t\tthis.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateRowElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tvar cellEl = document.createElement(\"td\"),\r\n\t\t\t\tcolumn = col.component._column,\r\n\t\t\t\tvalue = col.value;\r\n\r\n\t\t\t\tvar cellWrapper = {\r\n\t\t\t\t\tmodules:{},\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn cellEl;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\treturn row.component.getData();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn row.component;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetComponent:function(){\r\n\t\t\t\t\t\treturn cellWrapper;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.modExists(\"format\") && this.config.formatCells !== false){\r\n\t\t\t\t\tvalue = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tvalue = JSON.stringify(value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvalue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(value instanceof Node){\r\n\t\t\t\t\tcellEl.appendChild(value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcellEl.innerHTML = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(styles.firstCell){\r\n\t\t\t\t\tthis.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\t\t\t\t\tif(column.definition.align){\r\n\t\t\t\t\t\tcellEl.style.textAlign = column.definition.align;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tif((setup.treeElementField && setup.treeElementField == column.field) || (!setup.treeElementField && i == 0)){\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.controlEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.branchEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\r\n\t\t\t\tif(cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback){\r\n\t\t\t\t\tcellWrapper.modules.format.renderedCallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(setup.rowFormatter && this.config.formatCells !== false){\r\n\t\t\t\t\tsetup.rowFormatter(row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateHTMLTable(list){\r\n\t\tvar holder = document.createElement(\"div\");\r\n\r\n\t\tholder.appendChild(this.genereateTableElement(list));\r\n\r\n\t\treturn holder.innerHTML;\r\n\t}\r\n\r\n\tgetHtml(visible, style, config, colVisProp){\r\n\t\tvar list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\r\n\r\n\t\treturn this.genereateHTMLTable(list);\r\n\t}\r\n\r\n\tmapElementStyles(from, to, props){\r\n\t\tif(this.cloneTableStyle && from && to){\r\n\r\n\t\t\tvar lookup = {\r\n\t\t\t\t\"background-color\" : \"backgroundColor\",\r\n\t\t\t\t\"color\" : \"fontColor\",\r\n\t\t\t\t\"width\" : \"width\",\r\n\t\t\t\t\"font-weight\" : \"fontWeight\",\r\n\t\t\t\t\"font-family\" : \"fontFamily\",\r\n\t\t\t\t\"font-size\" : \"fontSize\",\r\n\t\t\t\t\"text-align\" : \"textAlign\",\r\n\t\t\t\t\"border-top\" : \"borderTop\",\r\n\t\t\t\t\"border-left\" : \"borderLeft\",\r\n\t\t\t\t\"border-right\" : \"borderRight\",\r\n\t\t\t\t\"border-bottom\" : \"borderBottom\",\r\n\t\t\t\t\"padding-top\" : \"paddingTop\",\r\n\t\t\t\t\"padding-left\" : \"paddingLeft\",\r\n\t\t\t\t\"padding-right\" : \"paddingRight\",\r\n\t\t\t\t\"padding-bottom\" : \"paddingBottom\",\r\n\t\t\t};\r\n\r\n\t\t\tif(window.getComputedStyle){\r\n\t\t\t\tvar fromStyle = window.getComputedStyle(from);\r\n\r\n\t\t\t\tprops.forEach(function(prop){\r\n\t\t\t\t\tto.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nExport.moduleName = \"export\";\r\n\r\nexport default Export;\r\n","export default {\r\n\r\n\t//equal to\r\n\t\"=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal == filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than\r\n\t\"<\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal < filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than or equal to\r\n\t\"<=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal <= filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than\r\n\t\">\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal > filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than or equal to\r\n\t\">=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal >= filterVal ? true : false;\r\n\t},\r\n\r\n\t//not equal to\r\n\t\"!=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal != filterVal ? true : false;\r\n\t},\r\n\r\n\t\"regex\":function(filterVal, rowVal, rowData, filterParams){\r\n\r\n\t\tif(typeof filterVal == \"string\"){\r\n\t\t\tfilterVal = new RegExp(filterVal);\r\n\t\t}\r\n\r\n\t\treturn filterVal.test(rowVal);\r\n\t},\r\n\r\n\t//contains the string\r\n\t\"like\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//contains the keywords\r\n\t\"keywords\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tvar keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\r\n\t\tvalue = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\r\n\t\tmatches = [];\r\n\r\n\t\tkeywords.forEach((keyword) =>{\r\n\t\t\tif(value.includes(keyword)){\r\n\t\t\t\tmatches.push(true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\r\n\t},\r\n\r\n\t//starts with the string\r\n\t\"starts\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//ends with the string\r\n\t\"ends\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//in array\r\n\t\"in\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(Array.isArray(filterVal)){\r\n\t\t\treturn filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - filter value is not an array:\", filterVal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFilters from './defaults/filters.js';\r\n\r\nclass Filter extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.filterList = []; //hold filter list\r\n\t\tthis.headerFilters = {}; //hold column filters\r\n\t\tthis.headerFilterColumns = []; //hold columns that use header filters\r\n\r\n\t\tthis.prevHeaderFilterChangeCheck = \"\";\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.changed = false; //has filtering changed since last render\r\n\t\tthis.tableInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\r\n\r\n\t\tthis.registerTableOption(\"initialFilter\", false); //initial filtering criteria\r\n\t\tthis.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\r\n\t\tthis.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\r\n\r\n\t\tthis.registerColumnOption(\"headerFilter\");\r\n\t\tthis.registerColumnOption(\"headerFilterPlaceholder\");\r\n\t\tthis.registerColumnOption(\"headerFilterParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterEmptyCheck\");\r\n\t\tthis.registerColumnOption(\"headerFilterFunc\");\r\n\t\tthis.registerColumnOption(\"headerFilterFuncParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterLiveFilter\");\r\n\r\n\t\tthis.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\r\n\t\tthis.registerTableFunction(\"searchData\", this.searchData.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\r\n\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\tthis.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerDataHandler(this.filter.bind(this), 10);\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tif(this.table.options.initialFilter){\r\n\t\t\tthis.setFilter(this.table.options.initialFilter);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.initialHeaderFilter){\r\n\t\t\tthis.table.options.initialHeaderFilter.forEach((item) => {\r\n\r\n\t\t\t\tvar column = this.table.columnManager.findColumn(item.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tthis.setHeaderFilterValue(column, item.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", item.field);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.tableInitialized = true;\r\n\t}\r\n\r\n\tremoteFilterParams(data, config, silent, params){\r\n\t\tparams.filter = this.getFilters(true, true);\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t//set standard filters\r\n\tuserSetFilter(field, type, value, params){\r\n\t\tthis.setFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//set standard filters\r\n\tuserRefreshFilter(){\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//add filter to array\r\n\tuserAddFilter(field, type, value, params){\r\n\t\tthis.addFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\tuserSetHeaderFilterFocus(field){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterFocus(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetHeaderFilterValue(field) {\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn this.getHeaderFilterValue(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t}\r\n\t}\r\n\r\n\tuserSetHeaderFilterValue(field, value){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterValue(column, value);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tuserRemoveFilter(field, type, value){\r\n\t\tthis.removeFilter(field, type, value);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear filters\r\n\tuserClearFilter(all){\r\n\t\tthis.clearFilter(all);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tuserClearHeaderFilter(){\r\n\t\tthis.clearHeaderFilter();\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\r\n\t//search for specific row components\r\n\tsearchRows(field, type, value){\r\n\t\treturn this.search(\"rows\", field, type, value);\r\n\t}\r\n\r\n\t//search for specific data\r\n\tsearchData(field, type, value){\r\n\t\treturn this.search(\"data\", field, type, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnHeaderFilter(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerFilter){\r\n\r\n\t\t\tif(typeof def.headerFilterPlaceholder !== \"undefined\" && def.field){\r\n\t\t\t\tthis.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column header filter\r\n\tinitializeColumn(column, value){\r\n\t\tvar self = this,\r\n\t\tfield = column.getField(),\r\n\t\tparams;\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tvar filterType = (column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\") || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\r\n\t\t\ttype = \"\",\r\n\t\t\tfilterChangeCheck = \"\",\r\n\t\t\tfilterFunc;\r\n\r\n\t\t\tif(typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value){\r\n\r\n\t\t\t\tcolumn.modules.filter.prevSuccess = value;\r\n\r\n\t\t\t\tif(!column.modules.filter.emptyFunc(value)){\r\n\t\t\t\t\tcolumn.modules.filter.value = value;\r\n\r\n\t\t\t\t\tswitch(typeof column.definition.headerFilterFunc){\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\tif(Filter.filters[column.definition.headerFilterFunc]){\r\n\t\t\t\t\t\t\ttype = column.definition.headerFilterFunc;\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\t\treturn Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\treturn column.definition.headerFilterFunc(value, fieldVal, data, params);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\ttype = filterFunc;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!filterFunc){\r\n\t\t\t\t\t\tswitch(filterType){\r\n\t\t\t\t\t\t\tcase \"partial\":\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar colVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tif(typeof colVal !== 'undefined' && colVal !== null){\r\n\t\t\t\t\t\t\t\t\treturn String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"like\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\treturn column.getFieldValue(data) == value;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"=\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.headerFilters[field] = {value:value, func:filterFunc, type:type, params:params || {}};\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete self.headerFilters[field];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterChangeCheck = JSON.stringify(self.headerFilters);\r\n\r\n\t\t\t\tif(self.prevHeaderFilterChangeCheck !== filterChangeCheck){\r\n\t\t\t\t\tself.prevHeaderFilterChangeCheck = filterChangeCheck;\r\n\r\n\t\t\t\t\tself.trackChanges();\r\n\t\t\t\t\tself.refreshFilter();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.filter = {\r\n\t\t\tsuccess:success,\r\n\t\t\tattrType:false,\r\n\t\t\ttagType:false,\r\n\t\t\temptyFunc:false,\r\n\t\t};\r\n\r\n\t\tthis.generateHeaderFilterElement(column);\r\n\t}\r\n\r\n\tgenerateHeaderFilterElement(column, initialValue, reinitialize){\r\n\t\tvar self = this,\r\n\t\tsuccess = column.modules.filter.success,\r\n\t\tfield = column.getField(),\r\n\t\tfilterElement, editor, editorElement, cellWrapper, typingTimer, searchTrigger, params;\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){}\r\n\r\n\t\tif(column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode){\r\n\t\t\tcolumn.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\r\n\t\t\t//set empty value function\r\n\t\t\tcolumn.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function(value){\r\n\t\t\t\treturn !value && value !== \"0\" && value !== 0;\r\n\t\t\t};\r\n\r\n\t\t\tfilterElement = document.createElement(\"div\");\r\n\t\t\tfilterElement.classList.add(\"tabulator-header-filter\");\r\n\r\n\t\t\t//set column editor\r\n\t\t\tswitch(typeof column.definition.headerFilter){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(self.table.modules.edit.editors[column.definition.headerFilter]){\r\n\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.headerFilter];\r\n\r\n\t\t\t\t\tif((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\teditor = column.definition.headerFilter;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tif(column.modules.edit && column.modules.edit.editor){\r\n\t\t\t\t\teditor = column.modules.edit.editor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]){\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.formatter];\r\n\r\n\t\t\t\t\t\tif((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(editor){\r\n\r\n\t\t\t\tcellWrapper = {\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn typeof initialValue !== \"undefined\" ? initialValue : \"\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn filterElement;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tnormalizeHeight:function(){\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tparams = column.definition.headerFilterParams || {};\r\n\r\n\t\t\t\tparams = typeof params === \"function\" ? params.call(self.table) : params;\r\n\r\n\t\t\t\teditorElement = editor.call(this.table.modules.edit, cellWrapper, function(){}, success, cancel, params);\r\n\r\n\t\t\t\tif(!editorElement){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!(editorElement instanceof Node)){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set Placeholder Text\r\n\t\t\t\tif(field){\r\n\t\t\t\t\tself.langBind(\"headerFilters|columns|\" + column.definition.field, function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.langBind(\"headerFilters|default\", function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", value);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//focus on element on click\r\n\t\t\t\teditorElement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\teditorElement.focus();\r\n\t\t\t\t});\r\n\r\n\t\t\t\teditorElement.addEventListener(\"focus\", (e) => {\r\n\t\t\t\t\tvar left = this.table.columnManager.element.scrollLeft;\r\n\r\n\t\t\t\t\tif(left !== this.table.rowManager.element.scrollLeft){\r\n\t\t\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t\t\tthis.table.columnManager.scrollHorizontal(left);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//live update filters as user types\r\n\t\t\t\ttypingTimer = false;\r\n\r\n\t\t\t\tsearchTrigger = function(e){\r\n\t\t\t\t\tif(typingTimer){\r\n\t\t\t\t\t\tclearTimeout(typingTimer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttypingTimer = setTimeout(function(){\r\n\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t},self.table.options.headerFilterLiveFilterDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcolumn.modules.filter.headerElement = editorElement;\r\n\t\t\t\tcolumn.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\" ;\r\n\t\t\t\tcolumn.modules.filter.tagType = editorElement.tagName.toLowerCase();\r\n\r\n\t\t\t\tif(column.definition.headerFilterLiveFilter !== false){\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'autocomplete' ||\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'tickCross' ||\r\n\t\t\t\t\t\t\t((column.definition.editor === 'autocomplete' ||\r\n\t\t\t\t\t\t\t\tcolumn.definition.editor === 'tickCross') &&\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === true)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\teditorElement.addEventListener(\"keyup\", searchTrigger);\r\n\t\t\t\t\teditorElement.addEventListener(\"search\", searchTrigger);\r\n\r\n\r\n\t\t\t\t\t//update number filtered columns on change\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"number\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"change\", function(e){\r\n\t\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//change text inputs to search inputs to allow for clearing of field\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\"){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"type\", \"search\");\r\n\t\t\t\t\t\t// editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t//prevent input and select elements from propegating click to column sorters etc\r\n\t\t\t\t\tif(column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"mousedown\",function(e){\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterElement.appendChild(editorElement);\r\n\r\n\t\t\t\tcolumn.contentElement.appendChild(filterElement);\r\n\r\n\t\t\t\tif(!reinitialize){\r\n\t\t\t\t\tself.headerFilterColumns.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\r\n\t\t}\r\n\t}\r\n\r\n\t//hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\thideHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\tshowHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//programatically set focus of header filter\r\n\tsetHeaderFilterFocus(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\tcolumn.modules.filter.headerElement.focus();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programmatically get value of header filter\r\n\tgetHeaderFilterValue(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\treturn column.modules.filter.headerElement.value;\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programatically set value of header filter\r\n\tsetHeaderFilterValue(column, value){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, value, true);\r\n\t\t\t\tcolumn.modules.filter.success(value);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treloadHeaderFilter(column){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, column.modules.filter.value, true);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trefreshFilter(){\r\n\t\tif(this.tableInitialized){\r\n\t\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\t\tthis.reloadData();\r\n\t\t\t}else{\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\ttrackChanges(){\r\n\t\tthis.changed = true;\r\n\t\tthis.dispatch(\"filter-changed\");\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//set standard filters\r\n\tsetFilter(field, type, value, params){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tthis.addFilter(field);\r\n\t}\r\n\r\n\t//add filter to array\r\n\taddFilter(field, type, value, params){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tthis.filterList.push(filter);\r\n\t\t\t\tthis.changed = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.trackChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tfindFilter(filter){\r\n\t\tvar column;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\treturn this.findSubFilters(filter);\r\n\t\t}\r\n\r\n\t\tvar filterFunc = false;\r\n\r\n\t\tif(typeof filter.field == \"function\"){\r\n\t\t\tfilterFunc = function(data){\r\n\t\t\t\treturn filter.field(data, filter.type || {})// pass params to custom filter function\r\n\t\t\t};\r\n\t\t}else{\r\n\r\n\t\t\tif(Filter.filters[filter.type]){\r\n\r\n\t\t\t\tcolumn = this.table.columnManager.getColumnByField(filter.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfilter.func = filterFunc;\r\n\r\n\t\treturn filter.func ? filter : false;\r\n\t}\r\n\r\n\tfindSubFilters(filters){\r\n\t\tvar output = [];\r\n\r\n\t\tfilters.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\toutput.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : false;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetFilters(all, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tif(all){\r\n\t\t\toutput = this.getHeaderFilters();\r\n\t\t}\r\n\r\n\t\tif(ajax){\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\toutput = output.concat(this.filtersToArray(this.filterList, ajax));\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//filter to Object\r\n\tfiltersToArray(filterList, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tfilterList.forEach((filter) => {\r\n\t\t\tvar item;\r\n\r\n\t\t\tif(Array.isArray(filter)){\r\n\t\t\t\toutput.push(this.filtersToArray(filter, ajax));\r\n\t\t\t}else{\r\n\t\t\t\titem = {field:filter.field, type:filter.type, value:filter.value}\r\n\r\n\t\t\t\tif(ajax){\r\n\t\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetHeaderFilters(){\r\n\t\tvar output = [];\r\n\r\n\t\tfor(var key in this.headerFilters){\r\n\t\t\toutput.push({field:key, type:this.headerFilters[key].type, value:this.headerFilters[key].value});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tremoveFilter(field, type, value){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tvar index = -1;\r\n\r\n\t\t\tif(typeof filter.field == \"object\"){\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter === element;\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter.field === element.field && filter.type === element.type  && filter.value === element.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.filterList.splice(index, 1);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear filters\r\n\tclearFilter(all){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(all){\r\n\t\t\tthis.clearHeaderFilter();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tclearHeaderFilter(){\r\n\t\tthis.headerFilters = {};\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.headerFilterColumns.forEach((column) => {\r\n\t\t\tif(typeof column.modules.filter.value !== \"undefined\"){\r\n\t\t\t\tdelete column.modules.filter.value;\r\n\t\t\t}\r\n\t\t\tcolumn.modules.filter.prevSuccess = undefined;\r\n\t\t\tthis.reloadHeaderFilter(column);\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//search data and return matching rows\r\n\tsearch (searchType, field, type, value){\r\n\t\tvar activeRows = [],\r\n\t\tfilterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tfilterList.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\tvar match = true;\r\n\r\n\t\t\tfilterList.forEach((filter) => {\r\n\t\t\t\tif(!this.filterRecurse(filter, row.getData())){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tactiveRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter row array\r\n\tfilter(rowList, filters){\r\n\t\tvar activeRows = [],\r\n\t\tactiveRowComponents = [];\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltering\")){\r\n\t\t\tthis.dispatchExternal(\"dataFiltering\", this.getFilters());\r\n\t\t}\r\n\r\n\t\tif(this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)){\r\n\r\n\t\t\trowList.forEach((row) => {\r\n\t\t\t\tif(this.filterRow(row)){\r\n\t\t\t\t\tactiveRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\tactiveRows = rowList.slice(0);\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltered\")){\r\n\r\n\t\t\tactiveRows.forEach((row) => {\r\n\t\t\t\tactiveRowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\r\n\t\t}\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter individual row\r\n\tfilterRow(row, filters){\r\n\t\tvar match = true,\r\n\t\tdata = row.getData();\r\n\r\n\t\tthis.filterList.forEach((filter) => {\r\n\t\t\tif(!this.filterRecurse(filter, data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tfor(var field in this.headerFilters){\r\n\t\t\tif(!this.headerFilters[field].func(data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tfilterRecurse(filter, data){\r\n\t\tvar match = false;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\tfilter.forEach((subFilter) => {\r\n\t\t\t\tif(this.filterRecurse(subFilter, data)){\r\n\t\t\t\t\tmatch = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tmatch = filter.func(data);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n}\r\n\r\nFilter.moduleName = \"filter\";\r\n\r\n//load defaults\r\nFilter.filters = defaultFilters;\r\n\r\nexport default Filter;","export default function(cell, formatterParams, onRendered){\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn cell.getValue();\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.whiteSpace = \"pre-wrap\";\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar floatVal = parseFloat(cell.getValue()),\r\n\tsign = \"\",\r\n\tnumber, integer, decimal, rgx;\r\n\r\n\tvar decimalSym = formatterParams.decimal || \".\";\r\n\tvar thousandSym = formatterParams.thousand || \",\";\r\n\tvar negativeSign = formatterParams.negativeSign || \"-\";\r\n\tvar symbol = formatterParams.symbol || \"\";\r\n\tvar after = !!formatterParams.symbolAfter;\r\n\tvar precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\r\n\r\n\tif(isNaN(floatVal)){\r\n\t\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n\t}\r\n\r\n\tif(floatVal < 0){\r\n\t\tfloatVal = Math.abs(floatVal);\r\n\t\tsign = negativeSign;\r\n\t}\r\n\r\n\tnumber = precision !== false ? floatVal.toFixed(precision) : floatVal;\r\n\tnumber = String(number).split(\".\");\r\n\r\n\tinteger = number[0];\r\n\tdecimal = number.length > 1 ? decimalSym + number[1] : \"\";\r\n\r\n\trgx = /(\\d+)(\\d{3})/;\r\n\r\n\twhile (rgx.test(integer)){\r\n\t\tinteger = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\r\n\t}\r\n\r\n\treturn after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\turlPrefix = formatterParams.urlPrefix || \"\",\r\n\tdownload = formatterParams.download,\r\n\tlabel = value,\r\n\tel = document.createElement(\"a\"),\r\n\tdata;\r\n\r\n\tif(formatterParams.labelField){\r\n\t\tdata = cell.getData();\r\n\t\tlabel = data[formatterParams.labelField];\r\n\t}\r\n\r\n\tif(formatterParams.label){\r\n\t\tswitch(typeof formatterParams.label){\r\n\t\t\tcase \"string\":\r\n\t\t\tlabel = formatterParams.label;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tlabel = formatterParams.label(cell);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif(label){\r\n\t\tif(formatterParams.urlField){\r\n\t\t\tdata = cell.getData();\r\n\t\t\tvalue = data[formatterParams.urlField];\r\n\t\t}\r\n\r\n\t\tif(formatterParams.url){\r\n\t\t\tswitch(typeof formatterParams.url){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tvalue = formatterParams.url;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tvalue = formatterParams.url(cell);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tel.setAttribute(\"href\", urlPrefix + value);\r\n\r\n\t\tif(formatterParams.target){\r\n\t\t\tel.setAttribute(\"target\", formatterParams.target);\r\n\t\t}\r\n\r\n\t\tif(formatterParams.download){\r\n\r\n\t\t\tif(typeof download == \"function\"){\r\n\t\t\t\tdownload = download(cell);\r\n\t\t\t}else{\r\n\t\t\t\tdownload = download === true ? \"\" : download;\r\n\t\t\t}\r\n\r\n\t\t\tel.setAttribute(\"download\", download);\r\n\t\t}\r\n\r\n\t\tel.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\r\n\r\n\t\treturn el;\r\n\t}else{\r\n\t\treturn \"&nbsp;\";\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar el = document.createElement(\"img\"),\r\n\tsrc = cell.getValue();\r\n\r\n\tif(formatterParams.urlPrefix){\r\n\t\tsrc = formatterParams.urlPrefix + cell.getValue();\r\n\t}\r\n\r\n\tif(formatterParams.urlSuffix){\r\n\t\tsrc = src + formatterParams.urlSuffix;\r\n\t}\r\n\r\n\tel.setAttribute(\"src\", src);\r\n\r\n\tswitch(typeof formatterParams.height){\r\n\t\tcase \"number\":\r\n\t\tel.style.height = formatterParams.height + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.height = formatterParams.height;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tswitch(typeof formatterParams.width){\r\n\t\tcase \"number\":\r\n\t\tel.style.width = formatterParams.width + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.width = formatterParams.width;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tel.addEventListener(\"load\", function(){\r\n\t\tcell.getRow().normalizeHeight();\r\n\t});\r\n\r\n\treturn el;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tempty = formatterParams.allowEmpty,\r\n\ttruthy = formatterParams.allowTruthy,\r\n\ttick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\r\n\tcross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n\r\n\tif((truthy && value) || (value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\")){\r\n\t\telement.setAttribute(\"aria-checked\", true);\r\n\t\treturn tick || \"\";\r\n\t}else{\r\n\t\tif(empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")){\r\n\t\t\telement.setAttribute(\"aria-checked\", \"mixed\");\r\n\t\t\treturn \"\";\r\n\t\t}else{\r\n\t\t\telement.setAttribute(\"aria-checked\", false);\r\n\t\t\treturn cross || \"\";\r\n\t\t}\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar\toutputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\r\n\tvar\tinvalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif(newDatetime.isValid){\r\n\r\n\t\t\tif(formatterParams.timezone){\r\n\t\t\t\tnewDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\r\n\t\t\t}\r\n\r\n\t\t\treturn newDatetime.toFormat(outputFormat);\r\n\t\t}else{\r\n\r\n\t\t\tif(invalid === true || !value){\r\n\t\t\t\treturn value;\r\n\t\t\t}else if(typeof invalid === \"function\"){\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t}else{\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\r\n\tvar unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\r\n\tvar humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\r\n\tvar date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif (newDatetime.isValid){\r\n\t\t\tif(humanize){\r\n\t\t\t\t// return moment.duration(newDatetime.diff(date)).humanize(suffix);\r\n\t\t\t}else{\r\n\t\t\t\treturn parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tif (invalid === true) {\r\n\t\t\t\treturn value;\r\n\t\t\t} else if (typeof invalid === \"function\") {\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t} else {\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar value = cell.getValue();\r\n\r\n\tif (typeof formatterParams[value] === \"undefined\") {\r\n\t\tconsole.warn('Missing display value for ' + value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn formatterParams[value];\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tmaxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\r\n\tstars = document.createElement(\"span\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\r\n\tstarActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\r\n\tstarInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\r\n\t//style stars holder\r\n\tstars.style.verticalAlign = \"middle\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", \"14\");\r\n\tstar.setAttribute(\"height\", \"14\");\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tvalue = value && !isNaN(value) ? parseInt(value) : 0;\r\n\r\n\tvalue = Math.max(0, Math.min(value, maxStars));\r\n\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\t\tnextStar.innerHTML = i <= value ? starActive : starInactive;\r\n\r\n\t\tstars.appendChild(nextStar);\r\n\t}\r\n\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\telement.setAttribute(\"aria-label\", value);\r\n\r\n\treturn stars;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\tel = document.createElement(\"span\"),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tcolors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\r\n\tcolor = \"#666666\",\r\n\tpercent, percentValue;\r\n\r\n\tif(isNaN(value) || typeof cell.getValue() === \"undefined\"){\r\n\t\treturn;\r\n\t}\r\n\r\n\tel.classList.add(\"tabulator-traffic-light\");\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set color\r\n\tswitch(typeof colors){\r\n\t\tcase \"string\":\r\n\t\tcolor = colors;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = colors(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(colors)){\r\n\t\t\tvar unit = 100 / colors.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, colors.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = colors[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tel.style.backgroundColor = color;\r\n\r\n\treturn el;\r\n};","import CellComponent from '../../../../core/cell/CellComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){ //progress bar\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\telement = cell.getElement(),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tlegendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\r\n\tpercent, percentValue, color, legend, legendColor, top, left, right, bottom;\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set bar color\r\n\tswitch(typeof formatterParams.color){\r\n\t\tcase \"string\":\r\n\t\tcolor = formatterParams.color;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = formatterParams.color(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.color)){\r\n\t\t\tvar unit = 100 / formatterParams.color.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.color.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = formatterParams.color[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\tcolor = \"#2DC214\";\r\n\t}\r\n\r\n\t//generate legend\r\n\tswitch(typeof formatterParams.legend){\r\n\t\tcase \"string\":\r\n\t\tlegend = formatterParams.legend;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegend = formatterParams.legend(value);\r\n\t\tbreak;\r\n\t\tcase \"boolean\":\r\n\t\tlegend = value;\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegend = false;\r\n\t}\r\n\r\n\t//set legend color\r\n\tswitch(typeof formatterParams.legendColor){\r\n\t\tcase \"string\":\r\n\t\tlegendColor = formatterParams.legendColor;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegendColor = formatterParams.legendColor(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.legendColor)){\r\n\t\t\tvar unit = 100 / formatterParams.legendColor.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.legendColor.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tlegendColor = formatterParams.legendColor[index];\r\n\t\t}\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegendColor = \"#000\";\r\n\t}\r\n\r\n\telement.style.minWidth = \"30px\";\r\n\telement.style.position = \"relative\";\r\n\r\n\telement.setAttribute(\"aria-label\", percentValue);\r\n\r\n\tvar barEl = document.createElement(\"div\");\r\n\tbarEl.style.display = \"inline-block\";\r\n\tbarEl.style.position = \"absolute\";\r\n\tbarEl.style.width = percentValue + \"%\";\r\n\tbarEl.style.backgroundColor = color;\r\n\tbarEl.style.height = \"100%\";\r\n\r\n\tbarEl.setAttribute('data-max', max);\r\n\tbarEl.setAttribute('data-min', min);\r\n\r\n\tvar barContainer = document.createElement(\"div\");\r\n\tbarContainer.style.position = \"relative\";\r\n\tbarContainer.style.width = \"100%\";\r\n\tbarContainer.style.height = \"100%\";\r\n\r\n\tif(legend){\r\n\t\tvar legendEl = document.createElement(\"div\");\r\n\t\tlegendEl.style.position = \"absolute\";\r\n\t\tlegendEl.style.top = 0;\r\n\t\tlegendEl.style.left = 0;\r\n\t\tlegendEl.style.textAlign = legendAlign;\r\n\t\tlegendEl.style.width = \"100%\";\r\n\t\tlegendEl.style.color = legendColor;\r\n\t\tlegendEl.innerHTML = legend;\r\n\t}\r\n\r\n\tonRendered(function(){\r\n\r\n\t\t//handle custom element needed if formatter is to be included in printed/downloaded output\r\n\t\tif(!(cell instanceof CellComponent)){\r\n\t\t\tvar holderEl = document.createElement(\"div\");\r\n\t\t\tholderEl.style.position = \"absolute\";\r\n\t\t\tholderEl.style.top = \"4px\";\r\n\t\t\tholderEl.style.bottom = \"4px\";\r\n\t\t\tholderEl.style.left = \"4px\";\r\n\t\t\tholderEl.style.right = \"4px\";\r\n\r\n\t\t\telement.appendChild(holderEl);\r\n\r\n\t\t\telement = holderEl;\r\n\t\t}\r\n\r\n\t\telement.appendChild(barContainer);\r\n\t\tbarContainer.appendChild(barEl);\r\n\r\n\t\tif(legend){\r\n\t\t\tbarContainer.appendChild(legendEl);\r\n\t\t}\r\n\t});\r\n\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\treturn \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar open = false,\r\n\tel = document.createElement(\"div\"),\r\n\tconfig = cell.getRow()._row.modules.responsiveLayout;\r\n\r\n\tel.classList.add(\"tabulator-responsive-collapse-toggle\");\r\n\tel.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\r\n\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\r\n\tfunction toggleList(isOpen){\r\n\t\tvar collapseEl = config.element;\r\n\r\n\t\tconfig.open = isOpen;\r\n\r\n\t\tif(collapseEl){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tel.classList.add(\"open\");\r\n\t\t\t\tcollapseEl.style.display = '';\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.remove(\"open\");\r\n\t\t\t\tcollapseEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"click\", function(e){\r\n\t\te.stopImmediatePropagation();\r\n\t\ttoggleList(!config.open);\r\n\t});\r\n\r\n\ttoggleList(config.open);\r\n\r\n\treturn el;\r\n};","import RowComponent from '../../../../core/row/RowComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){\r\n\tvar checkbox = document.createElement(\"input\");\r\n\r\n\tcheckbox.type = 'checkbox';\r\n\r\n\tif(this.table.modExists(\"selectRow\", true)){\r\n\r\n\t\tcheckbox.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tif(typeof cell.getRow == 'function'){\r\n\t\t\tvar row = cell.getRow();\r\n\r\n\t\t\tif(row instanceof RowComponent){\r\n\r\n\t\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\trow.toggleSelect();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckbox.checked = row.isSelected && row.isSelected();\r\n\t\t\t\tthis.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\r\n\t\t\t}else{\r\n\t\t\t\tcheckbox = \"\";\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\tif(this.table.modules.selectRow.selectedRows.length){\r\n\t\t\t\t\tthis.table.deselectRow();\r\n\t\t\t\t}else {\r\n\t\t\t\t\tthis.table.selectRow(formatterParams.rowRange);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\r\n\t\t}\r\n\t}\r\n\r\n\treturn checkbox;\r\n};","import plaintext from './formatters/plaintext.js';\r\nimport html from './formatters/html.js';\r\nimport textarea from './formatters/textarea.js';\r\nimport money from './formatters/money.js';\r\nimport link from './formatters/link.js';\r\nimport image from './formatters/image.js';\r\nimport tickCross from './formatters/tickCross.js';\r\nimport datetime from './formatters/datetime.js';\r\nimport datetimediff from './formatters/datetimediff.js';\r\nimport lookup from './formatters/lookup.js';\r\nimport star from './formatters/star.js';\r\nimport traffic from './formatters/traffic.js';\r\nimport progress from './formatters/progress.js';\r\nimport color from './formatters/color.js';\r\nimport buttonTick from './formatters/buttonTick.js';\r\nimport buttonCross from './formatters/buttonCross.js';\r\nimport rownum from './formatters/rownum.js';\r\nimport handle from './formatters/handle.js';\r\nimport responsiveCollapse from './formatters/responsiveCollapse.js';\r\nimport rowSelection from './formatters/rowSelection.js';\r\n\r\nexport default {\r\n\tplaintext:plaintext,\r\n\thtml:html,\r\n\ttextarea:textarea,\r\n\tmoney:money,\r\n\tlink:link,\r\n\timage:image,\r\n\ttickCross:tickCross,\r\n\tdatetime:datetime,\r\n\tdatetimediff:datetimediff,\r\n\tlookup:lookup,\r\n\tstar:star,\r\n\ttraffic:traffic,\r\n\tprogress:progress,\r\n\tcolor:color,\r\n\tbuttonTick:buttonTick,\r\n\tbuttonCross:buttonCross,\r\n\trownum:rownum,\r\n\thandle:handle,\r\n\tresponsiveCollapse:responsiveCollapse,\r\n\trowSelection:rowSelection,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFormatters from './defaults/formatters.js';\r\n\r\nclass Format extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerColumnOption(\"formatter\");\r\n\t\tthis.registerColumnOption(\"formatterParams\");\r\n\r\n\t\tthis.registerColumnOption(\"formatterPrint\");\r\n\t\tthis.registerColumnOption(\"formatterPrintParams\");\r\n\t\tthis.registerColumnOption(\"formatterClipboard\");\r\n\t\tthis.registerColumnOption(\"formatterClipboardParams\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutputParams\");\r\n\t\tthis.registerColumnOption(\"titleFormatter\");\r\n\t\tthis.registerColumnOption(\"titleFormatterParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-format\", this.formatValue.bind(this));\r\n\t\tthis.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-format\", this.formatHeader.bind(this));\r\n\t}\r\n\r\n\t//initialize column formatter\r\n\tinitializeColumn(column){\r\n\t\tcolumn.modules.format = this.lookupFormatter(column, \"\");\r\n\r\n\t\tif(typeof column.definition.formatterPrint !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.print = this.lookupFormatter(column, \"Print\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterClipboard !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterHtmlOutput !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\r\n\t\t}\r\n\t}\r\n\r\n\tlookupFormatter(column, type){\r\n\t\tvar config = {params:column.definition[\"formatter\" + type + \"Params\"] || {}},\r\n\t\tformatter = column.definition[\"formatter\" + type];\r\n\r\n\t\t//set column formatter\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tconfig.formatter = Format.formatters[formatter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.formatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\tcellRendered(cell){\r\n\t\tif(cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered){\r\n\t\t\tcell.modules.format.renderedCallback();\r\n\t\t\tcell.modules.format.rendered = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a column header\r\n\tformatHeader(column, title, el){\r\n\t\tvar formatter, params, onRendered, mockCell;\r\n\r\n\t\tif(column.definition.titleFormatter){\r\n\t\t\tformatter = this.getFormatter(column.definition.titleFormatter);\r\n\r\n\t\t\tonRendered = (callback) => {\r\n\t\t\t\tcolumn.titleFormatterRendered = callback;\r\n\t\t\t};\r\n\r\n\t\t\tmockCell = {\r\n\t\t\t\tgetValue:function(){\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tgetElement:function(){\r\n\t\t\t\t\treturn el;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tparams = column.definition.titleFormatterParams || {};\r\n\r\n\t\t\tparams = typeof params === \"function\" ? params() : params;\r\n\r\n\t\t\treturn formatter.call(this, mockCell, params, onRendered);\r\n\t\t}else{\r\n\t\t\treturn title;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//return a formatted value for a cell\r\n\tformatValue(cell){\r\n\t\tvar component = cell.getComponent(),\r\n\t\tparams = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\tif(!cell.modules.format){\r\n\t\t\t\tcell.modules.format = {};\r\n\t\t\t}\r\n\r\n\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\tcell.modules.format.rendered = false;\r\n\t\t}\r\n\r\n\t\treturn cell.column.modules.format.formatter.call(this, component, params, onRendered);\r\n\t}\r\n\r\n\tformatExportValue(cell, type){\r\n\t\tvar formatter = cell.column.modules.format[type],\r\n\t\tparams;\r\n\r\n\t\tif(formatter){\r\n\t\t\tparams = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\r\n\r\n\t\t\tfunction onRendered(callback){\r\n\t\t\t\tif(!cell.modules.format){\r\n\t\t\t\t\tcell.modules.format = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\t\tcell.modules.format.rendered = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn formatter.formatter.call(this, cell.getComponent(), params, onRendered);\r\n\r\n\t\t}else{\r\n\t\t\treturn this.formatValue(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tsanitizeHTML(value){\r\n\t\tif(value){\r\n\t\t\tvar entityMap = {\r\n\t\t\t\t'&': '&amp;',\r\n\t\t\t\t'<': '&lt;',\r\n\t\t\t\t'>': '&gt;',\r\n\t\t\t\t'\"': '&quot;',\r\n\t\t\t\t\"'\": '&#39;',\r\n\t\t\t\t'/': '&#x2F;',\r\n\t\t\t\t'`': '&#x60;',\r\n\t\t\t\t'=': '&#x3D;'\r\n\t\t\t};\r\n\r\n\t\t\treturn String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\r\n\t\t\t\treturn entityMap[s];\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\temptyToSpace(value){\r\n\t\treturn value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\r\n\t}\r\n\r\n\t//get formatter for cell\r\n\tgetFormatter(formatter){\r\n\t\tvar formatter;\r\n\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tformatter = Format.formatters[formatter]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tformatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn formatter;\r\n\t}\r\n}\r\n\r\nFormat.moduleName = \"format\";\r\n\r\n//load defaults\r\nFormat.formatters = defaultFormatters;\r\n\r\nexport default Format;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightPadding = 0;\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.active = false;\r\n\t\tthis.scrollEndTimer = false;\r\n\r\n\t\tthis.registerColumnOption(\"frozen\");\r\n\t}\r\n\r\n\t//reset initial state\r\n\treset(){\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = 0;\r\n\t\tthis.table.columnManager.element.style.paddingRight = 0;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-width\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\tthis.subscribe(\"table-layout\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"columns-loading\", this.reset.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.layout.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tthis.layoutElement(cell.element, cell.column)\r\n\t}\r\n\r\n\t//initialize specific column\r\n\tinitializeColumn(column){\r\n\t\tvar config = {margin:0, edge:false};\r\n\r\n\t\tif(!column.isGroup){\r\n\r\n\t\t\tif(this.frozenCheck(column)){\r\n\r\n\t\t\t\tconfig.position = this.initializationMode;\r\n\r\n\t\t\t\tif(this.initializationMode == \"left\"){\r\n\t\t\t\t\tthis.leftColumns.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.rightColumns.unshift(column);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.active = true;\r\n\r\n\t\t\t\tcolumn.modules.frozen = config;\r\n\t\t\t}else{\r\n\t\t\t\tthis.initializationMode = \"right\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfrozenCheck(column){\r\n\t\tvar frozen = false;\r\n\r\n\t\tif(column.parent.isGroup && column.definition.frozen){\r\n\t\t\tconsole.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\r\n\t\t}\r\n\r\n\t\tif(column.parent.isGroup){\r\n\t\t\treturn this.frozenCheck(column.parent);\r\n\t\t}else{\r\n\t\t\treturn column.definition.frozen;\r\n\t\t}\r\n\r\n\t\treturn frozen;\r\n\t}\r\n\r\n\t//quick layout to smooth horizontal scrolling\r\n\tscrollHorizontal(){\r\n\t\tvar rows;\r\n\r\n\t\tif(this.active){\r\n\t\t\tclearTimeout(this.scrollEndTimer);\r\n\r\n\t\t\t//layout all rows after scroll is complete\r\n\t\t\tthis.scrollEndTimer = setTimeout(() => {\r\n\t\t\t\tthis.layout();\r\n\t\t\t}, 100);\r\n\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.layoutColumnPosition();\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\t//calculate margins for rows\r\n\tcalcMargins(){\r\n\t\tthis.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\r\n\r\n\t\tthis.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.element.style.paddingRight = this.rightMargin;\r\n\r\n\t\t//calculate right frozen columns\r\n\t\tthis.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\r\n\t}\r\n\r\n\t//layout calculation rows\r\n\tlayoutCalcRows(){\r\n\t\tif(this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"groupRows\")){\r\n\t\t\t\tthis.layoutGroupCalcs(this.table.modules.groupRows.getGroups())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutGroupCalcs(groups){\r\n\t\tgroups.forEach((group) => {\r\n\t\t\tif(group.calcs.top){\r\n\t\t\t\tthis.layoutRow(group.calcs.top);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.calcs.bottom){\r\n\t\t\t\tthis.layoutRow(group.calcs.bottom);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.groupList && group.groupList.length){\r\n\t\t\t\tthis.layoutGroupCalcs(group.groupList && group.groupList);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//calculate column positions and layout headers\r\n\tlayoutColumnPosition(allCells){\r\n\r\n\t\tvar leftParents = [];\r\n\r\n\t\tthis.leftColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft) + \"px\";\r\n\r\n\t\t\tif(i == this.leftColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tvar parentEl = this.getColGroupParentElement(column);\r\n\t\t\t\tif(!leftParents.includes(parentEl)){\r\n\t\t\t\t\tthis.layoutElement(parentEl, column);\r\n\t\t\t\t\tleftParents.push(parentEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\t\tparentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this.rightPadding - this._calcSpace(this.rightColumns, i + 1)) + \"px\";\r\n\r\n\t\t\tif(i == this.rightColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tthis.layoutElement(this.getColGroupParentElement(column), column);\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetColGroupParentElement(column){\r\n\t\treturn column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\r\n\t}\r\n\r\n\t//layout columns appropropriatly\r\n\tlayout(){\r\n\t\tvar rightMargin = 0;\r\n\r\n\t\tif(this.active){\r\n\r\n\t\t\t//calculate row padding\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\t//calculate left columns\r\n\t\t\tthis.layoutColumnPosition(true);\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\trowEl.style.paddingLeft = this.leftMargin;\r\n\r\n\t\tthis.leftColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutElement(element, column){\r\n\r\n\t\tif(column.modules.frozen){\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t\telement.style.left = column.modules.frozen.margin;\r\n\r\n\t\t\telement.classList.add(\"tabulator-frozen\");\r\n\r\n\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\telement.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_calcSpace(columns, index){\r\n\t\tvar width = 0;\r\n\r\n\t\tfor (let i = 0; i < index; i++){\r\n\t\t\tif(columns[i].visible){\r\n\t\t\t\twidth += columns[i].getWidth();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n}\r\n\r\nFrozenColumns.moduleName = \"frozenColumns\";\r\n\r\nexport default FrozenColumns;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topElement = document.createElement(\"div\");\r\n\t\tthis.rows = [];\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.rows = [];\r\n\r\n\t\tthis.topElement.classList.add(\"tabulator-frozen-rows-holder\");\r\n\r\n\t\t// this.table.columnManager.element.append(this.topElement);\r\n\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\r\n\t\tthis.subscribe(\"row-deleting\", this.detachRow.bind(this));\r\n\r\n\t\tthis.registerDisplayHandler(this.getRows.bind(this), 10);\r\n\t}\r\n\r\n\tisRowFrozen(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\treturn index > -1;\r\n\t}\r\n\r\n\tisFrozen(){\r\n\t\treturn !!this.rows.length;\r\n\t}\r\n\r\n\t//filter frozen rows out of display data\r\n\tgetRows(rows){\r\n\t\tvar self = this,\r\n\t\tfrozen = [],\r\n\t\toutput = rows.slice(0);\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tvar index = output.indexOf(row);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\toutput.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfreezeRow(row){\r\n\t\tif(!row.modules.frozen){\r\n\t\t\trow.modules.frozen = true;\r\n\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\trow.initialize();\r\n\t\t\trow.normalizeHeight();\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.rows.push(row);\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tthis.styleRows();\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already frozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tunfreezeRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(row.modules.frozen){\r\n\r\n\t\t\trow.modules.frozen = false;\r\n\r\n\t\t\tthis.detachRow(row);\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tif(this.rows.length){\r\n\t\t\t\tthis.styleRows();\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already unfrozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tdetachRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRows(row){\r\n\t\tthis.rows.forEach((row, i) => {\r\n\t\t\tthis.table.rowManager.styleRow(row, i);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nFrozenRows.moduleName = \"frozenRows\";\r\n\r\nexport default FrozenRows;","//public group object\r\nclass GroupComponent {\r\n\tconstructor (group){\r\n\t\tthis._group = group;\r\n\t\tthis.type = \"GroupComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._group.table.componentFunctionBinder.handle(\"row\", target._group, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetKey(){\r\n\t\treturn this._group.key;\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._group.field;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._group.element;\r\n\t}\r\n\r\n\tgetRows(){\r\n\t\treturn this._group.getRows(true);\r\n\t}\r\n\r\n\tgetSubGroups(){\r\n\t\treturn this._group.getSubGroups(true);\r\n\t}\r\n\r\n\tgetParentGroup(){\r\n\t\treturn this._group.parent ? this._group.parent.getComponent() : false;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._group.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis._group.show();\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis._group.hide();\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tthis._group.toggleVisibility();\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._group;\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._group.groupManager.table;\r\n\t}\r\n}\r\n\r\nexport default GroupComponent;","import Helpers from '../../core/tools/Helpers.js';\r\nimport GroupComponent from './GroupComponent.js';\r\n\r\n//Group functions\r\nclass Group{\r\n\r\n\tconstructor(groupManager, parent, level, key, field, generator, oldGroup){\r\n\t\tthis.groupManager = groupManager;\r\n\t\tthis.parent = parent;\r\n\t\tthis.key = key;\r\n\t\tthis.level = level;\r\n\t\tthis.field = field;\r\n\t\tthis.hasSubGroups = level < (groupManager.groupIDLookups.length - 1);\r\n\t\tthis.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\r\n\t\tthis.type = \"group\"; //type of element\r\n\t\tthis.old = oldGroup;\r\n\t\tthis.rows = [];\r\n\t\tthis.groups = [];\r\n\t\tthis.groupList = [];\r\n\t\tthis.generator = generator;\r\n\t\tthis.elementContents = false;\r\n\t\tthis.height = 0;\r\n\t\tthis.outerHeight = 0;\r\n\t\tthis.initialized = false;\r\n\t\tthis.calcs = {};\r\n\t\tthis.initialized = false;\r\n\t\tthis.modules = {};\r\n\t\tthis.arrowElement = false;\r\n\r\n\t\tthis.visible = oldGroup ? oldGroup.visible : (typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0]);\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.createElements();\r\n\t\tthis.addBindings();\r\n\r\n\t\tthis.createValueGroups();\r\n\t}\r\n\r\n\twipe(){\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tgroup.wipe();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\tif(row.modules){\r\n\t\t\t\t\tdelete row.modules.group;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.arrowElement = false;\r\n\t\tthis.elementContents = false;\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar arrow = document.createElement(\"div\");\r\n\t\tarrow.classList.add(\"tabulator-arrow\");\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-row\");\r\n\t\tthis.element.classList.add(\"tabulator-group\");\r\n\t\tthis.element.classList.add(\"tabulator-group-level-\" + this.level);\r\n\t\tthis.element.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tthis.arrowElement = document.createElement(\"div\");\r\n\t\tthis.arrowElement.classList.add(\"tabulator-group-toggle\");\r\n\t\tthis.arrowElement.appendChild(arrow);\r\n\r\n\t\t//setup movable rows\r\n\t\tif(this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")){\r\n\t\t\tthis.groupManager.table.modules.moveRow.initializeGroupHeader(this);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateValueGroups(){\r\n\t\tvar level = this.level + 1;\r\n\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\tthis.groupManager.allowedValues[level].forEach((value) => {\r\n\t\t\t\tthis._createGroup(value, level);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\taddBindings(){\r\n\t\tvar dblTap,\ttapHold, tap, toggleElement;\r\n\r\n\t\tif ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")){\r\n\t\t\tthis.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTap){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tthis.groupManager.table.options.groupTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupDblTap){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tthis.groupManager.table.options.groupDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTapHold){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tthis.groupManager.table.options.groupTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.groupManager.table.options.groupToggleElement){\r\n\t\t\ttoggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\r\n\r\n\t\t\ttoggleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\tthis.toggleVisibility();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_createGroup(groupID, level){\r\n\t\tvar groupKey = level + \"_\" + groupID;\r\n\t\tvar group = new Group(this.groupManager, this, level, groupID,  this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\t_addRowToGroup(row){\r\n\r\n\t\tvar level = this.level + 1;\r\n\r\n\t\tif(this.hasSubGroups){\r\n\t\t\tvar groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\r\n\t\t\tgroupKey = level + \"_\" + groupID;\r\n\r\n\t\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\t\tif(this.groups[groupKey]){\r\n\t\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(!this.groups[groupKey]){\r\n\t\t\t\t\tthis._createGroup(groupID, level);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_addRow(row){\r\n\t\tthis.rows.push(row);\r\n\t\trow.modules.group = this;\r\n\t}\r\n\r\n\tinsertRow(row, to, after){\r\n\t\tvar data = this.conformRowData({});\r\n\r\n\t\trow.updateData(data);\r\n\r\n\t\tvar toIndex = this.rows.indexOf(to);\r\n\r\n\t\tif(toIndex > -1){\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.splice(toIndex+1, 0, row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.splice(toIndex, 0, row);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trow.modules.group = this;\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.updateGroupRows(true);\r\n\t}\r\n\r\n\tscrollHeader(left){\r\n\t\tthis.arrowElement.style.marginLeft = left;\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\tchild.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tgetRowIndex(row){}\r\n\r\n\t//update row data to match grouping contraints\r\n\tconformRowData(data){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = this.key;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\r\n\t\t}\r\n\r\n\t\tif(this.parent){\r\n\t\t\tdata = this.parent.conformRowData(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tremoveRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\tvar el = row.getElement();\r\n\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.groupManager.table.options.groupValues && !this.rows.length){\r\n\t\t\tif(this.parent){\r\n\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}else{\r\n\r\n\t\t\tif(el.parentNode){\r\n\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateGroupHeaderContents();\r\n\t\t\t\r\n\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.groupList.length){\r\n\t\t\t\tif(this.parent){\r\n\t\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetHeadersAndRows(noCalc){\r\n\t\tvar output = [];\r\n\r\n\t\toutput.push(this);\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\t\toutput = output.concat(group.getHeadersAndRows(noCalc));\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput = output.concat(this.rows);\r\n\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" &&  this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\r\n\t\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\")){\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetData(visible, transform){\r\n\t\tvar output = [];\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(!visible || (visible && this.visible)){\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRowCount(){\r\n\t\tvar count = 0;\r\n\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\tcount += group.getRowCount();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcount = this.rows.length;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\ttoggleVisibility(){\r\n\t\tif(this.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.visible = false;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\trow.detachElement();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\r\n\t\t\tvar prev = this.generateElement();\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\t\trow.initialize();\r\n\t\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\trow.initialize();\r\n\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\r\n\t}\r\n\r\n\t_visSet(){\r\n\t\tvar data = [];\r\n\r\n\t\tif(typeof this.visible == \"function\"){\r\n\r\n\t\t\tthis.rows.forEach(function(row){\r\n\t\t\t\tdata.push(row.getData());\r\n\t\t\t});\r\n\r\n\t\t\tthis.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\r\n\t\t}\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tmatch = result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(this.rows.find(function(item){\r\n\t\t\t\treturn item === row;\r\n\t\t\t})){\r\n\t\t\t\tmatch = this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetSubGroups(component){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\toutput.push(component ? child.getComponent() : child);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRows(compoment){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\toutput.push(compoment ? row.getComponent() : row);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateGroupHeaderContents(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\tthis.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(typeof this.elementContents === \"string\"){\r\n\t\t\tthis.element.innerHTML = this.elementContents;\r\n\t\t}else{\r\n\t\t\tthis.element.appendChild(this.elementContents);\r\n\t\t}\r\n\r\n\t\tthis.element.insertBefore(this.arrowElement, this.element.firstChild);\r\n\t}\r\n\r\n\tgetPath(path = []) {\r\n\t\tpath.unshift(this.key);\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.getPath(path);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\r\n\t////////////// Standard Row Functions //////////////\r\n\r\n\tgetElement(){\r\n\t\treturn this.elementContents ? this.element : this.generateElement();\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.addBindings = false;\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\t\t}else{\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tfor(var i = 0; i < this.element.childNodes.length; ++i){\r\n\t\t\tthis.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\r\n\t\t}\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\t// this.addBindings();\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(){\r\n\t\tthis.setHeight(this.element.clientHeight);\r\n\t}\r\n\r\n\tinitialize(force){\r\n\t\tif(!this.initialized || force){\r\n\t\t\tthis.normalizeHeight();\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\treinitialize(){\r\n\t\tthis.initialized = false;\r\n\t\tthis.height = 0;\r\n\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tif(this.height != height){\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this;\r\n\t}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n\r\n\tdeinitializeHeight(){}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new GroupComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nexport default Group;","import Module from '../../core/Module.js';\r\n\r\nimport GroupComponent from './GroupComponent.js';\r\nimport Group from './Group.js';\r\n\r\nclass GroupRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.groupIDLookups = false; //enable table grouping and set field to group by\r\n\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\tthis.groupList = []; //ordered list of groups\r\n\t\tthis.allowedValues = false;\r\n\t\tthis.groups = {}; //hold row groups\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.displayHandler = this.getRows.bind(this);\r\n\r\n\t\t//register table options\r\n\t\tthis.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\r\n\t\tthis.registerTableOption(\"groupStartOpen\", true); //starting state of group\r\n\t\tthis.registerTableOption(\"groupValues\", false);\r\n\t\tthis.registerTableOption(\"groupUpdateOnCellEdit\", false);\r\n\t\tthis.registerTableOption(\"groupHeader\", false); //header generation function\r\n\t\tthis.registerTableOption(\"groupHeaderPrint\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderClipboard\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderHtmlOutput\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderDownload\", null);\r\n\t\tthis.registerTableOption(\"groupToggleElement\", \"arrow\");\r\n\t\tthis.registerTableOption(\"groupClosedShowCalcs\", false);\r\n\r\n\t\t//register table functions\r\n\t\tthis.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\r\n\t}\r\n\r\n\t//initialize group configuration\r\n\tinitialize(){\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\tthis.configureGroupSetup();\r\n\r\n\t\t\tif(this.table.options.groupUpdateOnCellEdit){\r\n\t\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.wipe.bind(this));\r\n\t\t\tthis.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-moving\", this.rowMoving.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"rows-sample\", this.rowSample.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.displayHandler, 20);\r\n\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigureGroupSetup(){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tvar groupBy = this.table.options.groupBy,\r\n\t\t\tstartOpen = this.table.options.groupStartOpen,\r\n\t\t\tgroupHeader = this.table.options.groupHeader;\r\n\r\n\t\t\tthis.allowedValues = this.table.options.groupValues;\r\n\r\n\t\t\tif(Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length){\r\n\t\t\t\tconsole.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\r\n\t\t\tthis.langBind(\"groups|item\", (langValue, lang) => {\r\n\t\t\t\tthis.headerGenerator[0] = (value, count, data) => { //header layout function\r\n\t\t\t\t\treturn (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + ((count === 1) ? langValue : lang.groups.items) + \")</span>\";\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.groupIDLookups = [];\r\n\r\n\t\t\tif(Array.isArray(groupBy) || groupBy){\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\"){\r\n\t\t\t\t\tthis.table.modules.columnCalcs.removeCalcs();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\"){\r\n\r\n\t\t\t\t\tvar cols = this.table.columnManager.getRealColumns();\r\n\r\n\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\tif(col.definition.topCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeTopRow();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(col.definition.bottomCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeBottomRow();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!Array.isArray(groupBy)){\r\n\t\t\t\tgroupBy = [groupBy];\r\n\t\t\t}\r\n\r\n\t\t\tgroupBy.forEach((group, i) => {\r\n\t\t\t\tvar lookupFunc, column;\r\n\r\n\t\t\t\tif(typeof group == \"function\"){\r\n\t\t\t\t\tlookupFunc = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumn = this.table.columnManager.getColumnByField(group);\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn column.getFieldValue(data);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn data[group];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groupIDLookups.push({\r\n\t\t\t\t\tfield: typeof group === \"function\" ? false : group,\r\n\t\t\t\t\tfunc:lookupFunc,\r\n\t\t\t\t\tvalues:this.allowedValues ? this.allowedValues[i] : false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif(startOpen){\r\n\t\t\t\tif(!Array.isArray(startOpen)){\r\n\t\t\t\t\tstartOpen = [startOpen];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartOpen.forEach((level) => {\r\n\t\t\t\t\tlevel = typeof level == \"function\" ? level : function(){return true;};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.startOpen = startOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(groupHeader){\r\n\t\t\t\tthis.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowSample(rows, prevValue){\r\n\t\tvar group = this.getGroups(false)[0];\r\n\r\n\t\tprevValue.push(group.getRows(false)[0]);\r\n\r\n\t\treturn prevValue;\r\n\t}\r\n\r\n\tvirtualRenderFill(){\r\n\t\tvar el = this.table.rowManager.tableElement;\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\treturn row.type !== \"group\";\r\n\t\t});\r\n\r\n\t\tel.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\r\n\r\n\t\t// if(this.table.options.groupBy){\r\n\t\t// \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\r\n\t\t// \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\trowAddingIndex(row, index, top){\r\n\t\tthis.assignRowToGroup(row);\r\n\r\n\t\tvar groupRows = row.modules.group.rows;\r\n\r\n\t\tif(groupRows.length > 1){\r\n\t\t\tif(!index || (index && groupRows.indexOf(index) == -1)){\r\n\t\t\t\tif(top){\r\n\t\t\t\t\tif(groupRows[0] !== row){\r\n\t\t\t\t\t\tindex = groupRows[0];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(groupRows[groupRows.length -1] !== row){\r\n\t\t\t\t\t\tindex = groupRows[groupRows.length -1];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"group-changed\");\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tsetGroupBy(groups){\r\n\t\tthis.table.options.groupBy = groups;\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.initialize();\r\n\t\t}else{\r\n\t\t\tthis.configureGroupSetup();\r\n\t\t}\r\n\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupValues(groupValues){\r\n\t\tthis.table.options.groupValues = groupValues;\r\n\t\tthis.configureGroupSetup();\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupStartOpen(values){\r\n\t\tthis.table.options.groupStartOpen = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetGroupHeader(values){\r\n\t\tthis.table.options.groupHeader = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetGroups(values){\r\n\t\treturn this.getGroups(true);\r\n\t}\r\n\r\n\t// get grouped table data in the same format as getData()\r\n\tuserGetGroupedData(){\r\n\t\treturn this.table.options.groupBy ?\r\n\t\tthis.getGroupedData() : this.getData()\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////////\r\n\t///////// Component Functions /////////\r\n\t///////////////////////////////////////\r\n\r\n\trowGetGroup(row){\r\n\t\treturn row.modules.group ? row.modules.group.getComponent() : false;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\trowMoving(from, to, after){\r\n\t\tif(!after && to instanceof Group){\r\n\t\t\tto = this.table.rowManager.prevDisplayRow(from) || to;\r\n\t\t}\r\n\r\n\t\tvar toGroup = to instanceof Group ? to : to.modules.group;\r\n\t\tvar fromGroup = from instanceof Group ? from : from.modules.group;\r\n\r\n\t\tif(toGroup === fromGroup){\r\n\t\t\tthis.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\r\n\t\t}else{\r\n\t\t\tif(fromGroup){\r\n\t\t\t\tfromGroup.removeRow(from);\r\n\t\t\t}\r\n\r\n\t\t\ttoGroup.insertRow(from, to, after);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowDeleting(row){\r\n\t\t//remove from group\r\n\t\tif(row.modules.group){\r\n\t\t\trow.modules.group.removeRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowsUpdated(row){\r\n\t\tthis.updateGroupRows(true);\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.reassignRowToGroup(cell.row);\r\n\t}\r\n\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//return appropriate rows with group headers\r\n\tgetRows(rows){\r\n\t\tif(this.table.options.groupBy && this.groupIDLookups.length){\r\n\r\n\t\t\tthis.dispatchExternal(\"dataGrouping\");\r\n\r\n\t\t\tthis.generateGroups(rows);\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataGrouped\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataGrouped\", this.getGroups(true));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.updateGroupRows();\r\n\r\n\t\t}else{\r\n\t\t\treturn rows.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\tgetGroups(component){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroupComponents.push(component ? group.getComponent() : group);\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\tgetChildGroups(group){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tif(!group){\r\n\t\t\tgroup = this;\r\n\t\t}\r\n\r\n\t\tgroup.groupList.forEach((child) => {\r\n\t\t\tif(child.groupList.length){\r\n\t\t\t\tgroupComponents = groupComponents.concat(this.getChildGroups(child));\r\n\t\t\t}else{\r\n\t\t\t\tgroupComponents.push(child);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroup.wipe();\r\n\t\t});\r\n\t}\r\n\r\n\tpullGroupListData(groupList) {\r\n\t\tvar groupListData = [];\r\n\r\n\t\tgroupList.forEach((group) => {\r\n\t\t\tvar groupHeader = {};\r\n\t\t\tgroupHeader.level = 0;\r\n\t\t\tgroupHeader.rowCount = 0;\r\n\t\t\tgroupHeader.headerContent = \"\";\r\n\t\t\tvar childData = [];\r\n\r\n\t\t\tif (group.hasSubGroups) {\r\n\t\t\t\tchildData = this.pullGroupListData(group.groupList);\r\n\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\t\t\t\tgroupListData = groupListData.concat(childData);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\r\n\t\t\t\tgroupHeader.rowCount = group.getRows().length;\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\r\n\t\t\t\tgroup.getRows().forEach((row) => {\r\n\t\t\t\t\tgroupListData.push(row.getData(\"data\"));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupListData\r\n\t}\r\n\r\n\tgetGroupedData(){\r\n\r\n\t\treturn this.pullGroupListData(this.groupList);\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\tif(result){\r\n\t\t\t\tmatch = result;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tcountGroups(){\r\n\t\treturn this.groupList.length;\r\n\t}\r\n\r\n\tgenerateGroups(rows){\r\n\t\tvar oldGroups = this.groups;\r\n\r\n\t\tthis.groups = {};\r\n\t\tthis.groupList = [];\r\n\r\n\t\tif(this.allowedValues && this.allowedValues[0]){\r\n\t\t\tthis.allowedValues[0].forEach((value) => {\r\n\t\t\t\tthis.createGroup(value, 0, oldGroups);\r\n\t\t\t});\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToExistingGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcreateGroup(groupID, level, oldGroups){\r\n\t\tvar groupKey = level + \"_\" + groupID,\r\n\t\tgroup;\r\n\r\n\t\toldGroups = oldGroups || [];\r\n\r\n\t\tgroup = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\tassignRowToExistingGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tgroupKey = \"0_\" + groupID;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\tassignRowToGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tnewGroupNeeded = !this.groups[\"0_\" + groupID];\r\n\r\n\t\tif(newGroupNeeded){\r\n\t\t\tthis.createGroup(groupID, 0, oldGroups);\r\n\t\t}\r\n\r\n\t\tthis.groups[\"0_\" + groupID].addRow(row);\r\n\r\n\t\treturn !newGroupNeeded;\r\n\t}\r\n\r\n\treassignRowToGroup(row){\r\n\t\tif(row.type === \"row\"){\r\n\t\t\tvar oldRowGroup = row.modules.group,\r\n\t\t\toldGroupPath = oldRowGroup.getPath(),\r\n\t\t\tnewGroupPath = this.getExpectedPath(row),\r\n\t\t\tsamePath = true;\r\n\r\n\t\t\t// figure out if new group path is the same as old group path\r\n\t\t\tvar samePath = (oldGroupPath.length == newGroupPath.length) && oldGroupPath.every((element, index) => {\r\n\t\t\t\treturn element === newGroupPath[index];\r\n\t\t\t});\r\n\r\n\t\t\t// refresh if they new path and old path aren't the same (aka the row's groupings have changed)\r\n\t\t\tif(!samePath) {\r\n\t\t\t\toldRowGroup.removeRow(row);\r\n\t\t\t\tthis.assignRowToGroup(row, this.groups);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetExpectedPath(row) {\r\n\t\tvar groupPath = [], rowData = row.getData();\r\n\r\n\t\tthis.groupIDLookups.forEach((groupId) => {\r\n\t\t\tgroupPath.push(groupId.func(rowData));\r\n\t\t});\r\n\r\n\t\treturn groupPath;\r\n\t}\r\n\r\n\tupdateGroupRows(force){\r\n\t\tvar output = [],\r\n\t\toldRowCount;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\toutput = output.concat(group.getHeadersAndRows());\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.refreshData(true, this.displayHandler);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tscrollHeaders(left){\r\n\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\tleft -= this.table.columnManager.renderer.vDomPadLeft;\r\n\t\t}\r\n\r\n\t\tleft = left + \"px\";\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tgroup.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGroupRows.moduleName = \"groupRows\";\r\n\r\nexport default GroupRows;","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.oldValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowDelete: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.newValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowDelete:function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\nimport Row from '../../core/row/Row.js';\r\nimport Cell from '../../core/cell/Cell.js';\r\n\r\nimport defaultUndoers from './defaults/undoers.js';\r\nimport defaultRedoers from './defaults/redoers.js';\r\n\r\nclass History extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\r\n\t\tthis.registerTableOption(\"history\", false); //enable edit history\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.history){\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\r\n\t\t\tthis.subscribe(\"row-delete\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clear.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowAdded.bind(this));\r\n\t\t\tthis.subscribe(\"row-move\", this.rowMoved.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"undo\", this.undo.bind(this));\r\n\t\tthis.registerTableFunction(\"redo\", this.redo.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHistory\", this.clear.bind(this));\r\n\t}\r\n\r\n\trowMoved(from, to, after){\r\n\t\tthis.action(\"rowMove\", from, {posFrom:this.table.rowManager.getRowPosition(from), posTo:this.table.rowManager.getRowPosition(to), to:to, after:after});\r\n\t}\r\n\r\n\trowAdded(row, data, pos, index){\r\n\t\tthis.action(\"rowAdd\", row, {data:data, pos:pos, index:index});\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tvar index, rows;\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\trows = row.getComponent().getGroup().rows\r\n\t\t\tindex = rows.indexOf(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = rows[index-1];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tindex = row.table.rowManager.getRowIndex(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = row.table.rowManager.rows[index-1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.action(\"rowDelete\", row, {data:row.getData(), pos:!index, index:index});\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.action(\"cellEdit\", cell, {oldValue:cell.oldValue, newValue:cell.value});\r\n\t}\r\n\r\n\tclear(){\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\t}\r\n\r\n\taction(type, component, data){\r\n\t\tthis.history = this.history.slice(0, this.index + 1);\r\n\r\n\t\tthis.history.push({\r\n\t\t\ttype:type,\r\n\t\t\tcomponent:component,\r\n\t\t\tdata:data,\r\n\t\t});\r\n\r\n\t\tthis.index ++;\r\n\t}\r\n\r\n\tgetHistoryUndoSize(){\r\n\t\treturn this.index + 1;\r\n\t}\r\n\r\n\tgetHistoryRedoSize(){\r\n\t\treturn this.history.length - (this.index + 1);\r\n\t}\r\n\r\n\tclearComponentHistory(component){\r\n\t\tvar index = this.history.findIndex(function(item){\r\n\t\t\treturn item.component === component;\r\n\t\t});\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.history.splice(index, 1);\r\n\t\t\tif(index <= this.index){\r\n\t\t\t\tthis.index--;\r\n\t\t\t}\r\n\r\n\t\t\tthis.clearComponentHistory(component);\r\n\t\t}\r\n\t}\r\n\r\n\tundo(){\r\n\t\tif(this.index > -1){\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.undoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.index--;\r\n\r\n\t\t\tthis.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Undo Error - No more history to undo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tredo(){\r\n\t\tif(this.history.length-1 > this.index){\r\n\r\n\t\t\tthis.index++;\r\n\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.redoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Redo Error - No more history to redo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//rebind rows to new element after deletion\r\n\t_rebindRow(oldRow, newRow){\r\n\t\tthis.history.forEach(function(action){\r\n\t\t\tif(action.component instanceof Row){\r\n\t\t\t\tif(action.component === oldRow){\r\n\t\t\t\t\taction.component = newRow;\r\n\t\t\t\t}\r\n\t\t\t}else if(action.component instanceof Cell){\r\n\t\t\t\tif(action.component.row === oldRow){\r\n\t\t\t\t\tvar field = action.component.column.getField();\r\n\r\n\t\t\t\t\tif(field){\r\n\t\t\t\t\t\taction.component = newRow.getCell(field);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nHistory.moduleName = \"history\";\r\n\r\n//load defaults\r\nHistory.undoers = defaultUndoers;\r\nHistory.redoers = defaultRedoers;\r\n\r\nexport default History;","import Module from '../../core/Module.js';\r\nimport Column from '../../core/column/Column.js';\r\n\r\nclass HtmlTableImport extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.fieldIndex = [];\r\n\t\tthis.hasIndex = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.tableElementCheck();\r\n\t}\r\n\r\n\ttableElementCheck(){\r\n\t\tif(this.table.originalElement && this.table.originalElement.tagName === \"TABLE\"){\r\n\t\t\tthis.parseTable();\r\n\t\t}\r\n\t}\r\n\r\n\tparseTable(){\r\n\t\tvar element = this.table.originalElement,\r\n\t\toptions = this.table.options,\r\n\t\tcolumns = options.columns,\r\n\t\theaders = element.getElementsByTagName(\"th\"),\r\n\t\trows = element.getElementsByTagName(\"tbody\")[0],\r\n\t\tdata = [],\r\n\t\tnewTable;\r\n\r\n\t\tthis.hasIndex = false;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImporting\");\r\n\r\n\t\trows = rows ? rows.getElementsByTagName(\"tr\") : [];\r\n\r\n\t\t//check for Tabulator inline options\r\n\t\tthis._extractOptions(element, options);\r\n\r\n\t\tif(headers.length){\r\n\t\t\tthis._extractHeaders(headers, rows);\r\n\t\t}else{\r\n\t\t\tthis._generateBlankHeaders(headers, rows);\r\n\t\t}\r\n\r\n\t\t//iterate through table rows and build data set\r\n\t\tfor(var index = 0; index < rows.length; index++){\r\n\t\t\tvar row = rows[index],\r\n\t\t\tcells = row.getElementsByTagName(\"td\"),\r\n\t\t\titem = {};\r\n\r\n\t\t\t//create index if the dont exist in table\r\n\t\t\tif(!this.hasIndex){\r\n\t\t\t\titem[options.index] = index;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < cells.length; i++){\r\n\t\t\t\tvar cell = cells[i];\r\n\t\t\t\tif(typeof this.fieldIndex[i] !== \"undefined\"){\r\n\t\t\t\t\titem[this.fieldIndex[i]] = cell.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//add row data to item\r\n\t\t\tdata.push(item);\r\n\t\t}\r\n\r\n\t\toptions.data = data;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImported\");\r\n\t}\r\n\r\n\t//extract tabulator attribute options\r\n\t_extractOptions(element, options, defaultOptions){\r\n\t\tvar attributes = element.attributes;\r\n\t\tvar optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\r\n\t\tvar optionsList = {};\r\n\r\n\t\toptionsArr.forEach((item) => {\r\n\t\t\toptionsList[item.toLowerCase()] = item;\r\n\t\t});\r\n\r\n\t\tfor(var index in attributes){\r\n\t\t\tvar attrib = attributes[index];\r\n\t\t\tvar name;\r\n\r\n\t\t\tif(attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0){\r\n\t\t\t\tname = attrib.name.replace(\"tabulator-\", \"\");\r\n\r\n\t\t\t\tif(typeof optionsList[name] !== \"undefined\"){\r\n\t\t\t\t\toptions[optionsList[name]] = this._attribValue(attrib.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//get value of attribute\r\n\t_attribValue(value){\r\n\t\tif(value === \"true\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(value === \"false\"){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t//find column if it has already been defined\r\n\t_findCol(title){\r\n\t\tvar match = this.table.options.columns.find((column) => {\r\n\t\t\treturn column.title === title;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\t//extract column from headers\r\n\t_extractHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\texists = false,\r\n\t\t\tcol = this._findCol(header.textContent),\r\n\t\t\twidth, attributes;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\texists = true;\r\n\t\t\t}else{\r\n\t\t\t\tcol = {title:header.textContent.trim()};\r\n\t\t\t}\r\n\r\n\t\t\tif(!col.field) {\r\n\t\t\t\tcol.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\r\n\t\t\t}\r\n\r\n\t\t\twidth = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width && !col.width)\t{\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\t//check for Tabulator inline options\r\n\t\t\tthis._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tif(col.field == this.table.options.index){\r\n\t\t\t\tthis.hasIndex = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(!exists){\r\n\t\t\t\tthis.table.options.columns.push(col);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//generate blank headers\r\n\t_generateBlankHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\tcol = {title:\"\", field:\"col\" + index};\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tvar width = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width){\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.options.columns.push(col);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nHtmlTableImport.moduleName = \"htmlTableImport\";\r\n\r\nexport default HtmlTableImport;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport Cell from '../../core/cell/Cell';\r\nimport Column from '../../core/column/Column';\r\n\r\nclass Interaction extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.eventMap = {\r\n\t\t\t//row events\r\n\t\t\trowClick:\"row-click\",\r\n\t\t\trowDblClick:\"row-dblclick\",\r\n\t\t\trowContext:\"row-contextmenu\",\r\n\t\t\trowMouseEnter:\"row-mouseenter\",\r\n\t\t\trowMouseLeave:\"row-mouseleave\",\r\n\t\t\trowMouseOver:\"row-mouseover\",\r\n\t\t\trowMouseOut:\"row-mouseout\",\r\n\t\t\trowMouseMove:\"row-mousemove\",\r\n\t\t\trowTap:\"row\",\r\n\t\t\trowDblTap:\"row\",\r\n\t\t\trowTapHold:\"row\",\r\n\r\n\t\t\t//cell events\r\n\t\t\tcellClick:\"cell-click\",\r\n\t\t\tcellDblClick:\"cell-dblclick\",\r\n\t\t\tcellContext:\"cell-contextmenu\",\r\n\t\t\tcellMouseEnter:\"cell-mouseenter\",\r\n\t\t\tcellMouseLeave:\"cell-mouseleave\",\r\n\t\t\tcellMouseOver:\"cell-mouseover\",\r\n\t\t\tcellMouseOut:\"cell-mouseout\",\r\n\t\t\tcellMouseMove:\"cell-mousemove\",\r\n\t\t\tcellTap:\"cell\",\r\n\t\t\tcellDblTap:\"cell\",\r\n\t\t\tcellTapHold:\"cell\",\r\n\r\n\t\t\t//column header events\r\n\t\t\theaderClick:\"column-click\",\r\n\t\t\theaderDblClick:\"column-dblclick\",\r\n\t\t\theaderContext:\"column-contextmenu\",\r\n\t\t\theaderMouseEnter:\"column-mouseenter\",\r\n\t\t\theaderMouseLeave:\"column-mouseleave\",\r\n\t\t\theaderMouseOver:\"column-mouseover\",\r\n\t\t\theaderMouseOut:\"column-mouseout\",\r\n\t\t\theaderMouseMove:\"column-mousemove\",\r\n\t\t\theaderTap:\"column\",\r\n\t\t\theaderDblTap:\"column\",\r\n\t\t\theaderTapHold:\"column\",\r\n\r\n\t\t\t//group header\r\n\t\t\tgroupClick:\"group-click\",\r\n\t\t\tgroupDblClick:\"group-dblclick\",\r\n\t\t\tgroupContext:\"group-contextmenu\",\r\n\t\t\tgroupMouseEnter:\"group-mouseenter\",\r\n\t\t\tgroupMouseLeave:\"group-mouseleave\",\r\n\t\t\tgroupMouseOver:\"group-mouseover\",\r\n\t\t\tgroupMouseOut:\"group-mouseout\",\r\n\t\t\tgroupMouseMove:\"group-mousemove\",\r\n\t\t\tgroupTap:\"group\",\r\n\t\t\tgroupDblTap:\"group\",\r\n\t\t\tgroupTapHold:\"group\",\r\n\t\t}\r\n\r\n\t\tthis.subscribers = {};\r\n\r\n\t\tthis.touchSubscribers = {};\r\n\r\n\t\tthis.columnSubscribers = {};\r\n\r\n\t\tthis.touchWatchers = {\r\n\t\t\trow:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcell:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcolumn:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.registerColumnOption(\"headerClick\");\r\n\t\tthis.registerColumnOption(\"headerDblClick\");\r\n\t\tthis.registerColumnOption(\"headerContext\");\r\n\t\tthis.registerColumnOption(\"headerMouseEnter\");\r\n\t\tthis.registerColumnOption(\"headerMouseLeave\");\r\n\t\tthis.registerColumnOption(\"headerMouseOver\");\r\n\t\tthis.registerColumnOption(\"headerMouseOut\");\r\n\t\tthis.registerColumnOption(\"headerMouseMove\");\r\n\t\tthis.registerColumnOption(\"headerTap\");\r\n\t\tthis.registerColumnOption(\"headerDblTap\");\r\n\t\tthis.registerColumnOption(\"headerTapHold\");\r\n\r\n\t\tthis.registerColumnOption(\"cellClick\");\r\n\t\tthis.registerColumnOption(\"cellDblClick\");\r\n\t\tthis.registerColumnOption(\"cellContext\");\r\n\t\tthis.registerColumnOption(\"cellMouseEnter\");\r\n\t\tthis.registerColumnOption(\"cellMouseLeave\");\r\n\t\tthis.registerColumnOption(\"cellMouseOver\");\r\n\t\tthis.registerColumnOption(\"cellMouseOut\");\r\n\t\tthis.registerColumnOption(\"cellMouseMove\");\r\n\t\tthis.registerColumnOption(\"cellTap\");\r\n\t\tthis.registerColumnOption(\"cellDblTap\");\r\n\t\tthis.registerColumnOption(\"cellTapHold\");\r\n\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeExternalEvents();\r\n\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this))\r\n\t\tthis.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this))\r\n\t}\r\n\r\n\tcellContentsSelectionFixer(e, cell){\r\n\t\tif(this.table.modExists(\"edit\")){\r\n\t\t\tif (this.table.modules.edit.currentCell === this){\r\n\t\t\t\treturn; //prevent instant selection of editor content\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\ttry{\r\n\t\t\tif (document.selection) { // IE\r\n\t\t\t\tvar range = document.body.createTextRange();\r\n\t\t\t\trange.moveToElementText(this.element);\r\n\t\t\t\trange.select();\r\n\t\t\t} else if (window.getSelection) {\r\n\t\t\t\tvar range = document.createRange();\r\n\t\t\t\trange.selectNode(this.element);\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\twindow.getSelection().addRange(range);\r\n\t\t\t}\r\n\t\t}catch(e){}\r\n\t}\r\n\r\n\tinitializeExternalEvents(){\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tthis.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key))\r\n\t\t}\r\n\t}\r\n\r\n\tsubscriptionChanged(key, added){\r\n\t\tvar index;\r\n\r\n\t\tif(added){\r\n\t\t\tif(!this.subscribers[key]){\r\n\t\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\t\tthis.subscribers[key] = this.handle.bind(this, key);\r\n\t\t\t\t\tthis.subscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.subscribeTouchEvents(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\tif(this.subscribers[key] && !this.columnSubscribers[key]  && !this.subscribedExternal(key)){\r\n\t\t\t\t\tthis.unsubscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t\tdelete this.subscribers[key];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.unsubscribeTouchEvents(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsubscribeTouchEvents(key){\r\n\t\tvar type = this.eventMap[key];\r\n\r\n\t\tif(!this.touchSubscribers[type + \"-touchstart\"]){\r\n\t\t\tthis.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\r\n\t\t\tthis.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\r\n\r\n\t\t\tthis.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\tthis.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\t\t}\r\n\r\n\t\tthis.subscribers[key] = true;\r\n\t}\r\n\r\n\tunsubscribeTouchEvents(key){\r\n\t\tvar notouch = true,\r\n\t\ttype = this.eventMap[key];\r\n\r\n\t\tif(this.subscribers[key] && !this.subscribedExternal(key)){\r\n\t\t\tdelete this.subscribers[key];\r\n\r\n\t\t\tfor(let i in this.eventMap){\r\n\t\t\t\tif(this.eventMap[i] === type){\r\n\t\t\t\t\tif(this.subscribers[i]){\r\n\t\t\t\t\t\tnotouch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(notouch){\r\n\t\t\t\tthis.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\t\tthis.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchstart\"];\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchend\"];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tif(def[key]){\r\n\t\t\t\tthis.subscriptionChanged(key, true);\r\n\r\n\t\t\t\tif(!this.columnSubscribers[key]){\r\n\t\t\t\t\tthis.columnSubscribers[key] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.columnSubscribers[key].push(column);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandle(action, e, component){\r\n\t\tthis.dispatchEvent(action, e, component);\r\n\t}\r\n\r\n\thandleTouch(type, action, e, component){\r\n\t\tvar watchers = this.touchWatchers[type];\r\n\r\n\t\tif(type === \"column\"){\r\n\t\t\ttype = \"header\";\r\n\t\t}\r\n\r\n\t\tswitch(action){\r\n\t\t\tcase \"start\":\r\n\t\t\twatchers.tap = true;\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\r\n\t\t\twatchers.tapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\t\twatchers.tapHold = null;\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"TapHold\", e,  component);\r\n\t\t\t}, 1000);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"end\":\r\n\t\t\tif(watchers.tap){\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tthis.dispatchEvent(type + \"Tap\", e,  component);\r\n\t\t\t}\r\n\r\n\t\t\tif(watchers.tapDbl){\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"DblTap\", e,  component);\r\n\t\t\t}else{\r\n\t\t\t\twatchers.tapDbl = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\t\twatchers.tapDbl = null;\r\n\t\t\t\t}, 300);\r\n\t\t\t}\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\twatchers.tapHold = null;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdispatchEvent(action, e, component){\r\n\t\tvar componentObj = component.getComponent(),\r\n\t\tcallback;\r\n\r\n\t\tif(this.columnSubscribers[action]){\r\n\r\n\t\t\tif(component instanceof Cell){\r\n\t\t\t\tcallback = component.column.definition[action];\r\n\t\t\t}else if(component instanceof Column){\r\n\t\t\t\tcallback = component.definition[action];\r\n\t\t\t}\r\n\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback(e, componentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(action, e, componentObj);\r\n\t}\r\n}\r\n\r\nInteraction.moduleName = \"interaction\";\r\n\r\nexport default Interaction;","export default {\r\n\tnavPrev:\"shift + 9\",\r\n\tnavNext:9,\r\n\tnavUp:38,\r\n\tnavDown:40,\r\n\tscrollPageUp:33,\r\n\tscrollPageDown:34,\r\n\tscrollToStart:36,\r\n\tscrollToEnd:35,\r\n\tundo:\"ctrl + 90\",\r\n\tredo:\"ctrl + 89\",\r\n\tcopyToClipboard:\"ctrl + 67\",\r\n};","export default {\r\n\tkeyBlock:function(e){\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tscrollPageUp:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop - rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos >= 0){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollPageDown:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop + rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos <= scrollMax){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\r\n\t},\r\n\tscrollToStart:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollToEnd:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tnavPrev:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-prev\", e);\r\n\t},\r\n\r\n\tnavNext:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-next\", e);\r\n\t},\r\n\r\n\tnavLeft:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-left\", e);\r\n\t},\r\n\r\n\tnavRight:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-right\", e);\r\n\t},\r\n\r\n\tnavUp:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-up\", e);\r\n\t},\r\n\r\n\tnavDown:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-down\", e);\r\n\t},\r\n\r\n\tundo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.undo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tredo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.redo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tcopyToClipboard:function(e){\r\n\t\tif(!this.table.modules.edit.currentCell){\r\n\t\t\tif(this.table.modExists(\"clipboard\", true)){\r\n\t\t\t\tthis.table.modules.clipboard.copy(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultBindings from './defaults/bindings.js';\r\nimport defaultActions from './defaults/actions.js';\r\n\r\nclass Keybindings extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.watchKeys = null;\r\n\t\tthis.pressedKeys = null;\r\n\t\tthis.keyupBinding = false;\r\n\t\tthis.keydownBinding = false;\r\n\r\n\t\tthis.registerTableOption(\"keybindings\", []); //array for keybindings\r\n\t\tthis.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar bindings = this.table.options.keybindings,\r\n\t\tmergedBindings = {};\r\n\r\n\t\tthis.watchKeys = {};\r\n\t\tthis.pressedKeys = [];\r\n\r\n\t\tif(bindings !== false){\r\n\r\n\t\t\tfor(let key in Keybindings.bindings){\r\n\t\t\t\tmergedBindings[key] = Keybindings.bindings[key];\r\n\t\t\t}\r\n\r\n\t\t\tif(Object.keys(bindings).length){\r\n\r\n\t\t\t\tfor(let key in bindings){\r\n\t\t\t\t\tmergedBindings[key] = bindings[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.mapBindings(mergedBindings);\r\n\t\t\tthis.bindEvents();\r\n\t\t}\r\n\r\n\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t}\r\n\r\n\tmapBindings(bindings){\r\n\t\tfor(let key in bindings){\r\n\t\t\tif(Keybindings.actions[key]){\r\n\t\t\t\tif(bindings[key]){\r\n\t\t\t\t\tif(typeof bindings[key] !== \"object\"){\r\n\t\t\t\t\t\tbindings[key] = [bindings[key]];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindings[key].forEach((binding) => {\r\n\t\t\t\t\t\tthis.mapBinding(key, binding);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Key Binding Error - no such action:\", key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmapBinding(action, symbolsList){\r\n\t\tvar binding = {\r\n\t\t\taction: Keybindings.actions[action],\r\n\t\t\tkeys: [],\r\n\t\t\tctrl: false,\r\n\t\t\tshift: false,\r\n\t\t\tmeta: false,\r\n\t\t};\r\n\r\n\t\tvar symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\r\n\r\n\t\tsymbols.forEach((symbol) => {\r\n\t\t\tswitch(symbol){\r\n\t\t\t\tcase \"ctrl\":\r\n\t\t\t\tbinding.ctrl = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shift\":\r\n\t\t\t\tbinding.shift = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"meta\":\r\n\t\t\t\tbinding.meta = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tsymbol = parseInt(symbol);\r\n\t\t\t\tbinding.keys.push(symbol);\r\n\r\n\t\t\t\tif(!this.watchKeys[symbol]){\r\n\t\t\t\t\tthis.watchKeys[symbol] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.watchKeys[symbol].push(binding);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tbindEvents(){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.keyupBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tself.pressedKeys.push(code);\r\n\r\n\t\t\t\tbindings.forEach(function(binding){\r\n\t\t\t\t\tself.checkBinding(e, binding);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.keydownBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tvar index = self.pressedKeys.indexOf(code);\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tself.pressedKeys.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.table.element.addEventListener(\"keydown\", this.keyupBinding);\r\n\r\n\t\tthis.table.element.addEventListener(\"keyup\", this.keydownBinding);\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.keyupBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keydown\", this.keyupBinding);\r\n\t\t}\r\n\r\n\t\tif(this.keydownBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keyup\", this.keydownBinding);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckBinding(e, binding){\r\n\t\tvar match = true;\r\n\r\n\t\tif(e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta){\r\n\t\t\tbinding.keys.forEach((key) => {\r\n\t\t\t\tvar index = this.pressedKeys.indexOf(key);\r\n\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tbinding.action.call(this, e);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nKeybindings.moduleName = \"keybindings\";\r\n\r\n//load defaults\r\nKeybindings.bindings = defaultBindings;\r\nKeybindings.actions = defaultActions;\r\n\r\nexport default Keybindings;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Menu extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.menuElements = [];\r\n\t\tthis.blurEvent = this.hideMenu.bind(this);\r\n\t\tthis.escEvent = this.escMenu.bind(this);\r\n\t\tthis.nestedMenuBlock = false;\r\n\t\tthis.positionReversedX = false;\r\n\r\n\t\tthis.registerTableOption(\"rowContextMenu\", false);\r\n\t\tthis.registerTableOption(\"rowClickMenu\", false);\r\n\t\tthis.registerTableOption(\"groupContextMenu\", false);\r\n\t\tthis.registerTableOption(\"groupClickMenu\", false);\r\n\r\n\t\tthis.registerColumnOption(\"headerContextMenu\");\r\n\t\tthis.registerColumnOption(\"headerMenu\");\r\n\t\tthis.registerColumnOption(\"contextMenu\");\r\n\t\tthis.registerColumnOption(\"clickMenu\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tif(cell.column.definition.contextMenu || cell.column.definition.clickMenu){\r\n\t\t\tthis.initializeCell(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerContextMenu || def.headerClickMenu || def.headerMenu){\r\n\t\t\tthis.initializeColumnHeader(column);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnHeader(column){\r\n\t\tvar headerMenuEl;\r\n\r\n\t\tif(column.definition.headerContextMenu){\r\n\t\t\tcolumn.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\r\n\t\t\tthis.tapHold(column, column.definition.headerContextMenu);\r\n\t\t}\r\n\r\n\t\t// if(column.definition.headerClickMenu){\r\n\t\t// \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\r\n\t\t// }\r\n\r\n\t\tif(column.definition.headerMenu){\r\n\r\n\t\t\theaderMenuEl = document.createElement(\"span\");\r\n\t\t\theaderMenuEl.classList.add(\"tabulator-header-menu-button\");\r\n\t\t\theaderMenuEl.innerHTML = \"&vellip;\";\r\n\r\n\t\t\theaderMenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.LoadMenuEvent(column, column.definition.headerMenu, e);\r\n\t\t\t});\r\n\r\n\t\t\tcolumn.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tLoadMenuEvent(component, menu, e){\r\n\t\tmenu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu;\r\n\r\n\t\t// if(component instanceof Cell){\r\n\t\t// \te.stopImmediatePropagation();\r\n\t\t// }\r\n\r\n\t\tthis.loadMenu(e, component, menu);\r\n\t}\r\n\r\n\ttapHold(component, menu){\r\n\t\tvar element = component.getElement(),\r\n\t\ttapHold = null,\r\n\t\tloaded = false;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\tloaded = false;\r\n\r\n\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t\tloaded = true;\r\n\r\n\t\t\t\tthis.LoadMenuEvent(component, menu, e);\r\n\t\t\t}, 1000);\r\n\r\n\t\t}, {passive: true});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tif(loaded){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.contextMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\r\n\t\t\tthis.tapHold(cell, cell.column.definition.contextMenu);\r\n\t\t}\r\n\r\n\t\tif(cell.column.definition.clickMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tif(this.table.options.rowContextMenu){\r\n\t\t\trow.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\r\n\t\t\tthis.tapHold(row, this.table.options.rowContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.rowClickMenu){\r\n\t\t\trow.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroup (group){\r\n\t\tif(this.table.options.groupContextMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\r\n\t\t\tthis.tapHold(group, this.table.options.groupContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.groupClickMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tloadMenu(e, component, menu, parentEl){\r\n\r\n\t\tvar touch = !(e instanceof MouseEvent);\r\n\r\n\t\tvar menuEl = document.createElement(\"div\");\r\n\t\tmenuEl.classList.add(\"tabulator-menu\");\r\n\r\n\t\tif(!touch){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\t//abort if no menu set\r\n\t\tif(!menu || !menu.length){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tif(this.nestedMenuBlock){\r\n\t\t\t\t//abort if child menu already open\r\n\t\t\t\tif(this.isOpen()){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.nestedMenuBlock = setTimeout(() => {\r\n\t\t\t\t\tthis.nestedMenuBlock = false;\r\n\t\t\t\t}, 100)\r\n\t\t\t}\r\n\r\n\t\t\tthis.hideMenu();\r\n\t\t\tthis.menuElements = [];\r\n\t\t}\r\n\r\n\t\tmenu.forEach((item) => {\r\n\t\t\tvar itemEl = document.createElement(\"div\"),\r\n\t\t\tlabel = item.label,\r\n\t\t\tdisabled = item.disabled;\r\n\r\n\t\t\tif(item.separator){\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-separator\");\r\n\t\t\t}else{\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-item\");\r\n\r\n\t\t\t\tif(typeof label == \"function\"){\r\n\t\t\t\t\tlabel = label.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(label instanceof Node){\r\n\t\t\t\t\titemEl.appendChild(label);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = label;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof disabled == \"function\"){\r\n\t\t\t\t\tdisabled = disabled.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-disabled\");\r\n\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\tthis.hideOldSubMenus(menuEl);\r\n\t\t\t\t\t\t\tthis.loadMenu(e, component, item.menu, itemEl);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(item.action){\r\n\t\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\t\titem.action(e, component.getComponent());\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-submenu\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmenuEl.appendChild(itemEl);\r\n\t\t});\r\n\r\n\t\tmenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.hideMenu();\r\n\t\t});\r\n\r\n\t\tthis.menuElements.push(menuEl);\r\n\t\tthis.positionMenu(menuEl, parentEl, touch, e);\r\n\t}\r\n\r\n\thideOldSubMenus(menuEl){\r\n\t\tvar index = this.menuElements.indexOf(menuEl);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tfor(let i = this.menuElements.length - 1; i > index; i--){\r\n\t\t\t\tvar el = this.menuElements[i];\r\n\r\n\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.menuElements.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpositionMenu(element, parentEl, touch, e){\r\n\t\tvar docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\r\n\t\tx, y, parentOffset;\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tx = touch ? e.touches[0].pageX : e.pageX;\r\n\t\t\ty = touch ? e.touches[0].pageY : e.pageY;\r\n\r\n\t\t\tthis.positionReversedX = false;\r\n\t\t}else{\r\n\t\t\tparentOffset = Helpers.elOffset(parentEl);\r\n\t\t\tx = parentOffset.left + parentEl.offsetWidth;\r\n\t\t\ty = parentOffset.top - 1;\r\n\t\t}\r\n\r\n\t\telement.style.top = y + \"px\";\r\n\t\telement.style.left = x + \"px\";\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"click\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"contextmenu\", this.blurEvent);\r\n\t\t\twindow.addEventListener(\"resize\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"keydown\", this.escEvent);\r\n\t\t}, 100);\r\n\r\n\t\tdocument.body.appendChild(element);\r\n\r\n\t\t//move menu to start on bottom edge if it is too close to the edge of the screen\r\n\t\tif((y + element.offsetHeight) >= docHeight){\r\n\t\t\telement.style.top = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.bottom = (docHeight - parentOffset.top - parentEl.offsetHeight - 1) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.bottom = (docHeight - y) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//move menu to start on right edge if it is too close to the edge of the screen\r\n\t\tif((x + element.offsetWidth) >= document.body.offsetWidth || this.positionReversedX){\r\n\t\t\telement.style.left = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - parentOffset.left) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - x) + \"px\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.positionReversedX = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisOpen(){\r\n\t\treturn !!this.menuElements.length;\r\n\t}\r\n\r\n\tescMenu(e){\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tthis.hideMenu();\r\n\t\t}\r\n\t}\r\n\r\n\thideMenu(){\r\n\t\tthis.menuElements.forEach((menuEl) => {\r\n\t\t\tif(menuEl.parentNode){\r\n\t\t\t\tmenuEl.parentNode.removeChild(menuEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.body.removeEventListener(\"keydown\", this.escEvent);\r\n\t\tdocument.body.removeEventListener(\"click\", this.blurEvent);\r\n\t\tdocument.body.removeEventListener(\"contextmenu\", this.blurEvent);\r\n\t\twindow.removeEventListener(\"resize\", this.blurEvent);\r\n\t\tthis.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\r\n\t}\r\n}\r\n\r\nMenu.moduleName = \"menu\";\r\n\r\nexport default Menu;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating column header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving column\r\n\t\tthis.toCol = false; //destination column\r\n\t\tthis.toColAfter = false; //position of moving column relative to the desitnation column\r\n\t\tthis.startX = 0; //starting position within header element\r\n\t\tthis.autoScrollMargin = 40; //auto scroll on edge when within margin\r\n\t\tthis.autoScrollStep = 5; //auto scroll distance in pixels\r\n\t\tthis.autoScrollTimeout = false; //auto scroll timeout\r\n\t\tthis.touchMove = false;\r\n\t\t\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\t\r\n\t\tthis.registerTableOption(\"movableColumns\", false); //enable movable columns\r\n\t}\r\n\t\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.classList.add(\"tabulator-col-placeholder\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableColumns){\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\tcolEl;\r\n\t\t\r\n\t\tif(!column.modules.frozen){\r\n\t\t\tcolEl = column.getElement();\r\n\t\t\t\r\n\t\t\tconfig.mousemove = function(e){\r\n\t\t\t\tif(column.parent === self.moving.parent){\r\n\t\t\t\t\tif((((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left) + self.table.columnManager.element.scrollLeft) > (column.getWidth() / 2)){\r\n\t\t\t\t\t\tif(self.toCol !== column || !self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\r\n\t\t\t\t\t\t\tself.moveColumn(column, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(self.toCol !== column || self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl);\r\n\t\t\t\t\t\t\tself.moveColumn(column, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(self);\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tself.touchMove = false;\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, column);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.bindTouchEvents(column);\r\n\t\t}\r\n\t\t\r\n\t\tcolumn.modules.moveColumn = config;\r\n\t}\r\n\t\r\n\tbindTouchEvents(column){\r\n\t\tvar colEl = column.getElement(),\r\n\t\tstartXMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentCol, nextCol, prevCol, nextColWidth, prevColWidth, nextColWidthLast, prevColWidthLast;\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentCol = column;\r\n\t\t\t\tnextCol = column.nextColumn();\r\n\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth()/2 : 0;\r\n\t\t\t\tprevCol = column.prevColumn();\r\n\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth()/2 : 0;\r\n\t\t\t\tnextColWidthLast = 0;\r\n\t\t\t\tprevColWidthLast = 0;\r\n\t\t\t\tstartXMove = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.startMove(e, column);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchmove\", (e) => {\r\n\t\t\tvar halfCol, diff, moveToCol;\r\n\t\t\t\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.moveHover(e);\r\n\t\t\t\t\r\n\t\t\t\tif(!startXMove){\r\n\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdiff = e.touches[0].pageX - startXMove;\r\n\t\t\t\t\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextCol && diff - nextColWidthLast > nextColWidth){\r\n\t\t\t\t\t\tmoveToCol = nextCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevCol && -diff - prevColWidthLast >  prevColWidth){\r\n\t\t\t\t\t\tmoveToCol = prevCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(moveToCol){\r\n\t\t\t\t\tcurrentCol = moveToCol;\r\n\t\t\t\t\tnextCol = moveToCol.nextColumn();\r\n\t\t\t\t\tnextColWidthLast = nextColWidth;\r\n\t\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\r\n\t\t\t\t\tprevCol = moveToCol.prevColumn();\r\n\t\t\t\t\tprevColWidthLast = prevColWidth;\r\n\t\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tstartMove(e, column){\r\n\t\tvar element = column.getElement(),\r\n\t\theaderElement = this.table.columnManager.getElement(),\r\n\t\theadersElement = this.table.columnManager.getHeadersElement();\r\n\t\t\r\n\t\tthis.moving = column;\r\n\t\tthis.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\r\n\t\t\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = column.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = column.getHeight() + \"px\";\r\n\t\t\r\n\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\t\t\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\t\t\r\n\t\tthis.table.columnManager.getElement().appendChild(this.hoverElement);\r\n\t\t\r\n\t\tthis.hoverElement.style.left = \"0\";\r\n\t\tthis.hoverElement.style.bottom = (headerElement.clientHeight - headersElement.offsetHeight) + \"px\";\r\n\t\t\r\n\t\tif(!this.touchMove){\r\n\t\t\tthis._bindMouseMove();\r\n\t\t\t\r\n\t\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\t\t}\r\n\t\t\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\t\r\n\t_bindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tmoveColumn(column, after){\r\n\t\tvar movingCells = this.moving.getCells();\r\n\t\t\r\n\t\tthis.toCol = column;\r\n\t\tthis.toColAfter = after;\r\n\t\t\r\n\t\tif(after){\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tendMove(e){\r\n\t\tif(e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\t\t\t\r\n\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\t\t\t\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\t\t\t\r\n\t\t\tif(this.toCol){\r\n\t\t\t\tthis.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toCol = false;\r\n\t\t\tthis.toColAfter = false;\r\n\t\t\t\r\n\t\t\tif(!this.touchMove){\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveHover(e){\r\n\t\tvar columnHolder = this.table.columnManager.getElement(),\r\n\t\tscrollLeft = columnHolder.scrollLeft,\r\n\t\txPos = ((this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left) + scrollLeft,\r\n\t\tscrollPos;\r\n\t\t\r\n\t\tthis.hoverElement.style.left = (xPos - this.startX) + \"px\";\r\n\t\t\r\n\t\tif(xPos - scrollLeft < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.max(0,scrollLeft-5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.min(columnHolder.clientWidth, scrollLeft+5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveColumns.moduleName = \"moveColumn\";\r\n\r\nexport default MoveColumns;\r\n","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating row header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving row\r\n\t\tthis.toRow = false; //destination row\r\n\t\tthis.toRowAfter = false; //position of moving row relative to the desitnation row\r\n\t\tthis.hasHandle = false; //row has handle instead of fully movable row\r\n\t\tthis.startY = 0; //starting Y position within header element\r\n\t\tthis.startX = 0; //starting X position within header element\r\n\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\tthis.tableRowDropEvent = false;\r\n\r\n\t\tthis.touchMove = false;\r\n\r\n\t\tthis.connection = false;\r\n\t\tthis.connectionSelectorsTables = false;\r\n\t\tthis.connectionSelectorsElements = false;\r\n\t\tthis.connectionElements = [];\r\n\t\tthis.connections = [];\r\n\r\n\t\tthis.connectedTable = false;\r\n\t\tthis.connectedRow = false;\r\n\r\n\t\tthis.registerTableOption(\"movableRows\", false); //enable movable rows\r\n\t\tthis.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsSender\", false);\r\n\t\tthis.registerTableOption(\"movableRowsReceiver\", \"insert\");\r\n\r\n\t\tthis.registerColumnOption(\"rowHandle\");\r\n\t}\r\n\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.classList.add(\"tabulator-row-placeholder\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableRows){\r\n\t\t\tthis.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\r\n\t\t\tthis.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\r\n\r\n\t\t\tthis.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\r\n\r\n\t\t\tthis.subscribe(\"cell-init\", this.initializeCell.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroupHeader(group){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tif(((e.pageY - Helpers.elOffset(group.element).top) + self.table.rowManager.element.scrollTop) > (group.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== group || !self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(group, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== group || self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\tif(rowEl.previousSibling){\r\n\t\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\t\tself.moveRow(group, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\t\tgroup.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(((e.pageY - Helpers.elOffset(rowEl).top) + self.table.rowManager.element.scrollTop) > (row.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== row || !self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(row, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== row || self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\tself.moveRow(row, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\r\n\t\tif(!this.hasHandle){\r\n\r\n\t\t\trowEl = row.getElement();\r\n\r\n\t\t\trowEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trowEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(row, row.getElement());\r\n\t\t}\r\n\r\n\t\trow.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tif(column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tthis.hasHandle = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tvar self = this,\r\n\t\t\tcellEl = cell.getElement(true);\r\n\r\n\t\t\tcellEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, cell.row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcellEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(cell.row, cellEl);\r\n\t\t}\r\n\t}\r\n\r\n\tbindTouchEvents(row, element){\r\n\t\tvar startYMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentRow, nextRow, prevRow, nextRowHeight, prevRowHeight, nextRowHeightLast, prevRowHeightLast;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentRow = row;\r\n\t\t\t\tnextRow = row.nextRow();\r\n\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight()/2 : 0;\r\n\t\t\t\tprevRow = row.prevRow();\r\n\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight()/2 : 0;\r\n\t\t\t\tnextRowHeightLast = 0;\r\n\t\t\t\tprevRowHeightLast = 0;\r\n\t\t\t\tstartYMove = false;\r\n\r\n\t\t\t\tthis.startMove(e, row);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\tthis.moving, this.toRow, this.toRowAfter\r\n\t\telement.addEventListener(\"touchmove\", (e) => {\r\n\r\n\t\t\tvar halfCol, diff, moveToRow;\r\n\r\n\t\t\tif(this.moving){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.moveHover(e);\r\n\r\n\t\t\t\tif(!startYMove){\r\n\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff = e.touches[0].pageY - startYMove;\r\n\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextRow && diff - nextRowHeightLast > nextRowHeight){\r\n\t\t\t\t\t\tmoveToRow = nextRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevRow && -diff - prevRowHeightLast >  prevRowHeight){\r\n\t\t\t\t\t\tmoveToRow = prevRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(moveToRow){\r\n\t\t\t\t\tcurrentRow = moveToRow;\r\n\t\t\t\t\tnextRow = moveToRow.nextRow();\r\n\t\t\t\t\tnextRowHeightLast = nextRowHeight;\r\n\t\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\r\n\t\t\t\t\tprevRow = moveToRow.prevRow();\r\n\t\t\t\t\tprevRowHeightLast = prevRowHeight;\r\n\t\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t\tthis.touchMove = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_bindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstartMove(e, row){\r\n\t\tvar element = row.getElement();\r\n\r\n\t\tthis.setStartPosition(e, row);\r\n\r\n\t\tthis.moving = row;\r\n\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = row.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = row.getHeight() + \"px\";\r\n\r\n\t\tif(!this.connection){\r\n\t\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\t\telement.parentNode.removeChild(element);\r\n\t\t}else{\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-sending\");\r\n\t\t\tthis.connectToTables(row);\r\n\t\t}\r\n\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\r\n\t\tif(this.connection){\r\n\t\t\tdocument.body.appendChild(this.hoverElement);\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\t\t\tthis.hoverElement.style.width = this.table.element.clientWidth + \"px\";\r\n\t\t\tthis.hoverElement.style.whiteSpace = \"nowrap\";\r\n\t\t\tthis.hoverElement.style.overflow = \"hidden\";\r\n\t\t\tthis.hoverElement.style.pointerEvents = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(this.hoverElement);\r\n\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\r\n\t\t\tthis._bindMouseMove();\r\n\t\t}\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\r\n\tsetStartPosition(e, row){\r\n\t\tvar pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\r\n\t\tpageY = this.touchMove ? e.touches[0].pageY : e.pageY,\r\n\t\telement, position;\r\n\r\n\t\telement = row.getElement();\r\n\t\tif(this.connection){\r\n\t\t\tposition = element.getBoundingClientRect();\r\n\r\n\t\t\tthis.startX = position.left - pageX + window.pageXOffset;\r\n\t\t\tthis.startY = position.top - pageY + window.pageYOffset;\r\n\t\t}else{\r\n\t\t\tthis.startY = (pageY - element.getBoundingClientRect().top);\r\n\t\t}\r\n\t}\r\n\r\n\tendMove(e){\r\n\t\tif(!e || e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\r\n\t\t\tif(!this.connection){\r\n\t\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tif(this.toRow){\r\n\t\t\t\tthis.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\r\n\t\t\t}\r\n\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toRow = false;\r\n\t\t\tthis.toRowAfter = false;\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\t\tif(this.connection){\r\n\t\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-sending\");\r\n\t\t\t\tthis.disconnectFromTables();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(row, after){\r\n\t\tthis.toRow = row;\r\n\t\tthis.toRowAfter = after;\r\n\t}\r\n\r\n\tmoveHover(e){\r\n\t\tif(this.connection){\r\n\t\t\tthis.moveHoverConnections.call(this, e);\r\n\t\t}else{\r\n\t\t\tthis.moveHoverTable.call(this, e);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveHoverTable(e){\r\n\t\tvar rowHolder = this.table.rowManager.getElement(),\r\n\t\tscrollTop = rowHolder.scrollTop,\r\n\t\tyPos = ((this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top) + scrollTop,\r\n\t\tscrollPos;\r\n\r\n\t\tthis.hoverElement.style.top = (yPos - this.startY) + \"px\";\r\n\t}\r\n\r\n\tmoveHoverConnections(e){\r\n\t\tthis.hoverElement.style.left = (this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX)) + \"px\";\r\n\t\tthis.hoverElement.style.top = (this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY)) + \"px\";\r\n\t}\r\n\r\n\telementRowDrop(e, element, row){\r\n\t\tthis.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\r\n\t}\r\n\r\n\t//establish connection with other tables\r\n\tconnectToTables(row){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\r\n\t\t\t\trow:row,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.connectionSelectorsElements){\r\n\r\n\t\t\tthis.connectionElements = [];\r\n\r\n\t\t\tif(!Array.isArray(this.connectionSelectorsElements)){\r\n\t\t\t\tthis.connectionSelectorsElements = [this.connectionSelectorsElements];\r\n\t\t\t}\r\n\r\n\t\t\tthis.connectionSelectorsElements.forEach((query) => {\r\n\t\t\t\tif(typeof query === \"string\"){\r\n\t\t\t\t\tthis.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.connectionElements.push(query);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\t\tvar dropEvent = (e) => {\r\n\t\t\t\t\tthis.elementRowDrop(e, element, this.moving);\r\n\t\t\t\t};\r\n\r\n\t\t\t\telement.addEventListener(\"mouseup\", dropEvent);\r\n\t\t\t\telement.tabulatorElementDropEvent = dropEvent;\r\n\r\n\t\t\t\telement.classList.add(\"tabulator-movingrow-receiving\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//disconnect from other tables\r\n\tdisconnectFromTables(){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\r\n\t\t}\r\n\r\n\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\telement.classList.remove(\"tabulator-movingrow-receiving\");\r\n\t\t\telement.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\r\n\t\t\tdelete element.tabulatorElementDropEvent;\r\n\t\t});\r\n\t}\r\n\r\n\t//accept incomming connection\r\n\tconnect(table, row){\r\n\t\tif(!this.connectedTable){\r\n\t\t\tthis.connectedTable = table;\r\n\t\t\tthis.connectedRow = row;\r\n\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.tableRowDropEvent = this.tableRowDrop.bind(this);\r\n\r\n\t\t\tthis.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStart\", row, table);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//close incomming connection\r\n\tdisconnect(table){\r\n\t\tif(table === this.connectedTable){\r\n\t\t\tthis.connectedTable = false;\r\n\t\t\tthis.connectedRow = false;\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStop\", table);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - trying to disconnect from non connected table\")\r\n\t\t}\r\n\t}\r\n\r\n\tdropComplete(table, row, success){\r\n\t\tvar sender = false;\r\n\r\n\t\tif(success){\r\n\r\n\t\t\tswitch(typeof this.table.options.movableRowsSender){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tsender = this.senders[this.table.options.movableRowsSender];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tsender = this.table.options.movableRowsSender;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(sender){\r\n\t\t\t\tsender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table)\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.movableRowsSender){\r\n\t\t\t\t\tconsole.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}\r\n\r\n\t\tthis.endMove();\r\n\t}\r\n\r\n\ttableRowDrop(e, row){\r\n\t\tvar receiver = false,\r\n\t\tsuccess = false;\r\n\r\n\t\te.stopImmediatePropagation();\r\n\r\n\t\tswitch(typeof this.table.options.movableRowsReceiver){\r\n\t\t\tcase \"string\":\r\n\t\t\treceiver = this.receivers[this.table.options.movableRowsReceiver];\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treceiver = this.table.options.movableRowsReceiver;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(receiver){\r\n\t\t\tsuccess = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver)\r\n\t\t}\r\n\r\n\t\tif(success){\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}\r\n\r\n\t\tthis.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\r\n\t\t\trow:row,\r\n\t\t\tsuccess:success,\r\n\t\t});\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"connect\":\r\n\t\t\treturn this.connect(table, data.row);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"disconnect\":\r\n\t\t\treturn this.disconnect(table);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"dropcomplete\":\r\n\t\t\treturn this.dropComplete(table, data.row, data.success);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveRows.prototype.receivers = {\r\n\tinsert:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\treturn true;\r\n\t},\r\n\r\n\tadd:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData());\r\n\t\treturn true;\r\n\t},\r\n\r\n\tupdate:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\ttoRow.update(fromRow.getData());\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\treplace:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\t\ttoRow.delete();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n};\r\n\r\nMoveRows.prototype.senders = {\r\n\tdelete:function(fromRow, toRow, toTable){\r\n\t\tfromRow.delete();\r\n\t}\r\n};\r\n\r\nMoveRows.moduleName = \"moveRow\";\r\n\r\nexport default MoveRows;","export default {};","import Module from '../../core/Module.js';\r\n\r\nimport defaultMutators from './defaults/mutators.js';\r\n\r\nclass Mutator extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.registerColumnOption(\"mutator\");\r\n\t\tthis.registerColumnOption(\"mutatorParams\");\r\n\t\tthis.registerColumnOption(\"mutatorData\");\r\n\t\tthis.registerColumnOption(\"mutatorDataParams\");\r\n\t\tthis.registerColumnOption(\"mutatorEdit\");\r\n\t\tthis.registerColumnOption(\"mutatorEditParams\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboard\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboardParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\r\n\t\tthis.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\r\n\t}\r\n\r\n\trowDataChanged(row, tempData, updatedData){\r\n\t\treturn this.transformRow(tempData, \"data\", updatedData);\r\n\t}\r\n\r\n\t//initialize column mutator\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\tmutator;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\tmutator = this.lookupMutator(column.definition[key]);\r\n\r\n\t\t\t\tif(mutator){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\tmutator:mutator,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.mutate = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupMutator(value){\r\n\t\tvar mutator = false;\r\n\r\n\t\t//set column mutator\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Mutator.mutators[value]){\r\n\t\t\t\tmutator = Mutator.mutators[value];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tmutator = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn mutator;\r\n\t}\r\n\r\n\t//apply mutator to row\r\n\ttransformRow(data, type, updatedData){\r\n\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\tvalue;\r\n\r\n\t\tif(this.enabled){\r\n\r\n\t\t\tthis.table.columnManager.traverse((column) => {\r\n\t\t\t\tvar mutator, params, component;\r\n\r\n\t\t\t\tif(column.modules.mutate){\r\n\t\t\t\t\tmutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\r\n\r\n\t\t\t\t\tif(mutator){\r\n\t\t\t\t\t\tvalue = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\r\n\r\n\t\t\t\t\t\tif(type == \"data\" || typeof value !== \"undefined\"){\r\n\t\t\t\t\t\t\tcomponent = column.getComponent();\r\n\t\t\t\t\t\t\tparams = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\r\n\t\t\t\t\t\t\tcolumn.setFieldValue(data, mutator.mutator(value, data, type, params, component));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//apply mutator to new cell value\r\n\ttransformCell(cell, value){\r\n\t\tif(cell.column.modules.mutate){\r\n\t\t\tvar mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\r\n\t\t\ttempData = {};\r\n\r\n\t\t\tif(mutator){\r\n\t\t\t\ttempData = Object.assign(tempData, cell.row.getData());\r\n\t\t\t\tcell.column.setFieldValue(tempData, value);\r\n\t\t\t\treturn mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tenable(){\r\n\t\tthis.enabled = true;\r\n\t}\r\n\r\n\tdisable(){\r\n\t\tthis.enabled = false;\r\n\t}\r\n}\r\n\r\nMutator.moduleName = \"mutator\";\r\n\r\n//load defaults\r\nMutator.mutators = defaultMutators;\r\n\r\nexport default Mutator;","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Page extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"local\";\r\n\t\tthis.progressiveLoad = false;\r\n\r\n\t\tthis.size = 0;\r\n\t\tthis.page = 1;\r\n\t\tthis.count = 5;\r\n\t\tthis.max = 1;\r\n\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.initialLoad = true;\r\n\t\tthis.dataChanging = false; //flag to check if data is being changed by this module\r\n\r\n\t\tthis.pageSizes = [];\r\n\r\n\t\tthis.registerTableOption(\"pagination\", false); //set pagination type\r\n\t\tthis.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\r\n\t\tthis.registerTableOption(\"paginationSize\", false); //set number of rows to a page\r\n\t\tthis.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\r\n\t\tthis.registerTableOption(\"paginationButtonCount\", 5);  // set count of page button\r\n\t\tthis.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\r\n\t\tthis.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\r\n\t\t// this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\r\n\t\t// this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\r\n\t\tthis.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\r\n\r\n\t\tthis.registerTableOption(\"progressiveLoad\", false); //progressive loading\r\n\t\tthis.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\r\n\t\tthis.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\r\n\r\n\t\tthis.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPage\", this.setPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\r\n\t\tthis.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPage\", this.getPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\r\n\t\t\tif(this.table.options.paginationMode === \"remote\"){\r\n\t\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.progressiveLoad){\r\n\t\t\t\tconsole.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 50);\r\n\r\n\t\t\tthis.createElements();\r\n\t\t\tthis.initializePaginator();\r\n\t\t}else if(this.table.options.progressiveLoad){\r\n\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\r\n\t\t\tthis.initializeProgressive(this.table.options.progressiveLoad)\r\n\r\n\t\t\tif(this.table.options.progressiveLoad === \"scroll\"){\r\n\t\t\t\tthis.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowAddingPosition(row, top){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tdispRows = rowManager.getDisplayRows(),\r\n\t\tindex;\r\n\r\n\t\tif(top){\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[0];\r\n\t\t\t}else{\r\n\t\t\t\tif(rowManager.activeRows.length){\r\n\t\t\t\t\tindex = rowManager.activeRows[rowManager.activeRows.length-1];\r\n\t\t\t\t\ttop = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[dispRows.length - 1];\r\n\t\t\t\ttop = dispRows.length < this.size ? false : true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {index, top}\r\n\t}\r\n\r\n\tcalculatePageSizes(){\r\n\t\tvar testElRow, testElCell;\r\n\r\n\t\tif(this.table.options.paginationSize){\r\n\t\t\tthis.size = this.table.options.paginationSize;\r\n\t\t}else{\r\n\t\t\ttestElRow = document.createElement(\"div\");\r\n\t\t\ttestElRow.classList.add(\"tabulator-row\");\r\n\t\t\ttestElRow.style.visibility = \"hidden\";\r\n\r\n\t\t\ttestElCell = document.createElement(\"div\");\r\n\t\t\ttestElCell.classList.add(\"tabulator-cell\");\r\n\t\t\ttestElCell.innerHTML = \"Page Row Test\";\r\n\r\n\t\t\ttestElRow.appendChild(testElCell);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(testElRow);\r\n\r\n\t\t\tthis.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().removeChild(testElRow);\r\n\t\t}\r\n\r\n\t\tthis.generatePageSizeSelectList();\r\n\t}\r\n\r\n\tinitialLoadComplete(){\r\n\t\tthis.initialLoad = false;\r\n\t}\r\n\r\n\tremotePageParams(data, config, silent, params){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif((this.progressiveLoad && !silent) || (!this.progressiveLoad && !this.dataChanging)){\r\n\t\t\t\tthis.reset(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//configure request params\r\n\t\tparams.page = this.page;\r\n\r\n\t\t//set page size if defined\r\n\t\tif(this.size){\r\n\t\t\tparams.size = this.size;\r\n\t\t}\r\n\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetPageToRow(row){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\trow = this.rowManager.findRow(row);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\treturn this.setPageToRow(row)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.reject();\r\n\t}\r\n\r\n\tuserSetPageSize(size){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.setPageSize(size);\r\n\t\t\treturn this.setPage(1);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tscrollVertical(top, dir){\r\n\t\tvar element, diff, margin;\r\n\t\tif(!dir && !this.table.dataLoader.loading){\r\n\t\t\telement = this.table.rowManager.getElement();\r\n\t\t\tdiff = element.scrollHeight - element.clientHeight - top;\r\n\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (element.clientHeight * 2);\r\n\r\n\t\t\tif(diff < margin){\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t\t.catch(() => {}); //consume the exception thrown when on the last page\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trestOnRenderBefore(rows, renderInPosition){\r\n\t\tif(!renderInPosition){\r\n\t\t\tif(this.mode === \"local\"){\r\n\t\t\t\tthis.reset();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(){\r\n\t\tthis.refreshData(true, \"all\");\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar button;\r\n\r\n\t\tthis.element = document.createElement(\"span\");\r\n\t\tthis.element.classList.add(\"tabulator-paginator\");\r\n\r\n\t\tthis.pagesElement = document.createElement(\"span\");\r\n\t\tthis.pagesElement.classList.add(\"tabulator-pages\");\r\n\r\n\t\tbutton = document.createElement(\"button\");\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\t\tbutton.setAttribute(\"aria-label\", \"\");\r\n\t\tbutton.setAttribute(\"title\", \"\");\r\n\r\n\t\tthis.firstBut = button.cloneNode(true);\r\n\t\tthis.firstBut.setAttribute(\"data-page\", \"first\");\r\n\r\n\t\tthis.prevBut = button.cloneNode(true);\r\n\t\tthis.prevBut.setAttribute(\"data-page\", \"prev\");\r\n\r\n\t\tthis.nextBut = button.cloneNode(true);\r\n\t\tthis.nextBut.setAttribute(\"data-page\", \"next\");\r\n\r\n\t\tthis.lastBut = button.cloneNode(true);\r\n\t\tthis.lastBut.setAttribute(\"data-page\", \"last\");\r\n\r\n\t\tif(this.table.options.paginationSizeSelector){\r\n\t\t\tthis.pageSizeSelect = document.createElement(\"select\");\r\n\t\t\tthis.pageSizeSelect.classList.add(\"tabulator-page-size\");\r\n\t\t}\r\n\t}\r\n\r\n\tgeneratePageSizeSelectList(){\r\n\t\tvar pageSizes = [];\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\r\n\t\t\tif(Array.isArray(this.table.options.paginationSizeSelector)){\r\n\t\t\t\tpageSizes = this.table.options.paginationSizeSelector;\r\n\t\t\t\tthis.pageSizes = pageSizes;\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes.unshift(this.size);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes = [];\r\n\r\n\t\t\t\t\tfor (let i = 1; i < 5; i++){\r\n\t\t\t\t\t\tpageSizes.push(this.size * i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.pageSizes = pageSizes;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpageSizes = this.pageSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\r\n\r\n\t\t\tpageSizes.forEach((item) => {\r\n\t\t\t\tvar itemEl = document.createElement(\"option\");\r\n\t\t\t\titemEl.value = item;\r\n\r\n\t\t\t\tif(item === true){\r\n\t\t\t\t\tthis.langBind(\"pagination|all\", function(value){\r\n\t\t\t\t\t\titemEl.innerHTML = value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = item;\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\tthis.pageSizeSelect.appendChild(itemEl);\r\n\t\t\t});\r\n\r\n\t\t\tthis.pageSizeSelect.value = this.size;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup pageination\r\n\tinitializePaginator(hidden){\r\n\t\tvar pageSelectLabel;\r\n\r\n\t\tif(!hidden){\r\n\t\t\t//build pagination element\r\n\r\n\t\t\t//bind localizations\r\n\t\t\tthis.langBind(\"pagination|first\", (value) => {\r\n\t\t\t\tthis.firstBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|first_title\", (value) => {\r\n\t\t\t\tthis.firstBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.firstBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev\", (value) => {\r\n\t\t\t\tthis.prevBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev_title\", (value) => {\r\n\t\t\t\tthis.prevBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.prevBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next\", (value) => {\r\n\t\t\t\tthis.nextBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next_title\", (value) => {\r\n\t\t\t\tthis.nextBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.nextBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last\", (value) => {\r\n\t\t\t\tthis.lastBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last_title\", (value) => {\r\n\t\t\t\tthis.lastBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.lastBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\t//click bindings\r\n\t\t\tthis.firstBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(1)\r\n\t\t\t});\r\n\r\n\t\t\tthis.prevBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.previousPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.nextBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.lastBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(this.max)\r\n\t\t\t});\r\n\r\n\t\t\tif(this.table.options.paginationElement){\r\n\t\t\t\tthis.element = this.table.options.paginationElement;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.pageSizeSelect){\r\n\t\t\t\tpageSelectLabel = document.createElement(\"label\");\r\n\r\n\t\t\t\tthis.langBind(\"pagination|page_size\", (value) => {\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"aria-label\", value);\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"title\", value);\r\n\t\t\t\t\tpageSelectLabel.innerHTML = value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.element.appendChild(pageSelectLabel);\r\n\t\t\t\tthis.element.appendChild(this.pageSizeSelect);\r\n\r\n\t\t\t\tthis.pageSizeSelect.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tthis.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\r\n\t\t\t\t\tthis.setPage(1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//append to DOM\r\n\t\t\tthis.element.appendChild(this.firstBut);\r\n\t\t\tthis.element.appendChild(this.prevBut);\r\n\t\t\tthis.element.appendChild(this.pagesElement);\r\n\t\t\tthis.element.appendChild(this.nextBut);\r\n\t\t\tthis.element.appendChild(this.lastBut);\r\n\r\n\t\t\tif(!this.table.options.paginationElement && !hidden){\r\n\t\t\t\tthis.table.footerManager.append(this.element, this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.page = this.table.options.paginationInitialPage;\r\n\t\t\tthis.count = this.table.options.paginationButtonCount;\r\n\t\t}\r\n\r\n\t\t//set default values\r\n\t\tthis.mode = this.table.options.paginationMode;\r\n\t}\r\n\r\n\tinitializeProgressive(mode){\r\n\t\tthis.initializePaginator(true);\r\n\t\tthis.mode = \"progressive_\" + mode;\r\n\t\tthis.progressiveLoad = true;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"page-changed\");\r\n\t}\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//calculate maximum page from number of rows\r\n\tsetMaxRows(rowCount){\r\n\t\tif(!rowCount){\r\n\t\t\tthis.max = 1;\r\n\t\t}else{\r\n\t\t\tthis.max = this.size === true ?  1 : Math.ceil(rowCount/this.size);\r\n\t\t}\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t}\r\n\t}\r\n\r\n\t//reset to first page without triggering action\r\n\treset(force){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif(this.mode == \"local\" || force){\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set the maximum page\r\n\tsetMaxPage(max){\r\n\r\n\t\tmax = parseInt(max);\r\n\r\n\t\tthis.max = max || 1;\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t\tthis.trigger();\r\n\t\t}\r\n\t}\r\n\r\n\t//set current page number\r\n\tsetPage(page){\r\n\t\tswitch(page){\r\n\t\t\tcase \"first\":\r\n\t\t\treturn this.setPage(1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"prev\":\r\n\t\t\treturn this.previousPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"next\":\r\n\t\t\treturn this.nextPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"last\":\r\n\t\t\treturn this.setPage(this.max);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tpage = parseInt(page);\r\n\r\n\t\tif((page > 0 && page <= this.max) || this.mode !== \"local\"){\r\n\t\t\tthis.page = page;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageToRow(row){\r\n\t\tvar rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\r\n\t\tvar index = rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\r\n\r\n\t\t\treturn this.setPage(page)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested row is not visible\");\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageSize(size){\r\n\t\tif(size !== true){\r\n\t\t\tsize = parseInt(size);\r\n\t\t}\r\n\r\n\t\tif(size > 0){\r\n\t\t\tthis.size = size;\r\n\t\t}\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\t\t\t// this.pageSizeSelect.value = size;\r\n\t\t\tthis.generatePageSizeSelectList();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//setup the pagination buttons\r\n\t_setPageButtons(){\r\n\t\tlet leftSize = Math.floor((this.count-1) / 2);\r\n\t\tlet rightSize = Math.ceil((this.count-1) / 2);\r\n\t\tlet min = this.max - this.page + leftSize + 1 < this.count ? this.max-this.count+1: Math.max(this.page-leftSize,1);\r\n\t\tlet max = this.page <= rightSize? Math.min(this.count, this.max) :Math.min(this.page+rightSize, this.max);\r\n\r\n\t\twhile(this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\r\n\r\n\t\tif(this.page == 1){\r\n\t\t\tthis.firstBut.disabled = true;\r\n\t\t\tthis.prevBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.firstBut.disabled = false;\r\n\t\t\tthis.prevBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tif(this.page == this.max){\r\n\t\t\tthis.lastBut.disabled = true;\r\n\t\t\tthis.nextBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.lastBut.disabled = false;\r\n\t\t\tthis.nextBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tfor(let i = min; i <= max; i++){\r\n\t\t\tif(i>0 && i <= this.max){\r\n\t\t\t\tthis.pagesElement.appendChild(this._generatePageButton(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.footerRedraw();\r\n\t}\r\n\r\n\t_generatePageButton(page){\r\n\t\tvar button = document.createElement(\"button\");\r\n\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tif(page == this.page){\r\n\t\t\tbutton.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\r\n\t\tthis.langBind(\"pagination|page_title\", (value) => {\r\n\t\t\tbutton.setAttribute(\"aria-label\", value + \" \" + page);\r\n\t\t\tbutton.setAttribute(\"title\", value + \" \" + page);\r\n\t\t});\r\n\r\n\t\tbutton.setAttribute(\"data-page\", page);\r\n\t\tbutton.textContent = page;\r\n\r\n\t\tbutton.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.setPage(page)\r\n\t\t});\r\n\r\n\t\treturn button;\r\n\t}\r\n\r\n\t//previous page\r\n\tpreviousPage(){\r\n\t\tif(this.page > 1){\r\n\t\t\tthis.page--;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger()\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//next page\r\n\tnextPage(){\r\n\t\tif(this.page < this.max){\r\n\t\t\tthis.page++;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\r\n\t\t}else{\r\n\t\t\tif(!this.progressiveLoad){\r\n\t\t\t\tconsole.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//return current page number\r\n\tgetPage(){\r\n\t\treturn this.page;\r\n\t}\r\n\r\n\t//return max page number\r\n\tgetPageMax(){\r\n\t\treturn this.max;\r\n\t}\r\n\r\n\tgetPageSize(size){\r\n\t\treturn this.size;\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//return appropriate rows for current page\r\n\tgetRows(data){\r\n\t\tvar output, start, end;\r\n\r\n\t\tif(this.mode == \"local\"){\r\n\t\t\toutput = [];\r\n\r\n\t\t\tthis.setMaxRows(data.length);\r\n\r\n\t\t\tif(this.size === true){\r\n\t\t\t\tstart = 0;\r\n\t\t\t\tend = data.length;\r\n\t\t\t}else{\r\n\t\t\t\tstart = this.size * (this.page - 1);\r\n\t\t\t\tend = start + parseInt(this.size);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\tfor(let i = start; i < end; i++){\r\n\t\t\t\tif(data[i]){\r\n\t\t\t\t\toutput.push(data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t}else{\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\treturn data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\ttrigger(){\r\n\t\tvar left;\r\n\r\n\t\tswitch(this.mode){\r\n\t\t\tcase \"local\":\r\n\t\t\tleft = this.table.rowManager.scrollLeft;\r\n\r\n\t\t\tthis.refreshData();\r\n\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\r\n\t\t\tthis.dispatchExternal(\"pageLoaded\", this.getPage());\r\n\r\n\t\t\treturn Promise.resolve();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"remote\":\r\n\t\t\tthis.dataChanging = true;\r\n\t\t\treturn this.reloadData(null)\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.dataChanging = false;\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"progressive_load\":\r\n\t\t\tcase \"progressive_scroll\":\r\n\t\t\treturn this.reloadData(null, true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconsole.warn(\"Pagination Error - no such pagination mode:\", this.mode);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t_parseRemoteData(data){\r\n\t\tvar left, data, margin;\r\n\r\n\t\tif(typeof data.last_page === \"undefined\"){\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\r\n\t\t}\r\n\r\n\t\tif(data.data){\r\n\t\t\tthis.max = parseInt(data.last_page) || 1;\r\n\r\n\t\t\tif(this.progressiveLoad){\r\n\t\t\t\tswitch(this.mode){\r\n\t\t\t\t\tcase \"progressive_load\":\r\n\r\n\t\t\t\t\tif(this.page == 1){\r\n\t\t\t\t\t\tthis.table.rowManager.setData(data.data, false, this.page == 1)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.table.rowManager.addRows(data.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(this.page < this.max){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t}, this.table.options.progressiveLoadDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"progressive_scroll\":\r\n\t\t\t\t\tdata = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\r\n\r\n\t\t\t\t\tthis.table.rowManager.setData(data, this.page !== 1, this.page == 1);\r\n\r\n\t\t\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (this.table.rowManager.element.clientHeight * 2);\r\n\r\n\t\t\t\t\tif(this.table.rowManager.element.scrollHeight <= (this.table.rowManager.element.clientHeight + margin)){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\t// left = this.table.rowManager.scrollLeft;\r\n\t\t\t\tthis.dispatchExternal(\"pageLoaded\",  this.getPage());\r\n\t\t\t\t// this.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t// this.table.columnManager.scrollHorizontal(left);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\r\n\t\t}\r\n\r\n\t\treturn data.data;\r\n\t}\r\n\r\n\t//handle the footer element being redrawn\r\n\tfooterRedraw(){\r\n\t\tvar footer = this.table.footerManager.element;\r\n\r\n\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t}else{\r\n\t\t\tthis.pagesElement.style.display = '';\r\n\r\n\t\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPage.moduleName = \"page\";\r\n\r\nexport default Page;","// read peristence information from storage\r\nexport default {\r\n\tlocal:function(id, type){\r\n\t\tvar data = localStorage.getItem(id + \"-\" + type);\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t},\r\n\tcookie:function(id, type){\r\n\t\tvar cookie = document.cookie,\r\n\t\tkey = id + \"-\" + type,\r\n\t\tcookiePos = cookie.indexOf(key + \"=\"),\r\n\t\tend, data;\r\n\r\n\t\t//if cookie exists, decode and load column data into tabulator\r\n\t\tif(cookiePos > -1){\r\n\t\t\tcookie = cookie.substr(cookiePos);\r\n\r\n\t\t\tend = cookie.indexOf(\";\");\r\n\r\n\t\t\tif(end > -1){\r\n\t\t\t\tcookie = cookie.substr(0, end);\r\n\t\t\t}\r\n\r\n\t\t\tdata = cookie.replace(key + \"=\", \"\");\r\n\t\t}\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t}\r\n};","//write persistence information to storage\r\nexport default {\r\n\tlocal:function(id, type, data){\r\n\t\tlocalStorage.setItem(id + \"-\" + type, JSON.stringify(data));\r\n\t},\r\n\tcookie:function(id, type, data){\r\n\t\tvar expireDate = new Date();\r\n\r\n\t\texpireDate.setDate(expireDate.getDate() + 10000);\r\n\r\n\t\tdocument.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultReaders from './defaults/readers.js';\r\nimport defaultWriters from './defaults/writers.js';\r\n\r\nclass Persistence extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"\";\r\n\t\tthis.id = \"\";\r\n\t\t// this.persistProps = [\"field\", \"width\", \"visible\"];\r\n\t\tthis.defWatcherBlock = false;\r\n\t\tthis.config = {};\r\n\t\tthis.readFunc = false;\r\n\t\tthis.writeFunc = false;\r\n\r\n\t\tthis.registerTableOption(\"persistence\", false);\r\n\t\tthis.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\r\n\t\tthis.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\r\n\t\tthis.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\r\n\t\tthis.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\r\n\t}\r\n\r\n\t// Test for whether localStorage is available for use.\r\n\tlocalStorageTest() {\r\n\t\tvar  testKey =  \"_tabulator_test\";\r\n\r\n\t\ttry {\r\n\t\t\twindow.localStorage.setItem( testKey, testKey);\r\n\t\t\twindow.localStorage.removeItem( testKey );\r\n\t\t\treturn true;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup parameters\r\n\tinitialize(){\r\n\t\tif(this.table.options.persistence){\r\n\t\t\t//determine persistent layout storage type\r\n\t\t\tvar mode = this.table.options.persistenceMode,\r\n\t\t\tid = this.table.options.persistenceID,\r\n\t\t\tretreivedData;\r\n\r\n\t\t\tthis.mode = mode !== true ?  mode : (this.localStorageTest() ? \"local\" : \"cookie\");\r\n\r\n\t\t\tif(this.table.options.persistenceReaderFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceReaderFunc === \"function\"){\r\n\t\t\t\t\tthis.readFunc = this.table.options.persistenceReaderFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.readers[this.table.options.persistenceReaderFunc]){\r\n\t\t\t\t\t\tthis.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.readers[this.mode]){\r\n\t\t\t\t\tthis.readFunc = Persistence.readers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.persistenceWriterFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceWriterFunc === \"function\"){\r\n\t\t\t\t\tthis.writeFunc = this.table.options.persistenceWriterFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.writers[this.table.options.persistenceWriterFunc]){\r\n\t\t\t\t\t\tthis.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.writers[this.mode]){\r\n\t\t\t\t\tthis.writeFunc = Persistence.writers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid writer set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//set storage tag\r\n\t\t\tthis.id = \"tabulator-\" + (id || (this.table.element.getAttribute(\"id\") || \"\"));\r\n\r\n\t\t\tthis.config = {\r\n\t\t\t\tsort:this.table.options.persistence === true || this.table.options.persistence.sort,\r\n\t\t\t\tfilter:this.table.options.persistence === true || this.table.options.persistence.filter,\r\n\t\t\t\tgroup:this.table.options.persistence === true || this.table.options.persistence.group,\r\n\t\t\t\tpage:this.table.options.persistence === true || this.table.options.persistence.page,\r\n\t\t\t\tcolumns:this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns,\r\n\t\t\t};\r\n\r\n\t\t\t//load pagination data if needed\r\n\t\t\tif(this.config.page){\r\n\t\t\t\tretreivedData = this.retreiveData(\"page\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)){\r\n\t\t\t\t\t\tthis.table.options.paginationSize = retreivedData.paginationSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)){\r\n\t\t\t\t\t\tthis.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//load group data if needed\r\n\t\t\tif(this.config.group){\r\n\t\t\t\tretreivedData = this.retreiveData(\"group\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)){\r\n\t\t\t\t\t\tthis.table.options.groupBy = retreivedData.groupBy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)){\r\n\t\t\t\t\t\tthis.table.options.groupStartOpen = retreivedData.groupStartOpen;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)){\r\n\t\t\t\t\t\tthis.table.options.groupHeader = retreivedData.groupHeader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.columns){\r\n\t\t\t\tthis.table.options.columns = this.load(\"columns\", this.table.options.columns);\r\n\t\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\t\tthis.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\r\n\r\n\t\t\tthis.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\r\n\t\t\tthis.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\r\n\t\t\tthis.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\r\n\t\t\tthis.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\r\n\t\t\tthis.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\r\n\t\t\tthis.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\r\n\t\tthis.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\r\n\t}\r\n\r\n\teventSave(type){\r\n\t\tif(this.config[type]){\r\n\t\t\tthis.save(type);\r\n\t\t}\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tvar options = this.table.options,\r\n\t\tsorters, filters;\r\n\r\n\t\tif(this.config.sort){\r\n\t\t\tsorters = this.load(\"sort\");\r\n\r\n\t\t\tif(!sorters === false){\r\n\t\t\t\tthis.table.initialSort = sorters;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.config.filter){\r\n\t\t\tfilters = this.load(\"filter\");\r\n\r\n\t\t\tif(!filters === false){\r\n\t\t\t\tthis.table.initialFilter = filters;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif(force && this.config.columns){\r\n\t\t\tthis.save(\"columns\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tgetColumnLayout(){\r\n\t\treturn this.parseColumns(this.table.columnManager.getColumns());\r\n\t}\r\n\r\n\tsetColumnLayout(layout){\r\n\t\tthis.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout))\r\n\t\treturn true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def, keys;\r\n\r\n\t\tif(this.config.columns){\r\n\t\t\tthis.defWatcherBlock = true;\r\n\r\n\t\t\tdef = column.getDefinition();\r\n\r\n\t\t\tkeys = this.config.columns === true ? Object.keys(def) : this.config.columns;\r\n\r\n\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\tvar props = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tvar value = def[key];\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tObject.defineProperty(def, key, {\r\n\t\t\t\t\t\tset: function(newValue){\r\n\t\t\t\t\t\t\tvalue = newValue;\r\n\r\n\t\t\t\t\t\t\tif(!this.defWatcherBlock){\r\n\t\t\t\t\t\t\t\tthis.save(\"columns\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(props.set){\r\n\t\t\t\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tget:function(){\r\n\t\t\t\t\t\t\tif(props.get){\r\n\t\t\t\t\t\t\t\tprops.get();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.defWatcherBlock = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//load saved definitions\r\n\tload(type, current){\r\n\t\tvar data = this.retreiveData(type);\r\n\r\n\t\tif(current){\r\n\t\t\tdata = data ? this.mergeDefinition(current, data) : current;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//retreive data from memory\r\n\tretreiveData(type){\r\n\t\treturn this.readFunc ? this.readFunc(this.id, type) : false;\r\n\t}\r\n\r\n\t//merge old and new column definitions\r\n\tmergeDefinition(oldCols, newCols){\r\n\t\tvar output = [];\r\n\r\n\t\tnewCols = newCols || [];\r\n\r\n\t\tnewCols.forEach((column, to) => {\r\n\t\t\tvar from = this._findColumn(oldCols, column),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(from){\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(from);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tif(key !== \"columns\" && typeof column[key] !== \"undefined\"){\r\n\t\t\t\t\t\tfrom[key] = column[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(from.columns){\r\n\t\t\t\t\tfrom.columns = this.mergeDefinition(from.columns, column.columns);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(from);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\toldCols.forEach((column, i) => {\r\n\t\t\tvar from = this._findColumn(newCols, column);\r\n\r\n\t\t\tif (!from) {\r\n\t\t\t\tif(output.length>i){\r\n\t\t\t\t\toutput.splice(i, 0, column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//find matching columns\r\n\t_findColumn(columns, subject){\r\n\t\tvar type = subject.columns ? \"group\" : (subject.field ? \"field\" : \"object\");\r\n\r\n\t\treturn columns.find(function(col){\r\n\t\t\tswitch(type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn col.title === subject.title && col.columns.length === subject.columns.length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"field\":\r\n\t\t\t\treturn col.field === subject.field;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\treturn col === subject;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//save data\r\n\tsave(type){\r\n\t\tvar data = {};\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"columns\":\r\n\t\t\tdata = this.parseColumns(this.table.columnManager.getColumns())\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"filter\":\r\n\t\t\tdata = this.table.modules.filter.getFilters();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sort\":\r\n\t\t\tdata = this.validateSorters(this.table.modules.sort.getSort());\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tdata = this.getGroupConfig();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"page\":\r\n\t\t\tdata = this.getPageConfig();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(this.writeFunc){\r\n\t\t\tthis.writeFunc(this.id, type, data);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//ensure sorters contain no function data\r\n\tvalidateSorters(data){\r\n\t\tdata.forEach(function(item){\r\n\t\t\titem.column = item.field;\r\n\t\t\tdelete item.field;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetGroupConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.group){\r\n\t\t\tif(this.config.group === true || this.config.group.groupBy){\r\n\t\t\t\tdata.groupBy = this.table.options.groupBy;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupStartOpen){\r\n\t\t\t\tdata.groupStartOpen = this.table.options.groupStartOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupHeader){\r\n\t\t\t\tdata.groupHeader = this.table.options.groupHeader;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetPageConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.page){\r\n\t\t\tif(this.config.page === true || this.config.page.size){\r\n\t\t\t\tdata.paginationSize = this.table.modules.page.getPageSize();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.page === true || this.config.page.page){\r\n\t\t\t\tdata.paginationInitialPage = this.table.modules.page.getPage();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t//parse columns for data to store\r\n\tparseColumns(columns){\r\n\t\tvar definitions = [],\r\n\t\texcludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar defStore = {},\r\n\t\t\tcolDef = column.getDefinition(),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(column.isGroup){\r\n\t\t\t\tdefStore.title = colDef.title;\r\n\t\t\t\tdefStore.columns = this.parseColumns(column.getColumns());\r\n\t\t\t}else{\r\n\t\t\t\tdefStore.field = column.getField();\r\n\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(colDef);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\tcase \"width\":\r\n\t\t\t\t\t\tdefStore.width = column.getWidth();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"visible\":\r\n\t\t\t\t\t\tdefStore.visible = column.visible;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1){\r\n\t\t\t\t\t\t\tdefStore[key] = colDef[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefinitions.push(defStore);\r\n\t\t});\r\n\r\n\t\treturn definitions;\r\n\t}\r\n}\r\n\r\nPersistence.moduleName = \"persistence\";\r\n\r\n//load defaults\r\nPersistence.readers = defaultReaders;\r\nPersistence.writers = defaultWriters;\r\n\r\nexport default Persistence;","import Module from '../../core/Module.js';\r\n\r\nclass Print extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.manualBlock = false;\r\n\r\n\t\tthis.registerTableOption(\"printAsHtml\", false); //enable print as html\r\n\t\tthis.registerTableOption(\"printFormatter\", false); //printing page formatter\r\n\t\tthis.registerTableOption(\"printHeader\", false); //page header contents\r\n\t\tthis.registerTableOption(\"printFooter\", false); //page footer contents\r\n\t\tthis.registerTableOption(\"printStyled\", true); //enable print as html styling\r\n\t\tthis.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\r\n\t\tthis.registerTableOption(\"printConfig\", {}); //print config options\r\n\r\n\t\tthis.registerColumnOption(\"print\");\r\n\t\tthis.registerColumnOption(\"titlePrint\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.printAsHtml){\r\n\t\t\twindow.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\r\n\t\t\twindow.addEventListener(\"afterprint\", this.cleanup.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"print\", this.printFullscreen.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\treplaceTable(){\r\n\t\tif(!this.manualBlock){\r\n\t\t\tthis.element = document.createElement(\"div\");\r\n\t\t\tthis.element.classList.add(\"tabulator-print-table\");\r\n\r\n\t\t\tthis.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\r\n\r\n\t\t\tthis.table.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.element.parentNode.insertBefore(this.element, this.table.element);\r\n\t\t}\r\n\t}\r\n\r\n\tcleanup(){\r\n\t\tdocument.body.classList.remove(\"tabulator-print-fullscreen-hide\");\r\n\r\n\t\tif(this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\tthis.table.element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tprintFullscreen(visible, style, config){\r\n\t\tvar scrollX = window.scrollX,\r\n\t\tscrollY = window.scrollY,\r\n\t\theaderEl = document.createElement(\"div\"),\r\n\t\tfooterEl = document.createElement(\"div\"),\r\n\t\ttableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\r\n\t\theaderContent, footerContent;\r\n\r\n\t\tthis.manualBlock = true;\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-print-fullscreen\");\r\n\r\n\t\tif(this.table.options.printHeader){\r\n\t\t\theaderEl.classList.add(\"tabulator-print-header\");\r\n\r\n\t\t\theaderContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\r\n\r\n\t\t\tif(typeof headerContent == \"string\"){\r\n\t\t\t\theaderEl.innerHTML = headerContent;\r\n\t\t\t}else{\r\n\t\t\t\theaderEl.appendChild(headerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\tthis.element.appendChild(tableEl);\r\n\r\n\t\tif(this.table.options.printFooter){\r\n\t\t\tfooterEl.classList.add(\"tabulator-print-footer\");\r\n\r\n\t\t\tfooterContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\r\n\r\n\r\n\t\t\tif(typeof footerContent == \"string\"){\r\n\t\t\t\tfooterEl.innerHTML = footerContent;\r\n\t\t\t}else{\r\n\t\t\t\tfooterEl.appendChild(footerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(footerEl);\r\n\t\t}\r\n\r\n\t\tdocument.body.classList.add(\"tabulator-print-fullscreen-hide\");\r\n\t\tdocument.body.appendChild(this.element);\r\n\r\n\t\tif(this.table.options.printFormatter){\r\n\t\t\tthis.table.options.printFormatter(this.element, tableEl);\r\n\t\t}\r\n\r\n\t\twindow.print();\r\n\r\n\t\tthis.cleanup();\r\n\r\n\t\twindow.scrollTo(scrollX, scrollY);\r\n\r\n\t\tthis.manualBlock = false;\r\n\t}\r\n}\r\n\r\nPrint.moduleName = \"print\";\r\n\r\nexport default Print;","import Module from '../../core/Module.js';\r\n\r\nclass ReactiveData extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.data = false;\r\n\t\tthis.blocked = false; //block reactivity while performing update\r\n\t\tthis.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\r\n\t\tthis.currentVersion = 0;\r\n\r\n\t\tthis.registerTableOption(\"reactiveData\", false); //enable data reactivity\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.reactiveData){\r\n\t\t\tthis.subscribe(\"cell-value-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\r\n\t\t\tthis.subscribe(\"data-processing\", this.watchData.bind(this));\r\n\t\t\tthis.subscribe(\"table-destroy\", this.unwatchData.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\twatchData(data){\r\n\t\tvar self = this,\r\n\t\tpushFunc, version;\r\n\r\n\t\tthis.currentVersion ++;\r\n\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tthis.unwatchData();\r\n\r\n\t\tthis.data = data;\r\n\r\n\t\t//override array push function\r\n\t\tthis.origFuncs.push = data.push;\r\n\r\n\t\tObject.defineProperty(this.data, \"push\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.push.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array unshift function\r\n\t\tthis.origFuncs.unshift = data.unshift;\r\n\r\n\t\tObject.defineProperty(this.data, \"unshift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, true);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.unshift.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array shift function\r\n\t\tthis.origFuncs.shift = data.shift;\r\n\r\n\t\tObject.defineProperty(this.data, \"shift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[0]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.shift.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array pop function\r\n\t\tthis.origFuncs.pop = data.pop;\r\n\r\n\t\tObject.defineProperty(this.data, \"pop\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn self.origFuncs.pop.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array splice function\r\n\t\tthis.origFuncs.splice = data.splice;\r\n\r\n\t\tObject.defineProperty(this.data, \"splice\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments),\r\n\t\t\t\tstart = args[0] < 0 ? data.length + args[0] : args[0],\r\n\t\t\t\tend = args[1],\r\n\t\t\t\tnewRows = args[2] ? args.slice(2) : false,\r\n\t\t\t\tstartRow;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\r\n\t\t\t\t\t//add new rows\r\n\t\t\t\t\tif(newRows){\r\n\t\t\t\t\t\tstartRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\r\n\r\n\t\t\t\t\t\tif(startRow){\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, startRow, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRows = newRows.slice().reverse();\r\n\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//delete removed rows\r\n\t\t\t\t\tif(end !== 0){\r\n\t\t\t\t\t\tvar oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\r\n\r\n\t\t\t\t\t\toldRows.forEach((rowData, i) => {\r\n\t\t\t\t\t\t\tvar row = self.table.rowManager.getRowFromDataObject(rowData);\r\n\r\n\t\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\t\trow.deleteActual(i !== oldRows.length - 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(newRows || end !== 0){\r\n\t\t\t\t\t\tself.table.rowManager.reRenderInPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.splice.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchData(){\r\n\t\tif(this.data !== false){\r\n\t\t\tfor(var key in this.origFuncs){\r\n\t\t\t\tObject.defineProperty(this.data, key, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue: this.origFuncs.key,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tthis.blocked = true;\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tthis.watchKey(row, data, key);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tthis.watchTreeChildren(row);\r\n\t\t}\r\n\r\n\t\tthis.blocked = false;\r\n\t}\r\n\r\n\twatchTreeChildren (row){\r\n\t\tvar childField = row.getData()[this.table.options.dataTreeChildField],\r\n\t\torigFuncs = {};\r\n\r\n\t\tfunction rebuildTree(){\r\n\t\t\tthis.table.modules.dataTree.initializeRow(row);\r\n\t\t\tthis.table.modules.dataTree.layoutRow(row);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"tree\", false, true);\r\n\t\t}\r\n\r\n\t\tif(childField){\r\n\r\n\t\t\torigFuncs.push = childField.push;\r\n\r\n\t\t\tObject.defineProperty(childField, \"push\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result = origFuncs.push.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.unshift = childField.unshift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"unshift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.unshift.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.shift = childField.shift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"shift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.shift.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.pop = childField.pop;\r\n\r\n\t\t\tObject.defineProperty(childField, \"pop\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.pop.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.splice = childField.splice;\r\n\r\n\t\t\tObject.defineProperty(childField, \"splice\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.splice.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\twatchKey(row, data, key){\r\n\t\tvar props = Object.getOwnPropertyDescriptor(data, key),\r\n\t\tvalue = data[key],\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tObject.defineProperty(data, key, {\r\n\t\t\tset: (newValue) => {\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\tif(!this.blocked && version === this.currentVersion){\r\n\t\t\t\t\tvar update = {};\r\n\t\t\t\t\tupdate[key] = newValue;\r\n\t\t\t\t\trow.updateData(update);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(props.set){\r\n\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget:() => {\r\n\r\n\t\t\t\tif(props.get){\r\n\t\t\t\t\tprops.get();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tObject.defineProperty(data, key, {\r\n\t\t\t\tvalue:data[key],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tblock(){\r\n\t\tthis.blocked = true;\r\n\t}\r\n\r\n\tunblock(){\r\n\t\tthis.blocked = false;\r\n\t}\r\n}\r\n\r\nReactiveData.moduleName = \"reactiveData\";\r\n\r\nexport default ReactiveData;\r\n\r\n\r\n\r\n","import Module from '../../core/Module.js';\r\n\r\nclass ResizeColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startX = false;\r\n\t\tthis.startWidth = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerColumnOption(\"resizable\", true);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// if(this.table.options.resizableColumns){\r\n\t\t\tthis.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.layoutColumnHeader.bind(this));\r\n\t\t// }\r\n\t}\r\n\r\n\tlayoutCellHandles(cell){\r\n\t\tif(cell.row.type === \"row\"){\r\n\t\t\tthis.initializeColumn(\"cell\", cell.column, cell.element);\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutColumnHeader(column){\r\n\t\tthis.initializeColumn(\"header\", column, column.element);\r\n\t}\r\n\r\n\tinitializeColumn(type, column, element){\r\n\t\tvar self = this,\r\n\t\tvariableHeight = false,\r\n\t\tmode = column.definition.resizable;\r\n\r\n\t\t//set column resize mode\r\n\t\tif(type === \"header\"){\r\n\t\t\tvariableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\r\n\t\t\tcolumn.modules.resize = {variableHeight:variableHeight};\r\n\t\t}\r\n\r\n\t\tif(mode === true || mode == type){\r\n\r\n\t\t\tvar handle = document.createElement('div');\r\n\t\t\thandle.className = \"tabulator-col-resize-handle\";\r\n\r\n\r\n\t\t\tvar prevHandle = document.createElement('div');\r\n\t\t\tprevHandle.className = \"tabulator-col-resize-handle prev\";\r\n\r\n\t\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar handleDown = function(e){\r\n\t\t\t\tvar nearestColumn = column.getLastColumn();\r\n\r\n\t\t\t\tif(nearestColumn && self._checkResizability(nearestColumn)){\r\n\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\tself._mouseDown(e, nearestColumn, handle);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\t\t//reszie column on  double click\r\n\t\t\thandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar col = column.getLastColumn();\r\n\r\n\t\t\t\tif(col && self._checkResizability(col)){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tcol.reinitializeWidth(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar prevHandleDown = function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\t\tself._mouseDown(e, prevColumn, prevHandle);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tprevHandle.addEventListener(\"mousedown\", prevHandleDown);\r\n\t\t\tprevHandle.addEventListener(\"touchstart\", prevHandleDown, {passive: true});\r\n\r\n\t\t\t//resize column on double click\r\n\t\t\tprevHandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tprevColumn.reinitializeWidth(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.appendChild(handle);\r\n\t\t\telement.appendChild(prevHandle);\r\n\t\t}\r\n\t}\r\n\r\n\t_checkResizability(column){\r\n\t\treturn column.definition.resizable;\r\n\t}\r\n\r\n\t_mouseDown(e, column, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\t// self.table.columnManager.tempScrollBlock();\r\n\r\n\t\t\tif(self.table.rtl){\r\n\t\t\t\tcolumn.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}\r\n\r\n\t\t\tself.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tif(!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t//block editor from taking action while resizing is taking place\r\n\t\t\tif(self.startColumn.modules.edit){\r\n\t\t\t\tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseUp);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tself.dispatch(\"column-resized\", column);\r\n\t\t\tself.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\tif(self.startColumn.modules.edit){\r\n\t\t\tself.startColumn.modules.edit.blocked = true;\r\n\t\t}\r\n\r\n\t\tself.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\r\n\t\tself.startWidth = column.getWidth();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeColumns.moduleName = \"resizeColumns\";\r\n\r\nexport default ResizeColumns;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startY = false;\r\n\t\tthis.startHeight = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerTableOption(\"resizableRows\", false); //resizable rows\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.resizableRows){\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\trowEl = row.getElement();\r\n\r\n\t\tvar handle = document.createElement('div');\r\n\t\thandle.className = \"tabulator-row-resize-handle\";\r\n\r\n\t\tvar prevHandle = document.createElement('div');\r\n\t\tprevHandle.className = \"tabulator-row-resize-handle prev\";\r\n\r\n\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar handleDown = function(e){\r\n\t\t\tself.startRow = row;\r\n\t\t\tself._mouseDown(e, row, handle);\r\n\t\t};\r\n\r\n\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar prevHandleDown =  function(e){\r\n\t\t\tvar prevRow = self.table.rowManager.prevDisplayRow(row);\r\n\r\n\t\t\tif(prevRow){\r\n\t\t\t\tself.startRow = prevRow;\r\n\t\t\t\tself._mouseDown(e, prevRow, prevHandle);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tprevHandle.addEventListener(\"mousedown\",prevHandleDown);\r\n\t\tprevHandle.addEventListener(\"touchstart\",prevHandleDown, {passive: true});\r\n\r\n\t\trowEl.appendChild(handle);\r\n\t\trowEl.appendChild(prevHandle);\r\n\t}\r\n\r\n\t_mouseDown(e, row, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\trow.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t// //block editor from taking action while resizing is taking place\r\n\t\t\t// if(self.startColumn.modules.edit){\r\n\t\t\t// \tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t// }\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseMove);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tthis.dispatchExternal(\"rowResized\", row.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\t// if(self.startColumn.modules.edit){\r\n\t\t// \tself.startColumn.modules.edit.blocked = true;\r\n\t\t// }\r\n\r\n\t\tself.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\r\n\t\tself.startHeight = row.getHeight();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeRows.moduleName = \"resizeRows\";\r\n\r\nexport default ResizeRows;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeTable extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.binding = false;\r\n\t\tthis.observer = false;\r\n\t\tthis.containerObserver = false;\r\n\r\n\t\tthis.tableHeight = 0;\r\n\t\tthis.tableWidth = 0;\r\n\t\tthis.containerHeight = 0;\r\n\t\tthis.containerWidth = 0;\r\n\r\n\t\tthis.autoResize = false;\r\n\r\n\t\tthis.registerTableOption(\"autoResize\", true); //auto resize table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.autoResize){\r\n\t\t\tvar table = this.table,\r\n\t\t\ttableStyle;\r\n\r\n\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\r\n\t\t\tif(table.element.parentNode){\r\n\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\"){\r\n\r\n\t\t\t\tthis.autoResize = true;\r\n\r\n\t\t\t\tthis.observer = new ResizeObserver((entry) => {\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\tif(this.tableHeight != nodeHeight || this.tableWidth != nodeWidth){\r\n\t\t\t\t\t\t\tthis.tableHeight = nodeHeight;\r\n\t\t\t\t\t\t\tthis.tableWidth = nodeWidth;\r\n\r\n\t\t\t\t\t\t\tif(table.element.parentNode){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.observer.observe(table.element);\r\n\r\n\t\t\t\ttableStyle = window.getComputedStyle(table.element);\r\n\r\n\t\t\t\tif(this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))){\r\n\r\n\t\t\t\t\tthis.containerObserver = new ResizeObserver((entry) => {\r\n\t\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\t\tif(this.containerHeight != nodeHeight || this.containerWidth != nodeWidth){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = nodeHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = nodeWidth;\r\n\t\t\t\t\t\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.containerObserver.observe(this.table.element.parentNode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.subscribe(\"table-resize\", this.tableResized.bind(this));\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.binding = function(){\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile && !table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"resize\", this.binding);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\ttableResized(){\r\n\t\tthis.table.rowManager.redraw();\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.binding){\r\n\t\t\twindow.removeEventListener(\"resize\", this.binding);\r\n\t\t}\r\n\r\n\t\tif(this.observer){\r\n\t\t\tthis.observer.unobserve(this.table.element);\r\n\t\t}\r\n\r\n\t\tif(this.containerObserver){\r\n\t\t\tthis.containerObserver.unobserve(this.table.element.parentNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nResizeTable.moduleName = \"resizeTable\";\r\n\r\nexport default ResizeTable;","import Module from '../../core/Module.js';\r\n\r\nclass ResponsiveLayout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.hiddenColumns = [];\r\n\t\tthis.mode = \"\";\r\n\t\tthis.index = 0;\r\n\t\tthis.collapseFormatter = [];\r\n\t\tthis.collapseStartOpen = true;\r\n\t\tthis.collapseHandleColumn = false;\r\n\r\n\t\tthis.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\r\n\r\n\t\tthis.registerColumnOption(\"responsive\");\r\n\t}\r\n\r\n\t//generate responsive columns list\r\n\tinitialize(){\r\n\t\tvar self = this,\r\n\t\tcolumns = [];\r\n\r\n\t\tif(this.table.options.responsiveLayout){\r\n\t\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\r\n\r\n\t\t\tif(this.table.options.responsiveLayout === \"collapse\"){\r\n\t\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-layout\", this.layoutRow.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1){\r\n\t\t\tif(!force){\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeResponsivity(){\r\n\t\tvar columns = [];\r\n\r\n\t\tthis.mode = this.table.options.responsiveLayout;\r\n\t\tthis.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\r\n\t\tthis.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\r\n\t\tthis.hiddenColumns = [];\r\n\r\n\t\t//determine level of responsivity for each column\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column, i){\r\n\t\t\tif(column.modules.responsive){\r\n\t\t\t\tif(column.modules.responsive.order && column.modules.responsive.visible){\r\n\t\t\t\t\tcolumn.modules.responsive.index = i;\r\n\t\t\t\t\tcolumns.push(column);\r\n\r\n\t\t\t\t\tif(!column.visible && self.mode === \"collapse\"){\r\n\t\t\t\t\t\tself.hiddenColumns.push(column);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//sort list by responsivity\r\n\t\tcolumns = columns.reverse();\r\n\t\tcolumns = columns.sort(function(a, b){\r\n\t\t\tvar diff = b.modules.responsive.order - a.modules.responsive.order;\r\n\t\t\treturn diff || (b.modules.responsive.index - a.modules.responsive.index);\r\n\t\t});\r\n\r\n\t\tthis.columns = columns;\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.generateCollapsedContent();\r\n\t\t}\r\n\r\n\t\t//assign collapse column\r\n\t\tfor (let col of this.table.columnManager.columnsByIndex){\r\n\t\t\tif(col.definition.formatter == \"responsiveCollapse\"){\r\n\t\t\t\tthis.collapseHandleColumn = col;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.collapseHandleColumn){\r\n\t\t\tif(this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//define layout information\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.getDefinition();\r\n\r\n\t\tcolumn.modules.responsive = {order: typeof def.responsive === \"undefined\" ? 1 : def.responsive, visible:def.visible === false ? false : true};\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar el;\r\n\r\n\t\tif(row.type !== \"calc\"){\r\n\t\t\tel = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-responsive-collapse\");\r\n\r\n\t\t\trow.modules.responsiveLayout = {\r\n\t\t\t\telement:el,\r\n\t\t\t\topen:this.collapseStartOpen,\r\n\t\t\t};\r\n\r\n\t\t\tif(!this.collapseStartOpen){\r\n\t\t\t\tel.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\trowEl.appendChild(row.modules.responsiveLayout.element);\r\n\t\t\tthis.generateCollapsedRowContent(row);\r\n\t\t}\r\n\t}\r\n\r\n\t//update column visibility\r\n\tupdateColumnVisibility(column, responsiveToggle){\r\n\t\tif(!responsiveToggle && column.modules.responsive){\r\n\t\t\tcolumn.modules.responsive.visible = column.visible;\r\n\t\t\tthis.initializeResponsivity();\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(column){\r\n\t\tvar colCount = this.hiddenColumns.length;\r\n\r\n\t\tcolumn.hide(false, true);\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.hiddenColumns.unshift(column);\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !colCount){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowColumn(column){\r\n\t\tvar index;\r\n\r\n\t\tcolumn.show(false, true);\r\n\t\t//set column width to prevent calculation loops on uninitialized columns\r\n\t\tcolumn.setWidth(column.getWidth());\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tindex = this.hiddenColumns.indexOf(column);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.hiddenColumns.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//redraw columns to fit space\r\n\tupdate(){\r\n\t\tvar self = this,\r\n\t\tworking = true;\r\n\r\n\t\twhile(working){\r\n\r\n\t\t\tlet width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\r\n\r\n\t\t\tlet diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\r\n\r\n\t\t\tif(diff < 0){\r\n\t\t\t\t//table is too wide\r\n\t\t\t\tlet column = self.columns[self.index];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tself.hideColumn(column);\r\n\t\t\t\t\tself.index ++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t//table has spare space\r\n\t\t\t\tlet column = self.columns[self.index -1];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tif(diff > 0){\r\n\t\t\t\t\t\tif(diff >= column.getWidth()){\r\n\t\t\t\t\t\t\tself.showColumn(column);\r\n\t\t\t\t\t\t\tself.index --;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!self.table.rowManager.activeRowsCount){\r\n\t\t\t\tself.table.rowManager.renderEmptyScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedContent(){\r\n\t\tvar self = this,\r\n\t\trows = this.table.rowManager.getDisplayRows();\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tself.generateCollapsedRowContent(row);\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateCollapsedRowContent(row){\r\n\t\tvar el, contents;\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\tel = row.modules.responsiveLayout.element;\r\n\r\n\t\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\t\tcontents = this.collapseFormatter(this.generateCollapsedRowData(row));\r\n\t\t\tif(contents){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedRowData(row){\r\n\t\tvar self = this,\r\n\t\tdata = row.getData(),\r\n\t\toutput = [],\r\n\t\tmockCellComponent;\r\n\r\n\t\tthis.hiddenColumns.forEach(function(column){\r\n\t\t\tvar value = column.getFieldValue(data);\r\n\r\n\t\t\tif(column.definition.title && column.field){\r\n\t\t\t\tif(column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters){\r\n\r\n\t\t\t\t\tmockCellComponent = {\r\n\t\t\t\t\t\tvalue:false,\r\n\t\t\t\t\t\tdata:{},\r\n\t\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\t\treturn document.createElement(\"div\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\t\treturn row.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction onRendered(callback){\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tformatCollapsedData(data){\r\n\t\tvar list = document.createElement(\"table\");\r\n\r\n\t\tdata.forEach(function(item){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tvar titleData = document.createElement(\"td\");\r\n\t\t\tvar valueData = document.createElement(\"td\");\r\n\t\t\tvar node_content;\r\n\r\n\t\t\tvar titleHighlight = document.createElement(\"strong\");\r\n\t\t\ttitleData.appendChild(titleHighlight);\r\n\t\t\tthis.langBind(\"columns|\" + item.field, function(text){\r\n\t\t\t\ttitleHighlight.innerText = text || item.title;\r\n\t\t\t});\r\n\r\n\t\t\tif(item.value instanceof Node){\r\n\t\t\t\tnode_content = document.createElement(\"div\");\r\n\t\t\t\tnode_content.appendChild(item.value);\r\n\t\t\t\tvalueData.appendChild(node_content);\r\n\t\t\t}else{\r\n\t\t\t\tvalueData.innerHTML = item.value;\r\n\t\t\t}\r\n\r\n\t\t\trow.appendChild(titleData);\r\n\t\t\trow.appendChild(valueData);\r\n\t\t\tlist.appendChild(row);\r\n\t\t}, this);\r\n\r\n\t\treturn Object.keys(data).length ? list : \"\";\r\n\t}\r\n}\r\n\r\nResponsiveLayout.moduleName = \"responsiveLayout\";\r\n\r\nexport default ResponsiveLayout;","import Module from '../../core/Module.js';\r\n\r\nclass SelectRow extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.selecting = false; //flag selecting in progress\r\n\t\tthis.lastClickedRow = false; //last clicked row\r\n\t\tthis.selectPrev = []; //hold previously selected element for drag drop selection\r\n\t\tthis.selectedRows = []; //hold selected rows\r\n\t\tthis.headerCheckboxElement = null; // hold header select element\r\n\r\n\t\tthis.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRangeMode\", \"drag\");  //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\r\n\t\tthis.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\r\n\t\tthis.registerTableOption(\"selectableCheck\", function(data, row){return true;}); //check wheather row is selectable\r\n\r\n\t\tthis.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.selectable !== false){\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\r\n\t\t\tthis.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\r\n\r\n\t\t\tif(this.table.options.selectable && !this.table.options.selectablePersistence){\r\n\t\t\t\tthis.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowRetrieve(type, prevValue){\r\n\t\treturn type === \"selected\" ? this.selectedRows : prevValue;\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tthis._deselectRow(row, true);\r\n\t}\r\n\r\n\tclearSelectionData(silent){\r\n\t\tthis.selecting = false;\r\n\t\tthis.lastClickedRow = false;\r\n\t\tthis.selectPrev = [];\r\n\t\tthis.selectedRows = [];\r\n\r\n\t\tif(silent !== true){\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\telement = row.getElement();\r\n\r\n\t\t// trigger end of row selection\r\n\t\tvar endSelect = function(){\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tself.selecting = false;\r\n\t\t\t}, 50);\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", endSelect);\r\n\t\t};\r\n\r\n\t\trow.modules.select = {selected:false};\r\n\r\n\t\t//set row selection class\r\n\t\tif(self.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\telement.classList.add(\"tabulator-selectable\");\r\n\t\t\telement.classList.remove(\"tabulator-unselectable\");\r\n\r\n\t\t\tif(self.table.options.selectable && self.table.options.selectable != \"highlight\"){\r\n\t\t\t\tif(self.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.lastClickedRow = self.lastClickedRow || row;\r\n\r\n\t\t\t\t\t\t\tvar lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\r\n\t\t\t\t\t\t\tvar rowIdx = self.table.rowManager.getDisplayRowIndex(row);\r\n\r\n\t\t\t\t\t\t\tvar fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\t\t\t\t\t\t\tvar toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\r\n\t\t\t\t\t\t\tvar rows = self.table.rowManager.getDisplayRows().slice(0);\r\n\t\t\t\t\t\t\tvar toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\r\n\r\n\t\t\t\t\t\t\tif(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\t\ttoggledRows.forEach(function(toggledRow){\r\n\t\t\t\t\t\t\t\t\tif(toggledRow !== self.lastClickedRow){\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true && !self.isRowSelected(row)){\r\n\t\t\t\t\t\t\t\t\t\t\tif(self.selectedRows.length < self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\r\n\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true){\r\n\t\t\t\t\t\t\t\t\tif(toggledRows.length > self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\ttoggledRows = toggledRows.slice(0, self.table.options.selectable)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tself.selectRows(toggledRows);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\t\t\t\t\t\t\tself.selectRows(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!self.selecting){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\r\n\t\t\t\t\t\t\tself.selecting = true;\r\n\r\n\t\t\t\t\t\t\tself.selectPrev = [];\r\n\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"mouseup\", endSelect);\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"keyup\", endSelect);\r\n\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseenter\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\tif(self.selectPrev[1] == row){\r\n\t\t\t\t\t\t\t\tself.toggleRow(self.selectPrev[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseout\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.selectPrev.unshift(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\telement.classList.add(\"tabulator-unselectable\");\r\n\t\t\telement.classList.remove(\"tabulator-selectable\");\r\n\t\t}\r\n\t}\r\n\r\n\t//toggle row selection\r\n\ttoggleRow(row){\r\n\t\tif(this.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\tif(row.modules.select && row.modules.select.selected){\r\n\t\t\t\tthis._deselectRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//select a number of rows\r\n\tselectRows(rows){\r\n\t\tvar rowMatch;\r\n\r\n\t\tswitch(typeof rows){\r\n\t\t\tcase \"undefined\":\r\n\t\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t});\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\trowMatch = this.table.rowManager.findRow(rows);\r\n\r\n\t\t\tif(rowMatch){\r\n\t\t\t\tthis._selectRow(rowMatch, true, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.getRows(rows).forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._rowSelectionChanged();\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(rows, false, true);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//select an individual row\r\n\t_selectRow(rowInfo, silent, force){\r\n\t\tvar index;\r\n\r\n\t\t//handle max row count\r\n\t\tif(!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force){\r\n\t\t\tif(this.selectedRows.length >= this.table.options.selectable){\r\n\t\t\t\tif(this.table.options.selectableRollingSelection){\r\n\t\t\t\t\tthis._deselectRow(this.selectedRows[0]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar row = this.table.rowManager.findRow(rowInfo);\r\n\r\n\t\tif(row){\r\n\t\t\tif(this.selectedRows.indexOf(row) == -1){\r\n\t\t\t\trow.getElement().classList.add(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = true;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selectedRows.push(row);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowSelected\", row.getComponent());\r\n\r\n\t\t\t\tthis._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisRowSelected(row){\r\n\t\treturn this.selectedRows.indexOf(row) !== -1;\r\n\t}\r\n\r\n\t//deselect a number of rows\r\n\tdeselectRows(rows, silent){\r\n\t\tvar self = this,\r\n\t\trowCount;\r\n\t\t\r\n\t\tif(typeof rows == \"undefined\"){\r\n\r\n\t\t\trowCount = self.selectedRows.length;\r\n\r\n\t\t\tfor(let i = 0; i < rowCount; i++){\r\n\t\t\t\tself._deselectRow(self.selectedRows[0], true);\r\n\t\t\t}\r\n\r\n\t\t\tself._rowSelectionChanged(silent);\r\n\r\n\t\t}else{\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tself._deselectRow(row, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}else{\r\n\t\t\t\tself._deselectRow(rows, silent);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//deselect an individual row\r\n\t_deselectRow(rowInfo, silent){\r\n\t\tvar self = this,\r\n\t\trow = self.table.rowManager.findRow(rowInfo),\r\n\t\tindex;\r\n\r\n\t\tif(row){\r\n\t\t\tindex = self.selectedRows.findIndex(function(selectedRow){\r\n\t\t\t\treturn selectedRow == row;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\r\n\t\t\t\trow.getElement().classList.remove(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = false;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = false;\r\n\t\t\t\t}\r\n\t\t\t\tself.selectedRows.splice(index, 1);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowDeselected\", row.getComponent());\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetSelectedData(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetSelectedRows(){\r\n\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\trows.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t_rowSelectionChanged(silent){\r\n\t\tif(this.headerCheckboxElement){\r\n\t\t\tif(this.selectedRows.length === 0){\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else if(this.table.rowManager.rows.length === this.selectedRows.length){\r\n\t\t\t\tthis.headerCheckboxElement.checked = true;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = true;\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!silent){\r\n\t\t\tthis.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\r\n\t\t}\r\n\t}\r\n\r\n\tregisterRowSelectCheckbox (row, element) {\r\n\t\tif(!row._row.modules.select){\r\n\t\t\trow._row.modules.select = {};\r\n\t\t}\r\n\r\n\t\trow._row.modules.select.checkboxEl = element;\r\n\t}\r\n\r\n\tregisterHeaderSelectCheckbox (element) {\r\n\t\tthis.headerCheckboxElement = element;\r\n\t}\r\n\r\n\tchildRowSelection(row, select){\r\n\t\tvar children = this.table.modules.dataTree.getChildren(row, true);\r\n\r\n\t\tif(select){\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._selectRow(child, true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._deselectRow(child, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nSelectRow.moduleName = \"selectRow\";\r\n\r\nexport default SelectRow;","//sort numbers\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar decimal = params.decimalSeparator;\r\n\tvar thousand = params.thousandSeparator;\r\n\tvar emptyAlign = 0;\r\n\r\n\ta = String(a);\r\n\tb = String(b);\r\n\r\n\tif(thousand){\r\n\t\ta = a.split(thousand).join(\"\");\r\n\t\tb = b.split(thousand).join(\"\");\r\n\t}\r\n\r\n\tif(decimal){\r\n\t\ta = a.split(decimal).join(\".\");\r\n\t\tb = b.split(decimal).join(\".\");\r\n\t}\r\n\r\n\ta = parseFloat(a);\r\n\tb = parseFloat(b);\r\n\r\n\t//handle non numeric values\r\n\tif(isNaN(a)){\r\n\t\temptyAlign =  isNaN(b) ? 0 : -1;\r\n\t}else if(isNaN(b)){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort strings\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\tvar locale;\r\n\r\n\t//handle empty values\r\n\tif(!a){\r\n\t\temptyAlign =  !b ? 0 : -1;\r\n\t}else if(!b){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\tswitch(typeof params.locale){\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(params.locale){\r\n\t\t\t\tlocale = this.langLocale();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"string\":\r\n\t\t\tlocale = params.locale;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort datetime\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar format = params.format || \"dd/MM/yyyy HH:mm:ss\",\r\n\talignEmptyValues = params.alignEmptyValues,\r\n\temptyAlign = 0;\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\ta = DT.fromFormat(String(a), format);\r\n\t\tb = DT.fromFormat(String(b), format);\r\n\r\n\t\tif(!a.isValid){\r\n\t\t\temptyAlign = !b.isValid ? 0 : -1;\r\n\t\t}else if(!b.isValid){\r\n\t\t\temptyAlign =  1;\r\n\t\t}else{\r\n\t\t\t//compare valid values\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\r\n\t\t//fix empty values in position\r\n\t\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\t\temptyAlign *= -1;\r\n\t\t}\r\n\r\n\t\treturn emptyAlign;\r\n\r\n\t}else{\r\n\t\tconsole.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\r\n\t}\r\n};","import datetime from './datetime.js';\r\n\r\n//sort date\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"dd/MM/yyyy\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","import datetime from './datetime.js';\r\n\r\n//sort times\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"HH:mm\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","//sort booleans\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\r\n\tvar el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\r\n\r\n\treturn el1 - el2;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = 0;\r\n\tvar el2 = 0;\r\n\tvar type = params.type || \"length\";\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\tfunction calc(value){\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"length\":\r\n\t\t\treturn value.length;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sum\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"max\":\r\n\t\t\treturn Math.max.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"min\":\r\n\t\t\treturn Math.min.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"avg\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t}) / value.length;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//handle non array values\r\n\tif(!Array.isArray(a)){\r\n\t\talignEmptyValues = !Array.isArray(b) ? 0 : -1;\r\n\t}else if(!Array.isArray(b)){\r\n\t\talignEmptyValues = 1;\r\n\t}else{\r\n\r\n\t\t//compare valid values\r\n\t\tel1 = a ? calc(a) : 0;\r\n\t\tel2 = b ? calc(b) : 0;\r\n\r\n\t\treturn el1 - el2;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = typeof a == \"undefined\" ? 0 : 1;\r\n\tvar el2 = typeof b == \"undefined\" ? 0 : 1;\r\n\r\n\treturn el1 - el2;\r\n};","//sort alpha numeric strings\r\nexport default function(as, bs, aRow, bRow, column, dir, params){\r\n\tvar a, b, a1, b1, i= 0, L, rx = /(\\d+)|(\\D+)/g, rd = /\\d/;\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\t//handle empty values\r\n\tif(!as && as!== 0){\r\n\t\temptyAlign =  !bs && bs!== 0 ? 0 : -1;\r\n\t}else if(!bs && bs!== 0){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\r\n\t\tif(isFinite(as) && isFinite(bs)) return as - bs;\r\n\t\ta = String(as).toLowerCase();\r\n\t\tb = String(bs).toLowerCase();\r\n\t\tif(a === b) return 0;\r\n\t\tif(!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\r\n\t\ta = a.match(rx);\r\n\t\tb = b.match(rx);\r\n\t\tL = a.length > b.length ? b.length : a.length;\r\n\t\twhile(i < L){\r\n\t\t\ta1= a[i];\r\n\t\t\tb1= b[i++];\r\n\t\t\tif(a1 !== b1){\r\n\t\t\t\tif(isFinite(a1) && isFinite(b1)){\r\n\t\t\t\t\tif(a1.charAt(0) === \"0\") a1 = \".\" + a1;\r\n\t\t\t\t\tif(b1.charAt(0) === \"0\") b1 = \".\" + b1;\r\n\t\t\t\t\treturn a1 - b1;\r\n\t\t\t\t}\r\n\t\t\t\telse return a1 > b1 ? 1 : -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a.length > b.length;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","import number from './sorters/number.js';\r\nimport string from './sorters/string.js';\r\nimport date from './sorters/date.js';\r\nimport time from './sorters/time.js';\r\nimport datetime from './sorters/datetime.js';\r\nimport boolean from './sorters/boolean.js';\r\nimport array from './sorters/array.js';\r\nimport exists from './sorters/exists.js';\r\nimport alphanum from './sorters/alphanum.js';\r\n\r\nexport default {\r\n\tnumber:number,\r\n\tstring:string,\r\n\tdate:date,\r\n\ttime:time,\r\n\tdatetime:datetime,\r\n\tboolean:boolean,\r\n\tarray:array,\r\n\texists:exists,\r\n\talphanum:alphanum\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultSorters from './defaults/sorters.js';\r\n\r\nclass Sort extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t \tthis.sortList = []; //holder current sort\r\n\t \tthis.changed = false; //has the sort changed since last render\r\n\r\n\t \tthis.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\r\n\r\n\t \tthis.registerTableOption(\"initialSort\", false); //initial sorting criteria\r\n\t \tthis.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\r\n\t \tthis.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\r\n\t \tthis.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\r\n\r\n\t \tthis.registerColumnOption(\"sorter\");\r\n\t \tthis.registerColumnOption(\"sorterParams\");\r\n\r\n\t \tthis.registerColumnOption(\"headerSort\", true);\r\n\t \tthis.registerColumnOption(\"headerSortStartingDir\");\r\n\t \tthis.registerColumnOption(\"headerSortTristate\");\r\n\r\n\t }\r\n\r\n\t initialize(){\r\n\t \tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t \tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\t \tthis.registerDataHandler(this.sort.bind(this), 20);\r\n\r\n\t \tthis.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\r\n\t \tthis.registerTableFunction(\"getSorters\", this.getSort.bind(this));\r\n\t \tthis.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\r\n\r\n\t \tif(this.table.options.sortMode === \"remote\"){\r\n\t \t\tthis.subscribe(\"data-params\", this.remoteSortParams.bind(this));\r\n\t \t}\r\n\t }\r\n\r\n\t tableBuilt(){\r\n\t \tif(this.table.options.initialSort){\r\n\t \t\tthis.setSort(this.table.options.initialSort);\r\n\t \t}\r\n\t }\r\n\r\n\t remoteSortParams(data, config, silent, params){\r\n\t \tvar sorters = this.getSort();\r\n\r\n\t \tsorters.forEach((item) => {\r\n\t \t\tdelete item.column;\r\n\t \t});\r\n\r\n\t \tparams.sort = sorters;\r\n\r\n\t \treturn params;\r\n\t }\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetSort(sortList, dir){\r\n\t\tthis.setSort(sortList, dir);\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\tclearSort(){\r\n\t\tthis.clear();\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//initialize column header for sorting\r\n\tinitializeColumn(column){\r\n\t\tvar sorter = false,\r\n\t\tcolEl,\r\n\t\tarrowEl;\r\n\r\n\t\tswitch(typeof column.definition.sorter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Sort.sorters[column.definition.sorter]){\r\n\t\t\t\tsorter = Sort.sorters[column.definition.sorter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tsorter = column.definition.sorter;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.sort = {\r\n\t\t\tsorter:sorter, dir:\"none\",\r\n\t\t\tparams:column.definition.sorterParams || {},\r\n\t\t\tstartingDir:column.definition.headerSortStartingDir || \"asc\",\r\n\t\t\ttristate: column.definition.headerSortTristate,\r\n\t\t};\r\n\r\n\t\tif(column.definition.headerSort !== false){\r\n\r\n\t\t\tcolEl = column.getElement();\r\n\r\n\t\t\tcolEl.classList.add(\"tabulator-sortable\");\r\n\r\n\r\n\t\t\tarrowEl = document.createElement(\"div\");\r\n\t\t\tarrowEl.classList.add(\"tabulator-col-sorter\");\r\n\r\n\t\t\tif(typeof this.table.options.headerSortElement == \"object\"){\r\n\t\t\t\tarrowEl.appendChild(this.table.options.headerSortElement);\r\n\t\t\t}else{\r\n\t\t\t\tarrowEl.innerHTML = this.table.options.headerSortElement;\r\n\t\t\t}\r\n\r\n\t\t\t//create sorter arrow\r\n\t\t\tcolumn.titleHolderElement.appendChild(arrowEl);\r\n\r\n\t\t\tcolumn.modules.sort.element = arrowEl;\r\n\r\n\t\t\t//sort on click\r\n\t\t\tcolEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\tvar dir = \"\",\r\n\t\t\t\tsorters=[],\r\n\t\t\t\tmatch = false;\r\n\r\n\t\t\t\tif(column.modules.sort){\r\n\t\t\t\t\tif(column.modules.sort.tristate){\r\n\t\t\t\t\t\tif(column.modules.sort.dir == \"none\"){\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(column.modules.sort.dir == column.modules.sort.startingDir){\r\n\t\t\t\t\t\t\t\tdir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tdir = \"none\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(column.modules.sort.dir){\r\n\t\t\t\t\t\t\tcase \"asc\":\r\n\t\t\t\t\t\t\tdir = \"desc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"desc\":\r\n\t\t\t\t\t\t\tdir = \"asc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\r\n\t\t\t\t\t\tsorters = this.getSort();\r\n\r\n\t\t\t\t\t\tmatch = sorters.findIndex((sorter) => {\r\n\t\t\t\t\t\t\treturn sorter.field === column.getField();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(match > -1){\r\n\t\t\t\t\t\t\tsorters[match].dir = dir;\r\n\r\n\t\t\t\t\t\t\tif(match != sorters.length -1){\r\n\t\t\t\t\t\t\t\tmatch = sorters.splice(match, 1)[0];\r\n\t\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\t\tsorters.push(match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\tsorters.push({column:column, dir:dir});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//add to existing sort\r\n\t\t\t\t\t\tthis.setSort(sorters);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(dir == \"none\"){\r\n\t\t\t\t\t\t\tthis.clear();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//sort by column only\r\n\t\t\t\t\t\t\tthis.setSort(column, dir);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.table.rowManager.sorterRefresh(!this.sortList.length);\r\n\t\t\t\t\tthis.refreshSort();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSort(){\r\n\t\tif(this.table.options.sortMode === \"remote\"){\r\n\t\t\tthis.reloadData();\r\n\t\t}else{\r\n\t\t\tthis.refreshData(true);\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the sorters have changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//return current sorters\r\n\tgetSort(){\r\n\t\tvar self = this,\r\n\t\tsorters = [];\r\n\r\n\t\tself.sortList.forEach(function(item){\r\n\t\t\tif(item.column){\r\n\t\t\t\tsorters.push({column:item.column.getComponent(), field:item.column.getField(), dir:item.dir});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn sorters;\r\n\t}\r\n\r\n\t//change sort list and trigger sort\r\n\tsetSort(sortList, dir){\r\n\t\tvar self = this,\r\n\t\tnewSortList = [];\r\n\r\n\t\tif(!Array.isArray(sortList)){\r\n\t\t\tsortList = [{column: sortList, dir:dir}];\r\n\t\t}\r\n\r\n\t\tsortList.forEach(function(item){\r\n\t\t\tvar column;\r\n\r\n\t\t\tcolumn = self.table.columnManager.findColumn(item.column);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\titem.column = column;\r\n\t\t\t\tnewSortList.push(item);\r\n\t\t\t\tself.changed = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tself.sortList = newSortList;\r\n\r\n\t\tthis.dispatch(\"sort-changed\");\r\n\t}\r\n\r\n\t//clear sorters\r\n\tclear(){\r\n\t\tthis.setSort([]);\r\n\t}\r\n\r\n\t//find appropriate sorter for column\r\n\tfindSorter(column){\r\n\t\tvar row = this.table.rowManager.activeRows[0],\r\n\t\tsorter = \"string\",\r\n\t\tfield, value;\r\n\r\n\t\tif(row){\r\n\t\t\trow = row.getData();\r\n\t\t\tfield = column.getField();\r\n\r\n\t\t\tif(field){\r\n\r\n\t\t\t\tvalue = column.getFieldValue(row);\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Sort.sorters[sorter];\r\n\t}\r\n\r\n\t//work through sort list sorting data\r\n\tsort(data){\r\n\t\tvar self = this,\r\n\t\tsortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\r\n\t\tsortListActual = [],\r\n\t\trowComponents = [],\r\n\t\tlastSort;\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorting\")){\r\n\t\t\tthis.dispatchExternal(\"dataSorting\", self.getSort());\r\n\t\t}\r\n\r\n\t\tself.clearColumnHeaders();\r\n\r\n\t\tif(this.table.options.sortMode !== \"remote\"){\r\n\r\n\t\t\t//build list of valid sorters and trigger column specific callbacks before sort begins\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tvar sortObj = item.column.modules.sort;\r\n\r\n\t\t\t\tif(item.column && sortObj){\r\n\r\n\t\t\t\t\t//if no sorter has been defined, take a guess\r\n\t\t\t\t\tif(!sortObj.sorter){\r\n\t\t\t\t\t\tsortObj.sorter = self.findSorter(item.column);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\r\n\r\n\t\t\t\t\tsortListActual.push(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\r\n\t\t\t//sort data\r\n\t\t\tif (sortListActual.length) {\r\n\t\t\t\tself._sortItems(data, sortListActual);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorted\")){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\trowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//clear sort arrows on columns\r\n\tclearColumnHeaders(){\r\n\t\tthis.table.columnManager.getRealColumns().forEach(function(column){\r\n\t\t\tif(column.modules.sort){\r\n\t\t\t\tcolumn.modules.sort.dir = \"none\";\r\n\t\t\t\tcolumn.getElement().setAttribute(\"aria-sort\", \"none\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//set the column header sort direction\r\n\tsetColumnHeader(column, dir){\r\n\t\tcolumn.modules.sort.dir = dir;\r\n\t\tcolumn.getElement().setAttribute(\"aria-sort\", dir);\r\n\t}\r\n\r\n\t//sort each item in sort list\r\n\t_sortItems(data, sortList){\r\n\t\tvar sorterCount = sortList.length - 1;\r\n\r\n\t\tdata.sort((a, b) => {\r\n\t\t\tvar result;\r\n\r\n\t\t\tfor(var i = sorterCount; i>= 0; i--){\r\n\t\t\t\tlet sortItem = sortList[i];\r\n\r\n\t\t\t\tresult = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\r\n\r\n\t\t\t\tif(result !== 0){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\t//process individual rows for a sort function on active data\r\n\t_sortRow(a, b, column, dir, params){\r\n\t\tvar el1Comp, el2Comp, colComp;\r\n\r\n\t\t//switch elements depending on search direction\r\n\t\tvar el1 = dir == \"asc\" ? a : b;\r\n\t\tvar el2 = dir == \"asc\" ? b : a;\r\n\r\n\t\ta = column.getFieldValue(el1.getData());\r\n\t\tb = column.getFieldValue(el2.getData());\r\n\r\n\t\ta = typeof a !== \"undefined\" ? a : \"\";\r\n\t\tb = typeof b !== \"undefined\" ? b : \"\";\r\n\r\n\t\tel1Comp = el1.getComponent();\r\n\t\tel2Comp = el2.getComponent();\r\n\r\n\t\treturn column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\r\n\t}\r\n}\r\n\r\nSort.moduleName = \"sort\";\r\n\r\n//load defaults\r\nSort.sorters = defaultSorters;\r\n\r\nexport default Sort;","export default {\r\n\t//is integer\r\n\tinteger: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n\t},\r\n\r\n\t//is float\r\n\tfloat: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && value % 1 !== 0;\r\n\t},\r\n\r\n\t//must be a number\r\n\tnumeric: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !isNaN(value);\r\n\t},\r\n\r\n\t//must be a string\r\n\tstring: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn isNaN(value);\r\n\t},\r\n\r\n\t//maximum value\r\n\tmax: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) <= parameters;\r\n\t},\r\n\r\n\t//minimum value\r\n\tmin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) >= parameters;\r\n\t},\r\n\r\n\t//starts with  value\r\n\tstarts: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\t//ends with  value\r\n\tends: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\r\n\t//minimum string length\r\n\tminLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length >= parameters;\r\n\t},\r\n\r\n\t//maximum string length\r\n\tmaxLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length <= parameters;\r\n\t},\r\n\r\n\t//in provided value list\r\n\tin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(typeof parameters == \"string\"){\r\n\t\t\tparameters = parameters.split(\"|\");\r\n\t\t}\r\n\r\n\t\treturn value === \"\" || parameters.indexOf(value) > -1;\r\n\t},\r\n\r\n\t//must match provided regex\r\n\tregex: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar reg = new RegExp(parameters);\r\n\r\n\t\treturn reg.test(value);\r\n\t},\r\n\r\n\t//value must be unique in this column\r\n\tunique: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar unique = true;\r\n\r\n\t\tvar cellData = cell.getData();\r\n\t\tvar column = cell.getColumn()._getSelf();\r\n\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar data = row.getData();\r\n\r\n\t\t\tif(data !== cellData){\r\n\t\t\t\tif(value == column.getFieldValue(data)){\r\n\t\t\t\t\tunique = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn unique;\r\n\t},\r\n\r\n\t//must have a value\r\n\trequired:function(cell, value, parameters){\r\n\t\treturn value !== \"\" && value !== null && typeof value !== \"undefined\";\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultValidators from './defaults/validators.js';\r\n\r\nclass Validate extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.invalidCells = [];\r\n\r\n\t\tthis.registerTableOption(\"validationMode\", \"blocking\");\r\n\r\n\t\tthis.registerColumnOption(\"validator\");\r\n\r\n\t\tthis.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\r\n\t\tthis.registerTableFunction(\"validate\", this.userValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\r\n\t}\r\n\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-delete\", this.clearValidation.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Cell Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tcellIsValid(cell){\r\n\t\treturn cell.modules.validate ? !cell.modules.validate.invalid : true;\r\n\t}\r\n\r\n\tcellValidate(cell){\r\n\t\treturn this.validate(cell.column.modules.validate, cell, cell.getValue());\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Column Functions ////////\r\n\t///////////////////////////////////\r\n\r\n\tcolumnValidate(column){\r\n\t\tvar invalid = [];\r\n\r\n\t\tcolumn.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Row Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\trowValidate(row){\r\n\t\tvar invalid = [];\r\n\r\n\t\trow.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\tuserClearCellValidation(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.getInvalidCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.clearValidation(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tuserValidate(cells){\r\n\t\tvar output = [];\r\n\r\n\t\t//clear row data\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar valid = row.validate();\r\n\r\n\t\t\tif(valid !== true){\r\n\t\t\t\toutput = output.concat(valid);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.validator !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//validate\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = [],\r\n\t\tvalidator;\r\n\r\n\t\tif(column.definition.validator){\r\n\r\n\t\t\tif(Array.isArray(column.definition.validator)){\r\n\t\t\t\tcolumn.definition.validator.forEach(function(item){\r\n\t\t\t\t\tvalidator = self._extractValidator(item);\r\n\r\n\t\t\t\t\tif(validator){\r\n\t\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvalidator = this._extractValidator(column.definition.validator);\r\n\r\n\t\t\t\tif(validator){\r\n\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.modules.validate = config.length ? config : false;\r\n\t\t}\r\n\t}\r\n\r\n\t_extractValidator(value){\r\n\t\tvar type, params, pos;\r\n\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tpos = value.indexOf(':');\r\n\r\n\t\t\tif(pos > -1){\r\n\t\t\t\ttype = value.substring(0,pos);\r\n\t\t\t\tparams = value.substring(pos+1);\r\n\t\t\t}else{\r\n\t\t\t\ttype = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._buildValidator(type, params);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treturn this._buildValidator(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"object\":\r\n\t\t\treturn this._buildValidator(value.type, value.parameters);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_buildValidator(type, params){\r\n\r\n\t\tvar func = typeof type == \"function\" ? type : Validate.validators[type];\r\n\r\n\t\tif(!func){\r\n\t\t\tconsole.warn(\"Validator Setup Error - No matching validator found:\", type);\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\treturn {\r\n\t\t\t\ttype:typeof type == \"function\" ? \"function\" : type,\r\n\t\t\t\tfunc:func,\r\n\t\t\t\tparams:params,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(validators, cell, value){\r\n\t\tvar self = this,\r\n\t\tvalid = [],\r\n\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\tif(validators){\r\n\t\t\tvalidators.forEach(function(item){\r\n\t\t\t\tif(!item.func.call(self, cell.getComponent(), value, item.params)){\r\n\t\t\t\t\tvalid.push({\r\n\t\t\t\t\t\ttype:item.type,\r\n\t\t\t\t\t\tparameters:item.params\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvalid = valid.length ? valid : true;\r\n\r\n\t\tif(!cell.modules.validate){\r\n\t\t\tcell.modules.validate = {};\r\n\t\t}\r\n\r\n\t\tif(valid === true){\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcell.modules.validate.invalid = true;\r\n\r\n\t\t\tif(this.table.options.validationMode !== \"manual\"){\r\n\t\t\t\tcell.getElement().classList.add(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tif(invalidIndex == -1){\r\n\t\t\t\tthis.invalidCells.push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetInvalidCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.invalidCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearValidation(cell){\r\n\t\tvar invalidIndex;\r\n\r\n\t\tif(cell.modules.validate && cell.modules.validate.invalid){\r\n\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\r\n\t\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nValidate.moduleName = \"validate\";\r\n\r\n//load defaults\r\nValidate.validators = defaultValidators;\r\n\r\nexport default Validate;","export default {\r\n\r\n\tdebugEventsExternal:false, //flag to console log events\r\n\tdebugEventsInternal:false, //flag to console log events\r\n\tdebugInvalidOptions:true, //allow toggling of invalid option warnings\r\n\r\n\theight:false, //height of tabulator\r\n\tminHeight:false, //minimum height of tabulator\r\n\tmaxHeight:false, //maximum height of tabulator\r\n\r\n\tcolumnMaxWidth:false, //minimum global width for a column\r\n\tcolumnHeaderVertAlign:\"top\", //vertical alignment of column headers\r\n\r\n\tcolumns:[],//store for colum header info\r\n\tcolumnDefaults:{}, //store column default props\r\n\r\n\tdata:false, //default starting data\r\n\r\n\tautoColumns:false, //build columns from data row structure\r\n\tautoColumnsDefinitions:false,\r\n\r\n\tnestedFieldSeparator:\".\", //separator for nested data\r\n\r\n\ttooltipGenerationMode:\"load\", //when to generate tooltips\r\n\r\n\tfooterElement:false, //hold footer element\r\n\r\n\tindex:\"id\", //filed for row index\r\n\r\n\ttextDirection:\"auto\",\r\n\r\n\taddRowPos:\"bottom\", //position to insert blank rows, top|bottom\r\n\r\n\theaderVisible:true, //hide header\r\n\r\n\trenderVertical:\"virtual\",\r\n\trenderHorizontal:\"basic\",\r\n\trenderVerticalBuffer:0, // set virtual DOM buffer size\r\n\r\n\tscrollToRowPosition:\"top\",\r\n\tscrollToRowIfVisible:true,\r\n\r\n\tscrollToColumnPosition:\"left\",\r\n\tscrollToColumnIfVisible:true,\r\n\r\n\trowFormatter:false,\r\n\trowFormatterPrint:null,\r\n\trowFormatterClipboard:null,\r\n\trowFormatterHtmlOutput:null,\r\n\r\n\tplaceholder:false,\r\n\r\n\tdataLoader:true,\r\n\tdataLoaderLoading:false,\r\n\tdataLoaderError:false,\r\n\r\n\tdataSendParams:{},\r\n\r\n\tdataReceiveParams:{},\r\n}","export default class OptionsList {\r\n\tconstructor(table, msgType, defaults = {}){\r\n\t\tthis.table = table;\r\n\t\tthis.msgType = msgType;\r\n\t\tthis.registeredDefaults = Object.assign({}, defaults)\r\n\t}\r\n\r\n\tregister(option, value){\r\n\t\tthis.registeredDefaults[option] = value;\r\n\t}\r\n\r\n\tgenerate(defaultOptions, userOptions = {}){\r\n\t\tvar output = Object.assign({}, this.registeredDefaults);\r\n\r\n\t\tObject.assign(output, defaultOptions);\r\n\r\n\t\tif(userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions){\r\n\t\t\tfor (var key in userOptions){\r\n\t\t\t\tif(!output.hasOwnProperty(key)){\r\n\t\t\t\t\tconsole.warn(\"Invalid \" + this.msgType + \" option:\", key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in output){\r\n\t\t\tif(key in userOptions){\r\n\t\t\t\toutput[key] = userOptions[key];\r\n\t\t\t}else{\r\n\t\t\t\tif(Array.isArray(output[key])){\r\n\t\t\t\t\toutput[key] = Object.assign([], output[key]);\r\n\t\t\t\t}else if(typeof output[key] === \"object\" && output[key] !== null){\r\n\t\t\t\t\toutput[key] = Object.assign({}, output[key]);\r\n\t\t\t\t}else if (typeof output[key] === \"undefined\"){\r\n\t\t\t\t\tdelete output[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Renderer extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.elementVertical = table.rowManager.element;\r\n\t\tthis.elementHorizontal = table.columnManager.element;\r\n\t\tthis.tableElement =  table.rowManager.tableElement;\r\n\r\n\t\tthis.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t/////// Internal Bindings /////////\r\n\t///////////////////////////////////\r\n\r\n\tinitialize(){\r\n\t\t//initialize core functionality\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\t//clear down existing rows layout\r\n\t}\r\n\r\n\tclearColumns(){\r\n\t\t//clear down existing columns layout\r\n\t}\r\n\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\t//resize columns to fit data\r\n\t}\r\n\r\n\r\n\trenderRows(){\r\n\t\t//render rows from a clean slate\r\n\t}\r\n\r\n\trenderColumns(){\r\n\t\t//render columns from a clean slate\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\t// rerender rows and keep position\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\trerenderColumns(update, blockRedraw){\r\n\t\t//rerender columns\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\t//render the cells in a row\r\n\t}\r\n\r\n\trerenderRowCells(row, force){\r\n\t\t//rerender the cells in a row\r\n\t}\r\n\r\n\tscrollColumns(left, dir){\r\n\t\t//handle horizontal scrolling\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\t//handle vertical scolling\r\n\t}\r\n\r\n\tresize(){\r\n\t\t//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\t//scroll to a specific row\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\t//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\t//return the visible rows\r\n\t\treturn [];\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Helper Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\trows(){\r\n\t\treturn this.table.rowManager.getDisplayRows();\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/////// External Triggers /////////\r\n\t/////// (DO NOT OVERRIDE) /////////\r\n\t///////////////////////////////////\r\n\r\n\tclear(){\r\n\t\t//clear down existing layout\r\n\t\tthis.clearRows();\r\n\t\tthis.clearColumns();\r\n\t}\r\n\r\n\trender(){\r\n\t\t//render from a clean slate\r\n\t\tthis.renderRows();\r\n\t\tthis.renderColumns();\r\n\t}\r\n\r\n\trerender(callback){\r\n\t\t// rerender and keep position\r\n\t\tthis.rerenderRows();\r\n\t\tthis.rerenderColumns();\r\n\t}\r\n\r\n\tscrollToRowPosition(row, position, ifVisible){\r\n\t\tvar rowIndex = this.rows().indexOf(row),\r\n\t\trowEl = row.getElement(),\r\n\t\toffset = 0;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(rowIndex > -1){\r\n\r\n\t\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\t\tifVisible = this.table.options.scrollToRowIfVisible;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check row visibility\r\n\t\t\t\tif(!ifVisible){\r\n\t\t\t\t\tif(Helpers.elVisible(rowEl)){\r\n\t\t\t\t\t\toffset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight){\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\t\tposition = this.table.options.scrollToRowPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(position === \"nearest\"){\r\n\t\t\t\t\tposition = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scroll to row\r\n\t\t\t\tthis.scrollToRow(row);\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - ((this.elementVertical.scrollHeight - rowEl.offsetTop) / 2);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.clientHeight / 2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bottom\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Row not visible\");\r\n\t\t\t\treject(\"Scroll Error - Row not visible\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\trow.cells.forEach((cell) => {\r\n\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\tcell.cellRendered();\r\n\t\t});\r\n\t}\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.leftCol = 0;\r\n\t\tthis.rightCol = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\t\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t\t\r\n\t\tthis.fitDataColAvg = 0;\r\n\t\t\r\n\t\tthis.window = 200; //pixel margin to make column visible before it is shown on screen\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\t\r\n\t\tthis.columns = [];\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.compatabilityCheck();\r\n\t}\r\n\t\r\n\tcompatabilityCheck(){\r\n\t\tvar columns = this.options(\"columns\"),\r\n\t\tfrozen = false,\r\n\t\tok = true;\r\n\t\t\r\n\t\tif(this.options(\"layout\") == \"fitDataTable\"){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"responsiveLayout\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"rtl\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(columns){\r\n\t\t\tfrozen = columns.find((col) => {\r\n\t\t\t\treturn col.frozen;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(frozen){\r\n\t\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\r\n\t\t\t\tok = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if(!ok){\r\n\t\t// \toptions.virtualDomHoz = false;\r\n\t\t// }\r\n\t\t\r\n\t\treturn ok;\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\t\r\n\trenderColumns(row, force){\r\n\t\tthis.dataChange();\r\n\t}\r\n\t\r\n\tscrollColumns(left, dir){\r\n\t\tif(this.scrollLeft != left){\r\n\t\t\tthis.scrollLeft = left;\r\n\t\t\t\r\n\t\t\tthis.scroll(left - (this.vDomScrollPosLeft + this.window));\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderColumns(update, blockRedraw){\t\t\r\n\t\tvar old = {\r\n\t\t\tcols:this.columns,\r\n\t\t\tleftCol:this.leftCol,\r\n\t\t\trightCol:this.rightCol,\r\n\t\t};\r\n\t\t\r\n\t\tif(update && !this.initialized){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tthis.scrollLeft = this.elementVertical.scrollLeft;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = this.scrollLeft - this.window;\r\n\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\r\n\t\tvar colPos = 0;\r\n\t\t\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tvar config = {};\r\n\t\t\t\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvar width = column.getWidth();\r\n\t\t\t\t\r\n\t\t\t\tconfig.leftPos = colPos;\r\n\t\t\t\tconfig.rightPos = colPos + width;\r\n\t\t\t\t\r\n\t\t\t\tconfig.width = width;\r\n\t\t\t\t\r\n\t\t\t\tif (this.options(\"layout\") === \"fitData\") {\r\n\t\t\t\t\tconfig.fitDataCheck = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif((colPos + width > this.vDomScrollPosLeft) && (colPos < this.vDomScrollPosRight)){\r\n\t\t\t\t\t//column is visible\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.leftCol == -1){\r\n\t\t\t\t\t\tthis.leftCol = this.columns.length;\r\n\t\t\t\t\t\tthis.vDomPadLeft = colPos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.rightCol = this.columns.length;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// column is hidden\r\n\t\t\t\t\tif(this.leftCol !== -1){\r\n\t\t\t\t\t\tthis.vDomPadRight += width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\t\r\n\t\t\t\tcolumn.modules.vdomHoz = config;\r\n\t\t\t\t\r\n\t\t\t\tcolPos += width;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tif(!update || this.reinitChanged(old)){\r\n\t\t\t\tthis.reinitializeRows();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.elementVertical.scrollLeft = this.scrollLeft;\r\n\t}\r\n\t\r\n\trenderRowCells(row){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.initializeRow(row);\r\n\t\t}else{\r\n\t\t\trow.cells.forEach((cell) => {\r\n\t\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\t\tcell.cellRendered();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderRowCells(row, force){\r\n\t\tthis.reinitializeRow(row, force);\r\n\t}\r\n\t\r\n\treinitializeColumnWidths(columns){\r\n\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\tthis.columns[i].reinitializeWidth();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\t\r\n\tdeinitialize(){\r\n\t\tthis.initialized = false;\r\n\t}\r\n\t\r\n\tclear(){\r\n\t\tthis.columns = [];\r\n\t\t\r\n\t\tthis.leftCol = -1;\r\n\t\tthis.rightCol = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t}\r\n\t\r\n\tdataChange(){\r\n\t\tvar change = false,\r\n\t\tcollsWidth = 0,\r\n\t\tcolEnd = 0,\r\n\t\tgroup, row, rowEl;\r\n\t\t\r\n\t\tif(this.options(\"layout\") === \"fitData\"){\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\t\tif(!column.definition.width && column.visible){\r\n\t\t\t\t\tchange = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(change){\r\n\t\t\t\tif(change && this.table.rowManager.getDisplayRows().length){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar row = this.chain(\"rows-sample\", [1], [], () => {\r\n\t\t\t\t\t\treturn this.table.rowManager.getDisplayRows()[0];\r\n\t\t\t\t\t})[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl = row.getElement();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.generateCells();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.tableElement.appendChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(var colEnd = 0; colEnd < row.cells.length; colEnd++){\r\n\t\t\t\t\t\t\tlet cell = row.cells[colEnd];\r\n\t\t\t\t\t\t\trowEl.appendChild(cell.getElement());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcell.column.reinitializeWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcollsWidth += cell.column.getWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(collsWidth > this.vDomScrollPosRight){\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++){\r\n\t\t\t\t\t\t\tthis.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.options(\"layout\") === \"fitColumns\"){\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitChanged(old){\r\n\t\tvar match = true;\r\n\t\t\r\n\t\tif(old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\told.cols.forEach((col, i) => {\r\n\t\t\tif(col !== this.columns[i]){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn !match;\r\n\t}\r\n\t\r\n\treinitializeRows(){\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\trows.forEach((row) => {\r\n\t\t\tthis.reinitializeRow(row, true);\r\n\t\t});\r\n\t}\r\n\t\r\n\tscroll(diff){\r\n\t\tthis.vDomScrollPosLeft += diff;\r\n\t\tthis.vDomScrollPosRight += diff;\r\n\t\t\r\n\t\tif(diff > (this.elementVertical.clientWidth * .8)){\r\n\t\t\tthis.rerenderColumns();\r\n\t\t}else{\r\n\t\t\tif(diff > 0){\r\n\t\t\t\t//scroll right\r\n\t\t\t\tthis.addColRight();\r\n\t\t\t\tthis.removeColLeft();\r\n\t\t\t}else{\r\n\t\t\t\t//scroll left\r\n\t\t\t\tthis.addColLeft();\r\n\t\t\t\tthis.removeColRight();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcolPositionAdjust (start, end, diff){\r\n\t\tfor(let i = start; i < end; i++){\r\n\t\t\tlet column = this.columns[i];\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.leftPos += diff;\r\n\t\t\tcolumn.modules.vdomHoz.rightPos += diff;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColRight(){\r\n\t\tvar column = this.columns[this.rightCol + 1],\r\n\t\trows, newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tthis.rightCol++;\r\n\t\t\t\r\n\t\t\tif(this.rightCol >= (this.columns.length - 1)){\r\n\t\t\t\tthis.vDomPadRight = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadRight -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.addColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColLeft(){\r\n\t\tvar column = this.columns[this.leftCol - 1],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft){\r\n\t\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().prepend(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tif(!this.leftCol){\r\n\t\t\t\tthis.vDomPadLeft = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadLeft -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol--;\r\n\t\t\t\r\n\t\t\tthis.addColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColRight(column){\r\n\t\tvar column = this.columns[this.rightCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.visible = false;\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().removeChild(cell.getElement());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadRight += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.rightCol --;\r\n\t\t\t\r\n\t\t\tthis.removeColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColLeft(){\r\n\t\tvar column = this.columns[this.leftCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft){\t\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tvar cell, el;\r\n\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tcell = row.getCell(column);\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tel = cell.getElement();\r\n\r\n\t\t\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\t\t\trow.getElement().removeChild(el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadLeft += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol ++;\r\n\t\t\t\r\n\t\t\tthis.removeColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfitDataColActualWidthCheck(column){\r\n\t\tvar newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column.modules.vdomHoz.fitDataCheck){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t\r\n\t\t\tnewWidth = column.getWidth();\r\n\t\t\twidthDiff = newWidth - column.modules.vdomHoz.width;\r\n\t\t\t\r\n\t\t\tif(widthDiff){\r\n\t\t\t\tcolumn.modules.vdomHoz.rightPos += widthDiff;\r\n\t\t\t\tcolumn.modules.vdomHoz.width = newWidth;\r\n\t\t\t\tthis.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.fitDataCheck = false;\r\n\t\t}\r\n\t};\r\n\t\r\n\tinitializeRow(row){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\trow.modules.vdomHoz = {\r\n\t\t\t\tleftCol:this.leftCol,\r\n\t\t\t\trightCol:this.rightCol,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\t\tlet column = this.columns[i];\r\n\t\t\t\t\r\n\t\t\t\tif(column && column.visible){\r\n\t\t\t\t\tlet cell = row.getCell(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeRow(row, force){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\tif(force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol){\r\n\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\twhile(rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\r\n\t\t\t\t\r\n\t\t\t\tthis.initializeRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Column from './column/Column.js';\r\nimport ColumnComponent from './column/ColumnComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nimport RendererBasicHorizontal from './rendering/renderers/BasicHorizontal.js';\r\nimport RendererVirtualDomHorizontal from './rendering/renderers/VirtualDomHorizontal.js';\r\n\r\nimport defaultColumnOptions from './column/defaults/options.js';\r\n\r\nexport default class ColumnManager extends CoreFeature {\r\n\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.blockHozScrollEvent = false;\r\n\t\tthis.headersElement = null;\r\n\t\tthis.element = null ; //containing element\r\n\t\tthis.columns = []; // column definition object\r\n\t\tthis.columnsByIndex = []; //columns by index\r\n\t\tthis.columnsByField = {}; //columns by field\r\n\t\tthis.scrollLeft = 0;\r\n\t\tthis.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t////////////// Setup Functions /////////////////\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\tthis.headersElement = this.createHeadersElement();\r\n\t\tthis.element = this.createHeaderElement();\r\n\r\n\t\tthis.element.insertBefore(this.headersElement, this.element.firstChild);\r\n\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomHorizontal,\r\n\t\t\t\"basic\": RendererBasicHorizontal,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderHorizontal === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderHorizontal];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderHorizontal;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcreateHeadersElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-headers\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateHeaderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-header\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tif(!this.table.options.headerVisible){\r\n\t\t\tel.classList.add(\"tabulator-header-hidden\");\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return header containing element\r\n\tgetHeadersElement(){\r\n\t\treturn this.headersElement;\r\n\t}\r\n\r\n\t//scroll horizontally to match table body\r\n\tscrollHorizontal(left){\r\n\t\tvar hozAdjust = 0,\r\n\t\tscrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\r\n\r\n\t\t// this.tempScrollBlock();\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\t//adjust for vertical scrollbar moving table when present\r\n\t\tif(left > scrollWidth){\r\n\t\t\thozAdjust = left - scrollWidth;\r\n\t\t\tthis.element.style.marginLeft = (-(hozAdjust)) + \"px\";\r\n\t\t}else{\r\n\t\t\tthis.element.style.marginLeft = 0;\r\n\t\t}\r\n\r\n\t\tthis.scrollLeft = left;\r\n\r\n\t\tthis.renderer.scrollColumns(left);\r\n\t}\r\n\r\n\t///////////// Column Setup Functions /////////////\r\n\tgenerateColumnsFromRowData(data){\r\n\t\tvar cols = [],\r\n\t\tdefinitions = this.table.options.autoColumnsDefinitions,\r\n\t\trow, sorter;\r\n\r\n\t\tif(data && data.length){\r\n\r\n\t\t\trow = data[0];\r\n\r\n\t\t\tfor(var key in row){\r\n\t\t\t\tlet col = {\r\n\t\t\t\t\tfield:key,\r\n\t\t\t\t\ttitle:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet value = row[key];\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(value)){\r\n\t\t\t\t\t\tsorter = \"array\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcol.sorter = sorter;\r\n\r\n\t\t\t\tcols.push(col);\r\n\t\t\t}\r\n\r\n\t\t\tif(definitions){\r\n\r\n\t\t\t\tswitch(typeof definitions){\r\n\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\tthis.table.options.columns = definitions.call(this.table, cols);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(definitions)){\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tvar match = definitions.find((def) => {\r\n\t\t\t\t\t\t\t\treturn def.field === col.field;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\tObject.assign(col, match);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tif(definitions[col.field]){\r\n\t\t\t\t\t\t\t\tObject.assign(col, definitions[col.field]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setColumns(this.table.options.columns);\r\n\t\t}\r\n\t}\r\n\r\n\tsetColumns(cols, row){\r\n\t\twhile(this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.columnsByIndex = [];\r\n\t\tthis.columnsByField = {};\r\n\r\n\t\tthis.dispatch(\"columns-loading\");\r\n\r\n\t\tcols.forEach((def, i) => {\r\n\t\t\tthis._addColumn(def);\r\n\t\t});\r\n\r\n\t\tthis._reIndexColumns();\r\n\r\n\t\tthis.dispatch(\"columns-loaded\");\r\n\r\n\t\tthis.renderer.rerenderColumns(false, true);\r\n\r\n\t\tthis.redraw(true);\r\n\t}\r\n\r\n\t_addColumn(definition, before, nextToColumn){\r\n\t\tvar column = new Column(definition, this),\r\n\t\tcolEl = column.getElement(),\r\n\t\tindex = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\r\n\r\n\t\tif(nextToColumn && index > -1){\r\n\t\t\tvar topColumn = nextToColumn.getTopColumn()\r\n\t\t\tvar parentIndex = this.columns.indexOf(topColumn);\r\n\t\t\tvar nextEl = topColumn.getElement();\r\n\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.splice(parentIndex, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.splice(parentIndex + 1, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.unshift(column);\r\n\t\t\t\tthis.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\tthis.headersElement.appendChild(column.getElement());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolumn.columnRendered();\r\n\r\n\t\treturn column;\r\n\t}\r\n\r\n\tregisterColumnField(col){\r\n\t\tif(col.definition.field){\r\n\t\t\tthis.columnsByField[col.definition.field] = col;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterColumnPosition(col){\r\n\t\tthis.columnsByIndex.push(col);\r\n\t}\r\n\r\n\t_reIndexColumns(){\r\n\t\tthis.columnsByIndex = [];\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.reRegisterPosition();\r\n\t\t});\r\n\t}\r\n\r\n\t//ensure column headers take up the correct amount of space in column groups\r\n\tverticalAlignHeaders(){\r\n\t\tvar minHeight = 0;\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tvar height;\r\n\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\r\n\t\t\theight = column.getHeight();\r\n\r\n\t\t\tif(height > minHeight){\r\n\t\t\t\tminHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tcolumn.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\t//////////////// Column Details /////////////////\r\n\tfindColumn(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Column){\r\n\t\t\t\t//subject is column element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof ColumnComponent){\r\n\t\t\t\t//subject is public column component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the column header\r\n\t\t\t\tlet match = this.columns.find((column) => {\r\n\t\t\t\t\treturn column.element === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the field name of the column\r\n\t\t\treturn this.columnsByField[subject] || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetColumnByField(field){\r\n\t\treturn this.columnsByField[field];\r\n\t}\r\n\r\n\tgetColumnsByFieldRoot(root){\r\n\t\tvar matches = [];\r\n\r\n\t\tObject.keys(this.columnsByField).forEach((field) => {\r\n\t\t\tvar fieldRoot = field.split(\".\")[0];\r\n\t\t\tif(fieldRoot === root){\r\n\t\t\t\tmatches.push(this.columnsByField[field]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn matches;\r\n\t}\r\n\r\n\tgetColumnByIndex(index){\r\n\t\treturn this.columnsByIndex[index];\r\n\t}\r\n\r\n\tgetFirstVisibleColumn(index){\r\n\t\tvar index = this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn col.visible;\r\n\t\t});\r\n\r\n\t\treturn index > -1 ? this.columnsByIndex[index] : false;\r\n\t}\r\n\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\tfindColumnIndex(column){\r\n\t\treturn this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn column === col;\r\n\t\t});\r\n\t}\r\n\r\n\t//return all columns that are not groups\r\n\tgetRealColumns(){\r\n\t\treturn this.columnsByIndex;\r\n\t}\r\n\r\n\t//travers across columns and call action\r\n\ttraverse(callback){\r\n\t\tthis.columnsByIndex.forEach((column,i) =>{\r\n\t\t\tcallback(column, i);\r\n\t\t});\r\n\t}\r\n\r\n\t//get defintions of actual columns\r\n\tgetDefinitions(active){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(!active || (active && column.visible)){\r\n\t\t\t\toutput.push(column.getDefinition());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get full nested definition tree\r\n\tgetDefinitionTree(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\toutput.push(column.getDefinition(true));\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(structured){\r\n\t\tvar output = [],\r\n\t\tcolumns = structured ? this.columns : this.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\toutput.push(column.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(column.visible){\r\n\t\t\t\twidth += column.getWidth();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tthis.moveColumnActual(from, to, after);\r\n\r\n\t\tto.element.parentNode.insertBefore(from.element, to.element);\r\n\r\n\t\tif(after){\r\n\t\t\tto.element.parentNode.insertBefore(to.element, from.element);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.table.rowManager.reinitialize();\r\n\t}\r\n\r\n\tmoveColumnActual(from, to, after){\r\n\t\tif(from.parent.isGroup){\r\n\t\t\tthis._moveColumnInArray(from.parent.columns, from, to, after);\r\n\t\t}else{\r\n\t\t\tthis._moveColumnInArray(this.columns, from, to, after);\r\n\t\t}\r\n\r\n\t\tthis._moveColumnInArray(this.columnsByIndex, from, to, after, true);\r\n\r\n\t\tthis.renderer.rerenderColumns(true);\r\n\r\n\t\tthis.dispatch(\"column-moved\", from, to, after);\r\n\r\n\t\tif(this.subscribedExternal(\"columnMoved\")){\r\n\t\t\tthis.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\r\n\t\t}\r\n\t}\r\n\r\n\t_moveColumnInArray(columns, from, to, after, updateRows){\r\n\t\tvar\tfromIndex = columns.indexOf(from),\r\n\t\ttoIndex, rows = [];\r\n\r\n\t\tif (fromIndex > -1) {\r\n\r\n\t\t\tcolumns.splice(fromIndex, 1);\r\n\r\n\t\t\ttoIndex = columns.indexOf(to);\r\n\r\n\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\tif(after){\r\n\t\t\t\t\ttoIndex = toIndex+1;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\ttoIndex = fromIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcolumns.splice(toIndex, 0, from);\r\n\r\n\t\t\tif(updateRows){\r\n\r\n\t\t\t\trows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\r\n\r\n\t\t\t\trows = rows.concat(this.table.rowManager.rows);\r\n\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tif(row.cells.length){\r\n\t\t\t\t\t\tvar cell = row.cells.splice(fromIndex, 1)[0];\r\n\t\t\t\t\t\trow.cells.splice(toIndex, 0, cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToColumn(column, position, ifVisible){\r\n\t\tvar left = 0,\r\n\t\toffset = 0,\r\n\t\tadjust = 0,\r\n\t\tcolEl = column.getElement();\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\tposition = this.table.options.scrollToColumnPosition;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\tifVisible = this.table.options.scrollToColumnIfVisible;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\tadjust = -this.element.clientWidth / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\tadjust = colEl.clientWidth - this.headersElement.clientWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check column visibility\r\n\t\t\t\tif(!ifVisible){\r\n\r\n\t\t\t\t\toffset = colEl.offsetLeft;\r\n\r\n\t\t\t\t\tif(offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//calculate scroll position\r\n\t\t\t\tleft = colEl.offsetLeft + adjust;\r\n\r\n\t\t\t\tleft = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth),0);\r\n\r\n\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\t\tresolve();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Column not visible\");\r\n\t\t\t\treject(\"Scroll Error - Column not visible\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tgenerateCells(row){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tcells.push(column.generateCell(row));\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\t//////////////// Column Management /////////////////\r\n\tgetFlexBaseWidth(){\r\n\t\tvar totalWidth = this.table.element.clientWidth, //table element width\r\n\t\tfixedWidth = 0;\r\n\r\n\t\t//adjust for vertical scrollbar if present\r\n\t\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t\t}\r\n\r\n\t\tthis.columnsByIndex.forEach(function(column){\r\n\t\t\tvar width, minWidth, colWidth;\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\twidth = column.definition.width || 0;\r\n\r\n\t\t\t\tminWidth = parseInt(column.minWidth);\r\n\r\n\t\t\t\tif(typeof(width) == \"string\"){\r\n\t\t\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width) ;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolWidth = width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fixedWidth;\r\n\t}\r\n\r\n\taddColumn(definition, before, nextToColumn){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this._addColumn(definition, before, nextToColumn);\r\n\r\n\t\t\tthis._reIndexColumns();\r\n\r\n\t\t\tthis.dispatch(\"column-add\", definition, before, nextToColumn);\r\n\r\n\t\t\tif(this.layoutMode() != \"fitColumns\"){\r\n\t\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.redraw(true);\r\n\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\r\n\t\t\tthis.renderer.rerenderColumns();\r\n\r\n\t\t\tresolve(column);\r\n\t\t});\r\n\t}\r\n\r\n\t//remove column from system\r\n\tderegisterColumn(column){\r\n\t\tvar field = column.getField(),\r\n\t\tindex;\r\n\r\n\t\t//remove from field list\r\n\t\tif(field){\r\n\t\t\tdelete this.columnsByField[field];\r\n\t\t}\r\n\r\n\t\t//remove from index list\r\n\t\tindex = this.columnsByIndex.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columnsByIndex.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t//remove from column list\r\n\t\tindex = this.columns.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t//redraw columns\r\n\tredraw(force){\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.verticalAlignHeaders();\r\n\t\t}\r\n\r\n\t\tif(force){\r\n\t\t\tthis.table.rowManager.resetScroll();\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\t\t}\r\n\r\n\t\tif(!this.confirm(\"table-redrawing\", force)){\r\n\t\t\tthis.layoutRefresh();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-redraw\", force);\r\n\r\n\t\tthis.table.footerManager.redraw();\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.scrollTop = 0;\r\n\t\telement.scrollLeft = 0;\r\n\r\n\t\telement.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tvar element = this.tableElement,\r\n\t\tonlyGroupHeaders = true;\r\n\r\n\t\tthis.rows().forEach((row, index) => {\r\n\t\t\tthis.styleRow(row, index);\r\n\t\t\telement.appendChild(row.getElement());\r\n\t\t\trow.initialize(true);\r\n\r\n\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\tonlyGroupHeaders = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(onlyGroupHeaders){\r\n\t\t\telement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}else{\r\n\t\t\telement.style.minWidth = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trerenderRows(callback){\r\n\t\tthis.render();\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowTop = Helpers.elOffset(row.getElement()).top;\r\n\r\n\t\treturn !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tthis.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\treturn this.rows();\r\n\t}\r\n\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomRowHeight = 20; //approximation of row heights for padding\r\n\r\n\t\tthis.vDomTop = 0; //hold position for first rendered row in the virtual DOM\r\n\t\tthis.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\r\n\r\n\t\tthis.vDomScrollPosTop = 0; //last scroll position of the vDom top;\r\n\t\tthis.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\r\n\r\n\t\tthis.vDomTopPad = 0; //hold value of padding for top of virtual DOM\r\n\t\tthis.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\r\n\r\n\t\tthis.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\r\n\r\n\t\tthis.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\r\n\r\n\t\tthis.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\r\n\t\tthis.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\r\n\r\n\t\tthis.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t\tthis.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.style.paddingTop = \"\";\r\n\t\telement.style.paddingBottom = \"\";\r\n\t\t// element.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\r\n\t\tthis.elementVertical.scrollTop = 0;\r\n\t\tthis.elementVertical.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomTop = 0;\r\n\t\tthis.vDomBottom = 0;\r\n\t\tthis.vDomTopPad = 0;\r\n\t\tthis.vDomBottomPad = 0;\r\n\t\tthis.vDomScrollPosTop = 0;\r\n\t\tthis.vDomScrollPosBottom = 0;\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tthis._virtualRenderFill();\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\tvar scrollTop = this.elementVertical.scrollTop;\r\n\t\tvar topRow = false;\r\n\t\tvar topOffset = false;\r\n\r\n\t\tvar left = this.table.rowManager.scrollLeft;\r\n\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\r\n\t\t\tif(rows[i]){\r\n\t\t\t\tvar diff = scrollTop - rows[i].getElement().offsetTop;\r\n\r\n\t\t\t\tif(topOffset === false || Math.abs(diff) < topOffset){\r\n\t\t\t\t\ttopOffset = diff;\r\n\t\t\t\t\ttopRow = i;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\trow.deinitializeHeight();\r\n\t\t});\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\r\n\t\tthis._virtualRenderFill((topRow === false ? this.rows.length - 1 : topRow), true, topOffset || 0);\r\n\r\n\t\tthis.scrollColumns(left);\r\n\t}\r\n\r\n\tscrollColumns(left){\r\n\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\tvar topDiff = top - this.vDomScrollPosTop;\r\n\t\tvar bottomDiff = top - this.vDomScrollPosBottom;\r\n\t\tvar margin = this.vDomWindowBuffer * 2;\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tthis.scrollTop = top;\r\n\r\n\t\tif(-topDiff > margin || bottomDiff > margin){\r\n\t\t\t//if big scroll redraw table;\r\n\t\t\tvar left = this.table.rowManager.scrollLeft;\r\n\t\t\tthis._virtualRenderFill(Math.floor((this.elementVertical.scrollTop / this.elementVertical.scrollHeight) * rows.length));\r\n\t\t\tthis.scrollColumns(left);\r\n\t\t}else{\r\n\r\n\t\t\tif(dir){\r\n\t\t\t\t//scrolling up\r\n\t\t\t\tif(topDiff < 0){\r\n\t\t\t\t\tthis._addTopRow(rows, -topDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(bottomDiff < 0){\r\n\t\t\t\t\t//hide bottom row if needed\r\n\t\t\t\t\tif(this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeBottomRow(rows, -bottomDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(bottomDiff >= 0){\r\n\t\t\t\t\tthis._addBottomRow(rows, bottomDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scrolling down\r\n\t\t\t\tif(topDiff >= 0){\r\n\t\t\t\t\t//hide top row if needed\r\n\t\t\t\t\tif(this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeTopRow(rows, topDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresize(){\r\n\t\tthis.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowIndex = this.rows().indexOf(row);\r\n\r\n\t\treturn !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar index = this.rows().indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis._virtualRenderFill(index, true);\r\n\t\t}\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\tvar topEdge = this.elementVertical.scrollTop,\r\n\t\tbottomEdge = this.elementVertical.clientHeight + topEdge,\r\n\t\ttopFound = false,\r\n\t\ttopRow = 0,\r\n\t\tbottomRow = 0,\r\n\t\trows = this.rows();\r\n\r\n\t\tif(includingBuffer){\r\n\t\t\ttopRow = this.vDomTop;\r\n\t\t\tbottomRow = this.vDomBottom;\r\n\t\t}else{\r\n\t\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\t\t\t\tif(rows[i]){\r\n\t\t\t\t\tif(!topFound){\r\n\t\t\t\t\t\tif((topEdge - rows[i].getElement().offsetTop) >= 0){\r\n\t\t\t\t\t\t\ttopRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttopFound = true;\r\n\r\n\t\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows.slice(topRow, bottomRow + 1);\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\r\n\t//full virtual render\r\n\t_virtualRenderFill(position, forceMove, offset){\r\n\t\tvar\telement = this.tableElement,\r\n\t\tholder = this.elementVertical,\r\n\t\ttopPad = 0,\r\n\t\trowsHeight = 0,\r\n\t\theightOccupied = 0,\r\n\t\ttopPadHeight = 0,\r\n\t\ti = 0,\r\n\t\trows = this.rows(),\r\n\t\trowsCount = rows.length,\r\n\t\tcontainerHeight = this.elementVertical.clientHeight;\r\n\r\n\t\tposition = position || 0;\r\n\r\n\t\toffset = offset || 0;\r\n\r\n\t\tif(!position){\r\n\t\t\tthis.clear();\r\n\t\t}else{\r\n\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t\t//check if position is too close to bottom of table\r\n\t\t\theightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\r\n\r\n\t\t\tif(heightOccupied < containerHeight){\r\n\t\t\t\tposition -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\r\n\t\t\t\tif(position < 0){\r\n\t\t\t\t\tposition = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//calculate initial pad\r\n\t\t\ttopPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight),  this.vDomWindowMinMarginRows), position);\r\n\t\t\tposition -= topPad;\r\n\t\t}\r\n\r\n\t\tif(rowsCount && Helpers.elVisible(this.elementVertical)){\r\n\t\t\tthis.vDomTop = position;\r\n\r\n\t\t\tthis.vDomBottom = position -1;\r\n\r\n\t\t\twhile ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount -1){\r\n\t\t\t\tvar index = this.vDomBottom + 1,\r\n\t\t\t\trow = rows[index],\r\n\t\t\t\trowHeight = 0;\r\n\r\n\t\t\t\tthis.styleRow(row, index);\r\n\r\n\t\t\t\telement.appendChild(row.getElement());\r\n\r\n\t\t\t\trow.initialize();\r\n\r\n\t\t\t\tif(!row.heightInitialized){\r\n\t\t\t\t\trow.normalizeHeight(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowHeight = row.getHeight();\r\n\r\n\t\t\t\tif(i < topPad){\r\n\t\t\t\t\ttopPadHeight += rowHeight;\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowsHeight += rowHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.vDomBottom ++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\tif(!position){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t\t//adjust rowheight to match average of rendered elements\r\n\t\t\t\tthis.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\r\n\t\t\t\tthis.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom -1);\r\n\r\n\t\t\t\tthis.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : (this.vDomRowHeight * this.vDomTop) + offset;\r\n\t\t\t\tthis.vDomBottomPad = this.vDomBottom == rowsCount-1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\r\n\t\t\t}\r\n\r\n\t\t\telement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\telement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\r\n\t\t\tif(forceMove){\r\n\t\t\t\tthis.scrollTop = this.vDomTopPad + (topPadHeight) + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\r\n\r\n\t\t\t//adjust for horizontal scrollbar if present (and not at top of table)\r\n\t\t\tif(this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove){\r\n\t\t\t\tthis.scrollTop += this.elementVertical.offsetHeight - containerHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\r\n\t\t\tholder.scrollTop = this.scrollTop;\r\n\r\n\t\t\tthis.dispatch(\"render-virtual-fill\");\r\n\t\t}\r\n\t}\r\n\r\n\t_addTopRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomTop -1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tif(this.vDomTop){\r\n\t\t\t\tlet row = rows[index],\r\n\t\t\t\trowHeight, initialized;\r\n\r\n\t\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\t\ttable.insertBefore(row.getElement(), table.firstChild);\r\n\r\n\t\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\t\tthis.vDomTop--;\r\n\t\t\t\t\t\tindex--;\r\n\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomTopPad < 0){\r\n\t\t\t\tthis.vDomTopPad = index * this.vDomRowHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(index < 1){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeTopRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomTop],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomTop++;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad += paddingAdjust;\r\n\t\t\tthis.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\r\n\t\t}\r\n\t}\r\n\r\n\t_addBottomRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomBottom + 1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[index],\r\n\t\t\trowHeight, initialized;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\ttable.appendChild(row.getElement());\r\n\r\n\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tthis.vDomBottom++;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0 || index == rows.length -1){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom += paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeBottomRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomBottom],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomBottom --;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad += paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_quickNormalizeRowHeight(rows){\r\n\t\tfor(let row of rows){\r\n\t\t\trow.calcHeight();\r\n\t\t}\r\n\r\n\t\tfor(let row of rows){\r\n\t\t\trow.setCellHeight();\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Row from './row/Row.js';\r\nimport RowComponent from './row/RowComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\n\r\nimport RendererBasicVertical from './rendering/renderers/BasicVertical.js';\r\nimport RendererVirtualDomVertical from './rendering/renderers/VirtualDomVertical.js';\r\n\r\nexport default class RowManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = this.createHolderElement(); //containing element\r\n\t\tthis.tableElement = this.createTableElement(); //table element\r\n\t\tthis.heightFixer = this.createTableElement(); //table element\r\n\r\n\t\tthis.firstRender = false; //handle first render\r\n\t\tthis.renderMode = \"virtual\"; //current rendering mode\r\n\t\tthis.fixedHeight = false; //current rendering mode\r\n\r\n\t\tthis.rows = []; //hold row data objects\r\n\t\tthis.activeRowsPipeline = []; //hold caluclation of active rows\r\n\t\tthis.activeRows = []; //rows currently available to on display in the table\r\n\t\tthis.activeRowsCount = 0; //count of active rows\r\n\r\n\t\tthis.displayRows = []; //rows currently on display in the table\r\n\t\tthis.displayRowsCount = 0; //count of display rows\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.rowNumColumn = false; //hold column component for row number column\r\n\r\n\t\tthis.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\r\n\t\tthis.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\r\n\t\tthis.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\r\n\r\n\t\tthis.dataPipeline = []; //hold data pipeline tasks\r\n\t\tthis.displayPipeline = []; //hold data display pipeline tasks\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\r\n\tcreateHolderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-tableholder\");\r\n\t\tel.setAttribute(\"tabindex\", 0);\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateTableElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-table\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return table element\r\n\tgetTableElement(){\r\n\t\treturn this.tableElement;\r\n\t}\r\n\r\n\t//return position of row in table\r\n\tgetRowPosition(row, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows.indexOf(row);\r\n\t\t}else{\r\n\t\t\treturn this.rows.indexOf(row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\t//initialize manager\r\n\t\tthis.element.appendChild(this.tableElement);\r\n\r\n\t\tthis.firstRender = true;\r\n\r\n\t\t//scroll header along with table body\r\n\t\tthis.element.addEventListener(\"scroll\", () => {\r\n\t\t\tvar left = this.element.scrollLeft,\r\n\t\t\tleftDir = this.scrollLeft > left,\r\n\t\t\ttop = this.element.scrollTop,\r\n\t\t\ttopDir = this.scrollTop > top;\r\n\r\n\t\t\t//handle horizontal scrolling\r\n\t\t\tif(this.scrollLeft != left){\r\n\t\t\t\tthis.scrollLeft = left;\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-horizontal\", left, leftDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollHorizontal\", left, leftDir);\r\n\t\t\t}\r\n\r\n\t\t\t//handle verical scrolling\r\n\t\t\tif(this.scrollTop != top){\r\n\t\t\t\tthis.scrollTop = top;\r\n\r\n\t\t\t\tthis.renderer.scrollRows(top, topDir);\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-vertical\", top, topDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollVertical\", top, topDir);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t////////////////// Row Manipulation //////////////////\r\n\tfindRow(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the row\r\n\t\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\t\treturn row.getElement() === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\r\n\t\t\treturn match || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetRowFromDataObject(data){\r\n\t\tvar match = this.rows.find((row) => {\r\n\t\t\treturn row.data === data;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\tgetRowFromPosition(position, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows[position];\r\n\t\t}else{\r\n\t\t\treturn this.rows[position];\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRow(row, position, ifVisible){\r\n\t\treturn this.renderer.scrollToRowPosition(row, position, ifVisible);\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\tsetData(data, renderInPosition, columnsChanged){\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\t\t\tif(renderInPosition && this.getDisplayRows().length){\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\tthis._setDataActual(data, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.reRenderInPosition(() => {\r\n\t\t\t\t\t\tthis._setDataActual(data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.autoColumns && columnsChanged && this.table.initialized){\r\n\t\t\t\t\tthis.table.columnManager.generateColumnsFromRowData(data);\r\n\t\t\t\t}\r\n\t\t\t\tthis.resetScroll();\r\n\r\n\t\t\t\tthis._setDataActual(data);\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t_setDataActual(data, renderInPosition){\r\n\t\tthis.dispatchExternal(\"dataProcessing\", data);\r\n\r\n\t\tthis._wipeElements();\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tthis.dispatch(\"data-processing\", data);\r\n\r\n\t\t\tdata.forEach((def, i) => {\r\n\t\t\t\tif(def && typeof def === \"object\"){\r\n\t\t\t\t\tvar row = new Row(def, this);\r\n\t\t\t\t\tthis.rows.push(row);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, renderInPosition);\r\n\r\n\t\t\tthis.dispatch(\"data-processed\", data);\r\n\t\t\tthis.dispatchExternal(\"dataProcessed\", data);\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\r\n\t\t}\r\n\t}\r\n\r\n\t_wipeElements(){\r\n\t\tthis.dispatch(\"rows-wipe\");\r\n\r\n\t\tthis.rows.forEach((row) => {\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rows = [];\r\n\t\tthis.activeRows = [];\r\n\t\tthis.activeRowsPipeline = [];\r\n\t\tthis.activeRowsCount = 0;\r\n\t\tthis.displayRows = [];\r\n\t\tthis.displayRowsCount = 0;\r\n\r\n\t\tthis.adjustTableSize();\r\n\t}\r\n\r\n\tdeleteRow(row, blockRedraw){\r\n\t\tvar allIndex = this.rows.indexOf(row),\r\n\t\tactiveIndex = this.activeRows.indexOf(row);\r\n\r\n\t\tif(activeIndex > -1){\r\n\t\t\tthis.activeRows.splice(activeIndex, 1);\r\n\t\t}\r\n\r\n\t\tif(allIndex > -1){\r\n\t\t\tthis.rows.splice(allIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tvar displayIndex = rows.indexOf(row);\r\n\r\n\t\t\tif(displayIndex > -1){\r\n\t\t\t\trows.splice(displayIndex, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatchExternal(\"rowDeleted\", row.getComponent());\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.getData());\r\n\t\t}\r\n\t}\r\n\r\n\taddRow(data, pos, index, blockRedraw){\r\n\t\tvar row = this.addRowActual(data, pos, index, blockRedraw);\r\n\r\n\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//add multiple rows\r\n\taddRows(data, pos, index){\r\n\t\tvar length = 0,\r\n\t\trows = [];\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpos = this.findAddRowPos(pos);\r\n\r\n\t\t\tif(!Array.isArray(data)){\r\n\t\t\t\tdata = [data];\r\n\t\t\t}\r\n\r\n\t\t\tlength = data.length - 1;\r\n\r\n\t\t\tif((typeof index == \"undefined\" && pos) || (typeof index !== \"undefined\" && !pos)){\r\n\t\t\t\tdata.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tvar row = this.addRow(item, pos, index, true);\r\n\t\t\t\trows.push(row);\r\n\t\t\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, true);\r\n\r\n\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\tif(rows.length){\r\n\t\t\t\tthis._clearPlaceholder();\r\n\t\t\t}\r\n\r\n\t\t\tresolve(rows);\r\n\t\t});\r\n\t}\r\n\r\n\tfindAddRowPos(pos){\r\n\t\tif(typeof pos === \"undefined\"){\r\n\t\t\tpos = this.table.options.addRowPos;\r\n\t\t}\r\n\r\n\t\tif(pos === \"pos\"){\r\n\t\t\tpos = true;\r\n\t\t}\r\n\r\n\t\tif(pos === \"bottom\"){\r\n\t\t\tpos = false;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\taddRowActual(data, pos, index, blockRedraw){\r\n\t\tvar row = data instanceof Row ? data : new Row(data || {}, this),\r\n\t\ttop = this.findAddRowPos(pos),\r\n\t\tallIndex = -1,\r\n\t\tactiveIndex, chainResult;\r\n\r\n\t\tif(!index){\r\n\t\t\tchainResult = this.chain(\"row-adding-position\", [row, top], null, {index, top});\r\n\r\n\t\t\tindex = chainResult.index;\r\n\t\t\ttop = chainResult.top;\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tindex = this.findRow(index);\r\n\t\t}\r\n\r\n\t\tindex = this.chain(\"row-adding-index\", [row, index, top], null, index);\r\n\r\n\t\tif(index){\r\n\t\t\tallIndex = this.rows.indexOf(index);\r\n\t\t}\r\n\r\n\t\tif(index && allIndex > -1){\r\n\t\t\tactiveIndex = this.activeRows.indexOf(index);\r\n\r\n\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\tvar displayIndex = rows.indexOf(index);\r\n\r\n\t\t\t\tif(displayIndex > -1){\r\n\t\t\t\t\trows.splice((top ? displayIndex : displayIndex + 1), 0, row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(activeIndex > -1){\r\n\t\t\t\tthis.activeRows.splice((top ? activeIndex : activeIndex + 1), 0, row);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice((top ? allIndex : allIndex + 1), 0, row);\r\n\r\n\t\t}else{\r\n\r\n\t\t\tif(top){\r\n\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.unshift(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.unshift(row);\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.push(row);\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.dispatchExternal(\"rowAdded\", row.getComponent());\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t}\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tthis.dispatch(\"row-move\", from, to, after);\r\n\r\n\t\tthis.moveRowActual(from, to, after);\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatch(\"row-moved\", from, to, after);\r\n\t\tthis.dispatchExternal(\"rowMoved\", from.getComponent());\r\n\t}\r\n\r\n\tmoveRowActual(from, to, after){\r\n\t\tthis.moveRowInArray(this.rows, from, to, after);\r\n\t\tthis.moveRowInArray(this.activeRows, from, to, after);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tthis.moveRowInArray(rows, from, to, after);\r\n\t\t});\r\n\r\n\t\tthis.dispatch(\"row-moving\", from, to, after);\r\n\t}\r\n\r\n\tmoveRowInArray(rows, from, to, after){\r\n\t\tvar\tfromIndex, toIndex, start, end;\r\n\r\n\t\tif(from !== to){\r\n\r\n\t\t\tfromIndex = rows.indexOf(from);\r\n\r\n\t\t\tif (fromIndex > -1) {\r\n\r\n\t\t\t\trows.splice(fromIndex, 1);\r\n\r\n\t\t\t\ttoIndex = rows.indexOf(to);\r\n\r\n\t\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\t\tif(after){\r\n\t\t\t\t\t\trows.splice(toIndex+1, 0, from);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trows.splice(toIndex, 0, from);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows.splice(fromIndex, 0, from);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//restyle rows\r\n\t\t\tif(rows === this.getDisplayRows()){\r\n\r\n\t\t\t\tstart = fromIndex < toIndex ? fromIndex : toIndex;\r\n\t\t\t\tend = toIndex > fromIndex ? toIndex : fromIndex +1;\r\n\r\n\t\t\t\tfor(let i = start; i <= end; i++){\r\n\t\t\t\t\tif(rows[i]){\r\n\t\t\t\t\t\tthis.styleRow(rows[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclearData(){\r\n\t\tthis.setData([]);\r\n\t}\r\n\r\n\tgetRowIndex(row){\r\n\t\treturn this.findRowIndex(row, this.rows);\r\n\t}\r\n\r\n\tgetDisplayRowIndex(row){\r\n\t\tvar index = this.getDisplayRows().indexOf(row);\r\n\t\treturn index > -1 ? index : false;\r\n\t}\r\n\r\n\tnextDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tnextRow = false;\r\n\r\n\r\n\t\tif(index !== false && index < this.displayRowsCount -1){\r\n\t\t\tnextRow = this.getDisplayRows()[index+1];\r\n\t\t}\r\n\r\n\t\tif(nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")){\r\n\t\t\treturn this.nextDisplayRow(nextRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn nextRow;\r\n\t}\r\n\r\n\tprevDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tprevRow = false;\r\n\r\n\t\tif(index){\r\n\t\t\tprevRow = this.getDisplayRows()[index-1];\r\n\t\t}\r\n\r\n\t\tif(rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")){\r\n\t\t\treturn this.prevDisplayRow(prevRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn prevRow;\r\n\t}\r\n\r\n\tfindRowIndex(row, list){\r\n\t\tvar rowIndex;\r\n\r\n\t\trow = this.findRow(row);\r\n\r\n\t\tif(row){\r\n\t\t\trowIndex = list.indexOf(row);\r\n\r\n\t\t\tif(rowIndex > -1){\r\n\t\t\t\treturn rowIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(active, transform){\r\n\t\tvar output = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tif(row.type == \"row\"){\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(active){\r\n\t\tvar\toutput = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\toutput.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDataCount(active){\r\n\t\tvar rows = this.getRows(active);\r\n\r\n\t\treturn rows.length;\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tthis.scrollLeft = left;\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\tthis.dispatch(\"scroll-horizontal\", left);\r\n\t}\r\n\r\n\tregisterDataPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.dataPipeline.push({handler, priority})\r\n\t\t\tthis.dataPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\tregisterDisplayPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.displayPipeline.push({handler, priority})\r\n\t\t\tthis.displayPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Display pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\t//set active data set\r\n\trefreshActiveData(handler, skipStage, renderInPosition){\r\n\t\tvar table = this.table,\r\n\t\tstage = \"\",\r\n\t\tindex = 0,\r\n\t\tcascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"],\r\n\t\tdisplayIndex;\r\n\r\n\r\n\t\tif(typeof handler === \"function\"){\r\n\t\t\tindex = this.dataPipeline.findIndex((item) => {\r\n\t\t\t\treturn item.handler === handler;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tstage = \"dataPipeline\";\r\n\r\n\t\t\t\tif(skipStage){\r\n\t\t\t\t\tif(index == this.dataPipeline.length - 1){\r\n\t\t\t\t\t\tstage = \"display\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.displayPipeline.findIndex((item) => {\r\n\t\t\t\t\treturn item.handler === handler;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tstage = \"displayPipeline\";\r\n\r\n\t\t\t\t\tif(skipStage){\r\n\t\t\t\t\t\tif(index == this.displayPipeline.length - 1){\r\n\t\t\t\t\t\t\tstage = \"end\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Unable to refresh data, invalid handler provided\", handler)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tstage = handler || \"all\";\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(!this.redrawBlockRestoreConfig || (this.redrawBlockRestoreConfig && ((this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index) || (cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))))){\r\n\t\t\t\tthis.redrawBlockRestoreConfig = {\r\n\t\t\t\t\thandler: handler,\r\n\t\t\t\t\tskipStage: skipStage,\r\n\t\t\t\t\trenderInPosition: renderInPosition,\r\n\t\t\t\t\tstage:stage,\r\n\t\t\t\t\tindex:index,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tthis.dispatch(\"data-refeshing\");\r\n\r\n\t\t\tif(!handler){\r\n\t\t\t\tthis.activeRowsPipeline[0] = this.rows.slice(0);\r\n\t\t\t}\r\n\r\n\t\t\t//cascade through data refresh stages\r\n\t\t\tswitch(stage){\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\t//handle case where alldata needs refreshing\r\n\r\n\t\t\t\tcase \"dataPipeline\":\r\n\r\n\t\t\t\tfor(let i = index; i < this.dataPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\r\n\r\n\t\t\t\t\tthis.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\r\n\r\n\t\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\t\tcase \"display\":\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tthis.resetDisplayRows();\r\n\r\n\t\t\t\tcase \"displayPipeline\":\r\n\t\t\t\tfor(let i = index; i < this.displayPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\r\n\r\n\t\t\t\t\tthis.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t//case to handle scenario when trying to skip past end stage\r\n\t\t\t}\r\n\r\n\t\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\t\tif(renderInPosition){\r\n\t\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tif(!handler){\r\n\t\t\t\t\t\tthis.table.columnManager.renderer.renderColumns();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.renderTable();\r\n\r\n\t\t\t\t\tif(table.options.layoutColumnsOnNewData){\r\n\t\t\t\t\t\tthis.table.columnManager.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"data-refeshed\");\r\n\t\t}\r\n\t}\r\n\r\n\t//regenerate row numbers for row number formatter if in use\r\n\tregenerateRowNumbers(){\r\n\t\tif(this.rowNumColumn){\r\n\t\t\tthis.activeRows.forEach((row) => {\r\n\t\t\t\tvar cell = row.getCell(this.rowNumColumn);\r\n\r\n\t\t\t\tif(cell){\r\n\t\t\t\t\tcell._generateContents();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetActiveRows(activeRows){\r\n\t\tthis.activeRows = activeRows;\r\n\t\tthis.activeRowsCount = this.activeRows.length;\r\n\t}\r\n\r\n\t//reset display rows array\r\n\tresetDisplayRows(){\r\n\t\tthis.displayRows = [];\r\n\r\n\t\tthis.displayRows.push(this.activeRows.slice(0));\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[0].length;\r\n\t}\r\n\r\n\tgetNextDisplayIndex(){\r\n\t\treturn this.displayRows.length;\r\n\t}\r\n\r\n\t//set display row pipeline data\r\n\tsetDisplayRows(displayRows, index){\r\n\r\n\t\tvar output = true;\r\n\r\n\t\tif(index && typeof this.displayRows[index] != \"undefined\"){\r\n\t\t\tthis.displayRows[index] = displayRows;\r\n\t\t\toutput = true;\r\n\t\t}else{\r\n\t\t\tthis.displayRows.push(displayRows)\r\n\t\t\toutput = index = this.displayRows.length -1;\r\n\t\t}\r\n\r\n\t\tif(index == this.displayRows.length -1){\r\n\t\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDisplayRows(index){\r\n\t\tif(typeof index == \"undefined\"){\r\n\t\t\treturn this.displayRows.length ? this.displayRows[this.displayRows.length -1] : [];\r\n\t\t}else{\r\n\t\t\treturn this.displayRows[index] || [];\r\n\t\t}\r\n\t}\r\n\r\n\tgetVisibleRows(chain, viewable){\r\n\t\tvar rows =  Object.assign([], this.renderer.visibleRows(!viewable));\r\n\r\n\t\tif(chain){\r\n\t\t\trows = this.chain(\"rows-visible\", [viewable], rows, rows);\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t//repeat action accross display rows\r\n\tdisplayRowIterator(callback){\r\n\t\tthis.activeRowsPipeline.forEach(callback);\r\n\t\tthis.displayRows.forEach(callback);\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t}\r\n\r\n\t//return only actual rows (not group headers etc)\r\n\tgetRows(type){\r\n\t\tvar rows;\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"active\":\r\n\t\t\trows = this.activeRows;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"display\":\r\n\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"visible\":\r\n\t\t\trows = this.getVisibleRows(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\trows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t///////////////// Table Rendering /////////////////\r\n\t//trigger rerender of table in current position\r\n\treRenderInPosition(callback){\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback();\r\n\t\t\t}else{\r\n\t\t\t\tthis.redrawBlockRederInPosition = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderer.rerenderRows(callback);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomVertical,\r\n\t\t\t\"basic\": RendererBasicVertical,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderVertical === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderVertical];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderVertical;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\r\n\t\t\tif((this.table.element.clientHeight || this.table.options.height)){\r\n\t\t\t\tthis.fixedHeight = true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.fixedHeight = false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderVertical);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRenderMode(){\r\n\t\treturn this.renderMode;\r\n\t}\r\n\r\n\trenderTable(){\r\n\t\tthis.dispatchExternal(\"renderStarted\");\r\n\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tthis._clearTable();\r\n\r\n\t\tif(this.displayRowsCount){\r\n\t\t\tthis.renderer.renderRows();\r\n\r\n\t\t\tif(this.firstRender){\r\n\t\t\t\tthis.firstRender = false;\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderEmptyScroll();\r\n\t\t}\r\n\r\n\t\tif(!this.fixedHeight){\r\n\t\t\tthis.adjustTableSize();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-layout\");\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"renderComplete\");\r\n\t}\r\n\r\n\t//show scrollbars on empty table div\r\n\trenderEmptyScroll(){\r\n\t\tif(this.table.options.placeholder){\r\n\t\t\tthis.tableElement.style.display = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t\t// this.tableElement.style.minHeight = \"1px\";\r\n\t\t\t// this.tableElement.style.visibility = \"hidden\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearTable(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\tthis._clearPlaceholder();\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.renderer.clearRows();\r\n\t}\r\n\r\n\t_showPlaceholder(){\r\n\t\tif(this.table.options.placeholder){\r\n\r\n\t\t\tthis.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\r\n\r\n\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\tthis.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearPlaceholder(){\r\n\t\tif(this.table.options.placeholder && this.table.options.placeholder.parentNode){\r\n\t\t\tthis.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize height of active rows\r\n\tnormalizeHeight(){\r\n\t\tthis.activeRows.forEach(function(row){\r\n\t\t\trow.normalizeHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//adjust the height of the table holder to fit in the Tabulator element\r\n\tadjustTableSize(){\r\n\t\tvar initialHeight = this.element.clientHeight,\r\n\t\tmodExists;\r\n\r\n\t\tif(this.renderer.verticalFillMode === \"fill\"){\r\n\t\t\tlet otherHeight =  Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\r\n\r\n\t\t\tif(this.fixedHeight){\r\n\t\t\t\tthis.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.height = \"\";\r\n\t\t\t\tthis.element.style.height = (this.table.element.clientHeight - otherHeight) + \"px\";\r\n\t\t\t\tthis.element.scrollTop = this.scrollTop;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.resize();\r\n\r\n\t\t\t//check if the table has changed size when dealing with variable height tables\r\n\t\t\tif(!this.fixedHeight && initialHeight != this.element.clientHeight){\r\n\t\t\t\tif(this.subscribed(\"table-resize\")){\r\n\t\t\t\t\tthis.dispatch(\"table-resize\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//renitialize all rows\r\n\treinitialize(){\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\trow.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\t//prevent table from being redrawn\r\n\tblockRedraw (){\r\n\t\tthis.redrawBlock = true;\r\n\t\tthis.redrawBlockRestoreConfig = false;\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw (){\r\n\t\tthis.redrawBlock = false;\r\n\r\n\t\tif(this.redrawBlockRestoreConfig){\r\n\t\t\tthis.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition)\r\n\r\n\t\t\tthis.redrawBlockRestoreConfig = false;\r\n\t\t}else{\r\n\t\t\tif(this.redrawBlockRederInPosition){\r\n\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.redrawBlockRederInPosition = false;\r\n\t}\r\n\r\n\t//redraw table\r\n\tredraw (force){\r\n\t\tvar pos = 0,\r\n\t\tleft = this.scrollLeft;\r\n\r\n\t\tthis.adjustTableSize();\r\n\r\n\t\tthis.table.tableWidth = this.table.element.clientWidth;\r\n\r\n\t\tif(!force){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\tif(!this.displayRowsCount){\r\n\t\t\t\tif(this.table.options.placeholder){\r\n\t\t\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderTable();\r\n\t\t}\r\n\t}\r\n\r\n\tresetScroll(){\r\n\t\tthis.element.scrollLeft = 0;\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tif(this.table.browser === \"ie\"){\r\n\t\t\tvar event = document.createEvent(\"Event\");\r\n\t\t\tevent.initEvent(\"scroll\", false, true);\r\n\t\t\tthis.element.dispatchEvent(event);\r\n\t\t}else{\r\n\t\t\tthis.element.dispatchEvent(new Event('scroll'));\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nexport default class FooterManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.element = this.createElement(); //containing element\r\n\t\tthis.external = false;\r\n\t\tthis.links = [];\r\n\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-footer\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitializeElement(){\r\n\t\tif(this.table.options.footerElement){\r\n\r\n\t\t\tswitch(typeof this.table.options.footerElement){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(this.table.options.footerElement[0] === \"<\"){\r\n\t\t\t\t\tthis.element.innerHTML = this.table.options.footerElement;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.external = true;\r\n\t\t\t\t\tthis.element = document.querySelector(this.table.options.footerElement);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.element = this.table.options.footerElement;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tappend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.appendChild(element);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tprepend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.insertBefore(element, this.element.firstChild);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tremove(element){\r\n\t\telement.parentNode.removeChild(element);\r\n\t\tthis.deactivate();\r\n\t}\r\n\r\n\tdeactivate(force){\r\n\t\tif(!this.element.firstChild || force){\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tactivate(parent){\r\n\t\tif(!this.active){\r\n\t\t\tthis.active = true;\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.table.element.appendChild(this.getElement());\r\n\t\t\t\tthis.table.element.style.display = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(parent){\r\n\t\t\tthis.links.push(parent);\r\n\t\t}\r\n\t}\r\n\r\n\tredraw(){\r\n\t\tthis.links.forEach(function(link){\r\n\t\t\tlink.footerRedraw();\r\n\t\t});\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\n\r\nexport default class InteractionManager extends CoreFeature {\r\n\t\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.el = null;\r\n\t\t\r\n\t\tthis.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\r\n\t\t\r\n\t\tthis.previousTargets = {};\r\n\t\t\r\n\t\tthis.listeners = [\r\n\t\t\t\"click\",\r\n\t\t\t\"dblclick\",\r\n\t\t\t\"contextmenu\",\r\n\t\t\t\"mouseenter\",\r\n\t\t\t\"mouseleave\",\r\n\t\t\t\"mouseover\",\r\n\t\t\t\"mouseout\",\r\n\t\t\t\"mousemove\",\r\n\t\t\t\"touchstart\",\r\n\t\t\t\"touchend\",\r\n\t\t];\r\n\t\t\r\n\t\tthis.componentMap = {\r\n\t\t\t\"tabulator-cell\":\"cell\",\r\n\t\t\t\"tabulator-row\":\"row\",\r\n\t\t\t\"tabulator-group\":\"group\",\r\n\t\t\t\"tabulator-col\":\"column\",\r\n\t\t};\r\n\r\n\t\tthis.pseudoTrackers = {\r\n\t\t\t\"row\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"cell\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"group\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"column\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.pseudoTracking = false;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.el = this.table.element;\r\n\t\tthis.buildListenerMap();\r\n\t\tthis.bindSubscriptionWatchers();\r\n\t}\r\n\t\r\n\tbuildListenerMap(){\r\n\t\tvar listenerMap = {};\r\n\t\t\r\n\t\tthis.listeners.forEach((listener) => {\r\n\t\t\tlistenerMap[listener] = {\r\n\t\t\t\thandler:null,\r\n\t\t\t\tcomponents:[],\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.listeners = listenerMap;\r\n\t}\r\n\r\n\tbindPseudoEvents(){\r\n\t\tObject.keys(this.pseudoTrackers).forEach((key) => {\r\n\t\t\tthis.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\r\n\t\t\tthis.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\r\n\t\t});\r\n\r\n\t\tthis.pseudoTracking = true;\r\n\t}\r\n\r\n\tpseudoMouseEnter(key, e, target){\r\n\t\tif(this.pseudoTrackers[key].target !== target){\r\n\t\t\t\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.pseudoMouseLeave(key, e);\r\n\r\n\t\t\tthis.pseudoTrackers[key].target = target;\r\n\r\n\t\t\tthis.dispatch(key + \"-mouseenter\", e, target);\r\n\t\t}\r\n\t}\r\n\r\n\tpseudoMouseLeave(key, e){\r\n\t\tvar leaveList = Object.keys(this.pseudoTrackers),\r\n\t\tlinkedKeys = {\r\n\t\t\t\"row\":[\"cell\"],\r\n\t\t\t\"cell\":[\"row\"],\r\n\t\t};\r\n\r\n\t\tleaveList = leaveList.filter((item) => {\r\n\t\t\tvar links = linkedKeys[key];\r\n\t\t\treturn item !== key && (!links || (links && !links.includes(item)));\r\n\t\t});\r\n\r\n\t\r\n\t\tleaveList.forEach((key) => {\r\n\t\t\tvar target = this.pseudoTrackers[key].target;\r\n\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\r\n\t\t\t\tthis.pseudoTrackers[key].target = null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tbindSubscriptionWatchers(){\r\n\t\tvar listeners = Object.keys(this.listeners),\r\n\t\tcomponents = Object.values(this.componentMap);\r\n\t\t\r\n\t\tfor(let comp of components){\r\n\t\t\tfor(let listener of listeners){\r\n\t\t\t\tlet key = comp + \"-\" + listener;\r\n\t\t\t\t\r\n\t\t\t\tthis.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.subscribe(\"table-destroy\", this.clearWatchers.bind(this))\r\n\t}\r\n\t\r\n\tsubscriptionChanged(component, key, added){\r\n\t\tvar listener = this.listeners[key].components,\r\n\t\tindex = listener.indexOf(component),\r\n\t\tchanged = false;\r\n\r\n\t\tif(added){\r\n\t\t\tif(index === -1){\r\n\t\t\t\tlistener.push(component);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.subscribed(component + \"-\" + key)){\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tlistener.splice(index, 1);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking){\r\n\t\t\tthis.bindPseudoEvents();\r\n\t\t}\r\n\t\t\r\n\t\tif(changed){\r\n\t\t\tthis.updateEventListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateEventListeners(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\t\r\n\t\t\tif(listener.components.length){\r\n\t\t\t\tif(!listener.handler){\r\n\t\t\t\t\tlistener.handler = this.track.bind(this, key);\r\n\t\t\t\t\tthis.el.addEventListener(key, listener.handler)\r\n\t\t\t\t\t// this.el.addEventListener(key, listener.handler, {passive: true})\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(listener.handler){\r\n\t\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\t\tlistener.handler = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrack(type, e){\r\n\t\tvar path = (e.composedPath && e.composedPath()) || e.path;\r\n\t\t\r\n\t\tvar targets = this.findTargets(path);\r\n\t\ttargets = this.bindComponents(type, targets);\r\n\r\n\t\tthis.triggerEvents(type, e, targets);\r\n\r\n\t\tif(this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length){\r\n\t\t\tthis.pseudoMouseLeave(\"none\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfindTargets(path){\r\n\t\tvar targets = {};\r\n\t\t\r\n\t\tlet componentMap = Object.keys(this.componentMap);\r\n\t\t\r\n\t\tfor (let el of path) {\r\n\t\t\tlet classList = el.classList ? [...el.classList] : [];\r\n\t\t\t\r\n\t\t\tlet abort = classList.filter((item) => {\r\n\t\t\t\treturn this.abortClasses.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tif(abort.length){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet elTargets = classList.filter((item) => {\r\n\t\t\t\treturn componentMap.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tfor (let target of elTargets) {\r\n\t\t\t\ttargets[this.componentMap[target]] = el;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(targets.group && targets.group === targets.row){\r\n\t\t\tdelete targets.row;\r\n\t\t}\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\tbindComponents(type, targets){\r\n\t\t//ensure row component is looked up before cell\r\n\t\tvar keys = Object.keys(targets).reverse(),\r\n\t\tlistener = this.listeners[type],\r\n\t\ttargetMatches = {};\r\n\t\t\r\n\t\tfor(let key of keys){\r\n\t\t\tlet component;\r\n\t\t\tlet target = targets[key];\r\n\t\t\tlet previousTarget = this.previousTargets[key];\r\n\t\t\t\r\n\t\t\tif(previousTarget && previousTarget.target === target){\r\n\t\t\t\tcomponent = previousTarget.component;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase \"row\":\r\n\t\t\t\t\tcase \"group\":\r\n\t\t\t\t\tif(listener.components.includes(\"row\") || listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tlet rows = this.table.rowManager.getVisibleRows(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcomponent = rows.find((row) => {\r\n\t\t\t\t\t\t\treturn row.getElement() === target;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"column\":\r\n\t\t\t\t\tif(listener.components.includes(\"column\")){\r\n\t\t\t\t\t\tcomponent = this.table.columnManager.findColumn(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"cell\":\r\n\t\t\t\t\tif(listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tcomponent = targets[\"row\"].findCell(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(component){\r\n\t\t\t\ttargets[key] = component;\r\n\t\t\t\ttargetMatches[key] = {\r\n\t\t\t\t\ttarget:target,\r\n\t\t\t\t\tcomponent:component,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.previousTargets = targetMatches;\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\ttriggerEvents(type, e, targets){\r\n\t\tvar listener = this.listeners[type];\r\n\t\t\r\n\t\tfor(let key in targets){\r\n\t\t\tif(targets[key] && listener.components.includes(key)){\r\n\t\t\t\tthis.dispatch(key + \"-\" + type, e, targets[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearWatchers(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\r\n\t\t\tif(listener.handler){\r\n\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\tlistener.handler = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export default class ComponentFunctionBinder{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\r\n\t\tthis.bindings = {};\r\n\t}\r\n\r\n\tbind(type, funcName, handler){\r\n\t\tif(!this.bindings[type]){\r\n\t\t\tthis.bindings[type] = {};\r\n\t\t}\r\n\r\n\t\tif(this.bindings[type][funcName]){\r\n\t\t\tconsole.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder)\r\n\t\t}else{\r\n\t\t\tthis.bindings[type][funcName] = handler;\r\n\t\t}\r\n\t}\r\n\r\n\thandle(type, component, name){\r\n\t\tif(this.bindings[type] && this.bindings[type][name]){\r\n\t\t\treturn this.bindings[type][name].bind(null, component);\r\n\t\t}else{\r\n\t\t\tif(name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")){\r\n\t\t\t\t\tconsole.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\n\r\nexport default class DataLoader extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.loaderElement = this.createLoaderElement(); //loader message div\r\n\t\tthis.msgElement = this.createMsgElement(); //message element\r\n\t\tthis.loadingElement = null;\r\n\t\tthis.errorElement = null;\r\n\r\n\t\tthis.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar template;\r\n\r\n\t\tthis.loaderElement.appendChild(this.msgElement);\r\n\r\n\t\tif(this.table.options.dataLoaderLoading){\r\n\t\t\tif(typeof this.table.options.dataLoaderLoading == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderLoading.trim();\r\n\t\t\t\tthis.loadingElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.loadingElement = this.table.options.dataLoaderLoading;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataLoaderError){\r\n\t\t\tif(typeof this.table.options.dataLoaderError == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderError.trim();\r\n\t\t\t\tthis.errorElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.errorElement = this.table.options.dataLoaderError;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateLoaderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-loader\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateMsgElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-loader-msg\");\r\n\t\tel.setAttribute(\"role\", \"alert\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tload(data, params, config, replace, silent){\r\n\t\tvar requestNo = ++this.requestOrder;\r\n\r\n\t\tthis.dispatchExternal(\"dataLoading\", data);\r\n\r\n\t\t//parse json data to array\r\n\t\tif (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(this.confirm(\"data-loading\", [data, params, config, silent])){\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.showLoader();\r\n\t\t\t}\r\n\r\n\t\t\t//get params for request\r\n\t\t\tparams = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\r\n\r\n\t\t\tparams = this.mapParams(params, this.table.options.dataSendParams);\r\n\r\n\t\t\tvar result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\r\n\r\n\t\t\treturn result.then((response) => {\r\n\t\t\t\tif(!Array.isArray(response) && typeof response == \"object\"){\r\n\t\t\t\t\tresponse = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rowData = this.chain(\"data-loaded\", response, null, response);\r\n\r\n\t\t\t\tif(requestNo == this.requestOrder){\r\n\t\t\t\t\tthis.hideLoader();\r\n\r\n\t\t\t\t\tif(rowData !== false){\r\n\t\t\t\t\t\tthis.dispatchExternal(\"dataLoaded\", rowData);\r\n\t\t\t\t\t\tthis.table.rowManager.setData(rowData,  replace, !replace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\r\n\t\t\t\t}\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.error(\"Data Load Error: \", error);\r\n\t\t\t\tthis.dispatchExternal(\"dataLoadError\", error);\r\n\r\n\t\t\t\tif(!silent){\r\n\t\t\t\t\tthis.showError();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.hideLoader();\r\n\t\t\t\t}, 3000);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"dataLoaded\", data);\r\n\r\n\t\t\tif(!data){\r\n\t\t\t\tdata = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.setData(data, replace, !replace);\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n\r\n\tmapParams(params, map){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in params){\r\n\t\t\toutput[map.hasOwnProperty(key) ? map[key] : key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tobjectInvert(obj){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in obj){\r\n\t\t\toutput[obj[key]] = key;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tblockActiveLoad(){\r\n\t\tthis.requestOrder++;\r\n\t}\r\n\r\n\tshowLoader(){\r\n\t\tvar shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\r\n\r\n\t\tif(shouldLoad){\r\n\t\t\tthis.hideLoader();\r\n\r\n\t\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\r\n\t\t\tthis.msgElement.classList.remove(\"tabulator-error\");\r\n\t\t\tthis.msgElement.classList.add(\"tabulator-loading\");\r\n\r\n\t\t\tif(this.loadingElement){\r\n\t\t\t\tthis.msgElement.appendChild(this.loadingElement);\r\n\t\t\t}else{\r\n\t\t\t\tthis.msgElement.innerHTML = this.langText(\"data|loading\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n\r\n\tshowError(){\r\n\t\tthis.hideLoader();\r\n\r\n\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\t\tthis.msgElement.classList.remove(\"tabulator-loading\");\r\n\t\tthis.msgElement.classList.add(\"tabulator-error\");\r\n\r\n\t\tif(this.errorElement){\r\n\t\t\tthis.msgElement.appendChild(this.errorElement);\r\n\t\t}else{\r\n\t\t\tthis.msgElement.innerHTML = this.langText(\"data|error\");\r\n\t\t}\r\n\r\n\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t}\r\n\r\n\r\n\thideLoader(){\r\n\t\tif(this.loaderElement.parentNode){\r\n\t\t\tthis.loaderElement.parentNode.removeChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n}","export default class ExternalEventBus {\r\n\r\n\tconstructor(table, optionsList, debug){\r\n\t\tthis.table = table;\r\n\t\tthis.events = {};\r\n\t\tthis.optionsList = optionsList || {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push(callback);\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdelete this.events[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift(),\r\n\t\tresult;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((callback, i) => {\r\n\t\t\t\tlet callResult = callback.apply(this.table, args);\r\n\r\n\t\t\t\tif(!i){\r\n\t\t\t\t\tresult = callResult;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"ExternalEvent:\" + args[0];\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments)\r\n\t}\r\n}","export default class InternalEventBus {\r\n\r\n\tconstructor(debug){\r\n\t\tthis.events = {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\r\n\t\tthis.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback, priority = 10000){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push({callback, priority});\r\n\r\n\t\tthis.events[key].sort((a, b) => {\r\n\t\t\treturn a.priority - b.priority;\r\n\t\t});\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item.callback === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_chain(key, args, initialValue, fallback){\r\n\t\tvar value = initialValue;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tvalue = subscriber.callback.apply(this, args.concat([value]));\r\n\t\t\t});\r\n\r\n\t\t\treturn value;\r\n\t\t}else{\r\n\t\t\treturn typeof fallback === \"function\" ? fallback() : fallback;\r\n\t\t}\r\n\t}\r\n\r\n\t_confirm(key, args){\r\n\t\tvar confirmed = false;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tif(subscriber.callback.apply(this, args)){\r\n\t\t\t\t\tconfirmed = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn confirmed;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((subscriber) => {\r\n\t\t\t\tlet callResult = subscriber.callback.apply(this, args);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments);\r\n\t}\r\n\r\n\t_debugChain(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._chain(...arguments);\r\n\t}\r\n\r\n\t_debugConfirm(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._confirm(...arguments);\r\n\t}\r\n}","import Tabulator from '../Tabulator.js';\r\n\r\nclass TableRegistry {\r\n\r\n\tstatic register(table){\r\n\t\tTableRegistry.tables.push(table);\r\n\t}\r\n\r\n\tstatic deregister(table){\r\n\t\tvar index = TableRegistry.tables.indexOf(table);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tTableRegistry.tables.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic lookupTable(query, silent){\r\n\t\tvar results = [],\r\n\t\tmatches, match;\r\n\r\n\t\tif(typeof query === \"string\"){\r\n\t\t\tmatches = document.querySelectorAll(query);\r\n\r\n\t\t\tif(matches.length){\r\n\t\t\t\tfor(var i = 0; i < matches.length; i++){\r\n\t\t\t\t\tmatch = TableRegistry.matchElement(matches[i]);\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tresults.push(match);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if((typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement) || query instanceof Tabulator){\r\n\t\t\tmatch = TableRegistry.matchElement(query);\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tresults.push(match);\r\n\t\t\t}\r\n\t\t}else if(Array.isArray(query)){\r\n\t\t\tquery.forEach(function(item){\r\n\t\t\t\tresults = results.concat(TableRegistry.lookupTable(item));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Table Connection Error - Invalid Selector\", query);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tstatic matchElement(element){\r\n\t\treturn TableRegistry.tables.find(function(table){\r\n\t\t\treturn element instanceof Tabulator ? table === element : table.element === element;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nTableRegistry.tables = [];\r\n\r\nexport default TableRegistry;","//resize columns to fit data they contain\r\nexport default function(columns){\r\n\tthis.table.columnManager.renderer.reinitializeColumnWidths(columns);\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\r\nexport default function(columns){\r\n\tcolumns.forEach(function(column){\r\n\t\tcolumn.reinitializeWidth();\r\n\t});\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data the contain and stretch last column to fill table\r\nexport default function(columns){\r\n\tvar colsWidth = 0,\r\n\ttableWidth = this.table.rowManager.element.clientWidth,\r\n\tgap = 0,\r\n\tlastCol = false;\r\n\r\n\tcolumns.forEach((column, i) => {\r\n\t\tif(!column.widthFixed){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t}\r\n\r\n\t\tif(this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible){\r\n\t\t\tlastCol = column;\r\n\t\t}\r\n\r\n\t\tif(column.visible){\r\n\t\t\tcolsWidth += column.getWidth();\r\n\t\t}\r\n\t});\r\n\r\n\tif(lastCol){\r\n\t\tgap = tableWidth - colsWidth + lastCol.getWidth();\r\n\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tlastCol.setWidth(0);\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\r\n\t\tif(gap > 0){\r\n\t\t\tlastCol.setWidth(gap);\r\n\t\t}else{\r\n\t\t\tlastCol.reinitializeWidth();\r\n\t\t}\r\n\t}else{\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\t}\r\n};","//resize columns to fit\r\nexport default function(columns){\r\n\tvar totalWidth = this.table.element.clientWidth; //table element width\r\n\tvar fixedWidth = 0; //total width of columns with a defined width\r\n\tvar flexWidth = 0; //total width available to flexible columns\r\n\tvar flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\r\n\tvar flexColWidth = 0; //desired width of flexible columns\r\n\tvar flexColumns = []; //array of flexible width columns\r\n\tvar fixedShrinkColumns = []; //array of fixed width columns that can shrink\r\n\tvar flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\r\n\tvar overflowWidth = 0; //horizontal overflow width\r\n\tvar gapFill=0; //number of pixels to be added to final column to close and half pixel gaps\r\n\r\n\tfunction calcWidth(width){\r\n\t\tvar colWidth;\r\n\r\n\t\tif(typeof(width) == \"string\"){\r\n\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width);\r\n\t\t\t}else{\r\n\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcolWidth = width;\r\n\t\t}\r\n\r\n\t\treturn colWidth;\r\n\t}\r\n\r\n\t//ensure columns resize to take up the correct amount of space\r\n\tfunction scaleColumns(columns, freeSpace, colWidth, shrinkCols){\r\n\r\n\t\tvar oversizeCols = [],\r\n\t\toversizeSpace = 0,\r\n\t\tremainingSpace = 0,\r\n\t\tnextColWidth = 0,\r\n\t\tremainingFlexGrowUnits = flexGrowUnits,\r\n\t\tgap = 0,\r\n\t\tchangeUnits = 0,\r\n\t\tundersizeCols = [];\r\n\r\n\t\tfunction calcGrow(col){\r\n\t\t\treturn (colWidth * (col.column.definition.widthGrow || 1));\r\n\t\t}\r\n\r\n\t\tfunction calcShrink(col){\r\n\t\t\treturn  (calcWidth(col.width) - (colWidth * (col.column.definition.widthShrink || 0)))\r\n\t\t}\r\n\r\n\t\tcolumns.forEach(function(col, i){\r\n\t\t\tvar width = shrinkCols ? calcShrink(col) : calcGrow(col);\r\n\t\t\tif(col.column.minWidth >= width){\r\n\t\t\t\toversizeCols.push(col);\r\n\t\t\t}else{\r\n\t\t\t\tif(col.column.maxWidth && col.column.maxWidth < width){\r\n\t\t\t\t\tcol.width = col.column.maxWidth;\r\n\t\t\t\t\tfreeSpace -= col.column.maxWidth;\r\n\r\n\t\t\t\t\tremainingFlexGrowUnits -= shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\r\n\t\t\t\t\tif(remainingFlexGrowUnits){\r\n\t\t\t\t\t\tcolWidth = Math.floor(freeSpace/remainingFlexGrowUnits);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tundersizeCols.push(col);\r\n\t\t\t\t\tchangeUnits += shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(oversizeCols.length){\r\n\t\t\toversizeCols.forEach(function(col){\r\n\t\t\t\toversizeSpace += shrinkCols ?  col.width - col.column.minWidth : col.column.minWidth;\r\n\t\t\t\tcol.width = col.column.minWidth;\r\n\t\t\t});\r\n\r\n\t\t\tremainingSpace = freeSpace - oversizeSpace;\r\n\r\n\t\t\tnextColWidth = changeUnits ? Math.floor(remainingSpace/changeUnits) : remainingSpace;\r\n\r\n\t\t\tgap = remainingSpace - (nextColWidth * changeUnits);\r\n\r\n\t\t\tgap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\r\n\t\t}else{\r\n\t\t\tgap = changeUnits ? freeSpace - (Math.floor(freeSpace/changeUnits) * changeUnits) : freeSpace;\r\n\r\n\t\t\tundersizeCols.forEach(function(column){\r\n\t\t\t\tcolumn.width = shrinkCols ? calcShrink(column) : calcGrow(column);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn gap;\r\n\t}\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n\r\n\t//adjust for vertical scrollbar if present\r\n\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t}\r\n\r\n\tcolumns.forEach(function(column){\r\n\t\tvar width, minWidth, colWidth;\r\n\r\n\t\tif(column.visible){\r\n\r\n\t\t\twidth = column.definition.width;\r\n\t\t\tminWidth =  parseInt(column.minWidth);\r\n\r\n\t\t\tif(width){\r\n\r\n\t\t\t\tcolWidth = calcWidth(width);\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t\tif(column.definition.widthShrink){\r\n\t\t\t\t\tfixedShrinkColumns.push({\r\n\t\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\t\twidth:colWidth > minWidth ? colWidth : minWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t\tflexShrinkUnits += column.definition.widthShrink;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tflexColumns.push({\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\twidth:0,\r\n\t\t\t\t});\r\n\t\t\t\tflexGrowUnits += column.definition.widthGrow || 1;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//calculate available space\r\n\tflexWidth = totalWidth - fixedWidth;\r\n\r\n\t//calculate correct column size\r\n\tflexColWidth = Math.floor(flexWidth / flexGrowUnits)\r\n\r\n\t//generate column widths\r\n\tvar gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\r\n\r\n\t//increase width of last column to account for rounding errors\r\n\tif(flexColumns.length && gapFill > 0){\r\n\t\tflexColumns[flexColumns.length-1].width += + gapFill;\r\n\t}\r\n\r\n\t//caculate space for columns to be shrunk into\r\n\tflexColumns.forEach(function(col){\r\n\t\tflexWidth -= col.width;\r\n\t});\r\n\r\n\toverflowWidth = Math.abs(gapFill) + flexWidth;\r\n\r\n\t//shrink oversize columns if there is no available space\r\n\tif(overflowWidth > 0 && flexShrinkUnits){\r\n\t\tgapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\r\n\t}\r\n\r\n\t//decrease width of last column to account for rounding errors\r\n\tif(fixedShrinkColumns.length){\r\n\t\tfixedShrinkColumns[fixedShrinkColumns.length-1].width -= gapFill;\r\n\t}\r\n\r\n\tflexColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n\r\n\tfixedShrinkColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n};","import fitData from './modes/fitData.js';\r\nimport fitDataGeneral from './modes/fitDataGeneral.js';\r\nimport fitDataStretch from './modes/fitDataStretch.js';\r\nimport fitColumns from './modes/fitColumns.js';\r\n\r\nexport default {\r\n\tfitData:fitData,\r\n\tfitDataFill:fitDataGeneral,\r\n\tfitDataTable:fitDataGeneral,\r\n\tfitDataStretch:fitDataStretch,\r\n\tfitColumns:fitColumns ,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultModes from './defaults/modes.js';\r\n\r\nclass Layout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table, \"layout\");\r\n\r\n\t\tthis.mode = null;\r\n\r\n\t\tthis.registerTableOption(\"layout\", \"fitData\"); //layout type\r\n\t\tthis.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\r\n\r\n\t\tthis.registerColumnOption(\"widthGrow\");\r\n\t\tthis.registerColumnOption(\"widthShrink\");\r\n\t}\r\n\r\n\t//initialize layout system\r\n\tinitialize(){\r\n\t\tvar layout = this.table.options.layout;\r\n\r\n\t\tif(Layout.modes[layout]){\r\n\t\t\tthis.mode = layout;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\r\n\t\t\tthis.mode = 'fitData';\r\n\t\t}\r\n\r\n\t\tthis.table.element.setAttribute(\"tabulator-layout\", this.mode);\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//trigger table layout\r\n\tlayout(){\r\n\t\tLayout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\r\n\r\n\t\tthis.dispatch(\"layout-refreshed\")\r\n\t}\r\n}\r\n\r\nLayout.moduleName = \"layout\";\r\n\r\n//load defaults\r\nLayout.modes = defaultModes;\r\n\r\nexport default Layout;","export default {\r\n\t\"default\":{ //hold default locale text\r\n\t\t\"groups\":{\r\n\t\t\t\"item\":\"item\",\r\n\t\t\t\"items\":\"items\",\r\n\t\t},\r\n\t\t\"columns\":{\r\n\t\t},\r\n\t\t\"data\":{\r\n\t\t\t\"loading\":\"Loading\",\r\n\t\t\t\"error\":\"Error\",\r\n\t\t},\r\n\t\t\"pagination\":{\r\n\t\t\t\"page_size\":\"Page Size\",\r\n\t\t\t\"page_title\":\"Show Page\",\r\n\t\t\t\"first\":\"First\",\r\n\t\t\t\"first_title\":\"First Page\",\r\n\t\t\t\"last\":\"Last\",\r\n\t\t\t\"last_title\":\"Last Page\",\r\n\t\t\t\"prev\":\"Prev\",\r\n\t\t\t\"prev_title\":\"Prev Page\",\r\n\t\t\t\"next\":\"Next\",\r\n\t\t\t\"next_title\":\"Next Page\",\r\n\t\t\t\"all\":\"All\",\r\n\t\t},\r\n\t\t\"headerFilters\":{\r\n\t\t\t\"default\":\"filter column...\",\r\n\t\t\t\"columns\":{}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultLangs from './defaults/langs.js';\r\n\r\nclass Localize extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.locale = \"default\"; //current locale\r\n\t\tthis.lang = false; //current language\r\n\t\tthis.bindings = {}; //update events to call when locale is changed\r\n\t\tthis.langList = {};\r\n\r\n\t\tthis.registerTableOption(\"locale\", false); //current system language\r\n\t\tthis.registerTableOption(\"langs\", {});\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.langList = Helpers.deepClone(Localize.langs);\r\n\r\n\t\tif(this.table.options.columnDefaults.headerFilterPlaceholder !== false){\r\n\t\t\tthis.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\r\n\t\t}\r\n\r\n\t\tfor(let locale in this.table.options.langs){\r\n\t\t\tthis.installLang(locale, this.table.options.langs[locale]);\r\n\t\t}\r\n\r\n\t\tthis.setLocale(this.table.options.locale);\r\n\r\n\t\tthis.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLang\", this.getLang.bind(this));\r\n\t}\r\n\r\n\t//set header placehoder\r\n\tsetHeaderFilterPlaceholder(placeholder){\r\n\t\tthis.langList.default.headerFilters.default = placeholder;\r\n\t}\r\n\r\n\t//set header filter placeholder by column\r\n\tsetHeaderFilterColumnPlaceholder(column, placeholder){\r\n\t\tthis.langList.default.headerFilters.columns[column] = placeholder;\r\n\r\n\t\tif(this.lang && !this.lang.headerFilters.columns[column]){\r\n\t\t\tthis.lang.headerFilters.columns[column] = placeholder;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup a lang description object\r\n\tinstallLang(locale, lang){\r\n\t\tif(this.langList[locale]){\r\n\t\t\tthis._setLangProp(this.langList[locale], lang);\r\n\t\t}else{\r\n\t\t\tthis.langList[locale] = lang;\r\n\t\t}\r\n\t}\r\n\r\n\t_setLangProp(lang, values){\r\n\t\tfor(let key in values){\r\n\t\t\tif(lang[key] && typeof lang[key] == \"object\"){\r\n\t\t\t\tthis._setLangProp(lang[key], values[key])\r\n\t\t\t}else{\r\n\t\t\t\tlang[key] = values[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set current locale\r\n\tsetLocale(desiredLocale){\r\n\t\tdesiredLocale = desiredLocale || \"default\";\r\n\r\n\t\t//fill in any matching languge values\r\n\t\tfunction traverseLang(trans, path){\r\n\t\t\tfor(var prop in trans){\r\n\t\t\t\tif(typeof trans[prop] == \"object\"){\r\n\t\t\t\t\tif(!path[prop]){\r\n\t\t\t\t\t\tpath[prop] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttraverseLang(trans[prop], path[prop]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpath[prop] = trans[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//determing correct locale to load\r\n\t\tif(desiredLocale === true && navigator.language){\r\n\t\t\t//get local from system\r\n\t\t\tdesiredLocale = navigator.language.toLowerCase();\r\n\t\t}\r\n\r\n\t\tif(desiredLocale){\r\n\t\t\t//if locale is not set, check for matching top level locale else use default\r\n\t\t\tif(!this.langList[desiredLocale]){\r\n\t\t\t\tlet prefix = desiredLocale.split(\"-\")[0];\r\n\r\n\t\t\t\tif(this.langList[prefix]){\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\r\n\t\t\t\t\tdesiredLocale = prefix;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\r\n\t\t\t\t\tdesiredLocale = \"default\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.locale = desiredLocale;\r\n\r\n\t\t//load default lang template\r\n\t\tthis.lang = Helpers.deepClone(this.langList.default || {});\r\n\r\n\t\tif(desiredLocale != \"default\"){\r\n\t\t\ttraverseLang(this.langList[desiredLocale], this.lang);\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"localized\", this.locale, this.lang);\r\n\r\n\t\tthis._executeBindings();\r\n\t}\r\n\r\n\t//get current locale\r\n\tgetLocale(locale){\r\n\t\treturn this.locale;\r\n\t}\r\n\r\n\t//get lang object for given local or current if none provided\r\n\tgetLang(locale){\r\n\t\treturn locale ? this.langList[locale] : this.lang;\r\n\t}\r\n\r\n\t//get text for current locale\r\n\tgetText(path, value){\r\n\t\tvar path = value ? path + \"|\" + value : path,\r\n\t\tpathArray = path.split(\"|\"),\r\n\t\ttext = this._getLangElement(pathArray, this.locale);\r\n\r\n\t\t// if(text === false){\r\n\t\t// \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\r\n\t\t// }\r\n\r\n\t\treturn text || \"\";\r\n\t}\r\n\r\n\t//traverse langs object and find localized copy\r\n\t_getLangElement(path, locale){\r\n\t\tvar root = this.lang;\r\n\r\n\t\tpath.forEach(function(level){\r\n\t\t\tvar rootPath;\r\n\r\n\t\t\tif(root){\r\n\t\t\t\trootPath = root[level];\r\n\r\n\t\t\t\tif(typeof rootPath != \"undefined\"){\r\n\t\t\t\t\troot = rootPath;\r\n\t\t\t\t}else{\r\n\t\t\t\t\troot = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t//set update binding\r\n\tbind(path, callback){\r\n\t\tif(!this.bindings[path]){\r\n\t\t\tthis.bindings[path] = [];\r\n\t\t}\r\n\r\n\t\tthis.bindings[path].push(callback);\r\n\r\n\t\tcallback(this.getText(path), this.lang);\r\n\t}\r\n\r\n\t//itterate through bindings and trigger updates\r\n\t_executeBindings(){\r\n\t\tfor(let path in this.bindings){\r\n\t\t\tthis.bindings[path].forEach((binding) => {\r\n\t\t\t\tbinding(this.getText(path), this.lang);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nLocalize.moduleName = \"localize\";\r\n\r\n//load defaults\r\nLocalize.langs = defaultLangs;\r\n\r\nexport default Localize;","import Module from '../../core/Module.js';\r\nimport TableRegistry from '../../core/tools/TableRegistry.js';\r\n\r\nclass Comms extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"tableComms\", this.receive.bind(this));\r\n\t}\r\n\r\n\tgetConnections(selectors){\r\n\t\tvar connections = [],\r\n\t\tconnection;\r\n\r\n\t\tconnection = TableRegistry.lookupTable(selectors);\r\n\r\n\t\tconnection.forEach((con) =>{\r\n\t\t\tif(this.table !== con){\r\n\t\t\t\tconnections.push(con);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn connections;\r\n\t}\r\n\r\n\tsend(selectors, module, action, data){\r\n\t\tvar connections = this.getConnections(selectors);\r\n\r\n\t\tconnections.forEach((connection) => {\r\n\t\t\tconnection.tableComms(this.table.element, module, action, data);\r\n\t\t});\r\n\r\n\t\tif(!connections.length && selectors){\r\n\t\t\tconsole.warn(\"Table Connection Error - No tables matching selector found\", selectors);\r\n\t\t}\r\n\t}\r\n\r\n\treceive(table, module, action, data){\r\n\t\tif(this.table.modExists(module)){\r\n\t\t\treturn this.table.modules[module].commsReceived(table, action, data);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Inter-table Comms Error - no such module:\", module);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nComms.moduleName = \"comms\";\r\n\r\nexport default Comms;","import * as coreModules from '../modules/core.js';\r\nimport TableRegistry from './TableRegistry.js';\r\n\r\nexport default class ModuleBinder {\r\n\r\n\tconstructor(tabulator, modules){\r\n\t\tthis.bindStaticFuctionality(tabulator);\r\n\t\tthis.bindModules(tabulator, coreModules, true);\r\n\r\n\t\tif(modules){\r\n\t\t\tthis.bindModules(tabulator, modules);\r\n\t\t}\r\n\t}\r\n\r\n\tbindStaticFuctionality(tabulator){\r\n\t\ttabulator.moduleBindings = {};\r\n\r\n\t\ttabulator.extendModule = function(name, property, values){\r\n\t\t\tif(tabulator.moduleBindings[name]){\r\n\t\t\t\tvar source = tabulator.moduleBindings[name][property];\r\n\r\n\t\t\t\tif(source){\r\n\t\t\t\t\tif(typeof values == \"object\"){\r\n\t\t\t\t\t\tfor(let key in values){\r\n\t\t\t\t\t\t\tsource[key] = values[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Module Error - Invalid value type, it must be an object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Module Error - property does not exist:\", property);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Module Error - module does not exist:\", name);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttabulator.registerModule = function(modules){\r\n\t\t\tif(!Array.isArray(modules)){\r\n\t\t\t\tmodules = [modules];\r\n\t\t\t}\r\n\r\n\t\t\tmodules.forEach((mod) => {\r\n\t\t\t\ttabulator.registerModuleBinding(mod)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModuleBinding = function(mod){\r\n\t\t\ttabulator.moduleBindings[mod.moduleName] = mod;\r\n\t\t};\r\n\r\n\t\ttabulator.findTable = function(query){\r\n\t\t\tvar results = TableRegistry.lookupTable(query, true);\r\n\t\t\treturn Array.isArray(results) && !results.length ? false : results;\r\n\t\t}\r\n\r\n\t\t//ensure that module are bound to instantiated function\r\n\t\ttabulator.prototype.bindModules = function(){\r\n\t\t\tthis.modules = {};\r\n\r\n\t\t\tfor(var name in tabulator.moduleBindings){\r\n\t\t\t\tlet mod = tabulator.moduleBindings[name];\r\n\r\n\t\t\t\tthis.modules[name] = new mod(this);\r\n\r\n\t\t\t\tif(mod.prototype.moduleCore){\r\n\t\t\t\t\tthis.modulesCore[name] = this.modules[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.modulesRegular[name] = this.modules[name];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbindModules(tabulator, modules, core){\r\n\t\tvar mods = Object.values(modules);\r\n\r\n\t\tif(core){\r\n\t\t\tmods.forEach((mod) => {\r\n\t\t\t\tmod.prototype.moduleCore = true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModule(mods);\r\n\t}\r\n}","'use strict';\r\n\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport ColumnManager from './ColumnManager.js';\r\nimport RowManager from './RowManager.js';\r\nimport FooterManager from './FooterManager.js';\r\n\r\nimport InteractionMonitor from './tools/InteractionMonitor.js';\r\nimport ComponentFunctionBinder from './tools/ComponentFunctionBinder.js';\r\nimport DataLoader from './tools/DataLoader.js';\r\n\r\nimport ExternalEventBus from './tools/ExternalEventBus.js';\r\nimport InternalEventBus from './tools/InternalEventBus.js';\r\n\r\nimport TableRegistry from './tools/TableRegistry.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nclass Tabulator {\r\n\r\n\tconstructor(element, options){\r\n\r\n\t\tthis.options = {};\r\n\r\n\t\tthis.columnManager = null; // hold Column Manager\r\n\t\tthis.rowManager = null; //hold Row Manager\r\n\t\tthis.footerManager = null; //holder Footer Manager\r\n\t\tthis.vdomHoz  = null; //holder horizontal virtual dom\r\n\t\tthis.externalEvents = null; //handle external event messaging\r\n\t\tthis.eventBus = null; //handle internal event messaging\r\n\t\tthis.interactionMonitor = false; //track user interaction\r\n\t\tthis.browser = \"\"; //hold current browser type\r\n\t\tthis.browserSlow = false; //handle reduced functionality for slower browsers\r\n\t\tthis.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\r\n\t\tthis.rtl = false; //check if the table is in RTL mode\r\n\t\tthis.originalElement = null; //hold original table element if it has been replaced\r\n\r\n\t\tthis.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\r\n\t\tthis.dataLoader = false; //bind component functions\r\n\r\n\t\tthis.modules = {}; //hold all modules bound to this table\r\n\t\tthis.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\r\n\t\tthis.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\r\n\r\n\t\tthis.optionsList = new OptionsList(this, \"table constructor\");\r\n\r\n\t\tthis.initialized = false;\r\n\r\n\t\tif(this.initializeElement(element)){\r\n\r\n\t\t\tthis.initialzeCoreSystems(options);\r\n\r\n\t\t\t//delay table creation to allow event bindings immediately after the constructor\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._create();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTableRegistry.register(this); //register table for inter-device communication\r\n\t}\r\n\r\n\tinitializeElement(element){\r\n\t\tif(typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement){\r\n\t\t\tthis.element = element;\r\n\t\t\treturn true;\r\n\t\t}else if(typeof element === \"string\"){\r\n\t\t\tthis.element = document.querySelector(element);\r\n\r\n\t\t\tif(this.element){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Tabulator Creation Error - no element found matching selector: \", element);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Tabulator Creation Error - Invalid element provided:\", element);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tinitialzeCoreSystems(options){\r\n\t\tthis.columnManager = new ColumnManager(this);\r\n\t\tthis.rowManager = new RowManager(this);\r\n\t\tthis.footerManager = new FooterManager(this);\r\n\t\tthis.dataLoader = new DataLoader(this);\r\n\r\n\t\tthis.bindModules();\r\n\r\n\t\tthis.options = this.optionsList.generate(Tabulator.defaultOptions, options)\r\n\r\n\t\tthis._clearObjectPointers();\r\n\r\n\t\tthis._mapDeprecatedFunctionality();\r\n\r\n\t\tthis.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\r\n\t\tthis.eventBus = new InternalEventBus(this.options.debugEventsInternal);\r\n\r\n\t\tthis.interactionMonitor = new InteractionMonitor(this);\r\n\r\n\t\tthis.dataLoader.initialize();\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\t\tthis.footerManager.initialize();\r\n\t}\r\n\r\n\t//convert deprecated functionality to new functions\r\n\t_mapDeprecatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\t_clearSelection(){\r\n\r\n\t\tthis.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t  if (window.getSelection().empty) {  // Chrome\r\n\t\t  \twindow.getSelection().empty();\r\n\t\t  } else if (window.getSelection().removeAllRanges) {  // Firefox\r\n\t\t  \twindow.getSelection().removeAllRanges();\r\n\t\t  }\r\n\t\t} else if (document.selection) {  // IE?\r\n\t\t\tdocument.selection.empty();\r\n\t\t}\r\n\r\n\t\tthis.element.classList.remove(\"tabulator-block-select\");\r\n\t}\r\n\r\n\t//create table\r\n\t_create(){\r\n\t\tthis.externalEvents.dispatch(\"tableBuilding\");\r\n\t\tthis.eventBus.dispatch(\"table-building\");\r\n\r\n\t\tthis._rtlCheck();\r\n\r\n\t\tthis._buildElement();\r\n\r\n\t\tthis._initializeTable();\r\n\r\n\t\tthis._loadInitialData();\r\n\r\n\t\tthis.initialized = true;\r\n\r\n\t\tthis.externalEvents.dispatch(\"tableBuilt\");\r\n\t}\r\n\r\n\t_rtlCheck(){\r\n\t\tvar style = window.getComputedStyle(this.element);\r\n\r\n\t\tswitch(this.options.textDirection){\r\n\t\t\tcase\"auto\":\r\n\t\t\tif(style.direction !== \"rtl\"){\r\n\t\t\t\tbreak;\r\n\t\t\t};\r\n\r\n\t\t\tcase \"rtl\":\r\n\t\t\tthis.element.classList.add(\"tabulator-rtl\");\r\n\t\t\tthis.rtl = true;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ltr\":\r\n\t\t\tthis.element.classList.add(\"tabulator-ltr\");\r\n\r\n\t\t\tdefault:\r\n\t\t\tthis.rtl = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//clear pointers to objects in default config object\r\n\t_clearObjectPointers(){\r\n\t\tthis.options.columns = this.options.columns.slice(0);\r\n\r\n\t\tif(this.options.data && !this.options.reactiveData){\r\n\t\t\tthis.options.data = this.options.data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\t//build tabulator element\r\n\t_buildElement(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options,\r\n\t\tnewElement;\r\n\r\n\t\tif(element.tagName === \"TABLE\"){\r\n\t\t\tthis.originalElement = this.element;\r\n\t\t\tnewElement = document.createElement(\"div\");\r\n\r\n\t\t\t//transfer attributes to new element\r\n\t\t\tvar attributes = element.attributes;\r\n\r\n\t\t\t// loop through attributes and apply them on div\r\n\t\t\tfor(var i in attributes){\r\n\t\t\t\tif(typeof attributes[i] == \"object\"){\r\n\t\t\t\t\tnewElement.setAttribute(attributes[i].name, attributes[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// replace table with div element\r\n\t\t\telement.parentNode.replaceChild(newElement, element);\r\n\r\n\t\t\tthis.element = element = newElement;\r\n\t\t}\r\n\r\n\t\telement.classList.add(\"tabulator\");\r\n\t\telement.setAttribute(\"role\", \"grid\");\r\n\r\n\t\t//empty element\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t//set table height\r\n\t\tif(options.height){\r\n\t\t\toptions.height = isNaN(options.height) ? options.height : options.height + \"px\";\r\n\t\t\telement.style.height = options.height;\r\n\t\t}\r\n\r\n\t\t//set table min height\r\n\t\tif(options.minHeight !== false){\r\n\t\t\toptions.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\r\n\t\t\telement.style.minHeight = options.minHeight;\r\n\t\t}\r\n\r\n\t\t//set table maxHeight\r\n\t\tif(options.maxHeight !== false){\r\n\t\t\toptions.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\r\n\t\t\telement.style.maxHeight = options.maxHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize core systems and modules\r\n\t_initializeTable(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options;\r\n\r\n\t\tthis.interactionMonitor.initialize();\r\n\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\r\n\t\tthis._detectBrowser();\r\n\r\n\t\t//initialize core modules\r\n\t\tfor (let key in this.modulesCore){\r\n\t\t\tlet mod = this.modulesCore[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\t//configure placeholder element\r\n\t\tif(typeof options.placeholder == \"string\"){\r\n\t\t\tvar el = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-placeholder\");\r\n\r\n\t\t\tvar span = document.createElement(\"span\");\r\n\t\t\tspan.innerHTML = options.placeholder;\r\n\r\n\t\t\tel.appendChild(span);\r\n\r\n\t\t\toptions.placeholder = el;\r\n\t\t}\r\n\r\n\t\t//build table elements\r\n\t\telement.appendChild(this.columnManager.getElement());\r\n\t\telement.appendChild(this.rowManager.getElement());\r\n\r\n\t\tif(options.footerElement){\r\n\t\t\tthis.footerManager.activate();\r\n\t\t}\r\n\r\n\t\tif(options.autoColumns && options.data){\r\n\r\n\t\t\tthis.columnManager.generateColumnsFromRowData(this.options.data);\r\n\t\t}\r\n\r\n\t\t//initialize regular modules\r\n\t\tfor (let key in this.modulesRegular){\r\n\t\t\tlet mod = this.modulesRegular[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\tthis.columnManager.setColumns(options.columns);\r\n\r\n\t\tthis.eventBus.dispatch(\"table-built\");\r\n\t}\r\n\r\n\t_loadInitialData(){\r\n\t\tthis.dataLoader.load(this.options.data);\r\n\t}\r\n\r\n\t//deconstructor\r\n\tdestroy(){\r\n\t\tvar element = this.element;\r\n\r\n\t\tTableRegistry.deregister(this); //deregister table from inter-device communication\r\n\r\n\t\tthis.eventBus.dispatch(\"table-destroy\");\r\n\r\n\t\t//clear row data\r\n\t\tthis.rowManager.rows.forEach(function(row){\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rowManager.rows = [];\r\n\t\tthis.rowManager.activeRows = [];\r\n\t\tthis.rowManager.displayRows = [];\r\n\r\n\t\t//clear DOM\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\telement.classList.remove(\"tabulator\");\r\n\t}\r\n\r\n\t_detectBrowser(){\r\n\t\tvar ua = navigator.userAgent||navigator.vendor||window.opera;\r\n\r\n\t\tif(ua.indexOf(\"Trident\") > -1){\r\n\t\t\tthis.browser = \"ie\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Edge\") > -1){\r\n\t\t\tthis.browser = \"edge\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Firefox\") > -1){\r\n\t\t\tthis.browser = \"firefox\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}else{\r\n\t\t\tthis.browser = \"other\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}\r\n\r\n\t\tthis.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0,4));\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\t//block table redrawing\r\n\tblockRedraw(){\r\n\t\treturn this.rowManager.blockRedraw();\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw(){\r\n\t\treturn this.rowManager.restoreRedraw();\r\n\t}\r\n\r\n\t//local data from local file\r\n\tsetDataFromLocalFile(extensions){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.type = \"file\";\r\n\t\t\tinput.accept = extensions || \".json,application/json\";\r\n\r\n\t\t\tinput.addEventListener(\"change\", (e) => {\r\n\t\t\t\tvar file = input.files[0],\r\n\t\t\t\treader = new FileReader(),\r\n\t\t\t\tdata;\r\n\r\n\t\t\t\treader.readAsText(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = JSON.parse(reader.result);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.warn(\"File Load Error - File contents is invalid JSON\", e);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData(data)\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tresolve(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\tconsole.warn(\"File Load Error - Unable to read file\");\r\n\t\t\t\t\treject();\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tinput.click();\r\n\t\t});\r\n\t}\r\n\r\n\t//load data\r\n\tsetData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, false);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\t//clear data\r\n\tclearData(){\r\n\t\tthis.dataLoader.blockActiveLoad();\r\n\t\tthis.rowManager.clearData();\r\n\t}\r\n\r\n\t//get table data array\r\n\tgetData(active){\r\n\t\treturn this.rowManager.getData(active);\r\n\t}\r\n\r\n\t//get table data array count\r\n\tgetDataCount(active){\r\n\t\treturn this.rowManager.getDataCount(active);\r\n\t}\r\n\r\n\t//replace data, keeping table in position with same sort\r\n\treplaceData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, true, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateData(data){\r\n\t\tvar responses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\taddData(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tthis.rowManager.addRows(data, pos, index)\r\n\t\t\t\t\t.then((rows) => {\r\n\t\t\t\t\t\tvar output = [];\r\n\r\n\t\t\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\t\t\toutput.push(row.getComponent());\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tresolve(output);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateOrAddData(data){\r\n\t\tvar rows = [],\r\n\t\tresponses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(row.getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.rowManager.addRows(item)\r\n\t\t\t\t\t\t\t.then((newRows)=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(newRows[0].getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRow(index){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRowFromPosition(position, active){\r\n\t\tvar row = this.rowManager.getRowFromPosition(position, active);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", position);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//delete row from table\r\n\tdeleteRow(index){\r\n\t\tvar foundRows = [];\r\n\r\n\t\tif(!Array.isArray(index)){\r\n\t\t\tindex = [index];\r\n\t\t}\r\n\r\n\t\t//find matching rows\r\n\t\tfor(let item of index){\r\n\t\t\tlet row = this.rowManager.findRow(item, true);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\tfoundRows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Delete Error - No matching row found:\", item);\r\n\t\t\t\treturn Promise.reject(\"Delete Error - No matching row found\")\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//sort rows into correct order to ensure smooth delete from table\r\n\t\tfoundRows.sort((a, b) => {\r\n\t\t\treturn this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\r\n\t\t});\r\n\r\n\t\t//delete rows\r\n\t\tfoundRows.forEach((row) =>{\r\n\t\t\trow.delete()\r\n\t\t});\r\n\r\n\t\tthis.rowManager.reRenderInPosition();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t//add row to table\r\n\taddRow(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.rowManager.addRows(data, pos, index)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update a row if it exitsts otherwise create it\r\n\tupdateOrAddRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn row.getComponent();\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\treturn this.rowManager.addRows(data)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t//update row data\r\n\tupdateRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn Promise.resolve(row.getComponent());\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Update Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Update Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to row in DOM\r\n\tscrollToRow(index, position, ifVisible){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.scrollToRow(row, position, ifVisible)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Scroll Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Scroll Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tvar fromRow = this.rowManager.findRow(from);\r\n\r\n\t\tif(fromRow){\r\n\t\t\tfromRow.moveToRow(to, after);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRows(active){\r\n\t\treturn this.rowManager.getComponents(active);\r\n\t}\r\n\r\n\t//get position of row in table\r\n\tgetRowPosition(index, active){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.getRowPosition(row, active);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Position Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////// Column Functions  ///////////////\r\n\tsetColumns(definition){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.setColumns(definition);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumns(structured){\r\n\t\treturn this.columnManager.getComponents(structured);\r\n\t}\r\n\r\n\tgetColumn(field){\r\n\t\tvar col = this.columnManager.findColumn(field);\r\n\r\n\t\tif(col){\r\n\t\t\treturn col.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumnDefinitions(){\r\n\t\treturn this.columnManager.getDefinitionTree();\r\n\t}\r\n\r\n\tshowColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.show();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Show Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.hide();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Hide Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.show();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\taddColumn(definition, before, field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\treturn this.columnManager.addColumn(definition, before, column)\r\n\t\t.then((column) => {\r\n\t\t\treturn column.getComponent();\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.delete();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Delete Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateColumnDefinition(field, definition){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.updateDefinition(definition)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Update Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tvar fromColumn = this.columnManager.findColumn(from);\r\n\t\tvar toColumn = this.columnManager.findColumn(to);\r\n\r\n\t\tif(fromColumn){\r\n\t\t\tif(toColumn){\r\n\t\t\t\tthis.columnManager.moveColumn(fromColumn, toColumn, after)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to column in DOM\r\n\tscrollToColumn(field, position, ifVisible){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\treturn this.columnManager.scrollToColumn(column, position, ifVisible)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - No matching column found:\", field);\r\n\t\t\t\treturn Promise.reject(\"Scroll Error - No matching column found\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//////////// General Public Functions ////////////\r\n\t//redraw list without updating data\r\n\tredraw(force){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.redraw(force);\r\n\t\t\tthis.rowManager.redraw(force);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tthis.options.height = isNaN(height) ? height : height + \"px\";\r\n\t\tthis.element.style.height = this.options.height;\r\n\t\tthis.rowManager.initializeRenderer();\r\n\t\tthis.rowManager.redraw();\r\n\t}\r\n\r\n\t//////////////////// Event Bus ///////////////////\r\n\r\n\ton(key, callback){\r\n\t\tthis.externalEvents.subscribe(key, callback);\r\n\t}\r\n\r\n\toff(key, callback){\r\n\t\tthis.externalEvents.unsubscribe(key, callback);\r\n\t}\r\n\r\n\tdispatchEvent(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tthis.externalEvents.dispatch(...arguments)\r\n\t}\r\n\r\n\t////////////// Extension Management //////////////\r\n\tmodExists(plugin, required){\r\n\t\tif(this.modules[plugin]){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tif(required){\r\n\t\t\t\tconsole.error(\"Tabulator Module Not Installed: \" + plugin);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tmodule(key){\r\n\t\tvar mod = this.modules[key];\r\n\r\n\t\tif(!mod){\r\n\t\t\tconsole.error(\"Tabulator module not installed: \" + key);\r\n\t\t}\r\n\r\n\t\treturn mod;\r\n\t}\r\n}\r\n\r\n//default setup options\r\nTabulator.defaultOptions = defaultOptions;\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(Tabulator);\r\n\r\nexport default Tabulator;","//tabulator with all modules installed\r\nimport {default as Tabulator} from './Tabulator.js';\r\nimport * as modules from '../core/modules/optional.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nclass TabulatorFull extends Tabulator {};\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(TabulatorFull, modules);\r\n\r\nexport default TabulatorFull;","export default class PseudoRow {\r\n\r\n\tconstructor (type){\r\n\t\tthis.type = type;\r\n\t\tthis.element = this._createElement();\r\n\t}\r\n\r\n\t_createElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetComponent(){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn {};\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.outerHeight;\r\n\t}\r\n\r\n\tinitialize(){}\r\n\r\n\treinitialize(){}\r\n\r\n\tnormalizeHeight(){}\r\n\r\n\tgenerateCells(){}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n}"]},"metadata":{},"sourceType":"module"}