{"ast":null,"code":"var _jsxFileName = \"D:\\\\move-forward\\\\react-ukol\\\\frontend\\\\src\\\\components\\\\react-table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst borderStyle = {\n  border: \"3px solid #3D348B\"\n};\nexport function ReactTable(jsonRows, jsonColumns) {\n  _s();\n\n  const [cellData, setCellData] = useState({});\n  let rowData = jsonRows.jsonRows;\n  let columnData = jsonRows.jsonColumns; // console.log(columnData)\n  // console.log(jsonRows.jsonRows);\n  // console.log(jsonRows.jsonColumns)\n\n  const origData = [{\n    actor: \"Johnny Depp\",\n    movies: [{\n      name: \"Pirates of the Carribean 1\"\n    }, {\n      name: \"Pirates of the Carribean 2\"\n    }, {\n      name: \"Pirates of the Carribean 3\"\n    }, {\n      name: \"Pirates of the Carribean 4\"\n    }]\n  }]; // const newData = [];\n  // origData.forEach((actorObj) => {\n  //     actorObj.movies.forEach((movie) => {\n  //         newData.push({\n  //             [\"actor\"]: actorObj.actor,\n  //             movie: movie.name\n  //         });\n  //     });\n  // });\n\n  let data = React.useMemo(() => rowData, []);\n  console.log(data);\n  const testJson = ['nazev', 'trivialni', 'grafika', 'pokrocile', 'jine'];\n  let testColumns = [];\n  columnData.forEach((element, index) => {\n    let testObj = {\n      Header: element,\n      accessor: element,\n      id: index\n    };\n    testColumns.push(testObj);\n  });\n  let columns = React.useMemo(() => testColumns, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // function read(e, index, row) {\n  //     console.log(e);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    className: \"table table-bordered table-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          style: borderStyle,\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map((cell, j) => {\n            // console.log(cell.column.Header)\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: cell.rowSpan,\n              onClick: () => console.log(cell.column.id, row.cells[0].value),\n              ...cell.getCellProps(),\n              style: borderStyle,\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReactTable, \"fkPQEsqWEopUyFvW56TTxv93i10=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"sources":["D:/move-forward/react-ukol/frontend/src/components/react-table.js"],"names":["React","useEffect","useState","useTable","borderStyle","border","ReactTable","jsonRows","jsonColumns","cellData","setCellData","rowData","columnData","origData","actor","movies","name","data","useMemo","console","log","testJson","testColumns","forEach","element","index","testObj","Header","accessor","id","push","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","j","rowSpan","value","getCellProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTable } from \"react-table\";\r\n\r\nconst borderStyle = {\r\n    border: \"3px solid #3D348B\"\r\n};\r\n\r\nexport function ReactTable(jsonRows, jsonColumns) {\r\n    const [cellData, setCellData] = useState({});\r\n\r\n    let rowData = jsonRows.jsonRows\r\n    let columnData = jsonRows.jsonColumns\r\n    // console.log(columnData)\r\n    // console.log(jsonRows.jsonRows);\r\n    // console.log(jsonRows.jsonColumns)\r\n    const origData = [\r\n        {\r\n            actor: \"Johnny Depp\",\r\n            movies: [\r\n                {\r\n                    name: \"Pirates of the Carribean 1\"\r\n                },\r\n                {\r\n                    name: \"Pirates of the Carribean 2\"\r\n                },\r\n                {\r\n                    name: \"Pirates of the Carribean 3\"\r\n                },\r\n                {\r\n                    name: \"Pirates of the Carribean 4\"\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    // const newData = [];\r\n    // origData.forEach((actorObj) => {\r\n    //     actorObj.movies.forEach((movie) => {\r\n    //         newData.push({\r\n    //             [\"actor\"]: actorObj.actor,\r\n    //             movie: movie.name\r\n    //         });\r\n    //     });\r\n    // });\r\n\r\n\r\n\r\n    let data = React.useMemo(() => rowData, []);\r\n\r\n    console.log(data);\r\n\r\n    const testJson = ['nazev', 'trivialni', 'grafika', 'pokrocile', 'jine']\r\n\r\n    let testColumns = []\r\n    columnData.forEach((element, index) => {\r\n        let testObj = {\r\n            Header: element,\r\n            accessor: element,\r\n            id: index\r\n        }\r\n        testColumns.push(testObj)\r\n    });\r\n\r\n    let columns = React.useMemo(\r\n        () => testColumns,\r\n        []\r\n    );\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({ columns, data });\r\n\r\n    // function read(e, index, row) {\r\n    //     console.log(e);\r\n    // }\r\n    return (\r\n        <table {...getTableProps()} className='table table-bordered table-dark'>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()} style={borderStyle}>\r\n                                {column.render(\"Header\")}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map((cell, j) => {\r\n\r\n                                // console.log(cell.column.Header)\r\n                                return (\r\n                                    <td\r\n                                        rowSpan={cell.rowSpan}\r\n                                        onClick={() =>\r\n                                            console.log(cell.column.id, row.cells[0].value)\r\n                                        }\r\n                                        {...cell.getCellProps()}\r\n                                        style={borderStyle}\r\n                                    >\r\n                                        {cell.render(\"Cell\")}\r\n                                    </td>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}