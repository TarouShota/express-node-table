{"ast":null,"code":"var _jsxFileName = \"D:\\\\move-forward\\\\react-ukol\\\\frontend\\\\src\\\\jstable.js\";\nimport React, { useEffect, useState } from 'react'; // import './App.css'\n\nimport 'react-tabulator/lib/styles.css';\nimport { ReactTabulator } from 'react-tabulator';\nimport { Tabulator } from 'tabulator-tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ReadCsv() {\n  let file = null;\n\n  function fileInput(e) {\n    file = e.target.files[0]; // console.log(e.target.files[0]);\n  }\n\n  function submitFile() {\n    let formData = new FormData();\n    formData.append('file', file);\n\n    const fetchItems = async () => fetch(\"/api/tweets\", {\n      // mode: 'no-cors',\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(_ref => {\n      let {\n        data\n      } = _ref;\n\n      if (data.length) {\n        console.log(data[1], data);\n        const columns = data[0];\n        /* Converting the array of arrays into an array of objects. */\n\n        const rows = data.splice(1).map(arr => {\n          const obj = {};\n          columns.forEach((column, index) => {\n            obj[column] = arr[index];\n          });\n          return obj;\n        });\n        const jine = {\n          jine: '0'\n        };\n        const fullRow = { ...rows\n        };\n        rows.forEach(element => {\n          element.jine = '0';\n        });\n        console.log(rows[0]); // console.log(rows, columns)\n\n        const table = new Tabulator(\"#csvTable\", {\n          height: \"300px\",\n          data: rows,\n          autoColumns: true\n        });\n      } else {\n        alert('The CSV is empty');\n      }\n    }).catch(e => alert(e.message));\n\n    fetchItems();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nahr\\xE1t CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Vyberte file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      id: \"file\",\n      onChange: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn primary mt-2\",\n      id: \"submitFile\",\n      onClick: submitFile,\n      children: \"Read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      id: \"csvTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_c = ReadCsv;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadCsv\");","map":{"version":3,"sources":["D:/move-forward/react-ukol/frontend/src/jstable.js"],"names":["React","useEffect","useState","ReactTabulator","Tabulator","ReadCsv","file","fileInput","e","target","files","submitFile","formData","FormData","append","fetchItems","fetch","method","body","then","response","json","data","length","console","log","columns","rows","splice","map","arr","obj","forEach","column","index","jine","fullRow","element","table","height","autoColumns","alert","catch","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// import './App.css'\r\nimport 'react-tabulator/lib/styles.css';\r\nimport { ReactTabulator } from 'react-tabulator'\r\nimport { Tabulator } from 'tabulator-tables';\r\n\r\n\r\nexport function ReadCsv() {\r\n\r\n    let file = null;\r\n    function fileInput(e) {\r\n        file = e.target.files[0]\r\n        // console.log(e.target.files[0]);\r\n    }\r\n    function submitFile() {\r\n\r\n        let formData = new FormData()\r\n        formData.append('file', file);\r\n\r\n        const fetchItems = async () => fetch(\"/api/tweets\", {\r\n            // mode: 'no-cors',\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then((response) => response.json())\r\n            .then(({ data }) => {\r\n                if (data.length) {\r\n\r\n                    console.log(data[1], data);\r\n\r\n                    const columns = data[0]\r\n                    /* Converting the array of arrays into an array of objects. */\r\n                    const rows = data.splice(1).map((arr) => {\r\n\r\n                        const obj = {}\r\n                        columns.forEach((column, index) => {\r\n                            obj[column] = arr[index]\r\n                        })\r\n                        return obj\r\n                    })\r\n                    const jine = {\r\n                        jine: '0'\r\n                    }\r\n                    const fullRow = {\r\n                        ...rows\r\n                    }\r\n                    rows.forEach(element => {\r\n                        element.jine = '0'\r\n                    });\r\n                    console.log(rows[0]);\r\n\r\n                    // console.log(rows, columns)\r\n\r\n                    const table = new Tabulator(\"#csvTable\", {\r\n                        height: \"300px\",\r\n                        data: rows,\r\n                        autoColumns: true\r\n                    });\r\n                } else {\r\n                    alert('The CSV is empty')\r\n                }\r\n            })\r\n            .catch((e) => alert(e.message))\r\n        fetchItems()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1>Nahr√°t CSV</h1>\r\n            <label htmlFor='file'>Vyberte file</label>\r\n            <input type='file' className=\"form-control\" name='file' id='file' onChange={fileInput} />\r\n            <button className=\"btn btn primary mt-2\" id=\"submitFile\" onClick={submitFile}>Read</button>\r\n            <div className=\"mt-2\" id=\"csvTable\"></div>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}