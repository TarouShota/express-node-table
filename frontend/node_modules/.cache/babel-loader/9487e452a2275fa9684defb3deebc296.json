{"ast":null,"code":"var _jsxFileName = \"D:\\\\move-forward\\\\react-ukol\\\\frontend\\\\src\\\\components\\\\react-table.js\",\n    _s = $RefreshSig$();\n\nimport { useTable } from 'react-table';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ReactTable() {\n  _s();\n\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column/ff 1',\n    accessor: 'col1' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    style: {\n      border: 'solid 1px blue'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          style: {\n            borderBottom: 'solid 3px red',\n            background: 'aliceblue',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              style: {\n                padding: '10px',\n                border: 'solid 1px gray',\n                background: 'papayawhip'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReactTable, \"sdXeWohil/0yE+phHpR6HeT6JLU=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"sources":["D:/move-forward/react-ukol/frontend/src/components/react-table.js"],"names":["useTable","React","useEffect","useState","ReactTable","data","useMemo","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAMC,IAAI,GAAGJ,KAAK,CAACK,OAAN,CACT,MAAM,CACF;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADE,EAKF;AACID,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALE,EASF;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATE,CADG,EAeT,EAfS,CAAb;AAkBA,QAAMC,OAAO,GAAGR,KAAK,CAACK,OAAN,CACZ,MAAM,CACF;AACII,IAAAA,MAAM,EAAE,aADZ;AAEIC,IAAAA,QAAQ,EAAE,MAFd,CAEsB;;AAFtB,GADE,EAKF;AACID,IAAAA,MAAM,EAAE,UADZ;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GALE,CADM,EAWZ,EAXY,CAAhB;AAcA,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFhB,QAAQ,CAAC;AAAES,IAAAA,OAAF;AAAWJ,IAAAA;AAAX,GAAD,CANZ;AAQA,sBACI,sBAAWO,aAAa,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAnC;AAAA,4BACI;AAAA,gBACKH,YAAY,CAACI,GAAb,CAAiBC,WAAW,iBACzB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC3B,mBACQA,MAAM,CAACC,cAAP,EADR;AAEI,UAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE,eADX;AAEHC,YAAAA,UAAU,EAAE,WAFT;AAGHC,YAAAA,KAAK,EAAE,OAHJ;AAIHC,YAAAA,UAAU,EAAE;AAJT,WAFX;AAAA,oBASKL,MAAM,CAACM,MAAP,CAAc,QAAd;AATL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI,sBAAWf,iBAAiB,EAA5B;AAAA,gBACKE,IAAI,CAACG,GAAL,CAASW,GAAG,IAAI;AACbb,QAAAA,UAAU,CAACa,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACKD,GAAG,CAACE,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACnB,gCACI,mBACQA,IAAI,CAACC,YAAL,EADR;AAEI,cAAA,KAAK,EAAE;AACHC,gBAAAA,OAAO,EAAE,MADN;AAEHjB,gBAAAA,MAAM,EAAE,gBAFL;AAGHQ,gBAAAA,UAAU,EAAE;AAHT,eAFX;AAAA,wBAQKO,IAAI,CAACJ,MAAL,CAAY,MAAZ;AARL;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYH,WAbA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH,OApBA;AADL;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;GAvFexB,U;UAuCRJ,Q;;;KAvCQI,U","sourcesContent":["import { useTable } from 'react-table'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport function ReactTable() {\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n            },\r\n            {\r\n                col1: 'react-table',\r\n                col2: 'rocks',\r\n            },\r\n            {\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Column/ff 1',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Column 2',\r\n                accessor: 'col2',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data })\r\n\r\n    return (\r\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps()}\r\n                                style={{\r\n                                    borderBottom: 'solid 3px red',\r\n                                    background: 'aliceblue',\r\n                                    color: 'black',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                {column.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return (\r\n                                    <td\r\n                                        {...cell.getCellProps()}\r\n                                        style={{\r\n                                            padding: '10px',\r\n                                            border: 'solid 1px gray',\r\n                                            background: 'papayawhip',\r\n                                        }}\r\n                                    >\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}