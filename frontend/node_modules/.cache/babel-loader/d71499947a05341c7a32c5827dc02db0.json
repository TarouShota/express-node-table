{"ast":null,"code":"var _jsxFileName = \"D:\\\\move-forward\\\\react-ukol\\\\frontend\\\\src\\\\jstable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from \"@material-ui/core\"; // import './App.css'\n\nimport 'react-tabulator/lib/styles.css';\nimport { ReactTabulator } from 'react-tabulator';\nimport { Tabulator } from 'tabulator-tables';\nimport axios from 'axios'; // export function ReadCsv() {\n//     let file = null;\n//     function fileInput() {\n//         // file = this.files[0]\n//     }\n//     function submitFile() {\n//         let formData = new FormData()\n//         formData.append('file', file);\n//         const fetchItems = async () => fetch(\"/api/tweets\", {\n//             // mode: 'no-cors',\n//             method: 'POST',\n//             body: formData\n//         })\n//             .then((response) => response.json())\n//             .then(({ data }) => {\n//                 if (data.length) {\n//                     const columns = data[0]\n//                     const rows = data.splice(1).map((arr) => {\n//                         const obj = {}\n//                         columns.forEach((column, index) => {\n//                             obj[column] = arr[index]\n//                         })\n//                         return obj\n//                     })\n//                     console.log(rows, columns)\n//                     const table = new Tabulator(\"#csvTable\", {\n//                         height: \"300px\",\n//                         data: rows,\n//                         autoColumns: true\n//                     });\n//                 } else {\n//                     alert('The CSV is empty')\n//                 }\n//             })\n//             .catch((e) => alert(e.message))\n//         fetchItems()\n//     }\n//     return (\n//         <div className=\"container py-4\">\n//             <h1>Nahrát CSV</h1>\n//             <label htmlFor='file'>Vyberte file</label>\n//             <input type='file' className=\"form-control\" name='file' id='file' onChange={fileInput} />\n//             <button className=\"btn btn primary mt-2\" id=\"submitFile\" onClick={submitFile}>Read</button>\n//             <div className=\"mt-2\" id=\"csvTable\"></div>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUpload() {\n  _s();\n\n  const [file, setFile] = useState();\n  const [fileName, setFileName] = useState(\"\");\n\n  const saveFile = e => {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  };\n\n  const uploadFile = async e => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"fileName\", fileName);\n\n    try {\n      const res = await axios.post(\"http://localhost:3000/upload\", formData);\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: saveFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"PBVAdP7p4SXYO8jGjUjfAQ9UxO0=\");\n\n_c = FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["D:/move-forward/react-ukol/frontend/src/jstable.js"],"names":["React","useEffect","useState","Button","ReactTabulator","Tabulator","axios","FileUpload","file","setFile","fileName","setFileName","saveFile","e","target","files","name","uploadFile","formData","FormData","append","res","post","console","log","ex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAO,gCAAP;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACpBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAJ,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAOJ,CAAP,IAAa;AAC5B,UAAMK,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBZ,IAAxB;AACAU,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BV,QAA5B;;AACA,QAAI;AACA,YAAMW,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CACd,8BADc,EAEdJ,QAFc,CAAlB;AAIAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KAND,CAME,OAAOI,EAAP,EAAW;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACH;AACJ,GAbD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEb;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA/BuBV,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\n// import './App.css'\r\nimport 'react-tabulator/lib/styles.css';\r\nimport { ReactTabulator } from 'react-tabulator'\r\nimport { Tabulator } from 'tabulator-tables';\r\nimport axios from 'axios';\r\n// export function ReadCsv() {\r\n\r\n//     let file = null;\r\n//     function fileInput() {\r\n//         // file = this.files[0]\r\n//     }\r\n//     function submitFile() {\r\n\r\n//         let formData = new FormData()\r\n//         formData.append('file', file);\r\n\r\n//         const fetchItems = async () => fetch(\"/api/tweets\", {\r\n//             // mode: 'no-cors',\r\n//             method: 'POST',\r\n//             body: formData\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then(({ data }) => {\r\n//                 if (data.length) {\r\n//                     const columns = data[0]\r\n//                     const rows = data.splice(1).map((arr) => {\r\n//                         const obj = {}\r\n//                         columns.forEach((column, index) => {\r\n//                             obj[column] = arr[index]\r\n//                         })\r\n//                         return obj\r\n//                     })\r\n\r\n//                     console.log(rows, columns)\r\n\r\n//                     const table = new Tabulator(\"#csvTable\", {\r\n//                         height: \"300px\",\r\n//                         data: rows,\r\n//                         autoColumns: true\r\n//                     });\r\n//                 } else {\r\n//                     alert('The CSV is empty')\r\n//                 }\r\n//             })\r\n//             .catch((e) => alert(e.message))\r\n//         fetchItems()\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"container py-4\">\r\n//             <h1>Nahrát CSV</h1>\r\n//             <label htmlFor='file'>Vyberte file</label>\r\n//             <input type='file' className=\"form-control\" name='file' id='file' onChange={fileInput} />\r\n//             <button className=\"btn btn primary mt-2\" id=\"submitFile\" onClick={submitFile}>Read</button>\r\n//             <div className=\"mt-2\" id=\"csvTable\"></div>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\nexport default function FileUpload() {\r\n    const [file, setFile] = useState();\r\n    const [fileName, setFileName] = useState(\"\");\r\n\r\n    const saveFile = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    };\r\n\r\n    const uploadFile = async (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"fileName\", fileName);\r\n        try {\r\n            const res = await axios.post(\r\n                \"http://localhost:3000/upload\",\r\n                formData\r\n            );\r\n            console.log(res);\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <input type=\"file\" onChange={saveFile} />\r\n            <button onClick={uploadFile}>Upload</button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}