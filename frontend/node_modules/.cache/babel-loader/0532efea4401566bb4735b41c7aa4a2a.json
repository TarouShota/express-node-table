{"ast":null,"code":"/* Tabulator v5.2.1 (c) Oliver Folkerd 2022 */\nclass CoreFeature {\n  constructor(table) {\n    this.table = table;\n  } //////////////////////////////////////////\n  /////////////// DataLoad /////////////////\n  //////////////////////////////////////////\n\n\n  reloadData(data, silent) {\n    return this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\n  } //////////////////////////////////////////\n  ///////////// Localization ///////////////\n  //////////////////////////////////////////\n\n\n  langText() {\n    return this.table.modules.localize.getText(...arguments);\n  }\n\n  langBind() {\n    return this.table.modules.localize.bind(...arguments);\n  }\n\n  langLocale() {\n    return this.table.modules.localize.getLocale(...arguments);\n  } //////////////////////////////////////////\n  ////////// Inter Table Comms /////////////\n  //////////////////////////////////////////\n\n\n  commsConnections() {\n    return this.table.modules.comms.getConnections(...arguments);\n  }\n\n  commsSend() {\n    return this.table.modules.comms.send(...arguments);\n  } //////////////////////////////////////////\n  //////////////// Layout  /////////////////\n  //////////////////////////////////////////\n\n\n  layoutMode() {\n    return this.table.modules.layout.getMode();\n  }\n\n  layoutRefresh() {\n    return this.table.modules.layout.layout();\n  } //////////////////////////////////////////\n  /////////////// Event Bus ////////////////\n  //////////////////////////////////////////\n\n\n  subscribe() {\n    return this.table.eventBus.subscribe(...arguments);\n  }\n\n  unsubscribe() {\n    return this.table.eventBus.unsubscribe(...arguments);\n  }\n\n  subscribed(key) {\n    return this.table.eventBus.subscribed(key);\n  }\n\n  subscriptionChange() {\n    return this.table.eventBus.subscriptionChange(...arguments);\n  }\n\n  dispatch() {\n    return this.table.eventBus.dispatch(...arguments);\n  }\n\n  chain() {\n    return this.table.eventBus.chain(...arguments);\n  }\n\n  confirm() {\n    return this.table.eventBus.confirm(...arguments);\n  }\n\n  dispatchExternal() {\n    return this.table.externalEvents.dispatch(...arguments);\n  }\n\n  subscribedExternal(key) {\n    return this.table.externalEvents.subscribed(key);\n  }\n\n  subscriptionChangeExternal() {\n    return this.table.externalEvents.subscriptionChange(...arguments);\n  } //////////////////////////////////////////\n  //////////////// Options /////////////////\n  //////////////////////////////////////////\n\n\n  options(key) {\n    return this.table.options[key];\n  }\n\n  setOption(key, value) {\n    if (typeof value !== \"undefined\") {\n      this.table.options[key] = value;\n    }\n\n    return this.table.options[key];\n  } //////////////////////////////////////////\n  //////////////// Modules /////////////////\n  //////////////////////////////////////////\n\n\n  module(key) {\n    return this.table.module(key);\n  }\n\n}\n\nclass Helpers {\n  static elVisible(el) {\n    return !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\n  }\n\n  static elOffset(el) {\n    var box = el.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset - document.documentElement.clientTop,\n      left: box.left + window.pageXOffset - document.documentElement.clientLeft\n    };\n  }\n\n  static deepClone(obj, clone) {\n    let list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var objectProto = {}.__proto__,\n        arrayProto = [].__proto__;\n\n    if (!clone) {\n      clone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\n    }\n\n    for (var i in obj) {\n      let subject = obj[i],\n          match,\n          copy;\n\n      if (subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)) {\n        match = list.findIndex(item => {\n          return item.subject === subject;\n        });\n\n        if (match > -1) {\n          clone[i] = list[match].copy;\n        } else {\n          copy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\n          list.unshift({\n            subject,\n            copy\n          });\n          clone[i] = this.deepClone(subject, copy, list);\n        }\n      }\n    }\n\n    return clone;\n  }\n\n}\n\nclass Popup extends CoreFeature {\n  constructor(table, element, parent) {\n    super(table);\n    this.element = element;\n    this.container = this._lookupContainer();\n    this.parent = parent;\n    this.reversedX = false;\n    this.childPopup = null;\n    this.blurable = false;\n    this.blurCallback = null;\n    this.renderedCallback = null;\n    this.visible = false;\n    this.element.classList.add(\"tabulator-popup-container\");\n    this.blurEvent = this.hide.bind(this, false);\n    this.escEvent = this._escapeCheck.bind(this);\n  }\n\n  _lookupContainer() {\n    var container = this.table.options.popupContainer;\n\n    if (typeof container === \"string\") {\n      container = document.querySelector(container);\n\n      if (!container) {\n        console.warn(\"Menu Error - no container element found matching selector:\", this.table.options.popupContainer, \"(defaulting to document body)\");\n      }\n    } else if (container === true) {\n      container = this.table.element;\n    }\n\n    if (container && !this._checkContainerIsParent(container)) {\n      container = false;\n      console.warn(\"Menu Error - container element does not contain this table:\", this.table.options.popupContainer, \"(defaulting to document body)\");\n    }\n\n    if (!container) {\n      container = document.body;\n    }\n\n    return container;\n  }\n\n  _checkContainerIsParent(container) {\n    let element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.table.element;\n\n    if (container === element) {\n      return true;\n    } else {\n      return element.parentNode ? this._checkContainerIsParent(container, element.parentNode) : false;\n    }\n  }\n\n  renderCallback(callback) {\n    this.renderedCallback = callback;\n  }\n\n  containerEventCoords(e) {\n    var touch = !(e instanceof MouseEvent);\n    var x = touch ? e.touches[0].pageX : e.pageX;\n    var y = touch ? e.touches[0].pageY : e.pageY;\n\n    if (this.container !== document.body) {\n      let parentOffset = Helpers.elOffset(this.container);\n      x -= parentOffset.left;\n      y -= parentOffset.top;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n  elementPositionCoords(element) {\n    let position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"right\";\n    var offset = Helpers.elOffset(element),\n        containerOffset,\n        x,\n        y;\n\n    if (this.container !== document.body) {\n      containerOffset = Helpers.elOffset(this.container);\n      offset.left -= containerOffset.left;\n      offset.top -= containerOffset.top;\n    }\n\n    switch (position) {\n      case \"right\":\n        x = offset.left + element.offsetWidth;\n        y = offset.top - 1;\n        break;\n\n      case \"bottom\":\n        x = offset.left;\n        y = offset.top + element.offsetHeight;\n        break;\n    }\n\n    return {\n      x,\n      y,\n      offset\n    };\n  }\n\n  show(origin, position) {\n    var x, y, parentEl, parentOffset, coords;\n\n    if (origin instanceof HTMLElement) {\n      parentEl = origin;\n      coords = this.elementPositionCoords(origin, position);\n      parentOffset = coords.offset;\n      x = coords.x;\n      y = coords.y;\n    } else if (typeof origin === \"number\") {\n      parentOffset = {\n        top: 0,\n        left: 0\n      };\n      x = origin;\n      y = position;\n    } else {\n      coords = this.containerEventCoords(origin);\n      x = coords.x;\n      y = coords.y;\n      this.reversedX = false;\n    }\n\n    this.element.style.top = y + \"px\";\n    this.element.style.left = x + \"px\";\n    this.container.appendChild(this.element);\n\n    if (typeof this.renderedCallback === \"function\") {\n      this.renderedCallback();\n    }\n\n    this._fitToScreen(x, y, parentEl, parentOffset, position);\n\n    this.visible = true;\n    return this;\n  }\n\n  _fitToScreen(x, y, parentEl, parentOffset, position) {\n    var scrollTop = this.container === document.body ? document.documentElement.scrollTop : this.container.scrollTop; //move menu to start on right edge if it is too close to the edge of the screen\n\n    if (x + this.element.offsetWidth >= this.container.offsetWidth || this.reversedX) {\n      this.element.style.left = \"\";\n\n      if (parentEl) {\n        this.element.style.right = this.container.offsetWidth - parentOffset.left + \"px\";\n      } else {\n        this.element.style.right = this.container.offsetWidth - x + \"px\";\n      }\n\n      this.reversedX = true;\n    } //move menu to start on bottom edge if it is too close to the edge of the screen\n\n\n    if (y + this.element.offsetHeight > Math.max(this.container.offsetHeight, scrollTop ? this.container.scrollHeight : 0)) {\n      if (parentEl) {\n        switch (position) {\n          case \"bottom\":\n            this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight - parentEl.offsetHeight - 1 + \"px\";\n            break;\n\n          default:\n            this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight + parentEl.offsetHeight + 1 + \"px\";\n        }\n      } else {\n        this.element.style.top = parseInt(this.element.style.top) - this.element.offsetHeight + \"px\";\n      }\n    }\n  }\n\n  isVisible() {\n    return this.visible;\n  }\n\n  hideOnBlur(callback) {\n    this.blurable = true;\n\n    if (this.visible) {\n      setTimeout(() => {\n        this.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\n        this.subscribe(\"cell-editing\", this.blurEvent);\n        document.body.addEventListener(\"click\", this.blurEvent);\n        document.body.addEventListener(\"contextmenu\", this.blurEvent);\n        window.addEventListener(\"resize\", this.blurEvent);\n        document.body.addEventListener(\"keydown\", this.escEvent);\n      }, 100);\n      this.blurCallback = callback;\n    }\n\n    return this;\n  }\n\n  _escapeCheck(e) {\n    if (e.keyCode == 27) {\n      this.hide();\n    }\n  }\n\n  hide() {\n    let silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (this.visible) {\n      if (this.blurable) {\n        document.body.removeEventListener(\"keydown\", this.escEvent);\n        document.body.removeEventListener(\"click\", this.blurEvent);\n        document.body.removeEventListener(\"contextmenu\", this.blurEvent);\n        window.removeEventListener(\"resize\", this.blurEvent);\n        this.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\n        this.unsubscribe(\"cell-editing\", this.blurEvent);\n      }\n\n      if (this.childPopup) {\n        this.childPopup.hide();\n      }\n\n      if (this.parent) {\n        this.parent.childPopup = null;\n      }\n\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      this.visible = false;\n\n      if (this.blurCallback && !silent) {\n        this.blurCallback();\n      }\n    }\n\n    return this;\n  }\n\n  child(element) {\n    if (this.childPopup) {\n      this.childPopup.hide();\n    }\n\n    this.childPopup = new Popup(this.table, element, this);\n    return this.childPopup;\n  }\n\n}\n\nclass Module extends CoreFeature {\n  constructor(table, name) {\n    super(table);\n    this._handler = null;\n  }\n\n  initialize() {// setup module when table is initialized, to be overriden in module\n  } ///////////////////////////////////\n  ////// Options Registration ///////\n  ///////////////////////////////////\n\n\n  registerTableOption(key, value) {\n    this.table.optionsList.register(key, value);\n  }\n\n  registerColumnOption(key, value) {\n    this.table.columnManager.optionsList.register(key, value);\n  } ///////////////////////////////////\n  /// Public Function Registration ///\n  ///////////////////////////////////\n\n\n  registerTableFunction(name, func) {\n    var _this = this;\n\n    if (typeof this.table[name] === \"undefined\") {\n      this.table[name] = function () {\n        _this.table.initGuard(name);\n\n        return func(...arguments);\n      };\n    } else {\n      console.warn(\"Unable to bind table function, name already in use\", name);\n    }\n  }\n\n  registerComponentFunction(component, func, handler) {\n    return this.table.componentFunctionBinder.bind(component, func, handler);\n  } ///////////////////////////////////\n  ////////// Data Pipeline //////////\n  ///////////////////////////////////\n\n\n  registerDataHandler(handler, priority) {\n    this.table.rowManager.registerDataPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n\n  registerDisplayHandler(handler, priority) {\n    this.table.rowManager.registerDisplayPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n\n  refreshData(renderInPosition, handler) {\n    if (!handler) {\n      handler = this._handler;\n    }\n\n    if (handler) {\n      this.table.rowManager.refreshActiveData(handler, false, renderInPosition);\n    }\n  } ///////////////////////////////////\n  //////// Footer Management ////////\n  ///////////////////////////////////\n\n\n  footerAppend(element) {\n    return this.table.footerManager.append(element);\n  }\n\n  footerPrepend(element) {\n    return this.table.footerManager.prepend(element);\n  }\n\n  footerRemove(element) {\n    return this.table.footerManager.remove(element);\n  } ///////////////////////////////////\n  //////// Popups Management ////////\n  ///////////////////////////////////\n\n\n  popup(menuEl, menuContainer) {\n    return new Popup(this.table, menuEl, menuContainer);\n  } ///////////////////////////////////\n  //////// Alert Management ////////\n  ///////////////////////////////////\n\n\n  alert(content, type) {\n    return this.table.alertManager.alert(content, type);\n  }\n\n  clearAlert() {\n    return this.table.alertManager.clear();\n  }\n\n}\n\nvar defautlAccessors = {};\n\nclass Accessor extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"]; //list of accessor types\n\n    this.registerColumnOption(\"accessor\");\n    this.registerColumnOption(\"accessorParams\");\n    this.registerColumnOption(\"accessorData\");\n    this.registerColumnOption(\"accessorDataParams\");\n    this.registerColumnOption(\"accessorDownload\");\n    this.registerColumnOption(\"accessorDownloadParams\");\n    this.registerColumnOption(\"accessorClipboard\");\n    this.registerColumnOption(\"accessorClipboardParams\");\n    this.registerColumnOption(\"accessorPrint\");\n    this.registerColumnOption(\"accessorPrintParams\");\n    this.registerColumnOption(\"accessorHtmlOutput\");\n    this.registerColumnOption(\"accessorHtmlOutputParams\");\n  }\n\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\n  } //initialize column accessor\n\n\n  initializeColumn(column) {\n    var match = false,\n        config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n          accessor;\n\n      if (column.definition[key]) {\n        accessor = this.lookupAccessor(column.definition[key]);\n\n        if (accessor) {\n          match = true;\n          config[key] = {\n            accessor: accessor,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n\n    if (match) {\n      column.modules.accessor = config;\n    }\n  }\n\n  lookupAccessor(value) {\n    var accessor = false; //set column accessor\n\n    switch (typeof value) {\n      case \"string\":\n        if (Accessor.accessors[value]) {\n          accessor = Accessor.accessors[value];\n        } else {\n          console.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\n        }\n\n        break;\n\n      case \"function\":\n        accessor = value;\n        break;\n    }\n\n    return accessor;\n  } //apply accessor to row\n\n\n  transformRow(row, type) {\n    var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        rowComponent = row.getComponent(); //clone data object with deep copy to isolate internal data from returned result\n\n    var data = Helpers.deepClone(row.data || {});\n    this.table.columnManager.traverse(function (column) {\n      var value, accessor, params, colCompnent;\n\n      if (column.modules.accessor) {\n        accessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\n\n        if (accessor) {\n          value = column.getFieldValue(data);\n\n          if (value != \"undefined\") {\n            colCompnent = column.getComponent();\n            params = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\n            column.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n} //load defaults\n\n\nAccessor.moduleName = \"accessor\";\nAccessor.accessors = defautlAccessors;\nvar defaultConfig = {\n  method: \"GET\"\n};\n\nfunction generateParamsList(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n\n  return output;\n}\n\nfunction serializeParams(params) {\n  var output = generateParamsList(params),\n      encoded = [];\n  output.forEach(function (item) {\n    encoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\n  });\n  return encoded.join(\"&\");\n}\n\nfunction urlBuilder(url, config, params) {\n  if (url) {\n    if (params && Object.keys(params).length) {\n      if (!config.method || config.method.toLowerCase() == \"get\") {\n        config.method = \"get\";\n        url += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\n      }\n    }\n  }\n\n  return url;\n}\n\nfunction defaultLoaderPromise(url, config, params) {\n  var contentType;\n  return new Promise((resolve, reject) => {\n    //set url\n    url = this.urlGenerator.call(this.table, url, config, params); //set body content if not GET request\n\n    if (config.method.toUpperCase() != \"GET\") {\n      contentType = typeof this.table.options.ajaxContentType === \"object\" ? this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\n\n      if (contentType) {\n        for (var key in contentType.headers) {\n          if (!config.headers) {\n            config.headers = {};\n          }\n\n          if (typeof config.headers[key] === \"undefined\") {\n            config.headers[key] = contentType.headers[key];\n          }\n        }\n\n        config.body = contentType.body.call(this, url, config, params);\n      } else {\n        console.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\n      }\n    }\n\n    if (url) {\n      //configure headers\n      if (typeof config.headers === \"undefined\") {\n        config.headers = {};\n      }\n\n      if (typeof config.headers.Accept === \"undefined\") {\n        config.headers.Accept = \"application/json\";\n      }\n\n      if (typeof config.headers[\"X-Requested-With\"] === \"undefined\") {\n        config.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n      }\n\n      if (typeof config.mode === \"undefined\") {\n        config.mode = \"cors\";\n      }\n\n      if (config.mode == \"cors\") {\n        if (typeof config.headers[\"Origin\"] === \"undefined\") {\n          config.headers[\"Origin\"] = window.location.origin;\n        }\n\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'same-origin';\n        }\n      } else {\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'include';\n        }\n      } //send request\n\n\n      fetch(url, config).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n            console.warn(\"Ajax Load Error - Invalid JSON returned\", error);\n          });\n        } else {\n          console.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\n          reject(response);\n        }\n      }).catch(error => {\n        console.error(\"Ajax Load Error - Connection Error: \", error);\n        reject(error);\n      });\n    } else {\n      console.warn(\"Ajax Load Error - No URL Set\");\n      resolve([]);\n    }\n  });\n}\n\nfunction generateParamsList$1(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList$1(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList$1(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n\n  return output;\n}\n\nvar defaultContentTypeFormatters = {\n  \"json\": {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: function (url, config, params) {\n      return JSON.stringify(params);\n    }\n  },\n  \"form\": {\n    headers: {},\n    body: function (url, config, params) {\n      var output = generateParamsList$1(params),\n          form = new FormData();\n      output.forEach(function (item) {\n        form.append(item.key, item.value);\n      });\n      return form;\n    }\n  }\n};\n\nclass Ajax extends Module {\n  constructor(table) {\n    super(table);\n    this.config = {}; //hold config object for ajax request\n\n    this.url = \"\"; //request URL\n\n    this.urlGenerator = false;\n    this.params = false; //request parameters\n\n    this.loaderPromise = false;\n    this.registerTableOption(\"ajaxURL\", false); //url for ajax loading\n\n    this.registerTableOption(\"ajaxURLGenerator\", false);\n    this.registerTableOption(\"ajaxParams\", {}); //params for ajax loading\n\n    this.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\n\n    this.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\n\n    this.registerTableOption(\"ajaxRequestFunc\", false); //promise function\n\n    this.registerTableOption(\"ajaxRequesting\", function () {});\n    this.registerTableOption(\"ajaxResponse\", false);\n    this.contentTypeFormatters = Ajax.contentTypeFormatters;\n  } //initialize setup options\n\n\n  initialize() {\n    this.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\n    this.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\n\n    if (this.table.options.ajaxURL) {\n      this.setUrl(this.table.options.ajaxURL);\n    }\n\n    this.setDefaultConfig(this.table.options.ajaxConfig);\n    this.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\n    this.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\n    this.subscribe(\"data-params\", this.requestParams.bind(this));\n    this.subscribe(\"data-load\", this.requestData.bind(this));\n  }\n\n  requestParams(data, config, silent, params) {\n    var ajaxParams = this.table.options.ajaxParams;\n\n    if (ajaxParams) {\n      if (typeof ajaxParams === \"function\") {\n        ajaxParams = ajaxParams.call(this.table);\n      }\n\n      params = Object.assign(params, ajaxParams);\n    }\n\n    return params;\n  }\n\n  requestDataCheck(data, params, config, silent) {\n    return !!(!data && this.url || typeof data === \"string\");\n  }\n\n  requestData(url, params, config, silent, previousData) {\n    var ajaxConfig;\n\n    if (!previousData && this.requestDataCheck(url)) {\n      if (url) {\n        this.setUrl(url);\n      }\n\n      ajaxConfig = this.generateConfig(config);\n      return this.sendRequest(this.url, params, ajaxConfig);\n    } else {\n      return previousData;\n    }\n  }\n\n  setDefaultConfig() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.config = Object.assign({}, Ajax.defaultConfig);\n\n    if (typeof config == \"string\") {\n      this.config.method = config;\n    } else {\n      Object.assign(this.config, config);\n    }\n  } //load config object\n\n\n  generateConfig() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ajaxConfig = Object.assign({}, this.config);\n\n    if (typeof config == \"string\") {\n      ajaxConfig.method = config;\n    } else {\n      Object.assign(ajaxConfig, config);\n    }\n\n    return ajaxConfig;\n  } //set request url\n\n\n  setUrl(url) {\n    this.url = url;\n  } //get request url\n\n\n  getUrl() {\n    return this.url;\n  } //send ajax request\n\n\n  sendRequest(url, params, config) {\n    if (this.table.options.ajaxRequesting.call(this.table, url, params) !== false) {\n      return this.loaderPromise(url, config, params).then(data => {\n        if (this.table.options.ajaxResponse) {\n          data = this.table.options.ajaxResponse.call(this.table, url, params, data);\n        }\n\n        return data;\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n\n}\n\nAjax.moduleName = \"ajax\"; //load defaults\n\nAjax.defaultConfig = defaultConfig;\nAjax.defaultURLGenerator = urlBuilder;\nAjax.defaultLoaderPromise = defaultLoaderPromise;\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\nvar defaultPasteActions = {\n  replace: function (rows) {\n    return this.table.setData(rows);\n  },\n  update: function (rows) {\n    return this.table.updateOrAddData(rows);\n  },\n  insert: function (rows) {\n    return this.table.addData(rows);\n  }\n};\nvar defaultPasteParsers = {\n  table: function (clipboard) {\n    var data = [],\n        headerFindSuccess = true,\n        columns = this.table.columnManager.columns,\n        columnMap = [],\n        rows = []; //get data from clipboard into array of columns and rows.\n\n    clipboard = clipboard.split(\"\\n\");\n    clipboard.forEach(function (row) {\n      data.push(row.split(\"\\t\"));\n    });\n\n    if (data.length && !(data.length === 1 && data[0].length < 2)) {\n      //check if headers are present by title\n      data[0].forEach(function (value) {\n        var column = columns.find(function (column) {\n          return value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\n        });\n\n        if (column) {\n          columnMap.push(column);\n        } else {\n          headerFindSuccess = false;\n        }\n      }); //check if column headers are present by field\n\n      if (!headerFindSuccess) {\n        headerFindSuccess = true;\n        columnMap = [];\n        data[0].forEach(function (value) {\n          var column = columns.find(function (column) {\n            return value && column.field && value.trim() && column.field.trim() === value.trim();\n          });\n\n          if (column) {\n            columnMap.push(column);\n          } else {\n            headerFindSuccess = false;\n          }\n        });\n\n        if (!headerFindSuccess) {\n          columnMap = this.table.columnManager.columnsByIndex;\n        }\n      } //remove header row if found\n\n\n      if (headerFindSuccess) {\n        data.shift();\n      }\n\n      data.forEach(function (item) {\n        var row = {};\n        item.forEach(function (value, i) {\n          if (columnMap[i]) {\n            row[columnMap[i].field] = value;\n          }\n        });\n        rows.push(row);\n      });\n      return rows;\n    } else {\n      return false;\n    }\n  }\n};\n\nclass Clipboard extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = true;\n\n    this.pasteParser = function () {};\n\n    this.pasteAction = function () {};\n\n    this.customSelection = false;\n    this.rowRange = false;\n    this.blocked = true; //block copy actions not originating from this command\n\n    this.registerTableOption(\"clipboard\", false); //enable clipboard\n\n    this.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\n\n    this.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\n\n    this.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\n\n    this.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\n\n    this.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\n\n    this.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\n\n    this.registerColumnOption(\"clipboard\");\n    this.registerColumnOption(\"titleClipboard\");\n  }\n\n  initialize() {\n    this.mode = this.table.options.clipboard;\n    this.rowRange = this.table.options.clipboardCopyRowRange;\n\n    if (this.mode === true || this.mode === \"copy\") {\n      this.table.element.addEventListener(\"copy\", e => {\n        var plain, html, list;\n\n        if (!this.blocked) {\n          e.preventDefault();\n\n          if (this.customSelection) {\n            plain = this.customSelection;\n\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n            }\n          } else {\n            var list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\n            html = this.table.modules.export.genereateHTMLTable(list);\n            plain = html ? this.generatePlainContent(list) : \"\";\n\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n              html = this.table.options.clipboardCopyFormatter(\"html\", html);\n            }\n          }\n\n          if (window.clipboardData && window.clipboardData.setData) {\n            window.clipboardData.setData('Text', plain);\n          } else if (e.clipboardData && e.clipboardData.setData) {\n            e.clipboardData.setData('text/plain', plain);\n\n            if (html) {\n              e.clipboardData.setData('text/html', html);\n            }\n          } else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\n            e.originalEvent.clipboardData.setData('text/plain', plain);\n\n            if (html) {\n              e.originalEvent.clipboardData.setData('text/html', html);\n            }\n          }\n\n          this.dispatchExternal(\"clipboardCopied\", plain, html);\n          this.reset();\n        }\n      });\n    }\n\n    if (this.mode === true || this.mode === \"paste\") {\n      this.table.element.addEventListener(\"paste\", e => {\n        this.paste(e);\n      });\n    }\n\n    this.setPasteParser(this.table.options.clipboardPasteParser);\n    this.setPasteAction(this.table.options.clipboardPasteAction);\n    this.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\n  }\n\n  reset() {\n    this.blocked = true;\n    this.customSelection = false;\n  }\n\n  generatePlainContent(list) {\n    var output = [];\n    list.forEach(row => {\n      var rowData = [];\n      row.columns.forEach(col => {\n        var value = \"\";\n\n        if (col) {\n          if (row.type === \"group\") {\n            col.value = col.component.getKey();\n          }\n\n          if (col.value === null) {\n            value = \"\";\n          } else {\n            switch (typeof col.value) {\n              case \"object\":\n                value = JSON.stringify(col.value);\n                break;\n\n              case \"undefined\":\n                value = \"\";\n                break;\n\n              default:\n                value = col.value;\n            }\n          }\n        }\n\n        rowData.push(value);\n      });\n      output.push(rowData.join(\"\\t\"));\n    });\n    return output.join(\"\\n\");\n  }\n\n  copy(range, internal) {\n    var range, sel, textRange;\n    this.blocked = false;\n    this.customSelection = false;\n\n    if (this.mode === true || this.mode === \"copy\") {\n      this.rowRange = range || this.table.options.clipboardCopyRowRange;\n\n      if (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\n        range = document.createRange();\n        range.selectNodeContents(this.table.element);\n        sel = window.getSelection();\n\n        if (sel.toString() && internal) {\n          this.customSelection = sel.toString();\n        }\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\n        textRange = document.body.createTextRange();\n        textRange.moveToElementText(this.table.element);\n        textRange.select();\n      }\n\n      document.execCommand('copy');\n\n      if (sel) {\n        sel.removeAllRanges();\n      }\n    }\n  } //PASTE EVENT HANDLING\n\n\n  setPasteAction(action) {\n    switch (typeof action) {\n      case \"string\":\n        this.pasteAction = Clipboard.pasteActions[action];\n\n        if (!this.pasteAction) {\n          console.warn(\"Clipboard Error - No such paste action found:\", action);\n        }\n\n        break;\n\n      case \"function\":\n        this.pasteAction = action;\n        break;\n    }\n  }\n\n  setPasteParser(parser) {\n    switch (typeof parser) {\n      case \"string\":\n        this.pasteParser = Clipboard.pasteParsers[parser];\n\n        if (!this.pasteParser) {\n          console.warn(\"Clipboard Error - No such paste parser found:\", parser);\n        }\n\n        break;\n\n      case \"function\":\n        this.pasteParser = parser;\n        break;\n    }\n  }\n\n  paste(e) {\n    var data, rowData, rows;\n\n    if (this.checkPaseOrigin(e)) {\n      data = this.getPasteData(e);\n      rowData = this.pasteParser.call(this, data);\n\n      if (rowData) {\n        e.preventDefault();\n\n        if (this.table.modExists(\"mutator\")) {\n          rowData = this.mutateData(rowData);\n        }\n\n        rows = this.pasteAction.call(this, rowData);\n        this.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\n      } else {\n        this.dispatchExternal(\"clipboardPasteError\", data);\n      }\n    }\n  }\n\n  mutateData(data) {\n    var output = [];\n\n    if (Array.isArray(data)) {\n      data.forEach(row => {\n        output.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\n      });\n    } else {\n      output = data;\n    }\n\n    return output;\n  }\n\n  checkPaseOrigin(e) {\n    var valid = true;\n\n    if (e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell) {\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  getPasteData(e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) {\n      data = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      data = e.clipboardData.getData('text/plain');\n    } else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\n      data = e.originalEvent.clipboardData.getData('text/plain');\n    }\n\n    return data;\n  }\n\n}\n\nClipboard.moduleName = \"clipboard\"; //load defaults\n\nClipboard.pasteActions = defaultPasteActions;\nClipboard.pasteParsers = defaultPasteParsers;\n\nclass CalcComponent {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n\n  getElement() {\n    return this._row.getElement();\n  }\n\n  getTable() {\n    return this._row.table;\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  getCell(column) {\n    var cell = this._row.getCell(column);\n\n    return cell ? cell.getComponent() : false;\n  }\n\n  _getSelf() {\n    return this._row;\n  }\n\n} //public cell object\n\n\nclass CellComponent {\n  constructor(cell) {\n    this._cell = cell;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name);\n        }\n      }\n    });\n  }\n\n  getValue() {\n    return this._cell.getValue();\n  }\n\n  getOldValue() {\n    return this._cell.getOldValue();\n  }\n\n  getInitialValue() {\n    return this._cell.initialValue;\n  }\n\n  getElement() {\n    return this._cell.getElement();\n  }\n\n  getRow() {\n    return this._cell.row.getComponent();\n  }\n\n  getData() {\n    return this._cell.row.getData();\n  }\n\n  getField() {\n    return this._cell.column.getField();\n  }\n\n  getColumn() {\n    return this._cell.column.getComponent();\n  }\n\n  setValue(value, mutate) {\n    if (typeof mutate == \"undefined\") {\n      mutate = true;\n    }\n\n    this._cell.setValue(value, mutate);\n  }\n\n  restoreOldValue() {\n    this._cell.setValueActual(this._cell.getOldValue());\n  }\n\n  restoreInitialValue() {\n    this._cell.setValueActual(this._cell.initialValue);\n  }\n\n  checkHeight() {\n    this._cell.checkHeight();\n  }\n\n  getTable() {\n    return this._cell.table;\n  }\n\n  _getSelf() {\n    return this._cell;\n  }\n\n}\n\nclass Cell extends CoreFeature {\n  constructor(column, row) {\n    super(column.table);\n    this.table = column.table;\n    this.column = column;\n    this.row = row;\n    this.element = null;\n    this.value = null;\n    this.initialValue;\n    this.oldValue = null;\n    this.modules = {};\n    this.height = null;\n    this.width = null;\n    this.minWidth = null;\n    this.component = null;\n    this.loaded = false; //track if the cell has been added to the DOM yet\n\n    this.build();\n  } //////////////// Setup Functions /////////////////\n  //generate element\n\n\n  build() {\n    this.generateElement();\n    this.setWidth();\n\n    this._configureCell();\n\n    this.setValueActual(this.column.getFieldValue(this.row.data));\n    this.initialValue = this.value;\n  }\n\n  generateElement() {\n    this.element = document.createElement('div');\n    this.element.className = \"tabulator-cell\";\n    this.element.setAttribute(\"role\", \"gridcell\");\n    this.element = this.element;\n  }\n\n  _configureCell() {\n    var element = this.element,\n        field = this.column.getField(),\n        vertAligns = {\n      top: \"flex-start\",\n      bottom: \"flex-end\",\n      middle: \"center\"\n    },\n        hozAligns = {\n      left: \"flex-start\",\n      right: \"flex-end\",\n      center: \"center\"\n    }; //set text alignment\n\n    element.style.textAlign = this.column.hozAlign;\n\n    if (this.column.vertAlign) {\n      element.style.display = \"inline-flex\";\n      element.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\n\n      if (this.column.hozAlign) {\n        element.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\n      }\n    }\n\n    if (field) {\n      element.setAttribute(\"tabulator-field\", field);\n    } //add class to cell if needed\n\n\n    if (this.column.definition.cssClass) {\n      var classNames = this.column.definition.cssClass.split(\" \");\n      classNames.forEach(className => {\n        element.classList.add(className);\n      });\n    }\n\n    this.dispatch(\"cell-init\", this); //hide cell if not visible\n\n    if (!this.column.visible) {\n      this.hide();\n    }\n  } //generate cell contents\n\n\n  _generateContents() {\n    var val;\n    val = this.chain(\"cell-format\", this, null, () => {\n      return this.element.innerHTML = this.value;\n    });\n\n    switch (typeof val) {\n      case \"object\":\n        if (val instanceof Node) {\n          //clear previous cell contents\n          while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n          this.element.appendChild(val);\n        } else {\n          this.element.innerHTML = \"\";\n\n          if (val != null) {\n            console.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\n          }\n        }\n\n        break;\n\n      case \"undefined\":\n      case \"null\":\n        this.element.innerHTML = \"\";\n        break;\n\n      default:\n        this.element.innerHTML = val;\n    }\n  }\n\n  cellRendered() {\n    this.dispatch(\"cell-rendered\", this);\n  } //////////////////// Getters ////////////////////\n\n\n  getElement(containerOnly) {\n    if (!this.loaded) {\n      this.loaded = true;\n\n      if (!containerOnly) {\n        this.layoutElement();\n      }\n    }\n\n    return this.element;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  getOldValue() {\n    return this.oldValue;\n  } //////////////////// Actions ////////////////////\n\n\n  setValue(value, mutate, force) {\n    var changed = this.setValueProcessData(value, mutate, force);\n\n    if (changed) {\n      this.dispatch(\"cell-value-updated\", this);\n      this.cellRendered();\n\n      if (this.column.definition.cellEdited) {\n        this.column.definition.cellEdited.call(this.table, this.getComponent());\n      }\n\n      this.dispatchExternal(\"cellEdited\", this.getComponent());\n\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n    }\n  }\n\n  setValueProcessData(value, mutate, force) {\n    var changed = false;\n\n    if (this.value !== value || force) {\n      changed = true;\n\n      if (mutate) {\n        value = this.chain(\"cell-value-changing\", [this, value], null, value);\n      }\n    }\n\n    this.setValueActual(value);\n\n    if (changed) {\n      this.dispatch(\"cell-value-changed\", this);\n    }\n\n    return changed;\n  }\n\n  setValueActual(value) {\n    this.oldValue = this.value;\n    this.value = value;\n    this.dispatch(\"cell-value-save-before\", this);\n    this.column.setFieldValue(this.row.data, value);\n    this.dispatch(\"cell-value-save-after\", this);\n\n    if (this.loaded) {\n      this.layoutElement();\n    }\n  }\n\n  layoutElement() {\n    this._generateContents();\n\n    this.dispatch(\"cell-layout\", this);\n  }\n\n  setWidth() {\n    this.width = this.column.width;\n    this.element.style.width = this.column.widthStyled;\n  }\n\n  clearWidth() {\n    this.width = \"\";\n    this.element.style.width = \"\";\n  }\n\n  getWidth() {\n    return this.width || this.element.offsetWidth;\n  }\n\n  setMinWidth() {\n    this.minWidth = this.column.minWidth;\n    this.element.style.minWidth = this.column.minWidthStyled;\n  }\n\n  setMaxWidth() {\n    this.maxWidth = this.column.maxWidth;\n    this.element.style.maxWidth = this.column.maxWidthStyled;\n  }\n\n  checkHeight() {\n    // var height = this.element.css(\"height\");\n    this.row.reinitializeHeight();\n  }\n\n  clearHeight() {\n    this.element.style.height = \"\";\n    this.height = null;\n    this.dispatch(\"cell-height\", this, \"\");\n  }\n\n  setHeight() {\n    this.height = this.row.height;\n    this.element.style.height = this.row.heightStyled;\n    this.dispatch(\"cell-height\", this, this.row.heightStyled);\n  }\n\n  getHeight() {\n    return this.height || this.element.offsetHeight;\n  }\n\n  show() {\n    this.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\n  }\n\n  hide() {\n    this.element.style.display = \"none\";\n  }\n\n  delete() {\n    this.dispatch(\"cell-delete\", this);\n\n    if (!this.table.rowManager.redrawBlock && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n\n    this.element = false;\n    this.column.deleteCell(this);\n    this.row.deleteCell(this);\n    this.calcs = {};\n  }\n\n  getIndex() {\n    return this.row.getCellIndex(this);\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new CellComponent(this);\n    }\n\n    return this.component;\n  }\n\n} //public column object\n\n\nclass ColumnComponent {\n  constructor(column) {\n    this._column = column;\n    this.type = \"ColumnComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._column.table.componentFunctionBinder.handle(\"column\", target._column, name);\n        }\n      }\n    });\n  }\n\n  getElement() {\n    return this._column.getElement();\n  }\n\n  getDefinition() {\n    return this._column.getDefinition();\n  }\n\n  getField() {\n    return this._column.getField();\n  }\n\n  getTitleDownload() {\n    return this._column.getTitleDownload();\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._column.cells.forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  isVisible() {\n    return this._column.visible;\n  }\n\n  show() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.show();\n      });\n    } else {\n      this._column.show();\n    }\n  }\n\n  hide() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.hide();\n      });\n    } else {\n      this._column.hide();\n    }\n  }\n\n  toggle() {\n    if (this._column.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  delete() {\n    return this._column.delete();\n  }\n\n  getSubColumns() {\n    var output = [];\n\n    if (this._column.columns.length) {\n      this._column.columns.forEach(function (column) {\n        output.push(column.getComponent());\n      });\n    }\n\n    return output;\n  }\n\n  getParentColumn() {\n    return this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\n  }\n\n  _getSelf() {\n    return this._column;\n  }\n\n  scrollTo() {\n    return this._column.table.columnManager.scrollToColumn(this._column);\n  }\n\n  getTable() {\n    return this._column.table;\n  }\n\n  move(to, after) {\n    var toColumn = this._column.table.columnManager.findColumn(to);\n\n    if (toColumn) {\n      this._column.table.columnManager.moveColumn(this._column, toColumn, after);\n    } else {\n      console.warn(\"Move Error - No matching column found:\", toColumn);\n    }\n  }\n\n  getNextColumn() {\n    var nextCol = this._column.nextColumn();\n\n    return nextCol ? nextCol.getComponent() : false;\n  }\n\n  getPrevColumn() {\n    var prevCol = this._column.prevColumn();\n\n    return prevCol ? prevCol.getComponent() : false;\n  }\n\n  updateDefinition(updates) {\n    return this._column.updateDefinition(updates);\n  }\n\n  getWidth() {\n    return this._column.getWidth();\n  }\n\n  setWidth(width) {\n    var result;\n\n    if (width === true) {\n      result = this._column.reinitializeWidth(true);\n    } else {\n      result = this._column.setWidth(width);\n    }\n\n    this._column.table.columnManager.renderer.rerenderColumns(true);\n\n    return result;\n  }\n\n}\n\nvar defaultColumnOptions = {\n  \"title\": undefined,\n  \"field\": undefined,\n  \"columns\": undefined,\n  \"visible\": undefined,\n  \"hozAlign\": undefined,\n  \"vertAlign\": undefined,\n  \"width\": undefined,\n  \"minWidth\": 40,\n  \"maxWidth\": undefined,\n  \"maxInitialWidth\": undefined,\n  \"cssClass\": undefined,\n  \"variableHeight\": undefined,\n  \"headerVertical\": undefined,\n  \"headerHozAlign\": undefined,\n  \"editableTitle\": undefined\n};\n\nclass Column extends CoreFeature {\n  constructor(def, parent) {\n    super(parent.table);\n    this.definition = def; //column definition\n\n    this.parent = parent; //hold parent object\n\n    this.type = \"column\"; //type of element\n\n    this.columns = []; //child columns\n\n    this.cells = []; //cells bound to this column\n\n    this.element = this.createElement(); //column header element\n\n    this.contentElement = false;\n    this.titleHolderElement = false;\n    this.titleElement = false;\n    this.groupElement = this.createGroupElement(); //column group holder element\n\n    this.isGroup = false;\n    this.hozAlign = \"\"; //horizontal text alignment\n\n    this.vertAlign = \"\"; //vert text alignment\n    //multi dimensional filed handling\n\n    this.field = \"\";\n    this.fieldStructure = \"\";\n    this.getFieldValue = \"\";\n    this.setFieldValue = \"\";\n    this.titleDownload = null;\n    this.titleFormatterRendered = false;\n    this.mapDefinitions();\n    this.setField(this.definition.field);\n    this.modules = {}; //hold module variables;\n\n    this.width = null; //column width\n\n    this.widthStyled = \"\"; //column width prestyled to improve render efficiency\n\n    this.maxWidth = null; //column maximum width\n\n    this.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\n\n    this.maxInitialWidth = null;\n    this.minWidth = null; //column minimum width\n\n    this.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\n\n    this.widthFixed = false; //user has specified a width for this column\n\n    this.visible = true; //default visible state\n\n    this.component = null; //initialize column\n\n    if (this.definition.columns) {\n      this.isGroup = true;\n      this.definition.columns.forEach((def, i) => {\n        var newCol = new Column(def, this);\n        this.attachColumn(newCol);\n      });\n      this.checkColumnVisibility();\n    } else {\n      parent.registerColumnField(this);\n    }\n\n    this._initialize();\n\n    this.bindModuleColumns();\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.setAttribute(\"role\", \"columnheader\");\n    el.setAttribute(\"aria-sort\", \"none\");\n    return el;\n  }\n\n  createGroupElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col-group-cols\");\n    return el;\n  }\n\n  mapDefinitions() {\n    var defaults = this.table.options.columnDefaults; //map columnDefaults onto column definitions\n\n    if (defaults) {\n      for (let key in defaults) {\n        if (typeof this.definition[key] === \"undefined\") {\n          this.definition[key] = defaults[key];\n        }\n      }\n    }\n\n    this.definition = this.table.columnManager.optionsList.generate(Column.defaultOptionList, this.definition);\n  }\n\n  checkDefinition() {\n    Object.keys(this.definition).forEach(key => {\n      if (Column.defaultOptionList.indexOf(key) === -1) {\n        console.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key);\n      }\n    });\n  }\n\n  setField(field) {\n    this.field = field;\n    this.fieldStructure = field ? this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field] : [];\n    this.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\n    this.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\n  } //register column position with column manager\n\n\n  registerColumnPosition(column) {\n    this.parent.registerColumnPosition(column);\n  } //register column position with column manager\n\n\n  registerColumnField(column) {\n    this.parent.registerColumnField(column);\n  } //trigger position registration\n\n\n  reRegisterPosition() {\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        column.reRegisterPosition();\n      });\n    } else {\n      this.registerColumnPosition(this);\n    }\n  }\n\n  _mapDepricatedFunctionality() {//all previously deprecated functionality removed in the 5.0 release\n  } //build header element\n\n\n  _initialize() {\n    var def = this.definition;\n\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n    if (def.headerVertical) {\n      this.element.classList.add(\"tabulator-col-vertical\");\n\n      if (def.headerVertical === \"flip\") {\n        this.element.classList.add(\"tabulator-col-vertical-flip\");\n      }\n    }\n\n    this.contentElement = this._bindEvents();\n    this.contentElement = this._buildColumnHeaderContent();\n    this.element.appendChild(this.contentElement);\n\n    if (this.isGroup) {\n      this._buildGroupHeader();\n    } else {\n      this._buildColumnHeader();\n    }\n\n    this.dispatch(\"column-init\", this);\n  }\n\n  _bindEvents() {\n    var def = this.definition,\n        dblTap,\n        tapHold,\n        tap; //setup header click event bindings\n\n    if (typeof def.headerClick == \"function\") {\n      this.element.addEventListener(\"click\", e => {\n        def.headerClick(e, this.getComponent());\n      });\n    }\n\n    if (typeof def.headerDblClick == \"function\") {\n      this.element.addEventListener(\"dblclick\", e => {\n        def.headerDblClick(e, this.getComponent());\n      });\n    }\n\n    if (typeof def.headerContext == \"function\") {\n      this.element.addEventListener(\"contextmenu\", e => {\n        def.headerContext(e, this.getComponent());\n      });\n    } //setup header tap event bindings\n\n\n    if (typeof def.headerTap == \"function\") {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          def.headerTap(e, this.getComponent());\n        }\n\n        tap = false;\n      });\n    }\n\n    if (typeof def.headerDblTap == \"function\") {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          def.headerDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n\n    if (typeof def.headerTapHold == \"function\") {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(function () {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          def.headerTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n  } //build header element for header\n\n\n  _buildColumnHeader() {\n    var def = this.definition,\n        table = this.table;\n    this.dispatch(\"column-layout\", this); //set column visibility\n\n    if (typeof def.visible != \"undefined\") {\n      if (def.visible) {\n        this.show(true);\n      } else {\n        this.hide(true);\n      }\n    } //asign additional css classes to column header\n\n\n    if (def.cssClass) {\n      var classeNames = def.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n\n    if (def.field) {\n      this.element.setAttribute(\"tabulator-field\", def.field);\n    } //set min width if present\n\n\n    this.setMinWidth(parseInt(def.minWidth));\n\n    if (def.maxInitialWidth) {\n      this.maxInitialWidth = parseInt(def.maxInitialWidth);\n    }\n\n    if (def.maxWidth) {\n      this.setMaxWidth(parseInt(def.maxWidth));\n    }\n\n    this.reinitializeWidth(); //set orizontal text alignment\n\n    this.hozAlign = this.definition.hozAlign;\n    this.vertAlign = this.definition.vertAlign;\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n  }\n\n  _buildColumnHeaderContent() {\n    var def = this.definition,\n        table = this.table;\n    var contentElement = document.createElement(\"div\");\n    contentElement.classList.add(\"tabulator-col-content\");\n    this.titleHolderElement = document.createElement(\"div\");\n    this.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\n    contentElement.appendChild(this.titleHolderElement);\n    this.titleElement = this._buildColumnHeaderTitle();\n    this.titleHolderElement.appendChild(this.titleElement);\n    return contentElement;\n  } //build title element of column\n\n\n  _buildColumnHeaderTitle() {\n    var def = this.definition;\n    var titleHolderElement = document.createElement(\"div\");\n    titleHolderElement.classList.add(\"tabulator-col-title\");\n\n    if (def.editableTitle) {\n      var titleElement = document.createElement(\"input\");\n      titleElement.classList.add(\"tabulator-title-editor\");\n      titleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        titleElement.focus();\n      });\n      titleElement.addEventListener(\"change\", () => {\n        def.title = titleElement.value;\n        this.dispatchExternal(\"columnTitleChanged\", this.getComponent());\n      });\n      titleHolderElement.appendChild(titleElement);\n\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          titleElement.value = text || def.title || \"&nbsp;\";\n        });\n      } else {\n        titleElement.value = def.title || \"&nbsp;\";\n      }\n    } else {\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          this._formatColumnHeaderTitle(titleHolderElement, text || def.title || \"&nbsp;\");\n        });\n      } else {\n        this._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\n      }\n    }\n\n    return titleHolderElement;\n  }\n\n  _formatColumnHeaderTitle(el, title) {\n    var contents = this.chain(\"column-format\", [this, title, el], null, () => {\n      return title;\n    });\n\n    switch (typeof contents) {\n      case \"object\":\n        if (contents instanceof Node) {\n          el.appendChild(contents);\n        } else {\n          el.innerHTML = \"\";\n          console.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\n        }\n\n        break;\n\n      case \"undefined\":\n      case \"null\":\n        el.innerHTML = \"\";\n        break;\n\n      default:\n        el.innerHTML = contents;\n    }\n  } //build header element for column group\n\n\n  _buildGroupHeader() {\n    this.element.classList.add(\"tabulator-col-group\");\n    this.element.setAttribute(\"role\", \"columngroup\");\n    this.element.setAttribute(\"aria-title\", this.definition.title); //asign additional css classes to column header\n\n    if (this.definition.cssClass) {\n      var classeNames = this.definition.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n    this.element.appendChild(this.groupElement);\n  } //flat field lookup\n\n\n  _getFlatData(data) {\n    return data[this.field];\n  } //nested field lookup\n\n\n  _getNestedData(data) {\n    var dataObj = data,\n        structure = this.fieldStructure,\n        length = structure.length,\n        output;\n\n    for (let i = 0; i < length; i++) {\n      dataObj = dataObj[structure[i]];\n      output = dataObj;\n\n      if (!dataObj) {\n        break;\n      }\n    }\n\n    return output;\n  } //flat field set\n\n\n  _setFlatData(data, value) {\n    if (this.field) {\n      data[this.field] = value;\n    }\n  } //nested field set\n\n\n  _setNestedData(data, value) {\n    var dataObj = data,\n        structure = this.fieldStructure,\n        length = structure.length;\n\n    for (let i = 0; i < length; i++) {\n      if (i == length - 1) {\n        dataObj[structure[i]] = value;\n      } else {\n        if (!dataObj[structure[i]]) {\n          if (typeof value !== \"undefined\") {\n            dataObj[structure[i]] = {};\n          } else {\n            break;\n          }\n        }\n\n        dataObj = dataObj[structure[i]];\n      }\n    }\n  } //attach column to this group\n\n\n  attachColumn(column) {\n    if (this.groupElement) {\n      this.columns.push(column);\n      this.groupElement.appendChild(column.getElement());\n      column.columnRendered();\n    } else {\n      console.warn(\"Column Warning - Column being attached to another column instead of column group\");\n    }\n  } //vertically align header in column\n\n\n  verticalAlign(alignment, height) {\n    //calculate height of column header and group holder element\n    var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : height || this.parent.getHeadersElement().clientHeight; // var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\n\n    this.element.style.height = parentHeight + \"px\";\n    this.dispatch(\"column-height\", this, this.element.style.height);\n\n    if (this.isGroup) {\n      this.groupElement.style.minHeight = parentHeight - this.contentElement.offsetHeight + \"px\";\n    } //vertically align cell contents\n\n\n    if (!this.isGroup && alignment !== \"top\") {\n      if (alignment === \"bottom\") {\n        this.element.style.paddingTop = this.element.clientHeight - this.contentElement.offsetHeight + \"px\";\n      } else {\n        this.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) / 2 + \"px\";\n      }\n    }\n\n    this.columns.forEach(function (column) {\n      column.verticalAlign(alignment);\n    });\n  } //clear vertical alignmenet\n\n\n  clearVerticalAlign() {\n    this.element.style.paddingTop = \"\";\n    this.element.style.height = \"\";\n    this.element.style.minHeight = \"\";\n    this.groupElement.style.minHeight = \"\";\n    this.columns.forEach(function (column) {\n      column.clearVerticalAlign();\n    });\n    this.dispatch(\"column-height\", this, \"\");\n  }\n\n  bindModuleColumns() {\n    //check if rownum formatter is being used on a column\n    if (this.definition.formatter == \"rownum\") {\n      this.table.rowManager.rowNumColumn = this;\n    }\n  } //// Retreive Column Information ////\n  //return column header element\n\n\n  getElement() {\n    return this.element;\n  } //return colunm group element\n\n\n  getGroupElement() {\n    return this.groupElement;\n  } //return field name\n\n\n  getField() {\n    return this.field;\n  }\n\n  getTitleDownload() {\n    return this.titleDownload;\n  } //return the first column in a group\n\n\n  getFirstColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[0].getFirstColumn();\n      } else {\n        return false;\n      }\n    }\n  } //return the last column in a group\n\n\n  getLastColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[this.columns.length - 1].getLastColumn();\n      } else {\n        return false;\n      }\n    }\n  } //return all columns in a group\n\n\n  getColumns() {\n    return this.columns;\n  } //return all columns in a group\n\n\n  getCells() {\n    return this.cells;\n  } //retreive the top column in a group of columns\n\n\n  getTopColumn() {\n    if (this.parent.isGroup) {\n      return this.parent.getTopColumn();\n    } else {\n      return this;\n    }\n  } //return column definition object\n\n\n  getDefinition(updateBranches) {\n    var colDefs = [];\n\n    if (this.isGroup && updateBranches) {\n      this.columns.forEach(function (column) {\n        colDefs.push(column.getDefinition(true));\n      });\n      this.definition.columns = colDefs;\n    }\n\n    return this.definition;\n  } //////////////////// Actions ////////////////////\n\n\n  checkColumnVisibility() {\n    var visible = false;\n    this.columns.forEach(function (column) {\n      if (column.visible) {\n        visible = true;\n      }\n    });\n\n    if (visible) {\n      this.show();\n      this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n    } else {\n      this.hide();\n    }\n  } //show column\n\n\n  show(silent, responsiveToggle) {\n    if (!this.visible) {\n      this.visible = true;\n      this.element.style.display = \"\";\n\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n\n      this.cells.forEach(function (cell) {\n        cell.show();\n      });\n\n      if (!this.isGroup && this.width === null) {\n        this.reinitializeWidth();\n      }\n\n      this.table.columnManager.verticalAlignHeaders();\n      this.dispatch(\"column-show\", this, responsiveToggle);\n\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\n      }\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  } //hide column\n\n\n  hide(silent, responsiveToggle) {\n    if (this.visible) {\n      this.visible = false;\n      this.element.style.display = \"none\";\n      this.table.columnManager.verticalAlignHeaders();\n\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n\n      this.cells.forEach(function (cell) {\n        cell.hide();\n      });\n      this.dispatch(\"column-hide\", this, responsiveToggle);\n\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n      }\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n\n  matchChildWidths() {\n    var childWidth = 0;\n\n    if (this.contentElement && this.columns.length) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          childWidth += column.getWidth();\n        }\n      });\n      this.contentElement.style.maxWidth = childWidth - 1 + \"px\";\n\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n    }\n  }\n\n  removeChild(child) {\n    var index = this.columns.indexOf(child);\n\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n\n    if (!this.columns.length) {\n      this.delete();\n    }\n  }\n\n  setWidth(width) {\n    this.widthFixed = true;\n    this.setWidthActual(width);\n  }\n\n  setWidthActual(width) {\n    if (isNaN(width)) {\n      width = Math.floor(this.table.element.clientWidth / 100 * parseInt(width));\n    }\n\n    width = Math.max(this.minWidth, width);\n\n    if (this.maxWidth) {\n      width = Math.min(this.maxWidth, width);\n    }\n\n    this.width = width;\n    this.widthStyled = width ? width + \"px\" : \"\";\n    this.element.style.width = this.widthStyled;\n\n    if (!this.isGroup) {\n      this.cells.forEach(function (cell) {\n        cell.setWidth();\n      });\n    }\n\n    if (this.parent.isGroup) {\n      this.parent.matchChildWidths();\n    }\n\n    this.dispatch(\"column-width\", this);\n  }\n\n  checkCellHeights() {\n    var rows = [];\n    this.cells.forEach(function (cell) {\n      if (cell.row.heightInitialized) {\n        if (cell.row.getElement().offsetParent !== null) {\n          rows.push(cell.row);\n          cell.row.clearCellHeight();\n        } else {\n          cell.row.heightInitialized = false;\n        }\n      }\n    });\n    rows.forEach(function (row) {\n      row.calcHeight();\n    });\n    rows.forEach(function (row) {\n      row.setCellHeight();\n    });\n  }\n\n  getWidth() {\n    var width = 0;\n\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          width += column.getWidth();\n        }\n      });\n    } else {\n      width = this.width;\n    }\n\n    return width;\n  }\n\n  getHeight() {\n    return Math.ceil(this.element.getBoundingClientRect().height);\n  }\n\n  setMinWidth(minWidth) {\n    this.minWidth = minWidth;\n    this.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\n    this.element.style.minWidth = this.minWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMinWidth();\n    });\n  }\n\n  setMaxWidth(maxWidth) {\n    this.maxWidth = maxWidth;\n    this.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\n    this.element.style.maxWidth = this.maxWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMaxWidth();\n    });\n  }\n\n  delete() {\n    return new Promise((resolve, reject) => {\n      if (this.isGroup) {\n        this.columns.forEach(function (column) {\n          column.delete();\n        });\n      }\n\n      this.dispatch(\"column-delete\", this);\n      var cellCount = this.cells.length;\n\n      for (let i = 0; i < cellCount; i++) {\n        this.cells[0].delete();\n      }\n\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      this.element = false;\n      this.contentElement = false;\n      this.titleElement = false;\n      this.groupElement = false;\n\n      if (this.parent.isGroup) {\n        this.parent.removeChild(this);\n      }\n\n      this.table.columnManager.deregisterColumn(this);\n      this.table.columnManager.renderer.rerenderColumns(true);\n      resolve();\n    });\n  }\n\n  columnRendered() {\n    if (this.titleFormatterRendered) {\n      this.titleFormatterRendered();\n    }\n\n    this.dispatch(\"column-rendered\", this);\n  } //////////////// Cell Management /////////////////\n  //generate cell for this column\n\n\n  generateCell(row) {\n    var cell = new Cell(this, row);\n    this.cells.push(cell);\n    return cell;\n  }\n\n  nextColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._nextVisibleColumn(index + 1) : false;\n  }\n\n  _nextVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._nextVisibleColumn(index + 1);\n  }\n\n  prevColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._prevVisibleColumn(index - 1) : false;\n  }\n\n  _prevVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._prevVisibleColumn(index - 1);\n  }\n\n  reinitializeWidth(force) {\n    this.widthFixed = false; //set width if present\n\n    if (typeof this.definition.width !== \"undefined\" && !force) {\n      // maxInitialWidth ignored here as width specified\n      this.setWidth(this.definition.width);\n    }\n\n    this.dispatch(\"column-width-fit-before\", this);\n    this.fitToData(force);\n    this.dispatch(\"column-width-fit-after\", this);\n  } //set column width to maximum cell width for non group columns\n\n\n  fitToData(force) {\n    if (this.isGroup) {\n      return;\n    }\n\n    if (!this.widthFixed) {\n      this.element.style.width = \"\";\n      this.cells.forEach(cell => {\n        cell.clearWidth();\n      });\n    }\n\n    var maxWidth = this.element.offsetWidth;\n\n    if (!this.width || !this.widthFixed) {\n      this.cells.forEach(cell => {\n        var width = cell.getWidth();\n\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      });\n\n      if (maxWidth) {\n        var setTo = maxWidth + 1;\n\n        if (this.maxInitialWidth && !force) {\n          setTo = Math.min(setTo, this.maxInitialWidth);\n        }\n\n        this.setWidthActual(setTo);\n      }\n    }\n  }\n\n  updateDefinition(updates) {\n    var definition;\n\n    if (!this.isGroup) {\n      if (!this.parent.isGroup) {\n        definition = Object.assign({}, this.getDefinition());\n        definition = Object.assign(definition, updates);\n        return this.table.columnManager.addColumn(definition, false, this).then(column => {\n          if (definition.field == this.field) {\n            this.field = false; //cleair field name to prevent deletion of duplicate column from arrays\n          }\n\n          return this.delete().then(() => {\n            return column.getComponent();\n          });\n        });\n      } else {\n        console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n        return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n      }\n    } else {\n      console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n      return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n    }\n  }\n\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new ColumnComponent(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nColumn.defaultOptionList = defaultColumnOptions; //public row object\n\nclass RowComponent$1 {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n\n  getElement() {\n    return this._row.getElement();\n  }\n\n  getCells() {\n    var cells = [];\n\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n\n    return cells;\n  }\n\n  getCell(column) {\n    var cell = this._row.getCell(column);\n\n    return cell ? cell.getComponent() : false;\n  }\n\n  getIndex() {\n    return this._row.getData(\"data\")[this._row.table.options.index];\n  }\n\n  getPosition(active) {\n    return this._row.table.rowManager.getRowPosition(this._row, active);\n  }\n\n  delete() {\n    return this._row.delete();\n  }\n\n  scrollTo() {\n    return this._row.table.rowManager.scrollToRow(this._row);\n  }\n\n  move(to, after) {\n    this._row.moveToRow(to, after);\n  }\n\n  update(data) {\n    return this._row.updateData(data);\n  }\n\n  normalizeHeight() {\n    this._row.normalizeHeight(true);\n  }\n\n  _getSelf() {\n    return this._row;\n  }\n\n  reformat() {\n    return this._row.reinitialize();\n  }\n\n  getTable() {\n    return this._row.table;\n  }\n\n  getNextRow() {\n    var row = this._row.nextRow();\n\n    return row ? row.getComponent() : row;\n  }\n\n  getPrevRow() {\n    var row = this._row.prevRow();\n\n    return row ? row.getComponent() : row;\n  }\n\n}\n\nclass Row extends CoreFeature {\n  constructor(data, parent) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"row\";\n    super(parent.table);\n    this.parent = parent;\n    this.data = {};\n    this.type = type; //type of element\n\n    this.element = false;\n    this.modules = {}; //hold module variables;\n\n    this.cells = [];\n    this.height = 0; //hold element height\n\n    this.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\n\n    this.manualHeight = false; //user has manually set row height\n\n    this.outerHeight = 0; //hold elements outer height\n\n    this.initialized = false; //element has been rendered\n\n    this.heightInitialized = false; //element has resized cells to fit\n\n    this.component = null;\n    this.created = false;\n    this.setData(data);\n  }\n\n  create() {\n    if (!this.created) {\n      this.created = true;\n      this.generateElement();\n    }\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.setAttribute(\"role\", \"row\");\n    this.element = el;\n  }\n\n  getElement() {\n    this.create();\n    return this.element;\n  }\n\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  generateElement() {\n    this.createElement();\n    this.dispatch(\"row-init\", this);\n  }\n\n  generateCells() {\n    this.cells = this.table.columnManager.generateCells(this);\n  } //functions to setup on first render\n\n\n  initialize(force) {\n    this.create();\n\n    if (!this.initialized || force) {\n      this.deleteCells();\n\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n      this.dispatch(\"row-layout-before\", this);\n      this.generateCells();\n      this.initialized = true;\n      this.table.columnManager.renderer.renderRowCells(this);\n\n      if (force) {\n        this.normalizeHeight();\n      }\n\n      this.dispatch(\"row-layout\", this);\n\n      if (this.table.options.rowFormatter) {\n        this.table.options.rowFormatter(this.getComponent());\n      }\n\n      this.dispatch(\"row-layout-after\", this);\n    } else {\n      this.table.columnManager.renderer.rerenderRowCells(this);\n    }\n  }\n\n  reinitializeHeight() {\n    this.heightInitialized = false;\n\n    if (this.element && this.element.offsetParent !== null) {\n      this.normalizeHeight(true);\n    }\n  }\n\n  deinitialize() {\n    this.initialized = false;\n  }\n\n  deinitializeHeight() {\n    this.heightInitialized = false;\n  }\n\n  reinitialize(children) {\n    this.initialized = false;\n    this.heightInitialized = false;\n\n    if (!this.manualHeight) {\n      this.height = 0;\n      this.heightStyled = \"\";\n    }\n\n    if (this.element && this.element.offsetParent !== null) {\n      this.initialize(true);\n    }\n\n    this.dispatch(\"row-relayout\", this);\n  } //get heights when doing bulk row style calcs in virtual DOM\n\n\n  calcHeight(force) {\n    var maxHeight = 0,\n        minHeight;\n\n    if (this.table.options.rowHeight) {\n      this.height = this.table.options.rowHeight;\n    } else {\n      minHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\n      this.cells.forEach(function (cell) {\n        var height = cell.getHeight();\n\n        if (height > maxHeight) {\n          maxHeight = height;\n        }\n      });\n\n      if (force) {\n        this.height = Math.max(maxHeight, minHeight);\n      } else {\n        this.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\n      }\n    }\n\n    this.heightStyled = this.height ? this.height + \"px\" : \"\";\n    this.outerHeight = this.element.offsetHeight;\n  } //set of cells\n\n\n  setCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.setHeight();\n    });\n    this.heightInitialized = true;\n  }\n\n  clearCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.clearHeight();\n    });\n  } //normalize the height of elements in the row\n\n\n  normalizeHeight(force) {\n    if (force && !this.table.options.rowHeight) {\n      this.clearCellHeight();\n    }\n\n    this.calcHeight(force);\n    this.setCellHeight();\n  } //set height of rows\n\n\n  setHeight(height, force) {\n    if (this.height != height || force) {\n      this.manualHeight = true;\n      this.height = height;\n      this.heightStyled = height ? height + \"px\" : \"\";\n      this.setCellHeight(); // this.outerHeight = this.element.outerHeight();\n\n      this.outerHeight = this.element.offsetHeight;\n    }\n  } //return rows outer height\n\n\n  getHeight() {\n    return this.outerHeight;\n  } //return rows outer Width\n\n\n  getWidth() {\n    return this.element.offsetWidth;\n  } //////////////// Cell Management /////////////////\n\n\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  } //////////////// Data Management /////////////////\n\n\n  setData(data) {\n    this.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\n    this.dispatch(\"row-data-init-after\", this);\n  } //update the rows data\n\n\n  updateData(updatedData) {\n    var visible = this.element && Helpers.elVisible(this.element),\n        tempData = {},\n        newRowData;\n    return new Promise((resolve, reject) => {\n      if (typeof updatedData === \"string\") {\n        updatedData = JSON.parse(updatedData);\n      }\n\n      this.dispatch(\"row-data-save-before\", this);\n\n      if (this.subscribed(\"row-data-changing\")) {\n        tempData = Object.assign(tempData, this.data);\n        tempData = Object.assign(tempData, updatedData);\n      }\n\n      newRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData); //set data\n\n      for (var attrname in newRowData) {\n        this.data[attrname] = newRowData[attrname];\n      }\n\n      this.dispatch(\"row-data-save-after\", this); //update affected cells only\n\n      for (var attrname in updatedData) {\n        let columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\n        columns.forEach(column => {\n          let cell = this.getCell(column.getField());\n\n          if (cell) {\n            let value = column.getFieldValue(newRowData);\n\n            if (cell.getValue() != value) {\n              cell.setValueProcessData(value);\n\n              if (visible) {\n                cell.cellRendered();\n              }\n            }\n          }\n        });\n      } //Partial reinitialization if visible\n\n\n      if (visible) {\n        this.normalizeHeight(true);\n\n        if (this.table.options.rowFormatter) {\n          this.table.options.rowFormatter(this.getComponent());\n        }\n      } else {\n        this.initialized = false;\n        this.height = 0;\n        this.heightStyled = \"\";\n      }\n\n      this.dispatch(\"row-data-changed\", this, visible, updatedData); //this.reinitialize();\n\n      this.dispatchExternal(\"rowUpdated\", this.getComponent());\n\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n\n      resolve();\n    });\n  }\n\n  getData(transform) {\n    if (transform) {\n      return this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\n    }\n\n    return this.data;\n  }\n\n  getCell(column) {\n    var match = false;\n    column = this.table.columnManager.findColumn(column);\n\n    if (!this.initialized) {\n      this.generateCells();\n    }\n\n    match = this.cells.find(function (cell) {\n      return cell.column === column;\n    });\n    return match;\n  }\n\n  getCellIndex(findCell) {\n    return this.cells.findIndex(function (cell) {\n      return cell === findCell;\n    });\n  }\n\n  findCell(subject) {\n    return this.cells.find(cell => {\n      return cell.element === subject;\n    });\n  }\n\n  getCells() {\n    if (!this.initialized) {\n      this.generateCells();\n    }\n\n    return this.cells;\n  }\n\n  nextRow() {\n    var row = this.table.rowManager.nextDisplayRow(this, true);\n    return row || false;\n  }\n\n  prevRow() {\n    var row = this.table.rowManager.prevDisplayRow(this, true);\n    return row || false;\n  }\n\n  moveToRow(to, before) {\n    var toRow = this.table.rowManager.findRow(to);\n\n    if (toRow) {\n      this.table.rowManager.moveRowActual(this, toRow, !before);\n      this.table.rowManager.refreshActiveData(\"display\", false, true);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", to);\n    }\n  } ///////////////////// Actions  /////////////////////\n\n\n  delete() {\n    this.dispatch(\"row-delete\", this);\n    this.deleteActual();\n    return Promise.resolve();\n  }\n\n  deleteActual(blockRedraw) {\n    var index = this.table.rowManager.getRowIndex(this);\n    this.detatchModules();\n    this.table.rowManager.deleteRow(this, blockRedraw);\n    this.deleteCells();\n    this.initialized = false;\n    this.heightInitialized = false;\n    this.element = false;\n    this.dispatch(\"row-deleted\", this);\n  }\n\n  detatchModules() {\n    this.dispatch(\"row-deleting\", this);\n  }\n\n  deleteCells() {\n    var cellCount = this.cells.length;\n\n    for (let i = 0; i < cellCount; i++) {\n      this.cells[0].delete();\n    }\n  }\n\n  wipe() {\n    this.detatchModules();\n    this.deleteCells();\n\n    if (this.element) {\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n    }\n\n    this.element = false;\n    this.modules = {};\n  }\n\n  getGroup() {\n    return this.modules.group || false;\n  } //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new RowComponent$1(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nvar defaultCalculations = {\n  \"avg\": function (values, data, calcParams) {\n    var output = 0,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2;\n\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return Number(sum) + Number(value);\n      });\n      output = output / values.length;\n      output = precision !== false ? output.toFixed(precision) : output;\n    }\n\n    return parseFloat(output).toString();\n  },\n  \"max\": function (values, data, calcParams) {\n    var output = null,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n\n      if (value > output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"min\": function (values, data, calcParams) {\n    var output = null,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n\n      if (value < output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"sum\": function (values, data, calcParams) {\n    var output = 0,\n        precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n\n    if (values.length) {\n      values.forEach(function (value) {\n        value = Number(value);\n        output += !isNaN(value) ? Number(value) : 0;\n      });\n    }\n\n    return precision !== false ? output.toFixed(precision) : output;\n  },\n  \"concat\": function (values, data, calcParams) {\n    var output = 0;\n\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return String(sum) + String(value);\n      });\n    }\n\n    return output;\n  },\n  \"count\": function (values, data, calcParams) {\n    var output = 0;\n\n    if (values.length) {\n      values.forEach(function (value) {\n        if (value) {\n          output++;\n        }\n      });\n    }\n\n    return output;\n  }\n};\n\nclass ColumnCalcs extends Module {\n  constructor(table) {\n    super(table);\n    this.topCalcs = [];\n    this.botCalcs = [];\n    this.genColumn = false;\n    this.topElement = this.createElement();\n    this.botElement = this.createElement();\n    this.topRow = false;\n    this.botRow = false;\n    this.topInitialized = false;\n    this.botInitialized = false;\n    this.registerTableOption(\"columnCalcs\", true);\n    this.registerColumnOption(\"topCalc\");\n    this.registerColumnOption(\"topCalcParams\");\n    this.registerColumnOption(\"topCalcFormatter\");\n    this.registerColumnOption(\"topCalcFormatterParams\");\n    this.registerColumnOption(\"bottomCalc\");\n    this.registerColumnOption(\"bottomCalcParams\");\n    this.registerColumnOption(\"bottomCalcFormatter\");\n    this.registerColumnOption(\"bottomCalcFormatterParams\");\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-calcs-holder\");\n    return el;\n  }\n\n  initialize() {\n    this.genColumn = new Column({\n      field: \"value\"\n    }, this);\n    this.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n    this.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"data-refreshed\", this.recalcActiveRowsRefresh.bind(this));\n    this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n    this.subscribe(\"rows-visible\", this.visibleRows.bind(this));\n    this.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\n    this.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\n  }\n\n  tableRedraw(force) {\n    this.recalc(this.table.rowManager.activeRows);\n\n    if (force) {\n      this.redraw();\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userRecalc() {\n    this.recalc(this.table.rowManager.activeRows);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  visibleRows(viewable, rows) {\n    if (this.topRow) {\n      rows.unshift(this.topRow);\n    }\n\n    if (this.botRow) {\n      rows.push(this.botRow);\n    }\n\n    return rows;\n  }\n\n  rowsUpdated(row) {\n    if (this.table.options.groupBy) {\n      this.recalcRowGroup(this);\n    } else {\n      this.recalcActiveRows();\n    }\n  }\n\n  recalcActiveRowsRefresh() {\n    if (this.table.options.groupBy && this.table.options.dataTreeStartExpanded && this.table.options.dataTree) {\n      this.recalcAll();\n    } else {\n      this.recalcActiveRows();\n    }\n  }\n\n  recalcActiveRows() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n\n  cellValueChanged(cell) {\n    if (cell.column.definition.topCalc || cell.column.definition.bottomCalc) {\n      if (this.table.options.groupBy) {\n        if (this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\") {\n          this.recalcActiveRows();\n        }\n\n        if (this.table.options.columnCalcs != \"table\") {\n          this.recalcRowGroup(cell.row);\n        }\n      } else {\n        this.recalcActiveRows();\n      }\n    }\n  }\n\n  initializeColumnCheck(column) {\n    if (column.definition.topCalc || column.definition.bottomCalc) {\n      this.initializeColumn(column);\n    }\n  } //initialize column calcs\n\n\n  initializeColumn(column) {\n    var def = column.definition;\n    var config = {\n      topCalcParams: def.topCalcParams || {},\n      botCalcParams: def.bottomCalcParams || {}\n    };\n\n    if (def.topCalc) {\n      switch (typeof def.topCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.topCalc]) {\n            config.topCalc = ColumnCalcs.calculations[def.topCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\n          }\n\n          break;\n\n        case \"function\":\n          config.topCalc = def.topCalc;\n          break;\n      }\n\n      if (config.topCalc) {\n        column.modules.columnCalcs = config;\n        this.topCalcs.push(column);\n\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeTopRow();\n        }\n      }\n    }\n\n    if (def.bottomCalc) {\n      switch (typeof def.bottomCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.bottomCalc]) {\n            config.botCalc = ColumnCalcs.calculations[def.bottomCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\n          }\n\n          break;\n\n        case \"function\":\n          config.botCalc = def.bottomCalc;\n          break;\n      }\n\n      if (config.botCalc) {\n        column.modules.columnCalcs = config;\n        this.botCalcs.push(column);\n\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeBottomRow();\n        }\n      }\n    }\n  } //dummy functions to handle being mock column manager\n\n\n  registerColumnField() {}\n\n  removeCalcs() {\n    var changed = false;\n\n    if (this.topInitialized) {\n      this.topInitialized = false;\n      this.topElement.parentNode.removeChild(this.topElement);\n      changed = true;\n    }\n\n    if (this.botInitialized) {\n      this.botInitialized = false;\n      this.footerRemove(this.botElement);\n      changed = true;\n    }\n\n    if (changed) {\n      this.table.rowManager.adjustTableSize();\n    }\n  }\n\n  initializeTopRow() {\n    if (!this.topInitialized) {\n      this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n      this.topInitialized = true;\n    }\n  }\n\n  initializeBottomRow() {\n    if (!this.botInitialized) {\n      this.footerPrepend(this.botElement);\n      this.botInitialized = true;\n    }\n  }\n\n  scrollHorizontal(left) {\n    if (this.botInitialized && this.botRow) {\n      this.botRow.getElement().style.marginLeft = -left + \"px\";\n    }\n  }\n\n  recalc(rows) {\n    var row;\n\n    if (this.topInitialized || this.botInitialized) {\n      this.rowsToData(rows);\n\n      if (this.topInitialized) {\n        if (this.topRow) {\n          this.topRow.deleteCells();\n        }\n\n        row = this.generateRow(\"top\", this.rowsToData(rows));\n        this.topRow = row;\n\n        while (this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\n\n        this.topElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n\n      if (this.botInitialized) {\n        if (this.botRow) {\n          this.botRow.deleteCells();\n        }\n\n        row = this.generateRow(\"bottom\", this.rowsToData(rows));\n        this.botRow = row;\n\n        while (this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\n\n        this.botElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n\n      this.table.rowManager.adjustTableSize(); //set resizable handles\n\n      if (this.table.modExists(\"frozenColumns\")) {\n        this.table.modules.frozenColumns.layout();\n      }\n    }\n  }\n\n  recalcRowGroup(row) {\n    this.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\n  }\n\n  recalcAll() {\n    if (this.topCalcs.length || this.botCalcs.length) {\n      if (this.table.options.columnCalcs !== \"group\") {\n        this.recalcActiveRows();\n      }\n\n      if (this.table.options.groupBy && this.table.options.columnCalcs !== \"table\") {\n        var groups = this.table.modules.groupRows.getChildGroups();\n        groups.forEach(group => {\n          this.recalcGroup(group);\n        });\n      }\n    }\n  }\n\n  recalcGroup(group) {\n    var data, rowData;\n\n    if (group) {\n      if (group.calcs) {\n        if (group.calcs.bottom) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"bottom\", data);\n          group.calcs.bottom.updateData(rowData);\n          group.calcs.bottom.reinitialize();\n        }\n\n        if (group.calcs.top) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"top\", data);\n          group.calcs.top.updateData(rowData);\n          group.calcs.top.reinitialize();\n        }\n      }\n    }\n  } //generate top stats row\n\n\n  generateTopRow(rows) {\n    return this.generateRow(\"top\", this.rowsToData(rows));\n  } //generate bottom stats row\n\n\n  generateBottomRow(rows) {\n    return this.generateRow(\"bottom\", this.rowsToData(rows));\n  }\n\n  rowsToData(rows) {\n    var data = [];\n    rows.forEach(row => {\n      data.push(row.getData());\n\n      if (this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs) {\n        if (row.modules.dataTree && row.modules.dataTree.open) {\n          var children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\n          data = data.concat(children);\n        }\n      }\n    });\n    return data;\n  } //generate stats row\n\n\n  generateRow(pos, data) {\n    var rowData = this.generateRowData(pos, data),\n        row;\n\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.disable();\n    }\n\n    row = new Row(rowData, this, \"calc\");\n\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.enable();\n    }\n\n    row.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\n    row.component = false;\n\n    row.getComponent = () => {\n      if (!row.component) {\n        row.component = new CalcComponent(row);\n      }\n\n      return row.component;\n    };\n\n    row.generateCells = () => {\n      var cells = [];\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        //set field name of mock column\n        this.genColumn.setField(column.getField());\n        this.genColumn.hozAlign = column.hozAlign;\n\n        if (column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")) {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\n            params: column.definition[pos + \"CalcFormatterParams\"] || {}\n          };\n        } else {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(\"plaintext\"),\n            params: {}\n          };\n        } //ensure css class defintion is replicated to calculation cell\n\n\n        this.genColumn.definition.cssClass = column.definition.cssClass; //generate cell and assign to correct column\n\n        var cell = new Cell(this.genColumn, row);\n        cell.getElement();\n        cell.column = column;\n        cell.setWidth();\n        column.cells.push(cell);\n        cells.push(cell);\n\n        if (!column.visible) {\n          cell.hide();\n        }\n      });\n      row.cells = cells;\n    };\n\n    return row;\n  } //generate stats row\n\n\n  generateRowData(pos, data) {\n    var rowData = {},\n        calcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\n        type = pos == \"top\" ? \"topCalc\" : \"botCalc\",\n        params,\n        paramKey;\n    calcs.forEach(function (column) {\n      var values = [];\n\n      if (column.modules.columnCalcs && column.modules.columnCalcs[type]) {\n        data.forEach(function (item) {\n          values.push(column.getFieldValue(item));\n        });\n        paramKey = type + \"Params\";\n        params = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\n        column.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\n      }\n    });\n    return rowData;\n  }\n\n  hasTopCalcs() {\n    return !!this.topCalcs.length;\n  }\n\n  hasBottomCalcs() {\n    return !!this.botCalcs.length;\n  } //handle table redraw\n\n\n  redraw() {\n    if (this.topRow) {\n      this.topRow.normalizeHeight(true);\n    }\n\n    if (this.botRow) {\n      this.botRow.normalizeHeight(true);\n    }\n  } //return the calculated\n\n\n  getResults() {\n    var results = {},\n        groups;\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      groups = this.table.modules.groupRows.getGroups(true);\n      groups.forEach(group => {\n        results[group.getKey()] = this.getGroupResults(group);\n      });\n    } else {\n      results = {\n        top: this.topRow ? this.topRow.getData() : {},\n        bottom: this.botRow ? this.botRow.getData() : {}\n      };\n    }\n\n    return results;\n  } //get results from a group\n\n\n  getGroupResults(group) {\n    var groupObj = group._getSelf(),\n        subGroups = group.getSubGroups(),\n        subGroupResults = {},\n        results = {};\n\n    subGroups.forEach(subgroup => {\n      subGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\n    });\n    results = {\n      top: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\n      bottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\n      groups: subGroupResults\n    };\n    return results;\n  }\n\n}\n\nColumnCalcs.moduleName = \"columnCalcs\"; //load defaults\n\nColumnCalcs.calculations = defaultCalculations;\n\nclass DataTree extends Module {\n  constructor(table) {\n    super(table);\n    this.indent = 10;\n    this.field = \"\";\n    this.collapseEl = null;\n    this.expandEl = null;\n    this.branchEl = null;\n    this.elementField = false;\n\n    this.startOpen = function () {};\n\n    this.displayIndex = 0;\n    this.registerTableOption(\"dataTree\", false); //enable data tree\n\n    this.registerTableOption(\"dataTreeFilter\", true); //filter child rows\n\n    this.registerTableOption(\"dataTreeSort\", true); //sort child rows\n\n    this.registerTableOption(\"dataTreeElementColumn\", false);\n    this.registerTableOption(\"dataTreeBranchElement\", true); //show data tree branch element\n\n    this.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\n\n    this.registerTableOption(\"dataTreeChildField\", \"_children\"); //data tre column field to look for child rows\n\n    this.registerTableOption(\"dataTreeCollapseElement\", false); //data tree row collapse element\n\n    this.registerTableOption(\"dataTreeExpandElement\", false); //data tree row expand element\n\n    this.registerTableOption(\"dataTreeStartExpanded\", false);\n    this.registerTableOption(\"dataTreeChildColumnCalcs\", false); //include visible data tree rows in column calculations\n\n    this.registerTableOption(\"dataTreeSelectPropagate\", false); //seleccting a parent row selects its children\n    //register component functions\n\n    this.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\n    this.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isTreeExpanded\", this.isRowExpanded.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.dataTree) {\n      var dummyEl = null,\n          options = this.table.options;\n      this.field = options.dataTreeChildField;\n      this.indent = options.dataTreeChildIndent;\n\n      if (options.dataTreeBranchElement) {\n        if (options.dataTreeBranchElement === true) {\n          this.branchEl = document.createElement(\"div\");\n          this.branchEl.classList.add(\"tabulator-data-tree-branch\");\n        } else {\n          if (typeof options.dataTreeBranchElement === \"string\") {\n            dummyEl = document.createElement(\"div\");\n            dummyEl.innerHTML = options.dataTreeBranchElement;\n            this.branchEl = dummyEl.firstChild;\n          } else {\n            this.branchEl = options.dataTreeBranchElement;\n          }\n        }\n      }\n\n      if (options.dataTreeCollapseElement) {\n        if (typeof options.dataTreeCollapseElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeCollapseElement;\n          this.collapseEl = dummyEl.firstChild;\n        } else {\n          this.collapseEl = options.dataTreeCollapseElement;\n        }\n      } else {\n        this.collapseEl = document.createElement(\"div\");\n        this.collapseEl.classList.add(\"tabulator-data-tree-control\");\n        this.collapseEl.tabIndex = 0;\n        this.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\n      }\n\n      if (options.dataTreeExpandElement) {\n        if (typeof options.dataTreeExpandElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeExpandElement;\n          this.expandEl = dummyEl.firstChild;\n        } else {\n          this.expandEl = options.dataTreeExpandElement;\n        }\n      } else {\n        this.expandEl = document.createElement(\"div\");\n        this.expandEl.classList.add(\"tabulator-data-tree-control\");\n        this.expandEl.tabIndex = 0;\n        this.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\n      }\n\n      switch (typeof options.dataTreeStartExpanded) {\n        case \"boolean\":\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded;\n          };\n\n          break;\n\n        case \"function\":\n          this.startOpen = options.dataTreeStartExpanded;\n          break;\n\n        default:\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded[index];\n          };\n\n          break;\n      }\n\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n      this.subscribe(\"row-deleted\", this.rowDelete.bind(this), 0);\n      this.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\n      this.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\n      this.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\n      this.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\n      this.subscribe(\"table-built\", this.initializeElementField.bind(this));\n      this.registerDisplayHandler(this.getRows.bind(this), 30);\n    }\n  }\n\n  initializeElementField() {\n    var firstCol = this.table.columnManager.getFirstVisibleColumn();\n    this.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\n  }\n\n  getRowChildren(row) {\n    return this.getTreeChildren(row, true);\n  }\n\n  columnMoving() {\n    var rows = [];\n    this.table.rowManager.rows.forEach(row => {\n      rows = rows.concat(this.getTreeChildren(row, false, true));\n    });\n    return rows;\n  }\n\n  rowDataChanged(row, visible, updatedData) {\n    if (this.redrawNeeded(updatedData)) {\n      this.initializeRow(row);\n\n      if (visible) {\n        this.layoutRow(row);\n        this.refreshData(true);\n      }\n    }\n  }\n\n  cellValueChanged(cell) {\n    var field = cell.column.getField();\n\n    if (field === this.elementField) {\n      this.layoutRow(cell.row);\n    }\n  }\n\n  initializeRow(row) {\n    var childArray = row.getData()[this.field];\n    var isArray = Array.isArray(childArray);\n    var children = isArray || !isArray && typeof childArray === \"object\" && childArray !== null;\n\n    if (!children && row.modules.dataTree && row.modules.dataTree.branchEl) {\n      row.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\n    }\n\n    if (!children && row.modules.dataTree && row.modules.dataTree.controlEl) {\n      row.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\n    }\n\n    row.modules.dataTree = {\n      index: row.modules.dataTree ? row.modules.dataTree.index : 0,\n      open: children ? row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0) : false,\n      controlEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\n      branchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\n      parent: row.modules.dataTree ? row.modules.dataTree.parent : false,\n      children: children\n    };\n  }\n\n  reinitializeRowChildren(row) {\n    var children = this.getTreeChildren(row, false, true);\n    children.forEach(function (child) {\n      child.reinitialize(true);\n    });\n  }\n\n  layoutRow(row) {\n    var cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\n        el = cell.getElement(),\n        config = row.modules.dataTree;\n\n    if (config.branchEl) {\n      if (config.branchEl.parentNode) {\n        config.branchEl.parentNode.removeChild(config.branchEl);\n      }\n\n      config.branchEl = false;\n    }\n\n    if (config.controlEl) {\n      if (config.controlEl.parentNode) {\n        config.controlEl.parentNode.removeChild(config.controlEl);\n      }\n\n      config.controlEl = false;\n    }\n\n    this.generateControlElement(row, el);\n    row.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\n\n    if (config.index) {\n      if (this.branchEl) {\n        config.branchEl = this.branchEl.cloneNode(true);\n        el.insertBefore(config.branchEl, el.firstChild);\n\n        if (this.table.rtl) {\n          config.branchEl.style.marginRight = (config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1) + config.index * this.indent + \"px\";\n        } else {\n          config.branchEl.style.marginLeft = (config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1) + config.index * this.indent + \"px\";\n        }\n      } else {\n        if (this.table.rtl) {\n          el.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + config.index * this.indent + \"px\";\n        } else {\n          el.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + config.index * this.indent + \"px\";\n        }\n      }\n    }\n  }\n\n  generateControlElement(row, el) {\n    var config = row.modules.dataTree,\n        el = el || row.getCells()[0].getElement(),\n        oldControl = config.controlEl;\n\n    if (config.children !== false) {\n      if (config.open) {\n        config.controlEl = this.collapseEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.collapseRow(row);\n        });\n      } else {\n        config.controlEl = this.expandEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.expandRow(row);\n        });\n      }\n\n      config.controlEl.addEventListener(\"mousedown\", e => {\n        e.stopPropagation();\n      });\n\n      if (oldControl && oldControl.parentNode === el) {\n        oldControl.parentNode.replaceChild(config.controlEl, oldControl);\n      } else {\n        el.insertBefore(config.controlEl, el.firstChild);\n      }\n    }\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  getRows(rows) {\n    var output = [];\n    rows.forEach((row, i) => {\n      var config, children;\n      output.push(row);\n\n      if (row instanceof Row) {\n        row.create();\n        config = row.modules.dataTree.children;\n\n        if (!config.index && config.children !== false) {\n          children = this.getChildren(row);\n          children.forEach(child => {\n            child.create();\n            output.push(child);\n          });\n        }\n      }\n    });\n    return output;\n  }\n\n  getChildren(row, allChildren) {\n    var config = row.modules.dataTree,\n        children = [],\n        output = [];\n\n    if (config.children !== false && (config.open || allChildren)) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n\n      if (this.table.modExists(\"sort\") && this.table.options.dataTreeSort) {\n        this.table.modules.sort.sort(children);\n      }\n\n      children.forEach(child => {\n        output.push(child);\n        var subChildren = this.getChildren(child);\n        subChildren.forEach(sub => {\n          output.push(sub);\n        });\n      });\n    }\n\n    return output;\n  }\n\n  generateChildren(row) {\n    var children = [];\n    var childArray = row.getData()[this.field];\n\n    if (!Array.isArray(childArray)) {\n      childArray = [childArray];\n    }\n\n    childArray.forEach(childData => {\n      var childRow = new Row(childData || {}, this.table.rowManager);\n      childRow.create();\n      childRow.modules.dataTree.index = row.modules.dataTree.index + 1;\n      childRow.modules.dataTree.parent = row;\n\n      if (childRow.modules.dataTree.children) {\n        childRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\n      }\n\n      children.push(childRow);\n    });\n    return children;\n  }\n\n  expandRow(row, silent) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      config.open = true;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n\n  collapseRow(row) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      config.open = false;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n\n  toggleRow(row) {\n    var config = row.modules.dataTree;\n\n    if (config.children !== false) {\n      if (config.open) {\n        this.collapseRow(row);\n      } else {\n        this.expandRow(row);\n      }\n    }\n  }\n\n  isRowExpanded(row) {\n    return row.modules.dataTree.open;\n  }\n\n  getTreeParent(row) {\n    return row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\n  }\n\n  getFilteredTreeChildren(row) {\n    var config = row.modules.dataTree,\n        output = [],\n        children;\n\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n\n      children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(childRow);\n        }\n      });\n    }\n\n    return output;\n  }\n\n  rowDelete(row) {\n    var parent = row.modules.dataTree.parent,\n        childIndex;\n\n    if (parent) {\n      childIndex = this.findChildIndex(row, parent);\n\n      if (childIndex !== false) {\n        parent.data[this.field].splice(childIndex, 1);\n      }\n\n      if (!parent.data[this.field].length) {\n        delete parent.data[this.field];\n      }\n\n      this.initializeRow(parent);\n      this.layoutRow(parent);\n    }\n\n    this.refreshData(true);\n  }\n\n  addTreeChildRow(row, data, top, index) {\n    var childIndex = false;\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (!Array.isArray(row.data[this.field])) {\n      row.data[this.field] = [];\n      row.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\n    }\n\n    if (typeof index !== \"undefined\") {\n      childIndex = this.findChildIndex(index, row);\n\n      if (childIndex !== false) {\n        row.data[this.field].splice(top ? childIndex : childIndex + 1, 0, data);\n      }\n    }\n\n    if (childIndex === false) {\n      if (top) {\n        row.data[this.field].unshift(data);\n      } else {\n        row.data[this.field].push(data);\n      }\n    }\n\n    this.initializeRow(row);\n    this.layoutRow(row);\n    this.refreshData(true);\n  }\n\n  findChildIndex(subject, parent) {\n    var match = false;\n\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        match = subject.data;\n      } else if (subject instanceof RowComponent) {\n        //subject is public row component\n        match = subject._getSelf().data;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        if (parent.modules.dataTree) {\n          match = parent.modules.dataTree.children.find(childRow => {\n            return childRow instanceof Row ? childRow.element === subject : false;\n          });\n\n          if (match) {\n            match = match.data;\n          }\n        }\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      match = false;\n    } else {\n      //subject should be treated as the index of the row\n      match = parent.data[this.field].find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n    }\n\n    if (match) {\n      if (Array.isArray(parent.data[this.field])) {\n        match = parent.data[this.field].indexOf(match);\n      }\n\n      if (match == -1) {\n        match = false;\n      }\n    } //catch all for any other type of input\n\n\n    return match;\n  }\n\n  getTreeChildren(row, component, recurse) {\n    var config = row.modules.dataTree,\n        output = [];\n\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n\n      config.children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(component ? childRow.getComponent() : childRow);\n\n          if (recurse) {\n            output = output.concat(this.getTreeChildren(childRow, component, recurse));\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n\n  getChildField() {\n    return this.field;\n  }\n\n  redrawNeeded(data) {\n    return (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\n  }\n\n}\n\nDataTree.moduleName = \"dataTree\";\n\nfunction csv(list, options, setFileContents) {\n  var delimiter = options && options.delimiter ? options.delimiter : \",\",\n      fileContents = [],\n      headers = [];\n  list.forEach(row => {\n    var item = [];\n\n    switch (row.type) {\n      case \"group\":\n        console.warn(\"Download Warning - CSV downloader cannot process row groups\");\n        break;\n\n      case \"calc\":\n        console.warn(\"Download Warning - CSV downloader cannot process column calculations\");\n        break;\n\n      case \"header\":\n        row.columns.forEach((col, i) => {\n          if (col && col.depth === 1) {\n            headers[i] = typeof col.value == \"undefined\" || col.value === null ? \"\" : '\"' + String(col.value).split('\"').join('\"\"') + '\"';\n          }\n        });\n        break;\n\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            switch (typeof col.value) {\n              case \"object\":\n                col.value = JSON.stringify(col.value);\n                break;\n\n              case \"undefined\":\n              case \"null\":\n                col.value = \"\";\n                break;\n            }\n\n            item.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\n          }\n        });\n        fileContents.push(item.join(delimiter));\n        break;\n    }\n  });\n\n  if (headers.length) {\n    fileContents.unshift(headers.join(delimiter));\n  }\n\n  fileContents = fileContents.join(\"\\n\");\n\n  if (options.bom) {\n    fileContents = \"\\ufeff\" + fileContents;\n  }\n\n  setFileContents(fileContents, \"text/csv\");\n}\n\nfunction json(list, options, setFileContents) {\n  var fileContents = [];\n  list.forEach(row => {\n    var item = {};\n\n    switch (row.type) {\n      case \"header\":\n        break;\n\n      case \"group\":\n        console.warn(\"Download Warning - JSON downloader cannot process row groups\");\n        break;\n\n      case \"calc\":\n        console.warn(\"Download Warning - JSON downloader cannot process column calculations\");\n        break;\n\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            item[col.component.getTitleDownload() || col.component.getField()] = col.value;\n          }\n        });\n        fileContents.push(item);\n        break;\n    }\n  });\n  fileContents = JSON.stringify(fileContents, null, '\\t');\n  setFileContents(fileContents, \"application/json\");\n}\n\nfunction pdf(list, options, setFileContents) {\n  var header = [],\n      body = [],\n      autoTableParams = {},\n      rowGroupStyles = options.rowGroupStyles || {\n    fontStyle: \"bold\",\n    fontSize: 12,\n    cellPadding: 6,\n    fillColor: 220\n  },\n      rowCalcStyles = options.rowCalcStyles || {\n    fontStyle: \"bold\",\n    fontSize: 10,\n    cellPadding: 4,\n    fillColor: 232\n  },\n      jsPDFParams = options.jsPDF || {},\n      title = options && options.title ? options.title : \"\";\n\n  if (!jsPDFParams.orientation) {\n    jsPDFParams.orientation = options.orientation || \"landscape\";\n  }\n\n  if (!jsPDFParams.unit) {\n    jsPDFParams.unit = \"pt\";\n  } //parse row list\n\n\n  list.forEach(row => {\n    switch (row.type) {\n      case \"header\":\n        header.push(parseRow(row));\n        break;\n\n      case \"group\":\n        body.push(parseRow(row, rowGroupStyles));\n        break;\n\n      case \"calc\":\n        body.push(parseRow(row, rowCalcStyles));\n        break;\n\n      case \"row\":\n        body.push(parseRow(row));\n        break;\n    }\n  });\n\n  function parseRow(row, styles) {\n    var rowData = [];\n    row.columns.forEach(col => {\n      var cell;\n\n      if (col) {\n        switch (typeof col.value) {\n          case \"object\":\n            col.value = JSON.stringify(col.value);\n            break;\n\n          case \"undefined\":\n          case \"null\":\n            col.value = \"\";\n            break;\n        }\n\n        cell = {\n          content: col.value,\n          colSpan: col.width,\n          rowSpan: col.height\n        };\n\n        if (styles) {\n          cell.styles = styles;\n        }\n\n        rowData.push(cell);\n      }\n    });\n    return rowData;\n  } //configure PDF\n\n\n  var doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\n\n  if (options && options.autoTable) {\n    if (typeof options.autoTable === \"function\") {\n      autoTableParams = options.autoTable(doc) || {};\n    } else {\n      autoTableParams = options.autoTable;\n    }\n  }\n\n  if (title) {\n    autoTableParams.didDrawPage = function (data) {\n      doc.text(title, 40, 30);\n    };\n  }\n\n  autoTableParams.head = header;\n  autoTableParams.body = body;\n  doc.autoTable(autoTableParams);\n\n  if (options && options.documentProcessing) {\n    options.documentProcessing(doc);\n  }\n\n  setFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\n}\n\nfunction xlsx(list, options, setFileContents) {\n  var self = this,\n      sheetName = options.sheetName || \"Sheet1\",\n      workbook = XLSX.utils.book_new(),\n      tableFeatures = new CoreFeature(this),\n      output;\n  workbook.SheetNames = [];\n  workbook.Sheets = {};\n\n  function generateSheet() {\n    var rows = [],\n        merges = [],\n        worksheet = {},\n        range = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0,\n        r: list.length\n      }\n    }; //parse row list\n\n    list.forEach((row, i) => {\n      var rowData = [];\n      row.columns.forEach(function (col, j) {\n        if (col) {\n          rowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\n\n          if (col.width > 1 || col.height > -1) {\n            if (col.height > 1 || col.width > 1) {\n              merges.push({\n                s: {\n                  r: i,\n                  c: j\n                },\n                e: {\n                  r: i + col.height - 1,\n                  c: j + col.width - 1\n                }\n              });\n            }\n          }\n        } else {\n          rowData.push(\"\");\n        }\n      });\n      rows.push(rowData);\n    }); //convert rows to worksheet\n\n    XLSX.utils.sheet_add_aoa(worksheet, rows);\n    worksheet['!ref'] = XLSX.utils.encode_range(range);\n\n    if (merges.length) {\n      worksheet[\"!merges\"] = merges;\n    }\n\n    return worksheet;\n  }\n\n  if (options.sheetOnly) {\n    setFileContents(generateSheet());\n    return;\n  }\n\n  if (options.sheets) {\n    for (var sheet in options.sheets) {\n      if (options.sheets[sheet] === true) {\n        workbook.SheetNames.push(sheet);\n        workbook.Sheets[sheet] = generateSheet();\n      } else {\n        workbook.SheetNames.push(sheet);\n        tableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\", {\n          type: \"xlsx\",\n          options: {\n            sheetOnly: true\n          },\n          active: self.active,\n          intercept: function (data) {\n            workbook.Sheets[sheet] = data;\n          }\n        });\n      }\n    }\n  } else {\n    workbook.SheetNames.push(sheetName);\n    workbook.Sheets[sheetName] = generateSheet();\n  }\n\n  if (options.documentProcessing) {\n    workbook = options.documentProcessing(workbook);\n  } //convert workbook to binary array\n\n\n  function s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\n    return buf;\n  }\n\n  output = XLSX.write(workbook, {\n    bookType: 'xlsx',\n    bookSST: true,\n    type: 'binary'\n  });\n  setFileContents(s2ab(output), \"application/octet-stream\");\n}\n\nfunction html(list, options, setFileContents) {\n  if (this.modExists(\"export\", true)) {\n    setFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\n  }\n}\n\nfunction jsonLines(list, options, setFileContents) {\n  const fileContents = [];\n  list.forEach(row => {\n    const item = {};\n\n    switch (row.type) {\n      case \"header\":\n        break;\n\n      case \"group\":\n        console.warn(\"Download Warning - JSON downloader cannot process row groups\");\n        break;\n\n      case \"calc\":\n        console.warn(\"Download Warning - JSON downloader cannot process column calculations\");\n        break;\n\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            item[col.component.getTitleDownload() || col.component.getField()] = col.value;\n          }\n        });\n        fileContents.push(JSON.stringify(item));\n        break;\n    }\n  });\n  setFileContents(fileContents.join(\"\\n\"), \"application/x-ndjson\");\n}\n\nvar defaultDownloaders = {\n  csv: csv,\n  json: json,\n  jsonLines: jsonLines,\n  pdf: pdf,\n  xlsx: xlsx,\n  html: html\n};\n\nclass Download extends Module {\n  constructor(table) {\n    super(table);\n    this.registerTableOption(\"downloadReady\", function (data, blob) {\n      return blob;\n    }); //function to manipulate download data\n\n    this.registerTableOption(\"downloadConfig\", {}); //download config\n\n    this.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\n\n    this.registerColumnOption(\"download\");\n    this.registerColumnOption(\"titleDownload\");\n  }\n\n  initialize() {\n    this.registerTableFunction(\"download\", this.download.bind(this));\n    this.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  downloadToTab(type, filename, options, active) {\n    this.download(type, filename, options, active, true);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n  //trigger file download\n\n\n  download(type, filename, options, range, interceptCallback) {\n    var downloadFunc = false;\n\n    function buildLink(data, mime) {\n      if (interceptCallback) {\n        if (interceptCallback === true) {\n          this.triggerDownload(data, mime, type, filename, true);\n        } else {\n          interceptCallback(data);\n        }\n      } else {\n        this.triggerDownload(data, mime, type, filename);\n      }\n    }\n\n    if (typeof type == \"function\") {\n      downloadFunc = type;\n    } else {\n      if (Download.downloaders[type]) {\n        downloadFunc = Download.downloaders[type];\n      } else {\n        console.warn(\"Download Error - No such download type found: \", type);\n      }\n    }\n\n    if (downloadFunc) {\n      var list = this.generateExportList(range);\n      downloadFunc.call(this.table, list, options || {}, buildLink.bind(this));\n    }\n  }\n\n  generateExportList(range) {\n    var list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\"); //assign group header formatter\n\n    var groupHeader = this.table.options.groupHeaderDownload;\n\n    if (groupHeader && !Array.isArray(groupHeader)) {\n      groupHeader = [groupHeader];\n    }\n\n    list.forEach(row => {\n      var group;\n\n      if (row.type === \"group\") {\n        group = row.columns[0];\n\n        if (groupHeader && groupHeader[row.indent]) {\n          group.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n        }\n      }\n    });\n    return list;\n  }\n\n  triggerDownload(data, mime, type, filename, newTab) {\n    var element = document.createElement('a'),\n        blob = new Blob([data], {\n      type: mime\n    }),\n        filename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\n    blob = this.table.options.downloadReady(data, blob);\n\n    if (blob) {\n      if (newTab) {\n        window.open(window.URL.createObjectURL(blob));\n      } else {\n        if (navigator.msSaveOrOpenBlob) {\n          navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n          element.setAttribute('href', window.URL.createObjectURL(blob)); //set file title\n\n          element.setAttribute('download', filename); //trigger download\n\n          element.style.display = 'none';\n          document.body.appendChild(element);\n          element.click(); //remove temporary link element\n\n          document.body.removeChild(element);\n        }\n      }\n\n      this.dispatchExternal(\"downloadComplete\");\n    }\n  }\n\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"intercept\":\n        this.download(data.type, \"\", data.options, data.active, data.intercept);\n        break;\n    }\n  }\n\n}\n\nDownload.moduleName = \"download\"; //load defaults\n\nDownload.downloaders = defaultDownloaders;\n\nfunction maskInput(el, options) {\n  var mask = options.mask,\n      maskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\n      maskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\n      maskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\";\n\n  function fillSymbols(index) {\n    var symbol = mask[index];\n\n    if (typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber) {\n      el.value = el.value + \"\" + symbol;\n      fillSymbols(index + 1);\n    }\n  }\n\n  el.addEventListener(\"keydown\", e => {\n    var index = el.value.length,\n        char = e.key;\n\n    if (e.keyCode > 46) {\n      if (index >= mask.length) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else {\n        switch (mask[index]) {\n          case maskLetter:\n            if (char.toUpperCase() == char.toLowerCase()) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n            break;\n\n          case maskNumber:\n            if (isNaN(char)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n            break;\n\n          case maskWildcard:\n            break;\n\n          default:\n            if (char !== mask[index]) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n\n        }\n      }\n    }\n\n    return;\n  });\n  el.addEventListener(\"keyup\", e => {\n    if (e.keyCode > 46) {\n      if (options.maskAutoFill) {\n        fillSymbols(el.value.length);\n      }\n    }\n  });\n\n  if (!el.placeholder) {\n    el.placeholder = mask;\n  }\n\n  if (options.maskAutoFill) {\n    fillSymbols(el.value.length);\n  }\n} //input element\n\n\nfunction input(cell, onRendered, success, cancel, editorParams) {\n  //create and style input\n  var cellValue = cell.getValue(),\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n\n    if (editorParams.selectContents) {\n      input.select();\n    }\n  });\n\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on blur or change\n\n\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      // case 9:\n      case 13:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //resizable text area element\n\n\nfunction textarea(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"hybrid\",\n      value = String(cellValue !== null && typeof cellValue !== \"undefined\" ? cellValue : \"\"),\n      count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\n      input = document.createElement(\"textarea\"),\n      scrollHeight = 0; //create and style input\n\n  input.style.display = \"block\";\n  input.style.padding = \"2px\";\n  input.style.height = \"100%\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.whiteSpace = \"pre-wrap\";\n  input.style.resize = \"none\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = value;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n    input.scrollHeight;\n    input.style.height = input.scrollHeight + \"px\";\n    cell.getRow().normalizeHeight();\n\n    if (editorParams.selectContents) {\n      input.select();\n    }\n  });\n\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n\n      setTimeout(function () {\n        cell.getRow().normalizeHeight();\n      }, 300);\n    } else {\n      cancel();\n    }\n  } //submit new value on blur or change\n\n\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n  input.addEventListener(\"keyup\", function () {\n    input.style.height = \"\";\n    var heightNow = input.scrollHeight;\n    input.style.height = heightNow + \"px\";\n\n    if (heightNow != scrollHeight) {\n      scrollHeight = heightNow;\n      cell.getRow().normalizeHeight();\n    }\n  });\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 27:\n        cancel();\n        break;\n\n      case 38:\n        //up arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart !== input.value.length) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //input element with type of number\n\n\nfunction number(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      vertNav = editorParams.verticalNavigation || \"editor\",\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"number\");\n\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  } //create and style input\n\n\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = cellValue;\n\n  var blurFunc = function (e) {\n    onChange();\n  };\n\n  onRendered(function () {\n    //submit new value on blur\n    input.removeEventListener(\"blur\", blurFunc);\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\"; //submit new value on blur\n\n    input.addEventListener(\"blur\", blurFunc);\n\n    if (editorParams.selectContents) {\n      input.select();\n    }\n  });\n\n  function onChange() {\n    var value = input.value;\n\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n\n    if (value !== cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on enter\n\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n\n      case 38: //up arrow\n\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\") {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n\n        break;\n\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n\n  return input;\n} //input element with type of number\n\n\nfunction range(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n      input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"range\");\n\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  } //create and style input\n\n\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = cellValue;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n\n  function onChange() {\n    var value = input.value;\n\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n\n    if (value != cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  } //submit new value on blur\n\n\n  input.addEventListener(\"blur\", function (e) {\n    onChange();\n  }); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n\n      case 27:\n        cancel();\n        break;\n    }\n  });\n  return input;\n}\n\nclass Edit {\n  constructor(editor, cell, onRendered, success, cancel, editorParams) {\n    this.edit = editor;\n    this.table = editor.table;\n    this.cell = cell;\n    this.params = this._initializeParams(editorParams);\n    this.data = [];\n    this.displayItems = [];\n    this.currentItems = [];\n    this.focusedItem = null;\n    this.input = this._createInputElement();\n    this.listEl = this._createListElement();\n    this.initialValues = null;\n    this.isFilter = !cell._getSelf;\n    this.filterTimeout = null;\n    this.filtered = false;\n    this.typing = false;\n    this.values = [];\n    this.popup = null;\n    this.listIteration = 0;\n    this.blurable = true;\n    this.actions = {\n      success: success,\n      cancel: cancel\n    };\n\n    this._deprecationCheck();\n\n    this._initializeValue();\n\n    onRendered(this._onRendered.bind(this));\n  }\n\n  _deprecationCheck() {\n    if (this.params.listItemFormatter) {\n      console.warn(\"The listItemFormatter editor param has been deprecated, please see the latest editor documentation for updated options\");\n    }\n\n    if (this.params.sortValuesList) {\n      console.warn(\"The sortValuesList editor param has been deprecated, please see the latest editor documentation for updated options\");\n    }\n\n    if (this.params.searchFunc) {\n      console.warn(\"The searchFunc editor param has been deprecated, please see the latest editor documentation for updated options\");\n    }\n\n    if (this.params.searchingPlaceholder) {\n      console.warn(\"The searchingPlaceholder editor param has been deprecated, please see the latest editor documentation for updated options\");\n    }\n  }\n\n  _initializeValue() {\n    var initialValue = this.cell.getValue();\n\n    if (typeof initialValue === \"undefined\" && typeof this.params.defaultValue !== \"undefined\") {\n      initialValue = this.params.defaultValue;\n    }\n\n    this.initialValues = this.params.multiselect ? initialValue : [initialValue];\n\n    if (this.isFilter) {\n      this.input.value = this.initialValues.join(\",\");\n      this.headerFilterInitialListGen();\n    }\n  }\n\n  _onRendered() {\n    var cellEl = this.cell.getElement();\n\n    function clickStop(e) {\n      e.stopPropagation();\n    }\n\n    this.input.style.height = \"100%\";\n    this.input.focus({\n      preventScroll: true\n    });\n    cellEl.addEventListener(\"click\", clickStop);\n    setTimeout(() => {\n      cellEl.removeEventListener(\"click\", clickStop);\n    }, 1000);\n  }\n\n  _createListElement() {\n    var listEl = document.createElement(\"div\");\n    listEl.classList.add(\"tabulator-edit-list\");\n    listEl.addEventListener(\"mousedown\", this._preventBlur.bind(this));\n    listEl.addEventListener(\"keydown\", this._inputKeyDown.bind(this));\n    return listEl;\n  }\n\n  _setListWidth() {\n    var element = this.isFilter ? this.input : this.cell.getElement();\n    this.listEl.style.minWidth = element.offsetWidth + \"px\";\n\n    if (this.params.maxWidth) {\n      if (this.params.maxWidth === true) {\n        this.listEl.style.maxWidth = element.offsetWidth + \"px\";\n      } else if (typeof this.params.maxWidth === \"number\") {\n        this.listEl.style.maxWidth = this.params.maxWidth + \"px\";\n      } else {\n        this.listEl.style.maxWidth = this.params.maxWidth;\n      }\n    }\n  }\n\n  _createInputElement() {\n    var attribs = this.params.elementAttributes;\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", this.params.clearable ? \"search\" : \"text\");\n    input.style.padding = \"4px\";\n    input.style.width = \"100%\";\n    input.style.boxSizing = \"border-box\";\n\n    if (!this.params.autocomplete) {\n      input.style.cursor = \"default\";\n      input.style.caretColor = \"transparent\"; // input.readOnly = (this.edit.currentCell != false);\n    }\n\n    if (attribs && typeof attribs == \"object\") {\n      for (let key in attribs) {\n        if (key.charAt(0) == \"+\") {\n          key = key.slice(1);\n          input.setAttribute(key, input.getAttribute(key) + attribs[\"+\" + key]);\n        } else {\n          input.setAttribute(key, attribs[key]);\n        }\n      }\n    }\n\n    if (this.params.mask) {\n      maskInput(input, this.params);\n    }\n\n    this._bindInputEvents(input);\n\n    return input;\n  }\n\n  _initializeParams(params) {\n    var valueKeys = [\"values\", \"valuesURL\", \"valuesLookup\"],\n        valueCheck;\n    params = Object.assign({}, params);\n    params.verticalNavigation = params.verticalNavigation || \"editor\";\n    params.placeholderLoading = typeof params.placeholderLoading === \"undefined\" ? \"Searching ...\" : params.placeholderLoading;\n    params.placeholderEmpty = typeof params.placeholderEmpty === \"undefined\" ? \"No Results Found\" : params.placeholderEmpty;\n    params.filterDelay = typeof params.filterDelay === \"undefined\" ? 300 : params.filterDelay;\n    params.emptyValue = Object.keys(params).includes(\"emptyValue\") ? params.emptyValue : \"\";\n    valueCheck = Object.keys(params).filter(key => valueKeys.includes(key)).length;\n\n    if (!valueCheck) {\n      console.warn(\"list editor config error - either the values, valuesURL, or valuesLookup option must be set\");\n    } else if (valueCheck > 1) {\n      console.warn(\"list editor config error - only one of the values, valuesURL, or valuesLookup options can be set on the same editor\");\n    }\n\n    if (params.autocomplete) {\n      if (params.multiselect) {\n        params.multiselect = false;\n        console.warn(\"list editor config error - multiselect option is not available when autocomplete is enabled\");\n      }\n    } else {\n      if (params.freetext) {\n        params.freetext = false;\n        console.warn(\"list editor config error - freetext option is only available when autocomplete is enabled\");\n      }\n\n      if (params.filterFunc) {\n        params.filterFunc = false;\n        console.warn(\"list editor config error - filterFunc option is only available when autocomplete is enabled\");\n      }\n\n      if (params.filterRemote) {\n        params.filterRemote = false;\n        console.warn(\"list editor config error - filterRemote option is only available when autocomplete is enabled\");\n      }\n\n      if (params.mask) {\n        params.mask = false;\n        console.warn(\"list editor config error - mask option is only available when autocomplete is enabled\");\n      }\n\n      if (params.allowEmpty) {\n        params.allowEmpty = false;\n        console.warn(\"list editor config error - allowEmpty option is only available when autocomplete is enabled\");\n      }\n\n      if (params.listOnEmpty) {\n        params.listOnEmpty = false;\n        console.warn(\"list editor config error - listOnEmpty option is only available when autocomplete is enabled\");\n      }\n    }\n\n    if (params.filterRemote && !(typeof params.valuesLookup === \"function\" || typeof params.valuesURL)) {\n      params.filterRemote = false;\n      console.warn(\"list editor config error - filterRemote option should only be used when values list is populated from a remote source\");\n    }\n\n    return params;\n  } //////////////////////////////////////\n  ////////// Event Handling ////////////\n  //////////////////////////////////////\n\n\n  _bindInputEvents(input) {\n    input.addEventListener(\"focus\", this._inputFocus.bind(this));\n    input.addEventListener(\"click\", this._inputClick.bind(this));\n    input.addEventListener(\"blur\", this._inputBlur.bind(this));\n    input.addEventListener(\"keydown\", this._inputKeyDown.bind(this));\n    input.addEventListener(\"search\", this._inputSearch.bind(this));\n\n    if (this.params.autocomplete) {\n      input.addEventListener(\"keyup\", this._inputKeyUp.bind(this));\n    }\n  }\n\n  _inputFocus(e) {\n    this.rebuildOptionsList();\n  }\n\n  _filter() {\n    if (this.params.filterRemote) {\n      clearTimeout(this.filterTimeout);\n      this.filterTimeout = setTimeout(() => {\n        this.rebuildOptionsList();\n      }, this.params.filterDelay);\n    } else {\n      this._filterList();\n    }\n  }\n\n  _inputClick(e) {\n    e.stopPropagation();\n  }\n\n  _inputBlur(e) {\n    if (this.blurable && this.popup) {\n      this.popup.hide();\n    }\n  }\n\n  _inputSearch() {\n    this._clearChoices();\n  }\n\n  _inputKeyDown(e) {\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        this._keyUp(e);\n\n        break;\n\n      case 40:\n        //down arrow\n        this._keyDown(e);\n\n        break;\n\n      case 37: //left arrow\n\n      case 39:\n        //right arrow\n        this._keySide(e);\n\n        break;\n\n      case 13:\n        //enter\n        this._keyEnter();\n\n        break;\n\n      case 27:\n        //escape\n        this._keyEsc();\n\n        break;\n\n      case 36: //home\n\n      case 35:\n        //end\n        this._keyHomeEnd(e);\n\n        break;\n\n      case 9:\n        //tab\n        break;\n\n      default:\n        this._keySelectLetter(e);\n\n    }\n  }\n\n  _inputKeyUp(e) {\n    switch (e.keyCode) {\n      case 38: //up arrow\n\n      case 37: //left arrow\n\n      case 39: //up arrow\n\n      case 40: //right arrow\n\n      case 13: //enter\n\n      case 27:\n        //escape\n        break;\n\n      default:\n        this._keyAutoCompLetter(e);\n\n    }\n  }\n\n  _preventBlur() {\n    this.blurable = false;\n    setTimeout(function () {\n      this.blurable = true;\n    }, 10);\n  } //////////////////////////////////////\n  //////// Keyboard Navigation /////////\n  //////////////////////////////////////\n\n\n  _keyUp(e) {\n    var index = this.displayItems.indexOf(this.focusedItem);\n\n    if (this.params.verticalNavigation == \"editor\" || this.params.verticalNavigation == \"hybrid\" && index) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (index > 0) {\n        this._focusItem(this.displayItems[index - 1]);\n      }\n    }\n  }\n\n  _keyDown(e) {\n    var index = this.displayItems.indexOf(this.focusedItem);\n\n    if (this.params.verticalNavigation == \"editor\" || this.params.verticalNavigation == \"hybrid\" && index < this.displayItems.length - 1) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (index < this.displayItems.length - 1) {\n        if (index == -1) {\n          this._focusItem(this.displayItems[0]);\n        } else {\n          this._focusItem(this.displayItems[index + 1]);\n        }\n      }\n    }\n  }\n\n  _keySide(e) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  _keyEnter(e) {\n    if (this.focusedItem) {\n      this._chooseItem(this.focusedItem);\n    } else {\n      this._cancel();\n    }\n  }\n\n  _keyEsc(e) {\n    this._cancel();\n  }\n\n  _keyHomeEnd(e) {\n    if (this.params.autocomplete) {\n      //prevent table navigation while using input element\n      e.stopImmediatePropagation();\n    }\n  }\n\n  _keySelectLetter(e) {\n    if (!this.params.autocomplete) {\n      // if(this.edit.currentCell === false){\n      e.preventDefault(); // }\n\n      if (e.keyCode >= 38 && e.keyCode <= 90) {\n        this._scrollToValue(e.keyCode);\n      }\n    }\n  }\n\n  _keyAutoCompLetter(e) {\n    this._filter();\n\n    this.typing = true;\n  }\n\n  _scrollToValue(char) {\n    clearTimeout(this.filterTimeout);\n    var character = String.fromCharCode(char).toLowerCase();\n    this.filterTerm += character.toLowerCase();\n    var match = this.displayItems.find(item => {\n      return typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(this.filterTerm);\n    });\n\n    if (match) {\n      this._focusItem(match);\n    }\n\n    this.filterTimeout = setTimeout(() => {\n      this.filterTerm = \"\";\n    }, 800);\n  }\n\n  _focusItem(item) {\n    if (this.focusedItem && this.focusedItem.element) {\n      this.focusedItem.element.classList.remove(\"focused\");\n    }\n\n    this.focusedItem = item;\n\n    if (item && item.element) {\n      item.element.classList.add(\"focused\");\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  } //////////////////////////////////////\n  /////// Data List Generation /////////\n  //////////////////////////////////////\n\n\n  headerFilterInitialListGen() {\n    this._generateOptions(true);\n  }\n\n  rebuildOptionsList() {\n    this._generateOptions().then(this._sortOptions.bind(this)).then(this._buildList.bind(this)).then(this._showList.bind(this)).catch(e => {\n      if (!Number.isInteger(e)) {\n        console.error(\"List generation error\", e);\n      }\n    });\n  }\n\n  _filterList() {\n    this._buildList(this._filterOptions());\n\n    this._showList();\n  }\n\n  _generateOptions(silent) {\n    var values = [];\n    var itteration = ++this.listIteration;\n    this.filtered = false;\n\n    if (this.params.values) {\n      values = this.params.values;\n    } else if (this.params.valuesURL) {\n      values = this._ajaxRequest(this.params.valuesURL, this.input.value);\n    } else {\n      if (typeof this.params.valuesLookup === \"function\") {\n        values = this.params.valuesLookup(cell, this.input.value);\n      } else if (this.params.valuesLookup) {\n        values = this._uniqueColumnValues(this.params.valuesLookupField);\n      }\n    }\n\n    if (values instanceof Promise) {\n      if (!silent) {\n        this._addPlaceholder(this.params.placeholderLoading);\n      }\n\n      return values.then().then(responseValues => {\n        if (this.listIteration === itteration) {\n          return this._parseList(responseValues);\n        } else {\n          return Promise.reject(itteration);\n        }\n      });\n    } else {\n      return Promise.resolve(this._parseList(values));\n    }\n  }\n\n  _addPlaceholder(contents) {\n    var placeholder = document.createElement(\"div\");\n\n    if (typeof contents === \"function\") {\n      contents = contents(cell.getComponent(), this.listEl);\n    }\n\n    if (contents) {\n      this._clearList();\n\n      if (contents instanceof HTMLElement) {\n        placeholder = contents;\n      } else {\n        placeholder.classList.add(\"tabulator-edit-list-placeholder\");\n        placeholder.innerHTML = contents;\n      }\n\n      this.listEl.appendChild(placeholder);\n\n      this._showList();\n    }\n  }\n\n  _ajaxRequest(url, term) {\n    var params = this.params.filterRemote ? {\n      term: term\n    } : {};\n    url = urlBuilder(url, {}, params);\n    return fetch(url).then(response => {\n      if (response.ok) {\n        return response.json().catch(error => {\n          console.warn(\"List Ajax Load Error - Invalid JSON returned\", error);\n          return Promise.reject(error);\n        });\n      } else {\n        console.error(\"List Ajax Load Error - Connection Error: \" + response.status, response.statusText);\n        return Promise.reject(response);\n      }\n    }).catch(error => {\n      console.error(\"List Ajax Load Error - Connection Error: \", error);\n      return Promise.reject(error);\n    });\n  }\n\n  _uniqueColumnValues(field) {\n    var output = {},\n        data = this.table.getData(this.params.valuesLookup),\n        column;\n\n    if (field) {\n      column = this.table.columnManager.getColumnByField(field);\n    } else {\n      column = this.cell.getColumn()._getSelf();\n    }\n\n    if (column) {\n      data.forEach(row => {\n        var val = column.getFieldValue(row);\n\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n    } else {\n      console.warn(\"unable to find matching column to create select lookup list:\", field);\n      output = [];\n    }\n\n    return Object.keys(output);\n  }\n\n  _parseList(inputValues) {\n    var data = [];\n\n    if (!Array.isArray(inputValues)) {\n      inputValues = Object.entries(inputValues).map(_ref => {\n        let [key, value] = _ref;\n        return {\n          label: value,\n          value: key\n        };\n      });\n    }\n\n    inputValues.forEach(value => {\n      if (typeof value !== \"object\") {\n        value = {\n          label: value,\n          value: value\n        };\n      }\n\n      this._parseListItem(value, data, 0);\n    });\n    this.data = data;\n    return data;\n  }\n\n  _parseListItem(option, data, level) {\n    var item = {};\n\n    if (option.options) {\n      item = this._parseListGroup(option, level + 1);\n    } else {\n      item = {\n        label: option.label,\n        value: option.value,\n        itemParams: option.itemParams,\n        elementAttributes: option.elementAttributes,\n        element: false,\n        selected: false,\n        visible: true,\n        level: level,\n        original: option\n      };\n\n      if (this.initialValues && this.initialValues.indexOf(option.value) > -1) {\n        this._chooseItem(item, true);\n      }\n    }\n\n    data.push(item);\n  }\n\n  _parseListGroup(option, level) {\n    var item = {\n      label: option.label,\n      group: true,\n      itemParams: option.itemParams,\n      elementAttributes: option.elementAttributes,\n      element: false,\n      visible: true,\n      level: level,\n      options: [],\n      original: option\n    };\n    option.options.forEach(child => {\n      this._parseListItem(child, item.options, level);\n    });\n    return item;\n  }\n\n  _sortOptions(options) {\n    var sorter;\n\n    if (this.params.sort) {\n      sorter = typeof this.params.sort === \"function\" ? this.params.sort : this._defaultSortFunction.bind(this);\n\n      this._sortGroup(sorter, options);\n    }\n\n    return options;\n  }\n\n  _sortGroup(sorter, options) {\n    options.sort((a, b) => {\n      return sorter(a.label, b.label, a.value, b.value, a.original, b.original);\n    });\n    options.forEach(option => {\n      if (option.group) {\n        this._sortGroup(sorter, option.options);\n      }\n    });\n  }\n\n  _defaultSortFunction(as, bs) {\n    var a,\n        b,\n        a1,\n        b1,\n        i = 0,\n        L,\n        rx = /(\\d+)|(\\D+)/g,\n        rd = /\\d/;\n    var emptyAlign = 0;\n\n    if (this.params.sort === \"desc\") {\n      [as, bs] = [bs, as];\n    } //handle empty values\n\n\n    if (!as && as !== 0) {\n      emptyAlign = !bs && bs !== 0 ? 0 : -1;\n    } else if (!bs && bs !== 0) {\n      emptyAlign = 1;\n    } else {\n      if (isFinite(as) && isFinite(bs)) return as - bs;\n      a = String(as).toLowerCase();\n      b = String(bs).toLowerCase();\n      if (a === b) return 0;\n      if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n      a = a.match(rx);\n      b = b.match(rx);\n      L = a.length > b.length ? b.length : a.length;\n\n      while (i < L) {\n        a1 = a[i];\n        b1 = b[i++];\n\n        if (a1 !== b1) {\n          if (isFinite(a1) && isFinite(b1)) {\n            if (a1.charAt(0) === \"0\") a1 = \".\" + a1;\n            if (b1.charAt(0) === \"0\") b1 = \".\" + b1;\n            return a1 - b1;\n          } else return a1 > b1 ? 1 : -1;\n        }\n      }\n\n      return a.length > b.length;\n    }\n\n    return emptyAlign;\n  }\n\n  _filterOptions() {\n    var filterFunc = this.params.filterFunc || this._defaultFilterFunc;\n    var term = this.input.value;\n\n    if (term) {\n      this.filtered = true;\n      this.data.forEach(item => {\n        this._filterItem(filterFunc, term, item);\n      });\n    } else {\n      this.filtered = false;\n    }\n\n    return this.data;\n  }\n\n  _filterItem(func, term, item) {\n    var matches = false;\n\n    if (!item.group) {\n      item.visible = func(term, item.label, item.value, item.original);\n    } else {\n      item.options.forEach(option => {\n        if (this._filterItem(func, term, option)) {\n          matches = true;\n        }\n      });\n      item.visible = matches;\n    }\n\n    return item.visible;\n  }\n\n  _defaultFilterFunc(term, label, value, item) {\n    var term = String(term).toLowerCase();\n\n    if (label !== null || typeof label !== \"undefined\") {\n      if (String(label).toLowerCase().indexOf(term) > -1 || String(value).toLowerCase(term).indexOf() > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  } //////////////////////////////////////\n  /////////// Display List /////////////\n  //////////////////////////////////////\n\n\n  _clearList() {\n    while (this.listEl.firstChild) this.listEl.removeChild(this.listEl.firstChild);\n\n    this.displayItems = [];\n  }\n\n  _buildList(data) {\n    this._clearList();\n\n    data.forEach(option => {\n      this._buildItem(option);\n    });\n\n    if (!this.displayItems.length) {\n      this._addPlaceholder(this.params.placeholderEmpty);\n    }\n  }\n\n  _buildItem(item) {\n    var el = item.element,\n        contents;\n\n    if (!this.filtered || item.visible) {\n      if (!el) {\n        el = document.createElement(\"div\");\n        el.tabIndex = 0;\n        contents = this.params.itemFormatter ? this.params.itemFormatter(item.label, item.value, item.original, el) : item.label;\n\n        if (contents instanceof HTMLElement) {\n          el.appendChild(contents);\n        } else {\n          el.innerHTML = contents;\n        }\n\n        if (item.group) {\n          el.classList.add(\"tabulator-edit-list-group\");\n        } else {\n          el.classList.add(\"tabulator-edit-list-item\");\n        }\n\n        el.classList.add(\"tabulator-edit-list-group-level-\" + item.level);\n\n        if (item.elementAttributes && typeof item.elementAttributes == \"object\") {\n          for (let key in item.elementAttributes) {\n            if (key.charAt(0) == \"+\") {\n              key = key.slice(1);\n              el.setAttribute(key, this.input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\n            } else {\n              el.setAttribute(key, item.elementAttributes[key]);\n            }\n          }\n        }\n\n        if (item.group) {\n          el.addEventListener(\"click\", this._groupClick.bind(this, item));\n        } else {\n          el.addEventListener(\"click\", this._itemClick.bind(this, item));\n        }\n\n        el.addEventListener(\"mousedown\", this._preventBlur.bind(this));\n        item.element = el;\n      }\n\n      this._styleItem(item);\n\n      this.listEl.appendChild(el);\n\n      if (item.group) {\n        item.options.forEach(option => {\n          this._buildItem(option);\n        });\n      } else {\n        this.displayItems.push(item);\n      }\n    }\n  }\n\n  _showList() {\n    var startVis = this.popup && this.popup.isVisible();\n\n    if (this.input.parentNode) {\n      if (this.params.autocomplete && this.input.value === \"\" && !this.params.listOnEmpty) {\n        if (this.popup) {\n          this.popup.hide(true);\n          return;\n        }\n      }\n\n      this._setListWidth();\n\n      if (!this.popup) {\n        this.popup = this.edit.popup(this.listEl);\n      }\n\n      this.popup.show(this.cell.getElement(), \"bottom\");\n\n      if (!startVis) {\n        this.popup.hideOnBlur(this._resolveValue.bind(this, true));\n      }\n    }\n  }\n\n  _styleItem(item) {\n    if (item && item.element) {\n      if (item.selected) {\n        item.element.classList.add(\"active\");\n      } else {\n        item.element.classList.remove(\"active\");\n      }\n    }\n  } //////////////////////////////////////\n  ///////// User Interaction ///////////\n  //////////////////////////////////////\n\n\n  _itemClick(item, e) {\n    e.stopPropagation();\n\n    this._chooseItem(item);\n  }\n\n  _groupClick(item, e) {\n    e.stopPropagation();\n  } //////////////////////////////////////\n  ////// Current Item Management ///////\n  //////////////////////////////////////\n\n\n  _cancel() {\n    this.popup.hide(true);\n    this.actions.cancel();\n  }\n\n  _clearChoices() {\n    this.typing = true;\n    this.currentItems.forEach(item => {\n      item.selected = false;\n\n      this._styleItem(item);\n    });\n    this.currentItems = [];\n    this.focusedItem = null;\n  }\n\n  _chooseItem(item, silent) {\n    var index;\n    this.typing = false;\n\n    if (this.params.multiselect) {\n      index = this.currentItems.indexOf(item);\n\n      if (index > -1) {\n        this.currentItems.splice(index, 1);\n        item.selected = false;\n      } else {\n        this.currentItems.push(item);\n        item.selected = true;\n      }\n\n      this.input.value = this.currentItems.map(item => item.label).join(\",\");\n\n      this._styleItem(item);\n    } else {\n      this.currentItems = [item];\n      item.selected = true;\n      this.input.value = item.label;\n\n      this._styleItem(item);\n\n      if (!silent) {\n        this._resolveValue();\n      }\n    }\n\n    this._focusItem(item);\n  }\n\n  _resolveValue(blur) {\n    var output, initialValue;\n    this.popup.hide(true);\n\n    if (this.params.multiselect) {\n      output = this.currentItems.map(item => item.value);\n    } else {\n      if (blur && this.params.autocomplete && this.typing) {\n        if (this.params.freetext || this.params.allowEmpty && this.input.value === \"\") {\n          output = this.input.value;\n        } else {\n          this.actions.cancel();\n          return;\n        }\n      } else {\n        if (this.currentItems[0]) {\n          output = this.currentItems[0].value;\n        } else {\n          initialValue = this.initialValues[0];\n\n          if (initialValue === null || typeof initialValue === \"undefined\" || initialValue === \"\") {\n            output = initialValue;\n          } else {\n            output = this.params.emptyValue;\n          }\n        }\n      }\n    }\n\n    if (output === \"\") {\n      output = this.params.emptyValue;\n    }\n\n    this.actions.success(output);\n\n    if (this.isFilter) {\n      this.initialValues = output;\n    }\n  }\n\n}\n\nfunction select(cell, onRendered, success, cancel, editorParams) {\n  console.warn(\"The select editor has been deprecated, please use the new list editor\");\n  var list = new Edit(this, cell, onRendered, success, cancel, editorParams);\n  return list.input;\n}\n\nfunction list(cell, onRendered, success, cancel, editorParams) {\n  var list = new Edit(this, cell, onRendered, success, cancel, editorParams);\n  return list.input;\n}\n\nfunction autocomplete(cell, onRendered, success, cancel, editorParams) {\n  console.warn(\"The autocomplete editor has been deprecated, please use the new list editor with the 'autocomplete' editorParam\");\n  editorParams.autocomplete = true;\n  var list = new Edit(this, cell, onRendered, success, cancel, editorParams);\n  return list.input;\n} //star rating\n\n\nfunction star(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n      element = cell.getElement(),\n      value = cell.getValue(),\n      maxStars = element.getElementsByTagName(\"svg\").length || 5,\n      size = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\n      stars = [],\n      starsHolder = document.createElement(\"div\"),\n      star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"); //change star type\n\n  function starChange(val) {\n    stars.forEach(function (star, i) {\n      if (i < val) {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-active\");\n        } else {\n          star.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\n        }\n\n        star.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      } else {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-inactive\");\n        } else {\n          star.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\n        }\n\n        star.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      }\n    });\n  } //build stars\n\n\n  function buildStar(i) {\n    var starHolder = document.createElement(\"span\");\n    var nextStar = star.cloneNode(true);\n    stars.push(nextStar);\n    starHolder.addEventListener(\"mouseenter\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      starChange(i);\n    });\n    starHolder.addEventListener(\"mousemove\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    starHolder.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      success(i);\n      element.blur();\n    });\n    starHolder.appendChild(nextStar);\n    starsHolder.appendChild(starHolder);\n  } //handle keyboard navigation value change\n\n\n  function changeValue(val) {\n    value = val;\n    starChange(val);\n  } //style cell\n\n\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\"; //style holding element\n\n  starsHolder.style.verticalAlign = \"middle\";\n  starsHolder.style.display = \"inline-block\";\n  starsHolder.style.padding = \"4px\"; //style star\n\n  star.setAttribute(\"width\", size);\n  star.setAttribute(\"height\", size);\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        starsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        starsHolder.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  } //create correct number of stars\n\n\n  for (var i = 1; i <= maxStars; i++) {\n    buildStar(i);\n  } //ensure value does not exceed number of stars\n\n\n  value = Math.min(parseInt(value), maxStars); // set initial styling of stars\n\n  starChange(value);\n  starsHolder.addEventListener(\"mousemove\", function (e) {\n    starChange(0);\n  });\n  starsHolder.addEventListener(\"click\", function (e) {\n    success(0);\n  });\n  element.addEventListener(\"blur\", function (e) {\n    cancel();\n  }); //allow key based navigation\n\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        changeValue(value + 1);\n        break;\n\n      case 37:\n        //left arrow\n        changeValue(value - 1);\n        break;\n\n      case 13:\n        //enter\n        success(value);\n        break;\n\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  return starsHolder;\n} //draggable progress bar\n\n\nfunction progress(cell, onRendered, success, cancel, editorParams) {\n  var element = cell.getElement(),\n      max = typeof editorParams.max === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\") || 100 : editorParams.max,\n      min = typeof editorParams.min === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\") || 0 : editorParams.min,\n      percent = (max - min) / 100,\n      value = cell.getValue() || 0,\n      handle = document.createElement(\"div\"),\n      bar = document.createElement(\"div\"),\n      mouseDrag,\n      mouseDragWidth; //set new value\n\n  function updateValue() {\n    var style = window.getComputedStyle(element, null);\n    var calcVal = percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\"))) / 100)) + min;\n    success(calcVal);\n    element.setAttribute(\"aria-valuenow\", calcVal);\n    element.setAttribute(\"aria-label\", value);\n  } //style handle\n\n\n  handle.style.position = \"absolute\";\n  handle.style.right = \"0\";\n  handle.style.top = \"0\";\n  handle.style.bottom = \"0\";\n  handle.style.width = \"5px\";\n  handle.classList.add(\"tabulator-progress-handle\"); //style bar\n\n  bar.style.display = \"inline-block\";\n  bar.style.position = \"relative\"; // bar.style.top = \"8px\";\n  // bar.style.bottom = \"8px\";\n  // bar.style.left = \"4px\";\n  // bar.style.marginRight = \"4px\";\n\n  bar.style.height = \"100%\";\n  bar.style.backgroundColor = \"#488CE9\";\n  bar.style.maxWidth = \"100%\";\n  bar.style.minWidth = \"0%\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        bar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        bar.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  } //style cell\n\n\n  element.style.padding = \"4px 4px\"; //make sure value is in range\n\n  value = Math.min(parseFloat(value), max);\n  value = Math.max(parseFloat(value), min); //workout percentage\n\n  value = Math.round((value - min) / percent); // bar.style.right = value + \"%\";\n\n  bar.style.width = value + \"%\";\n  element.setAttribute(\"aria-valuemin\", min);\n  element.setAttribute(\"aria-valuemax\", max);\n  bar.appendChild(handle);\n  handle.addEventListener(\"mousedown\", function (e) {\n    mouseDrag = e.screenX;\n    mouseDragWidth = bar.offsetWidth;\n  });\n  handle.addEventListener(\"mouseover\", function () {\n    handle.style.cursor = \"ew-resize\";\n  });\n  element.addEventListener(\"mousemove\", function (e) {\n    if (mouseDrag) {\n      bar.style.width = mouseDragWidth + e.screenX - mouseDrag + \"px\";\n    }\n  });\n  element.addEventListener(\"mouseup\", function (e) {\n    if (mouseDrag) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      mouseDrag = false;\n      mouseDragWidth = false;\n      updateValue();\n    }\n  }); //allow key based navigation\n\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth + element.clientWidth / 100 + \"px\";\n        break;\n\n      case 37:\n        //left arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth - element.clientWidth / 100 + \"px\";\n        break;\n\n      case 9: //tab\n\n      case 13:\n        //enter\n        updateValue();\n        break;\n\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  element.addEventListener(\"blur\", function () {\n    cancel();\n  });\n  return bar;\n} //checkbox\n\n\nfunction tickCross(cell, onRendered, success, cancel, editorParams) {\n  var value = cell.getValue(),\n      input = document.createElement(\"input\"),\n      tristate = editorParams.tristate,\n      indetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\n      indetermState = false,\n      trueValueSet = Object.keys(editorParams).includes(\"trueValue\"),\n      falseValueSet = Object.keys(editorParams).includes(\"falseValue\");\n  input.setAttribute(\"type\", \"checkbox\");\n  input.style.marginTop = \"5px\";\n  input.style.boxSizing = \"border-box\";\n\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  input.value = value;\n\n  if (tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")) {\n    indetermState = true;\n    input.indeterminate = true;\n  }\n\n  if (this.table.browser != \"firefox\") {\n    //prevent blur issue on mac firefox\n    onRendered(function () {\n      input.focus({\n        preventScroll: true\n      });\n    });\n  }\n\n  input.checked = trueValueSet ? value === editorParams.trueValue : value === true || value === \"true\" || value === \"True\" || value === 1;\n  onRendered(function () {\n    input.focus();\n  });\n\n  function setValue(blur) {\n    var checkedValue = input.checked;\n\n    if (trueValueSet && checkedValue) {\n      checkedValue = editorParams.trueValue;\n    } else if (falseValueSet && !checkedValue) {\n      checkedValue = editorParams.falseValue;\n    } else {\n      checkedValue = checkedValue;\n    }\n\n    if (tristate) {\n      if (!blur) {\n        if (input.checked && !indetermState) {\n          input.checked = false;\n          input.indeterminate = true;\n          indetermState = true;\n          return indetermValue;\n        } else {\n          indetermState = false;\n          return checkedValue;\n        }\n      } else {\n        if (indetermState) {\n          return indetermValue;\n        } else {\n          return checkedValue;\n        }\n      }\n    } else {\n      return checkedValue;\n    }\n  } //submit new value on blur\n\n\n  input.addEventListener(\"change\", function (e) {\n    success(setValue());\n  });\n  input.addEventListener(\"blur\", function (e) {\n    success(setValue(true));\n  }); //submit new value on enter\n\n  input.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode == 13) {\n      success(setValue());\n    }\n\n    if (e.keyCode == 27) {\n      cancel();\n    }\n  });\n  return input;\n}\n\nvar defaultEditors = {\n  input: input,\n  textarea: textarea,\n  number: number,\n  range: range,\n  select: select,\n  list: list,\n  autocomplete: autocomplete,\n  star: star,\n  progress: progress,\n  tickCross: tickCross\n};\n\nclass Edit$1 extends Module {\n  constructor(table) {\n    super(table);\n    this.currentCell = false; //hold currently editing cell\n\n    this.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\n\n    this.recursionBlock = false; //prevent focus recursion\n\n    this.invalidEdit = false;\n    this.editedCells = [];\n    this.editors = Edit$1.editors;\n    this.registerColumnOption(\"editable\");\n    this.registerColumnOption(\"editor\");\n    this.registerColumnOption(\"editorParams\");\n    this.registerColumnOption(\"cellEditing\");\n    this.registerColumnOption(\"cellEdited\");\n    this.registerColumnOption(\"cellEditCancelled\");\n    this.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\n    this.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\n    this.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\n    this.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\n    this.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\n    this.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\n    this.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\n    this.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"cell-init\", this.bindEditor.bind(this));\n    this.subscribe(\"cell-delete\", this.clearEdited.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\n    this.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\n    this.subscribe(\"data-refreshing\", this.cancelEdit.bind(this));\n    this.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this, undefined));\n    this.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\n    this.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this, undefined));\n    this.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this, undefined));\n    this.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this, undefined));\n    this.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this, undefined));\n  } ///////////////////////////////////\n  ////// Keybinding Functions ///////\n  ///////////////////////////////////\n\n\n  keybindingNavigateNext(e) {\n    var cell = this.currentCell,\n        newRow = this.options(\"tabEndNewRow\");\n\n    if (cell) {\n      if (!this.navigateNext(cell, e)) {\n        if (newRow) {\n          cell.getElement().firstChild.blur();\n\n          if (newRow === true) {\n            newRow = this.table.addRow({});\n          } else {\n            if (typeof newRow == \"function\") {\n              newRow = this.table.addRow(newRow(cell.row.getComponent()));\n            } else {\n              newRow = this.table.addRow(Object.assign({}, newRow));\n            }\n          }\n\n          newRow.then(() => {\n            setTimeout(() => {\n              cell.getComponent().navigateNext();\n            });\n          });\n        }\n      }\n    }\n  } ///////////////////////////////////\n  ///////// Cell Functions //////////\n  ///////////////////////////////////\n\n\n  cellisEdited(cell) {\n    return !!cell.modules.edit && cell.modules.edit.edited;\n  }\n\n  cellCancelEdit(cell) {\n    if (cell === this.currentCell) {\n      this.table.modules.edit.cancelEdit();\n    } else {\n      console.warn(\"Cancel Editor Error - This cell is not currently being edited \");\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  clearCellEdited(cells) {\n    if (!cells) {\n      cells = this.table.modules.edit.getEditedCells();\n    }\n\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n\n    cells.forEach(cell => {\n      this.table.modules.edit.clearEdited(cell._getSelf());\n    });\n  }\n\n  navigatePrev() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var nextCell, prevRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      nextCell = this.navigateLeft();\n\n      if (nextCell) {\n        return true;\n      } else {\n        prevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n\n        if (prevRow) {\n          nextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\n\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  navigateNext() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var nextCell, nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      nextCell = this.navigateRight();\n\n      if (nextCell) {\n        return true;\n      } else {\n        nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n\n        if (nextRow) {\n          nextCell = this.findNextEditableCell(nextRow, -1);\n\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  navigateLeft() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var index, nextCell;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextCell = this.findPrevEditableCell(cell.row, index);\n\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateRight() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var index, nextCell;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextCell = this.findNextEditableCell(cell.row, index);\n\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateUp() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var index, nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateDown() {\n    let cell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentCell;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    var index, nextRow;\n\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  findNextEditableCell(row, index) {\n    var nextCell = false;\n\n    if (index < row.cells.length - 1) {\n      for (var i = index + 1; i < row.cells.length; i++) {\n        let cell = row.cells[i];\n\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          let allowEdit = true;\n\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n\n          if (allowEdit) {\n            nextCell = cell;\n            break;\n          }\n        }\n      }\n    }\n\n    return nextCell;\n  }\n\n  findPrevEditableCell(row, index) {\n    var prevCell = false;\n\n    if (index > 0) {\n      for (var i = index - 1; i >= 0; i--) {\n        let cell = row.cells[i],\n            allowEdit = true;\n\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n\n          if (allowEdit) {\n            prevCell = cell;\n            break;\n          }\n        }\n      }\n    }\n\n    return prevCell;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.editor !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n\n  columnDeleteCheck(column) {\n    if (this.currentCell && this.currentCell.column === column) {\n      this.cancelEdit();\n    }\n  }\n\n  rowDeleteCheck(row) {\n    if (this.currentCell && this.currentCell.row === row) {\n      this.cancelEdit();\n    }\n  } //initialize column editor\n\n\n  initializeColumn(column) {\n    var config = {\n      editor: false,\n      blocked: false,\n      check: column.definition.editable,\n      params: column.definition.editorParams || {}\n    }; //set column editor\n\n    switch (typeof column.definition.editor) {\n      case \"string\":\n        if (this.editors[column.definition.editor]) {\n          config.editor = this.editors[column.definition.editor];\n        } else {\n          console.warn(\"Editor Error - No such editor found: \", column.definition.editor);\n        }\n\n        break;\n\n      case \"function\":\n        config.editor = column.definition.editor;\n        break;\n\n      case \"boolean\":\n        if (column.definition.editor === true) {\n          if (typeof column.definition.formatter !== \"function\") {\n            if (this.editors[column.definition.formatter]) {\n              config.editor = this.editors[column.definition.formatter];\n            } else {\n              config.editor = this.editors[\"input\"];\n            }\n          } else {\n            console.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\n          }\n        }\n\n        break;\n    }\n\n    if (config.editor) {\n      column.modules.edit = config;\n    }\n  }\n\n  getCurrentCell() {\n    return this.currentCell ? this.currentCell.getComponent() : false;\n  }\n\n  clearEditor(cancel) {\n    var cell = this.currentCell,\n        cellEl;\n    this.invalidEdit = false;\n\n    if (cell) {\n      this.currentCell = false;\n      cellEl = cell.getElement();\n      this.dispatch(\"edit-editor-clear\", cell, cancel);\n      cellEl.classList.remove(\"tabulator-editing\");\n\n      while (cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\n\n      cell.row.getElement().classList.remove(\"tabulator-row-editing\");\n    }\n  }\n\n  cancelEdit() {\n    if (this.currentCell) {\n      var cell = this.currentCell;\n      var component = this.currentCell.getComponent();\n      this.clearEditor(true);\n      cell.setValueActual(cell.getValue());\n      cell.cellRendered();\n\n      if (cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight) {\n        cell.row.normalizeHeight(true);\n      }\n\n      if (cell.column.definition.cellEditCancelled) {\n        cell.column.definition.cellEditCancelled.call(this.table, component);\n      }\n\n      this.dispatch(\"edit-cancelled\", cell);\n      this.dispatchExternal(\"cellEditCancelled\", component);\n    }\n  } //return a formatted value for a cell\n\n\n  bindEditor(cell) {\n    if (cell.column.modules.edit) {\n      var self = this,\n          element = cell.getElement(true);\n      element.setAttribute(\"tabindex\", 0);\n      element.addEventListener(\"click\", function (e) {\n        if (!element.classList.contains(\"tabulator-editing\")) {\n          element.focus({\n            preventScroll: true\n          });\n        }\n      });\n      element.addEventListener(\"mousedown\", function (e) {\n        if (e.button === 2) {\n          e.preventDefault();\n        } else {\n          self.mouseClick = true;\n        }\n      });\n      element.addEventListener(\"focus\", function (e) {\n        if (!self.recursionBlock) {\n          self.edit(cell, e, false);\n        }\n      });\n    }\n  }\n\n  focusCellNoEvent(cell, block) {\n    this.recursionBlock = true;\n\n    if (!(block && this.table.browser === \"ie\")) {\n      cell.getElement().focus({\n        preventScroll: true\n      });\n    }\n\n    this.recursionBlock = false;\n  }\n\n  editCell(cell, forceEdit) {\n    this.focusCellNoEvent(cell);\n    this.edit(cell, false, forceEdit);\n  }\n\n  focusScrollAdjust(cell) {\n    if (this.table.rowManager.getRenderMode() == \"virtual\") {\n      var topEdge = this.table.rowManager.element.scrollTop,\n          bottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\n          rowEl = cell.row.getElement(),\n          offset = rowEl.offsetTop;\n\n      if (rowEl.offsetTop < topEdge) {\n        this.table.rowManager.element.scrollTop -= topEdge - rowEl.offsetTop;\n      } else {\n        if (rowEl.offsetTop + rowEl.offsetHeight > bottomEdge) {\n          this.table.rowManager.element.scrollTop += rowEl.offsetTop + rowEl.offsetHeight - bottomEdge;\n        }\n      }\n\n      var leftEdge = this.table.rowManager.element.scrollLeft,\n          rightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\n          cellEl = cell.getElement(),\n          offset = cellEl.offsetLeft;\n\n      if (this.table.modExists(\"frozenColumns\")) {\n        leftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\n        rightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\n      }\n\n      if (this.table.options.renderHorizontal === \"virtual\") {\n        leftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n        rightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n      }\n\n      if (cellEl.offsetLeft < leftEdge) {\n        this.table.rowManager.element.scrollLeft -= leftEdge - cellEl.offsetLeft;\n      } else {\n        if (cellEl.offsetLeft + cellEl.offsetWidth > rightEdge) {\n          this.table.rowManager.element.scrollLeft += cellEl.offsetLeft + cellEl.offsetWidth - rightEdge;\n        }\n      }\n    }\n  }\n\n  edit(cell, e, forceEdit) {\n    var self = this,\n        allowEdit = true,\n        rendered = function () {},\n        element = cell.getElement(),\n        cellEditor,\n        component,\n        params; //prevent editing if another cell is refusing to leave focus (eg. validation fail)\n\n\n    if (this.currentCell) {\n      if (!this.invalidEdit) {\n        this.cancelEdit();\n      }\n\n      return;\n    } //handle successful value change\n\n\n    function success(value) {\n      if (self.currentCell === cell) {\n        var valid = self.chain(\"edit-success\", [cell, value], true, true);\n\n        if (valid === true || self.table.options.validationMode === \"highlight\") {\n          self.clearEditor();\n\n          if (!cell.modules.edit) {\n            cell.modules.edit = {};\n          }\n\n          cell.modules.edit.edited = true;\n\n          if (self.editedCells.indexOf(cell) == -1) {\n            self.editedCells.push(cell);\n          }\n\n          cell.setValue(value, true);\n          return valid === true;\n        } else {\n          self.invalidEdit = true;\n          self.focusCellNoEvent(cell, true);\n          rendered();\n          return false;\n        }\n      }\n    } //handle aborted edit\n\n\n    function cancel() {\n      if (self.currentCell === cell) {\n        self.cancelEdit();\n      }\n    }\n\n    function onRendered(callback) {\n      rendered = callback;\n    }\n\n    if (!cell.column.modules.edit.blocked) {\n      if (e) {\n        e.stopPropagation();\n      }\n\n      switch (typeof cell.column.modules.edit.check) {\n        case \"function\":\n          allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          break;\n\n        case \"boolean\":\n          allowEdit = cell.column.modules.edit.check;\n          break;\n      }\n\n      if (allowEdit || forceEdit) {\n        self.cancelEdit();\n        self.currentCell = cell;\n        this.focusScrollAdjust(cell);\n        component = cell.getComponent();\n\n        if (this.mouseClick) {\n          this.mouseClick = false;\n\n          if (cell.column.definition.cellClick) {\n            cell.column.definition.cellClick.call(this.table, e, component);\n          }\n        }\n\n        if (cell.column.definition.cellEditing) {\n          cell.column.definition.cellEditing.call(this.table, component);\n        }\n\n        this.dispatch(\"cell-editing\", cell);\n        this.dispatchExternal(\"cellEditing\", component);\n        params = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\n        cellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params); //if editor returned, add to DOM, if false, abort edit\n\n        if (cellEditor !== false) {\n          if (cellEditor instanceof Node) {\n            element.classList.add(\"tabulator-editing\");\n            cell.row.getElement().classList.add(\"tabulator-row-editing\");\n\n            while (element.firstChild) element.removeChild(element.firstChild);\n\n            element.appendChild(cellEditor); //trigger onRendered Callback\n\n            rendered(); //prevent editing from triggering rowClick event\n\n            var children = element.children;\n\n            for (var i = 0; i < children.length; i++) {\n              children[i].addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n              });\n            }\n          } else {\n            console.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\n            element.blur();\n            return false;\n          }\n        } else {\n          element.blur();\n          return false;\n        }\n\n        return true;\n      } else {\n        this.mouseClick = false;\n        element.blur();\n        return false;\n      }\n    } else {\n      this.mouseClick = false;\n      element.blur();\n      return false;\n    }\n  }\n\n  getEditedCells() {\n    var output = [];\n    this.editedCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n\n  clearEdited(cell) {\n    var editIndex;\n\n    if (cell.modules.edit && cell.modules.edit.edited) {\n      cell.modules.edit.edited = false;\n      this.dispatch(\"edit-edited-clear\", cell);\n    }\n\n    editIndex = this.editedCells.indexOf(cell);\n\n    if (editIndex > -1) {\n      this.editedCells.splice(editIndex, 1);\n    }\n  }\n\n}\n\nEdit$1.moduleName = \"edit\"; //load defaults\n\nEdit$1.editors = defaultEditors;\n\nclass ExportRow {\n  constructor(type, columns, component, indent) {\n    this.type = type;\n    this.columns = columns;\n    this.component = component || false;\n    this.indent = indent || 0;\n  }\n\n}\n\nclass ExportColumn {\n  constructor(value, component, width, height, depth) {\n    this.value = value;\n    this.component = component || false;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n  }\n\n}\n\nclass Export extends Module {\n  constructor(table) {\n    super(table);\n    this.config = {};\n    this.cloneTableStyle = true;\n    this.colVisProp = \"\";\n    this.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\n\n    this.registerColumnOption(\"htmlOutput\");\n    this.registerColumnOption(\"titleHtmlOutput\");\n  }\n\n  initialize() {\n    this.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  generateExportList(config, style, range, colVisProp) {\n    this.cloneTableStyle = style;\n    this.config = config || {};\n    this.colVisProp = colVisProp;\n    var headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\n    var body = this.bodyToExportRows(this.rowLookup(range));\n    return headers.concat(body);\n  }\n\n  genereateTable(config, style, range, colVisProp) {\n    var list = this.generateExportList(config, style, range, colVisProp);\n    return this.genereateTableElement(list);\n  }\n\n  rowLookup(range) {\n    var rows = [];\n\n    if (typeof range == \"function\") {\n      range.call(this.table).forEach(row => {\n        row = this.table.rowManager.findRow(row);\n\n        if (row) {\n          rows.push(row);\n        }\n      });\n    } else {\n      switch (range) {\n        case true:\n        case \"visible\":\n          rows = this.table.rowManager.getVisibleRows(false, true);\n          break;\n\n        case \"all\":\n          rows = this.table.rowManager.rows;\n          break;\n\n        case \"selected\":\n          rows = this.table.modules.selectRow.selectedRows;\n          break;\n\n        case \"active\":\n        default:\n          if (this.table.options.pagination) {\n            rows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\n          } else {\n            rows = this.table.rowManager.getDisplayRows();\n          }\n\n      }\n    }\n\n    return Object.assign([], rows);\n  }\n\n  generateColumnGroupHeaders() {\n    var output = [];\n    var columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\n    columns.forEach(column => {\n      var colData = this.processColumnGroup(column);\n\n      if (colData) {\n        output.push(colData);\n      }\n    });\n    return output;\n  }\n\n  processColumnGroup(column) {\n    var subGroups = column.columns,\n        maxDepth = 0,\n        title = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\n    var groupData = {\n      title: title,\n      column: column,\n      depth: 1\n    };\n\n    if (subGroups.length) {\n      groupData.subGroups = [];\n      groupData.width = 0;\n      subGroups.forEach(subGroup => {\n        var subGroupData = this.processColumnGroup(subGroup);\n\n        if (subGroupData) {\n          groupData.width += subGroupData.width;\n          groupData.subGroups.push(subGroupData);\n\n          if (subGroupData.depth > maxDepth) {\n            maxDepth = subGroupData.depth;\n          }\n        }\n      });\n      groupData.depth += maxDepth;\n\n      if (!groupData.width) {\n        return false;\n      }\n    } else {\n      if (this.columnVisCheck(column)) {\n        groupData.width = 1;\n      } else {\n        return false;\n      }\n    }\n\n    return groupData;\n  }\n\n  columnVisCheck(column) {\n    return column.definition[this.colVisProp] !== false && (column.visible || !column.visible && column.definition[this.colVisProp]);\n  }\n\n  headersToExportRows(columns) {\n    var headers = [],\n        headerDepth = 0,\n        exportRows = [];\n\n    function parseColumnGroup(column, level) {\n      var depth = headerDepth - level;\n\n      if (typeof headers[level] === \"undefined\") {\n        headers[level] = [];\n      }\n\n      column.height = column.subGroups ? 1 : depth - column.depth + 1;\n      headers[level].push(column);\n\n      if (column.height > 1) {\n        for (let i = 1; i < column.height; i++) {\n          if (typeof headers[level + i] === \"undefined\") {\n            headers[level + i] = [];\n          }\n\n          headers[level + i].push(false);\n        }\n      }\n\n      if (column.width > 1) {\n        for (let i = 1; i < column.width; i++) {\n          headers[level].push(false);\n        }\n      }\n\n      if (column.subGroups) {\n        column.subGroups.forEach(function (subGroup) {\n          parseColumnGroup(subGroup, level + 1);\n        });\n      }\n    } //calculate maximum header debth\n\n\n    columns.forEach(function (column) {\n      if (column.depth > headerDepth) {\n        headerDepth = column.depth;\n      }\n    });\n    columns.forEach(function (column) {\n      parseColumnGroup(column, 0);\n    });\n    headers.forEach(header => {\n      var columns = [];\n      header.forEach(col => {\n        if (col) {\n          let title = typeof col.title === \"undefined\" ? \"\" : col.title;\n          columns.push(new ExportColumn(title, col.column.getComponent(), col.width, col.height, col.depth));\n        } else {\n          columns.push(null);\n        }\n      });\n      exportRows.push(new ExportRow(\"header\", columns));\n    });\n    return exportRows;\n  }\n\n  bodyToExportRows(rows) {\n    var columns = [];\n    var exportRows = [];\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      if (this.columnVisCheck(column)) {\n        columns.push(column.getComponent());\n      }\n    });\n\n    if (this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized) {\n        rows.unshift(this.table.modules.columnCalcs.topRow);\n      }\n\n      if (this.table.modules.columnCalcs.botInitialized) {\n        rows.push(this.table.modules.columnCalcs.botRow);\n      }\n    }\n\n    rows = rows.filter(row => {\n      switch (row.type) {\n        case \"group\":\n          return this.config.rowGroups !== false;\n\n        case \"calc\":\n          return this.config.columnCalcs !== false;\n\n        case \"row\":\n          return !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\n      }\n\n      return true;\n    });\n    rows.forEach((row, i) => {\n      var rowData = row.getData(this.colVisProp);\n      var exportCols = [];\n      var indent = 0;\n\n      switch (row.type) {\n        case \"group\":\n          indent = row.level;\n          exportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\n          break;\n\n        case \"calc\":\n        case \"row\":\n          columns.forEach(col => {\n            exportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\n          });\n\n          if (this.table.options.dataTree && this.config.dataTree !== false) {\n            indent = row.modules.dataTree.index;\n          }\n\n          break;\n      }\n\n      exportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\n    });\n    return exportRows;\n  }\n\n  genereateTableElement(list) {\n    var table = document.createElement(\"table\"),\n        headerEl = document.createElement(\"thead\"),\n        bodyEl = document.createElement(\"tbody\"),\n        styles = this.lookupTableStyles(),\n        rowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\n        setup = {};\n    setup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\n\n    if (this.table.options.dataTree && this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")) {\n      setup.treeElementField = this.table.modules.dataTree.elementField;\n    } //assign group header formatter\n\n\n    setup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\n\n    if (setup.groupHeader && !Array.isArray(setup.groupHeader)) {\n      setup.groupHeader = [setup.groupHeader];\n    }\n\n    table.classList.add(\"tabulator-print-table\");\n    this.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n\n    if (list.length > 1000) {\n      console.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\n    }\n\n    list.forEach((row, i) => {\n      switch (row.type) {\n        case \"header\":\n          headerEl.appendChild(this.genereateHeaderElement(row, setup, styles));\n          break;\n\n        case \"group\":\n          bodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\n          break;\n\n        case \"calc\":\n          bodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\n          break;\n\n        case \"row\":\n          let rowEl = this.genereateRowElement(row, setup, styles);\n          this.mapElementStyles(i % 2 && styles.evenRow ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n          bodyEl.appendChild(rowEl);\n          break;\n      }\n    });\n\n    if (headerEl.innerHTML) {\n      table.appendChild(headerEl);\n    }\n\n    table.appendChild(bodyEl);\n    this.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\n    return table;\n  }\n\n  lookupTableStyles() {\n    var styles = {}; //lookup row styles\n\n    if (this.cloneTableStyle && window.getComputedStyle) {\n      styles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\n      styles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\n\n      if (styles.firstRow) {\n        styles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\n        styles.firstCell = styles.styleCells[0];\n        styles.lastCell = styles.styleCells[styles.styleCells.length - 1];\n      }\n    }\n\n    return styles;\n  }\n\n  genereateHeaderElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    row.columns.forEach(column => {\n      if (column) {\n        var cellEl = document.createElement(\"th\");\n        var classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\n        cellEl.colSpan = column.width;\n        cellEl.rowSpan = column.height;\n        cellEl.innerHTML = column.value;\n\n        if (this.cloneTableStyle) {\n          cellEl.style.boxSizing = \"border-box\";\n        }\n\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        this.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n        this.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n\n        if (column.component._column.visible) {\n          this.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\n        } else {\n          if (column.component._column.definition.width) {\n            cellEl.style.width = column.component._column.definition.width + \"px\";\n          }\n        }\n\n        if (column.component._column.parent) {\n          this.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\n        }\n\n        rowEl.appendChild(cellEl);\n      }\n    });\n    return rowEl;\n  }\n\n  genereateGroupElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\"),\n        cellEl = document.createElement(\"td\"),\n        group = row.columns[0];\n    rowEl.classList.add(\"tabulator-print-table-row\");\n\n    if (setup.groupHeader && setup.groupHeader[row.indent]) {\n      group.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n    } else {\n      if (setup.groupHeader === false) {\n        group.value = group.value;\n      } else {\n        group.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n      }\n    }\n\n    cellEl.colSpan = group.width;\n    cellEl.innerHTML = group.value;\n    rowEl.classList.add(\"tabulator-print-table-group\");\n    rowEl.classList.add(\"tabulator-group-level-\" + row.indent);\n\n    if (group.component.isVisible()) {\n      rowEl.classList.add(\"tabulator-group-visible\");\n    }\n\n    this.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    this.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n    rowEl.appendChild(cellEl);\n    return rowEl;\n  }\n\n  genereateCalcElement(row, setup, styles) {\n    var rowEl = this.genereateRowElement(row, setup, styles);\n    rowEl.classList.add(\"tabulator-print-table-calcs\");\n    this.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    return rowEl;\n  }\n\n  genereateRowElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    row.columns.forEach(col => {\n      if (col) {\n        var cellEl = document.createElement(\"td\"),\n            column = col.component._column,\n            index = this.table.columnManager.findColumnIndex(column),\n            value = col.value;\n        var cellWrapper = {\n          modules: {},\n          getValue: function () {\n            return value;\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return cellEl;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getData: function () {\n            return row.component.getData();\n          },\n          getRow: function () {\n            return row.component;\n          },\n          getComponent: function () {\n            return cellWrapper;\n          },\n          column: column\n        };\n        var classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n\n        if (this.table.modExists(\"format\") && this.config.formatCells !== false) {\n          value = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\n        } else {\n          switch (typeof value) {\n            case \"object\":\n              value = JSON.stringify(value);\n              break;\n\n            case \"undefined\":\n            case \"null\":\n              value = \"\";\n              break;\n\n            default:\n              value = value;\n          }\n        }\n\n        if (value instanceof Node) {\n          cellEl.appendChild(value);\n        } else {\n          cellEl.innerHTML = value;\n        }\n\n        if (styles.styleCells[index] || styles.firstCell) {\n          this.mapElementStyles(styles.styleCells[index] || styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"text-align\"]);\n\n          if (column.definition.align) {\n            cellEl.style.textAlign = column.definition.align;\n          }\n        }\n\n        if (this.table.options.dataTree && this.config.dataTree !== false) {\n          if (setup.treeElementField && setup.treeElementField == column.field || !setup.treeElementField && i == 0) {\n            if (row.component._row.modules.dataTree.controlEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\n            }\n\n            if (row.component._row.modules.dataTree.branchEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\n            }\n          }\n        }\n\n        rowEl.appendChild(cellEl);\n\n        if (cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback) {\n          cellWrapper.modules.format.renderedCallback();\n        }\n\n        if (setup.rowFormatter && this.config.formatCells !== false) {\n          setup.rowFormatter(row.component);\n        }\n      }\n    });\n    return rowEl;\n  }\n\n  genereateHTMLTable(list) {\n    var holder = document.createElement(\"div\");\n    holder.appendChild(this.genereateTableElement(list));\n    return holder.innerHTML;\n  }\n\n  getHtml(visible, style, config, colVisProp) {\n    var list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\n    return this.genereateHTMLTable(list);\n  }\n\n  mapElementStyles(from, to, props) {\n    if (this.cloneTableStyle && from && to) {\n      var lookup = {\n        \"background-color\": \"backgroundColor\",\n        \"color\": \"fontColor\",\n        \"width\": \"width\",\n        \"font-weight\": \"fontWeight\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"text-align\": \"textAlign\",\n        \"border-top\": \"borderTop\",\n        \"border-left\": \"borderLeft\",\n        \"border-right\": \"borderRight\",\n        \"border-bottom\": \"borderBottom\",\n        \"padding-top\": \"paddingTop\",\n        \"padding-left\": \"paddingLeft\",\n        \"padding-right\": \"paddingRight\",\n        \"padding-bottom\": \"paddingBottom\"\n      };\n\n      if (window.getComputedStyle) {\n        var fromStyle = window.getComputedStyle(from);\n        props.forEach(function (prop) {\n          to.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\n        });\n      }\n    }\n  }\n\n}\n\nExport.moduleName = \"export\";\nvar defaultFilters = {\n  //equal to\n  \"=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal == filterVal ? true : false;\n  },\n  //less than\n  \"<\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal < filterVal ? true : false;\n  },\n  //less than or equal to\n  \"<=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal <= filterVal ? true : false;\n  },\n  //greater than\n  \">\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal > filterVal ? true : false;\n  },\n  //greater than or equal to\n  \">=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal >= filterVal ? true : false;\n  },\n  //not equal to\n  \"!=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal != filterVal ? true : false;\n  },\n  \"regex\": function (filterVal, rowVal, rowData, filterParams) {\n    if (typeof filterVal == \"string\") {\n      filterVal = new RegExp(filterVal);\n    }\n\n    return filterVal.test(rowVal);\n  },\n  //contains the string\n  \"like\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\n      } else {\n        return false;\n      }\n    }\n  },\n  //contains the keywords\n  \"keywords\": function (filterVal, rowVal, rowData, filterParams) {\n    var keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\n        value = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\n        matches = [];\n    keywords.forEach(keyword => {\n      if (value.includes(keyword)) {\n        matches.push(true);\n      }\n    });\n    return filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\n  },\n  //starts with the string\n  \"starts\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //ends with the string\n  \"ends\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //in array\n  \"in\": function (filterVal, rowVal, rowData, filterParams) {\n    if (Array.isArray(filterVal)) {\n      return filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\n    } else {\n      console.warn(\"Filter Error - filter value is not an array:\", filterVal);\n      return false;\n    }\n  }\n};\n\nclass Filter extends Module {\n  constructor(table) {\n    super(table);\n    this.filterList = []; //hold filter list\n\n    this.headerFilters = {}; //hold column filters\n\n    this.headerFilterColumns = []; //hold columns that use header filters\n\n    this.prevHeaderFilterChangeCheck = \"\";\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.changed = false; //has filtering changed since last render\n\n    this.tableInitialized = false;\n    this.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\n\n    this.registerTableOption(\"initialFilter\", false); //initial filtering criteria\n\n    this.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\n\n    this.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\n\n    this.registerColumnOption(\"headerFilter\");\n    this.registerColumnOption(\"headerFilterPlaceholder\");\n    this.registerColumnOption(\"headerFilterParams\");\n    this.registerColumnOption(\"headerFilterEmptyCheck\");\n    this.registerColumnOption(\"headerFilterFunc\");\n    this.registerColumnOption(\"headerFilterFuncParams\");\n    this.registerColumnOption(\"headerFilterLiveFilter\");\n    this.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\n    this.registerTableFunction(\"searchData\", this.searchData.bind(this));\n    this.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\n    this.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\n    this.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\n    this.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\n    this.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\n    this.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\n    this.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\n    this.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\n    this.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\n    this.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\n    this.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\n    this.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\n    this.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n\n    if (this.table.options.filterMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\n    }\n\n    this.registerDataHandler(this.filter.bind(this), 10);\n  }\n\n  tableBuilt() {\n    if (this.table.options.initialFilter) {\n      this.setFilter(this.table.options.initialFilter);\n    }\n\n    if (this.table.options.initialHeaderFilter) {\n      this.table.options.initialHeaderFilter.forEach(item => {\n        var column = this.table.columnManager.findColumn(item.field);\n\n        if (column) {\n          this.setHeaderFilterValue(column, item.value);\n        } else {\n          console.warn(\"Column Filter Error - No matching column found:\", item.field);\n          return false;\n        }\n      });\n    }\n\n    this.tableInitialized = true;\n  }\n\n  remoteFilterParams(data, config, silent, params) {\n    params.filter = this.getFilters(true, true);\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  //set standard filters\n\n\n  userSetFilter(field, type, value, params) {\n    this.setFilter(field, type, value, params);\n    this.refreshFilter();\n  } //set standard filters\n\n\n  userRefreshFilter() {\n    this.refreshFilter();\n  } //add filter to array\n\n\n  userAddFilter(field, type, value, params) {\n    this.addFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n\n  userSetHeaderFilterFocus(field) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      this.setHeaderFilterFocus(column);\n    } else {\n      console.warn(\"Column Filter Focus Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  userGetHeaderFilterValue(field) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      return this.getHeaderFilterValue(column);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n    }\n  }\n\n  userSetHeaderFilterValue(field, value) {\n    var column = this.table.columnManager.findColumn(field);\n\n    if (column) {\n      this.setHeaderFilterValue(column, value);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n      return false;\n    }\n  } //remove filter from array\n\n\n  userRemoveFilter(field, type, value) {\n    this.removeFilter(field, type, value);\n    this.refreshFilter();\n  } //clear filters\n\n\n  userClearFilter(all) {\n    this.clearFilter(all);\n    this.refreshFilter();\n  } //clear header filters\n\n\n  userClearHeaderFilter() {\n    this.clearHeaderFilter();\n    this.refreshFilter();\n  } //search for specific row components\n\n\n  searchRows(field, type, value) {\n    return this.search(\"rows\", field, type, value);\n  } //search for specific data\n\n\n  searchData(field, type, value) {\n    return this.search(\"data\", field, type, value);\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnHeaderFilter(column) {\n    var def = column.definition;\n\n    if (def.headerFilter) {\n      if (typeof def.headerFilterPlaceholder !== \"undefined\" && def.field) {\n        this.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\n      }\n\n      this.initializeColumn(column);\n    }\n  } //initialize column header filter\n\n\n  initializeColumn(column, value) {\n    var self = this,\n        field = column.getField(); //handle successfull value change\n\n    function success(value) {\n      var filterType = column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\" || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\n          type = \"\",\n          filterChangeCheck = \"\",\n          filterFunc;\n\n      if (typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value) {\n        column.modules.filter.prevSuccess = value;\n\n        if (!column.modules.filter.emptyFunc(value)) {\n          column.modules.filter.value = value;\n\n          switch (typeof column.definition.headerFilterFunc) {\n            case \"string\":\n              if (Filter.filters[column.definition.headerFilterFunc]) {\n                type = column.definition.headerFilterFunc;\n\n                filterFunc = function (data) {\n                  var params = column.definition.headerFilterFuncParams || {};\n                  var fieldVal = column.getFieldValue(data);\n                  params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                  return Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\n                };\n              } else {\n                console.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\n              }\n\n              break;\n\n            case \"function\":\n              filterFunc = function (data) {\n                var params = column.definition.headerFilterFuncParams || {};\n                var fieldVal = column.getFieldValue(data);\n                params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                return column.definition.headerFilterFunc(value, fieldVal, data, params);\n              };\n\n              type = filterFunc;\n              break;\n          }\n\n          if (!filterFunc) {\n            switch (filterType) {\n              case \"partial\":\n                filterFunc = function (data) {\n                  var colVal = column.getFieldValue(data);\n\n                  if (typeof colVal !== 'undefined' && colVal !== null) {\n                    return String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\n                  } else {\n                    return false;\n                  }\n                };\n\n                type = \"like\";\n                break;\n\n              default:\n                filterFunc = function (data) {\n                  return column.getFieldValue(data) == value;\n                };\n\n                type = \"=\";\n            }\n          }\n\n          self.headerFilters[field] = {\n            value: value,\n            func: filterFunc,\n            type: type,\n            params: {}\n          };\n        } else {\n          delete self.headerFilters[field];\n        }\n\n        column.modules.filter.value = value;\n        filterChangeCheck = JSON.stringify(self.headerFilters);\n\n        if (self.prevHeaderFilterChangeCheck !== filterChangeCheck) {\n          self.prevHeaderFilterChangeCheck = filterChangeCheck;\n          self.trackChanges();\n          self.refreshFilter();\n        }\n      }\n\n      return true;\n    }\n\n    column.modules.filter = {\n      success: success,\n      attrType: false,\n      tagType: false,\n      emptyFunc: false\n    };\n    this.generateHeaderFilterElement(column);\n  }\n\n  generateHeaderFilterElement(column, initialValue, reinitialize) {\n    var self = this,\n        success = column.modules.filter.success,\n        field = column.getField(),\n        filterElement,\n        editor,\n        editorElement,\n        cellWrapper,\n        typingTimer,\n        searchTrigger,\n        params;\n    column.modules.filter.value = initialValue; //handle aborted edit\n\n    function cancel() {}\n\n    if (column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode) {\n      column.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\n    }\n\n    if (field) {\n      //set empty value function\n      column.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function (value) {\n        return !value && value !== \"0\" && value !== 0;\n      };\n\n      filterElement = document.createElement(\"div\");\n      filterElement.classList.add(\"tabulator-header-filter\"); //set column editor\n\n      switch (typeof column.definition.headerFilter) {\n        case \"string\":\n          if (self.table.modules.edit.editors[column.definition.headerFilter]) {\n            editor = self.table.modules.edit.editors[column.definition.headerFilter];\n\n            if ((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n              column.modules.filter.emptyFunc = function (value) {\n                return value !== true && value !== false;\n              };\n            }\n          } else {\n            console.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\n          }\n\n          break;\n\n        case \"function\":\n          editor = column.definition.headerFilter;\n          break;\n\n        case \"boolean\":\n          if (column.modules.edit && column.modules.edit.editor) {\n            editor = column.modules.edit.editor;\n          } else {\n            if (column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]) {\n              editor = self.table.modules.edit.editors[column.definition.formatter];\n\n              if ((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n                column.modules.filter.emptyFunc = function (value) {\n                  return value !== true && value !== false;\n                };\n              }\n            } else {\n              editor = self.table.modules.edit.editors[\"input\"];\n            }\n          }\n\n          break;\n      }\n\n      if (editor) {\n        cellWrapper = {\n          getValue: function () {\n            return typeof initialValue !== \"undefined\" ? initialValue : \"\";\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return filterElement;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getRow: function () {\n            return {\n              normalizeHeight: function () {}\n            };\n          }\n        };\n        params = column.definition.headerFilterParams || {};\n        params = typeof params === \"function\" ? params.call(self.table, cellWrapper) : params;\n        editorElement = editor.call(this.table.modules.edit, cellWrapper, function () {}, success, cancel, params);\n\n        if (!editorElement) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\n          return;\n        }\n\n        if (!(editorElement instanceof Node)) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\n          return;\n        } //set Placeholder Text\n\n\n        if (field) {\n          self.langBind(\"headerFilters|columns|\" + column.definition.field, function (value) {\n            editorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\n          });\n        } else {\n          self.langBind(\"headerFilters|default\", function (value) {\n            editorElement.setAttribute(\"placeholder\", value);\n          });\n        } //focus on element on click\n\n\n        editorElement.addEventListener(\"click\", function (e) {\n          e.stopPropagation();\n          editorElement.focus();\n        });\n        editorElement.addEventListener(\"focus\", e => {\n          var left = this.table.columnManager.element.scrollLeft;\n          var headerPos = this.table.rowManager.element.scrollLeft + parseInt(this.table.columnManager.element.style.marginLeft);\n\n          if (left !== headerPos) {\n            this.table.rowManager.scrollHorizontal(left);\n            this.table.columnManager.scrollHorizontal(left);\n          }\n        }); //live update filters as user types\n\n        typingTimer = false;\n\n        searchTrigger = function (e) {\n          if (typingTimer) {\n            clearTimeout(typingTimer);\n          }\n\n          typingTimer = setTimeout(function () {\n            success(editorElement.value);\n          }, self.table.options.headerFilterLiveFilterDelay);\n        };\n\n        column.modules.filter.headerElement = editorElement;\n        column.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\";\n        column.modules.filter.tagType = editorElement.tagName.toLowerCase();\n\n        if (column.definition.headerFilterLiveFilter !== false) {\n          if (!(column.definition.headerFilter === 'autocomplete' || column.definition.headerFilter === 'tickCross' || (column.definition.editor === 'autocomplete' || column.definition.editor === 'tickCross') && column.definition.headerFilter === true)) {\n            editorElement.addEventListener(\"keyup\", searchTrigger);\n            editorElement.addEventListener(\"search\", searchTrigger); //update number filtered columns on change\n\n            if (column.modules.filter.attrType == \"number\") {\n              editorElement.addEventListener(\"change\", function (e) {\n                success(editorElement.value);\n              });\n            } //change text inputs to search inputs to allow for clearing of field\n\n\n            if (column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\") {\n              editorElement.setAttribute(\"type\", \"search\"); // editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\n            }\n          } //prevent input and select elements from propegating click to column sorters etc\n\n\n          if (column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\") {\n            editorElement.addEventListener(\"mousedown\", function (e) {\n              e.stopPropagation();\n            });\n          }\n        }\n\n        filterElement.appendChild(editorElement);\n        column.contentElement.appendChild(filterElement);\n\n        if (!reinitialize) {\n          self.headerFilterColumns.push(column);\n        }\n      }\n    } else {\n      console.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\n    }\n  } //hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n\n\n  hideHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = 'none';\n      }\n    });\n  } //show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n\n\n  showHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = '';\n      }\n    });\n  } //programatically set focus of header filter\n\n\n  setHeaderFilterFocus(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      column.modules.filter.headerElement.focus();\n    } else {\n      console.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\n    }\n  } //programmatically get value of header filter\n\n\n  getHeaderFilterValue(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      return column.modules.filter.value;\n    } else {\n      console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n    }\n  } //programatically set value of header filter\n\n\n  setHeaderFilterValue(column, value) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, value, true);\n        column.modules.filter.success(value);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n\n  reloadHeaderFilter(column) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, column.modules.filter.value, true);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n\n  refreshFilter() {\n    if (this.tableInitialized) {\n      if (this.table.options.filterMode === \"remote\") {\n        this.reloadData();\n      } else {\n        this.refreshData(true);\n      }\n    } //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n\n  } //check if the filters has changed since last use\n\n\n  trackChanges() {\n    this.changed = true;\n    this.dispatch(\"filter-changed\");\n  } //check if the filters has changed since last use\n\n\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  } //set standard filters\n\n\n  setFilter(field, type, value, params) {\n    this.filterList = [];\n\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n\n    this.addFilter(field);\n  } //add filter to array\n\n\n  addFilter(field, type, value, params) {\n    var changed = false;\n\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        this.filterList.push(filter);\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      this.trackChanges();\n    }\n  }\n\n  findFilter(filter) {\n    var column;\n\n    if (Array.isArray(filter)) {\n      return this.findSubFilters(filter);\n    }\n\n    var filterFunc = false;\n\n    if (typeof filter.field == \"function\") {\n      filterFunc = function (data) {\n        return filter.field(data, filter.type || {}); // pass params to custom filter function\n      };\n    } else {\n      if (Filter.filters[filter.type]) {\n        column = this.table.columnManager.getColumnByField(filter.field);\n\n        if (column) {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\n          };\n        } else {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\n          };\n        }\n      } else {\n        console.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\n      }\n    }\n\n    filter.func = filterFunc;\n    return filter.func ? filter : false;\n  }\n\n  findSubFilters(filters) {\n    var output = [];\n    filters.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        output.push(filter);\n      }\n    });\n    return output.length ? output : false;\n  } //get all filters\n\n\n  getFilters(all, ajax) {\n    var output = [];\n\n    if (all) {\n      output = this.getHeaderFilters();\n    }\n\n    if (ajax) {\n      output.forEach(function (item) {\n        if (typeof item.type == \"function\") {\n          item.type = \"function\";\n        }\n      });\n    }\n\n    output = output.concat(this.filtersToArray(this.filterList, ajax));\n    return output;\n  } //filter to Object\n\n\n  filtersToArray(filterList, ajax) {\n    var output = [];\n    filterList.forEach(filter => {\n      var item;\n\n      if (Array.isArray(filter)) {\n        output.push(this.filtersToArray(filter, ajax));\n      } else {\n        item = {\n          field: filter.field,\n          type: filter.type,\n          value: filter.value\n        };\n\n        if (ajax) {\n          if (typeof item.type == \"function\") {\n            item.type = \"function\";\n          }\n        }\n\n        output.push(item);\n      }\n    });\n    return output;\n  } //get all filters\n\n\n  getHeaderFilters() {\n    var output = [];\n\n    for (var key in this.headerFilters) {\n      output.push({\n        field: key,\n        type: this.headerFilters[key].type,\n        value: this.headerFilters[key].value\n      });\n    }\n\n    return output;\n  } //remove filter from array\n\n\n  removeFilter(field, type, value) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n\n    field.forEach(filter => {\n      var index = -1;\n\n      if (typeof filter.field == \"object\") {\n        index = this.filterList.findIndex(element => {\n          return filter === element;\n        });\n      } else {\n        index = this.filterList.findIndex(element => {\n          return filter.field === element.field && filter.type === element.type && filter.value === element.value;\n        });\n      }\n\n      if (index > -1) {\n        this.filterList.splice(index, 1);\n      } else {\n        console.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\n      }\n    });\n    this.trackChanges();\n  } //clear filters\n\n\n  clearFilter(all) {\n    this.filterList = [];\n\n    if (all) {\n      this.clearHeaderFilter();\n    }\n\n    this.trackChanges();\n  } //clear header filters\n\n\n  clearHeaderFilter() {\n    this.headerFilters = {};\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.headerFilterColumns.forEach(column => {\n      if (typeof column.modules.filter.value !== \"undefined\") {\n        delete column.modules.filter.value;\n      }\n\n      column.modules.filter.prevSuccess = undefined;\n      this.reloadHeaderFilter(column);\n    });\n    this.trackChanges();\n  } //search data and return matching rows\n\n\n  search(searchType, field, type, value) {\n    var activeRows = [],\n        filterList = [];\n\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n\n      if (filter) {\n        filterList.push(filter);\n      }\n    });\n    this.table.rowManager.rows.forEach(row => {\n      var match = true;\n      filterList.forEach(filter => {\n        if (!this.filterRecurse(filter, row.getData())) {\n          match = false;\n        }\n      });\n\n      if (match) {\n        activeRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\n      }\n    });\n    return activeRows;\n  } //filter row array\n\n\n  filter(rowList, filters) {\n    var activeRows = [],\n        activeRowComponents = [];\n\n    if (this.subscribedExternal(\"dataFiltering\")) {\n      this.dispatchExternal(\"dataFiltering\", this.getFilters(true));\n    }\n\n    if (this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)) {\n      rowList.forEach(row => {\n        if (this.filterRow(row)) {\n          activeRows.push(row);\n        }\n      });\n    } else {\n      activeRows = rowList.slice(0);\n    }\n\n    if (this.subscribedExternal(\"dataFiltered\")) {\n      activeRows.forEach(row => {\n        activeRowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataFiltered\", this.getFilters(true), activeRowComponents);\n    }\n\n    return activeRows;\n  } //filter individual row\n\n\n  filterRow(row, filters) {\n    var match = true,\n        data = row.getData();\n    this.filterList.forEach(filter => {\n      if (!this.filterRecurse(filter, data)) {\n        match = false;\n      }\n    });\n\n    for (var field in this.headerFilters) {\n      if (!this.headerFilters[field].func(data)) {\n        match = false;\n      }\n    }\n\n    return match;\n  }\n\n  filterRecurse(filter, data) {\n    var match = false;\n\n    if (Array.isArray(filter)) {\n      filter.forEach(subFilter => {\n        if (this.filterRecurse(subFilter, data)) {\n          match = true;\n        }\n      });\n    } else {\n      match = filter.func(data);\n    }\n\n    return match;\n  }\n\n}\n\nFilter.moduleName = \"filter\"; //load defaults\n\nFilter.filters = defaultFilters;\n\nfunction plaintext(cell, formatterParams, onRendered) {\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\n\nfunction html$1(cell, formatterParams, onRendered) {\n  return cell.getValue();\n}\n\nfunction textarea$1(cell, formatterParams, onRendered) {\n  cell.getElement().style.whiteSpace = \"pre-wrap\";\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\n\nfunction money(cell, formatterParams, onRendered) {\n  var floatVal = parseFloat(cell.getValue()),\n      sign = \"\",\n      number,\n      integer,\n      decimal,\n      rgx;\n  var decimalSym = formatterParams.decimal || \".\";\n  var thousandSym = formatterParams.thousand || \",\";\n  var negativeSign = formatterParams.negativeSign || \"-\";\n  var symbol = formatterParams.symbol || \"\";\n  var after = !!formatterParams.symbolAfter;\n  var precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\n\n  if (isNaN(floatVal)) {\n    return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n  }\n\n  if (floatVal < 0) {\n    floatVal = Math.abs(floatVal);\n    sign = negativeSign;\n  }\n\n  number = precision !== false ? floatVal.toFixed(precision) : floatVal;\n  number = String(number).split(\".\");\n  integer = number[0];\n  decimal = number.length > 1 ? decimalSym + number[1] : \"\";\n\n  if (formatterParams.thousand !== false) {\n    rgx = /(\\d+)(\\d{3})/;\n\n    while (rgx.test(integer)) {\n      integer = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\n    }\n  }\n\n  return after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\n}\n\nfunction link(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      urlPrefix = formatterParams.urlPrefix || \"\",\n      download = formatterParams.download,\n      label = value,\n      el = document.createElement(\"a\"),\n      data;\n\n  function labelTraverse(path, data) {\n    var item = path.shift(),\n        value = data[item];\n\n    if (path.length && typeof value === \"object\") {\n      return labelTraverse(path, value);\n    }\n\n    return value;\n  }\n\n  if (formatterParams.labelField) {\n    data = cell.getData();\n    label = labelTraverse(formatterParams.labelField.split(this.table.options.nestedFieldSeparator), data);\n  }\n\n  if (formatterParams.label) {\n    switch (typeof formatterParams.label) {\n      case \"string\":\n        label = formatterParams.label;\n        break;\n\n      case \"function\":\n        label = formatterParams.label(cell);\n        break;\n    }\n  }\n\n  if (label) {\n    if (formatterParams.urlField) {\n      data = cell.getData();\n      value = data[formatterParams.urlField];\n    }\n\n    if (formatterParams.url) {\n      switch (typeof formatterParams.url) {\n        case \"string\":\n          value = formatterParams.url;\n          break;\n\n        case \"function\":\n          value = formatterParams.url(cell);\n          break;\n      }\n    }\n\n    el.setAttribute(\"href\", urlPrefix + value);\n\n    if (formatterParams.target) {\n      el.setAttribute(\"target\", formatterParams.target);\n    }\n\n    if (formatterParams.download) {\n      if (typeof download == \"function\") {\n        download = download(cell);\n      } else {\n        download = download === true ? \"\" : download;\n      }\n\n      el.setAttribute(\"download\", download);\n    }\n\n    el.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\n    return el;\n  } else {\n    return \"&nbsp;\";\n  }\n}\n\nfunction image(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"img\"),\n      src = cell.getValue();\n\n  if (formatterParams.urlPrefix) {\n    src = formatterParams.urlPrefix + cell.getValue();\n  }\n\n  if (formatterParams.urlSuffix) {\n    src = src + formatterParams.urlSuffix;\n  }\n\n  el.setAttribute(\"src\", src);\n\n  switch (typeof formatterParams.height) {\n    case \"number\":\n      el.style.height = formatterParams.height + \"px\";\n      break;\n\n    case \"string\":\n      el.style.height = formatterParams.height;\n      break;\n  }\n\n  switch (typeof formatterParams.width) {\n    case \"number\":\n      el.style.width = formatterParams.width + \"px\";\n      break;\n\n    case \"string\":\n      el.style.width = formatterParams.width;\n      break;\n  }\n\n  el.addEventListener(\"load\", function () {\n    cell.getRow().normalizeHeight();\n  });\n  return el;\n}\n\nfunction tickCross$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      element = cell.getElement(),\n      empty = formatterParams.allowEmpty,\n      truthy = formatterParams.allowTruthy,\n      trueValueSet = Object.keys(formatterParams).includes(\"trueValue\"),\n      tick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\n      cross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n\n  if (trueValueSet && value === formatterParams.trueValue || !trueValueSet && (truthy && value || value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\")) {\n    element.setAttribute(\"aria-checked\", true);\n    return tick || \"\";\n  } else {\n    if (empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")) {\n      element.setAttribute(\"aria-checked\", \"mixed\");\n      return \"\";\n    } else {\n      element.setAttribute(\"aria-checked\", false);\n      return cross || \"\";\n    }\n  }\n}\n\nfunction datetime(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var outputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var value = cell.getValue();\n\n  if (typeof DT != \"undefined\") {\n    var newDatetime;\n\n    if (DT.isDateTime(value)) {\n      newDatetime = value;\n    } else if (inputFormat === \"iso\") {\n      newDatetime = DT.fromISO(String(value));\n    } else {\n      newDatetime = DT.fromFormat(String(value), inputFormat);\n    }\n\n    if (newDatetime.isValid) {\n      if (formatterParams.timezone) {\n        newDatetime = newDatetime.setZone(formatterParams.timezone);\n      }\n\n      return newDatetime.toFormat(outputFormat);\n    } else {\n      if (invalid === true || !value) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\n  }\n}\n\nfunction datetimediff(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\n  var unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\n  var humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\n  var date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\n  var value = cell.getValue();\n\n  if (typeof DT != \"undefined\") {\n    var newDatetime;\n\n    if (DT.isDateTime(value)) {\n      newDatetime = value;\n    } else if (inputFormat === \"iso\") {\n      newDatetime = DT.fromISO(String(value));\n    } else {\n      newDatetime = DT.fromFormat(String(value), inputFormat);\n    }\n\n    if (newDatetime.isValid) {\n      if (humanize) {\n        return newDatetime.diff(date, unit).toHuman() + (suffix ? \" \" + suffix : \"\");\n      } else {\n        return parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\n      }\n    } else {\n      if (invalid === true) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\n  }\n}\n\nfunction lookup(cell, formatterParams, onRendered) {\n  var value = cell.getValue();\n\n  if (typeof formatterParams[value] === \"undefined\") {\n    console.warn('Missing display value for ' + value);\n    return value;\n  }\n\n  return formatterParams[value];\n}\n\nfunction star$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n      element = cell.getElement(),\n      maxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\n      stars = document.createElement(\"span\"),\n      star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\n      starActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\n      starInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>'; //style stars holder\n\n  stars.style.verticalAlign = \"middle\"; //style star\n\n  star.setAttribute(\"width\", \"14\");\n  star.setAttribute(\"height\", \"14\");\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  value = value && !isNaN(value) ? parseInt(value) : 0;\n  value = Math.max(0, Math.min(value, maxStars));\n\n  for (var i = 1; i <= maxStars; i++) {\n    var nextStar = star.cloneNode(true);\n    nextStar.innerHTML = i <= value ? starActive : starInactive;\n    stars.appendChild(nextStar);\n  }\n\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n  element.setAttribute(\"aria-label\", value);\n  return stars;\n}\n\nfunction traffic(cell, formatterParams, onRendered) {\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n      el = document.createElement(\"span\"),\n      max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n      min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n      colors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\n      color = \"#666666\",\n      percent,\n      percentValue;\n\n  if (isNaN(value) || typeof cell.getValue() === \"undefined\") {\n    return;\n  }\n\n  el.classList.add(\"tabulator-traffic-light\"); //make sure value is in range\n\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min; //workout percentage\n\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent); //set color\n\n  switch (typeof colors) {\n    case \"string\":\n      color = colors;\n      break;\n\n    case \"function\":\n      color = colors(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(colors)) {\n        var unit = 100 / colors.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, colors.length - 1);\n        index = Math.max(index, 0);\n        color = colors[index];\n        break;\n      }\n\n  }\n\n  el.style.backgroundColor = color;\n  return el;\n}\n\nfunction progress$1(cell, formatterParams, onRendered) {\n  //progress bar\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n      element = cell.getElement(),\n      max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n      min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n      legendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\n      percent,\n      percentValue,\n      color,\n      legend,\n      legendColor; //make sure value is in range\n\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min; //workout percentage\n\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent); //set bar color\n\n  switch (typeof formatterParams.color) {\n    case \"string\":\n      color = formatterParams.color;\n      break;\n\n    case \"function\":\n      color = formatterParams.color(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(formatterParams.color)) {\n        var unit = 100 / formatterParams.color.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.color.length - 1);\n        index = Math.max(index, 0);\n        color = formatterParams.color[index];\n        break;\n      }\n\n    default:\n      color = \"#2DC214\";\n  } //generate legend\n\n\n  switch (typeof formatterParams.legend) {\n    case \"string\":\n      legend = formatterParams.legend;\n      break;\n\n    case \"function\":\n      legend = formatterParams.legend(value);\n      break;\n\n    case \"boolean\":\n      legend = value;\n      break;\n\n    default:\n      legend = false;\n  } //set legend color\n\n\n  switch (typeof formatterParams.legendColor) {\n    case \"string\":\n      legendColor = formatterParams.legendColor;\n      break;\n\n    case \"function\":\n      legendColor = formatterParams.legendColor(value);\n      break;\n\n    case \"object\":\n      if (Array.isArray(formatterParams.legendColor)) {\n        var unit = 100 / formatterParams.legendColor.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.legendColor.length - 1);\n        index = Math.max(index, 0);\n        legendColor = formatterParams.legendColor[index];\n      }\n\n      break;\n\n    default:\n      legendColor = \"#000\";\n  }\n\n  element.style.minWidth = \"30px\";\n  element.style.position = \"relative\";\n  element.setAttribute(\"aria-label\", percentValue);\n  var barEl = document.createElement(\"div\");\n  barEl.style.display = \"inline-block\";\n  barEl.style.position = \"absolute\";\n  barEl.style.width = percentValue + \"%\";\n  barEl.style.backgroundColor = color;\n  barEl.style.height = \"100%\";\n  barEl.setAttribute('data-max', max);\n  barEl.setAttribute('data-min', min);\n  var barContainer = document.createElement(\"div\");\n  barContainer.style.position = \"relative\";\n  barContainer.style.width = \"100%\";\n  barContainer.style.height = \"100%\";\n\n  if (legend) {\n    var legendEl = document.createElement(\"div\");\n    legendEl.style.position = \"absolute\";\n    legendEl.style.top = 0;\n    legendEl.style.left = 0;\n    legendEl.style.textAlign = legendAlign;\n    legendEl.style.width = \"100%\";\n    legendEl.style.color = legendColor;\n    legendEl.innerHTML = legend;\n  }\n\n  onRendered(function () {\n    //handle custom element needed if formatter is to be included in printed/downloaded output\n    if (!(cell instanceof CellComponent)) {\n      var holderEl = document.createElement(\"div\");\n      holderEl.style.position = \"absolute\";\n      holderEl.style.top = \"4px\";\n      holderEl.style.bottom = \"4px\";\n      holderEl.style.left = \"4px\";\n      holderEl.style.right = \"4px\";\n      element.appendChild(holderEl);\n      element = holderEl;\n    }\n\n    element.appendChild(barContainer);\n    barContainer.appendChild(barEl);\n\n    if (legend) {\n      barContainer.appendChild(legendEl);\n    }\n  });\n  return \"\";\n}\n\nfunction color(cell, formatterParams, onRendered) {\n  cell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\n  return \"\";\n}\n\nfunction buttonTick(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\n}\n\nfunction buttonCross(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n}\n\nfunction rownum(cell, formatterParams, onRendered) {\n  return this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1 || \"\";\n}\n\nfunction handle(cell, formatterParams, onRendered) {\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  return \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\n}\n\nfunction responsiveCollapse(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"div\"),\n      config = cell.getRow()._row.modules.responsiveLayout;\n\n  el.classList.add(\"tabulator-responsive-collapse-toggle\");\n  el.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n\n  function toggleList(isOpen) {\n    var collapseEl = config.element;\n    config.open = isOpen;\n\n    if (collapseEl) {\n      if (config.open) {\n        el.classList.add(\"open\");\n        collapseEl.style.display = '';\n      } else {\n        el.classList.remove(\"open\");\n        collapseEl.style.display = 'none';\n      }\n    }\n  }\n\n  el.addEventListener(\"click\", function (e) {\n    e.stopImmediatePropagation();\n    toggleList(!config.open);\n  });\n  toggleList(config.open);\n  return el;\n}\n\nfunction rowSelection(cell, formatterParams, onRendered) {\n  var checkbox = document.createElement(\"input\");\n  var blocked = false;\n  checkbox.type = 'checkbox';\n  checkbox.setAttribute(\"aria-label\", \"Select Row\");\n\n  if (this.table.modExists(\"selectRow\", true)) {\n    checkbox.addEventListener(\"click\", e => {\n      e.stopPropagation();\n    });\n\n    if (typeof cell.getRow == 'function') {\n      var row = cell.getRow();\n\n      if (row instanceof RowComponent$1) {\n        checkbox.addEventListener(\"change\", e => {\n          if (this.table.options.selectableRangeMode === \"click\") {\n            if (!blocked) {\n              row.toggleSelect();\n            } else {\n              blocked = false;\n            }\n          } else {\n            row.toggleSelect();\n          }\n        });\n\n        if (this.table.options.selectableRangeMode === \"click\") {\n          checkbox.addEventListener(\"click\", e => {\n            blocked = true;\n            this.table.modules.selectRow.handleComplexRowClick(row._row, e);\n          });\n        }\n\n        checkbox.checked = row.isSelected && row.isSelected();\n        this.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\n      } else {\n        checkbox = \"\";\n      }\n    } else {\n      checkbox.addEventListener(\"change\", e => {\n        if (this.table.modules.selectRow.selectedRows.length) {\n          this.table.deselectRow();\n        } else {\n          this.table.selectRow(formatterParams.rowRange);\n        }\n      });\n      this.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\n    }\n  }\n\n  return checkbox;\n}\n\nvar defaultFormatters = {\n  plaintext: plaintext,\n  html: html$1,\n  textarea: textarea$1,\n  money: money,\n  link: link,\n  image: image,\n  tickCross: tickCross$1,\n  datetime: datetime,\n  datetimediff: datetimediff,\n  lookup: lookup,\n  star: star$1,\n  traffic: traffic,\n  progress: progress$1,\n  color: color,\n  buttonTick: buttonTick,\n  buttonCross: buttonCross,\n  rownum: rownum,\n  handle: handle,\n  responsiveCollapse: responsiveCollapse,\n  rowSelection: rowSelection\n};\n\nclass Format extends Module {\n  constructor(table) {\n    super(table);\n    this.registerColumnOption(\"formatter\");\n    this.registerColumnOption(\"formatterParams\");\n    this.registerColumnOption(\"formatterPrint\");\n    this.registerColumnOption(\"formatterPrintParams\");\n    this.registerColumnOption(\"formatterClipboard\");\n    this.registerColumnOption(\"formatterClipboardParams\");\n    this.registerColumnOption(\"formatterHtmlOutput\");\n    this.registerColumnOption(\"formatterHtmlOutputParams\");\n    this.registerColumnOption(\"titleFormatter\");\n    this.registerColumnOption(\"titleFormatterParams\");\n  }\n\n  initialize() {\n    this.subscribe(\"cell-format\", this.formatValue.bind(this));\n    this.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-format\", this.formatHeader.bind(this));\n  } //initialize column formatter\n\n\n  initializeColumn(column) {\n    column.modules.format = this.lookupFormatter(column, \"\");\n\n    if (typeof column.definition.formatterPrint !== \"undefined\") {\n      column.modules.format.print = this.lookupFormatter(column, \"Print\");\n    }\n\n    if (typeof column.definition.formatterClipboard !== \"undefined\") {\n      column.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\n    }\n\n    if (typeof column.definition.formatterHtmlOutput !== \"undefined\") {\n      column.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\n    }\n  }\n\n  lookupFormatter(column, type) {\n    var config = {\n      params: column.definition[\"formatter\" + type + \"Params\"] || {}\n    },\n        formatter = column.definition[\"formatter\" + type]; //set column formatter\n\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          config.formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          config.formatter = Format.formatters.plaintext;\n        }\n\n        break;\n\n      case \"function\":\n        config.formatter = formatter;\n        break;\n\n      default:\n        config.formatter = Format.formatters.plaintext;\n        break;\n    }\n\n    return config;\n  }\n\n  cellRendered(cell) {\n    if (cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered) {\n      cell.modules.format.renderedCallback();\n      cell.modules.format.rendered = true;\n    }\n  } //return a formatted value for a column header\n\n\n  formatHeader(column, title, el) {\n    var formatter, params, onRendered, mockCell;\n\n    if (column.definition.titleFormatter) {\n      formatter = this.getFormatter(column.definition.titleFormatter);\n\n      onRendered = callback => {\n        column.titleFormatterRendered = callback;\n      };\n\n      mockCell = {\n        getValue: function () {\n          return title;\n        },\n        getElement: function () {\n          return el;\n        }\n      };\n      params = column.definition.titleFormatterParams || {};\n      params = typeof params === \"function\" ? params() : params;\n      return formatter.call(this, mockCell, params, onRendered);\n    } else {\n      return title;\n    }\n  } //return a formatted value for a cell\n\n\n  formatValue(cell) {\n    var component = cell.getComponent(),\n        params = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\n\n    function onRendered(callback) {\n      if (!cell.modules.format) {\n        cell.modules.format = {};\n      }\n\n      cell.modules.format.renderedCallback = callback;\n      cell.modules.format.rendered = false;\n    }\n\n    return cell.column.modules.format.formatter.call(this, component, params, onRendered);\n  }\n\n  formatExportValue(cell, type) {\n    var formatter = cell.column.modules.format[type],\n        params;\n\n    if (formatter) {\n      params = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\n\n      function onRendered(callback) {\n        if (!cell.modules.format) {\n          cell.modules.format = {};\n        }\n\n        cell.modules.format.renderedCallback = callback;\n        cell.modules.format.rendered = false;\n      }\n\n      return formatter.formatter.call(this, cell.getComponent(), params, onRendered);\n    } else {\n      return this.formatValue(cell);\n    }\n  }\n\n  sanitizeHTML(value) {\n    if (value) {\n      var entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n      };\n      return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n        return entityMap[s];\n      });\n    } else {\n      return value;\n    }\n  }\n\n  emptyToSpace(value) {\n    return value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\n  } //get formatter for cell\n\n\n  getFormatter(formatter) {\n    var formatter;\n\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          formatter = Format.formatters.plaintext;\n        }\n\n        break;\n\n      case \"function\":\n        formatter = formatter;\n        break;\n\n      default:\n        formatter = Format.formatters.plaintext;\n        break;\n    }\n\n    return formatter;\n  }\n\n}\n\nFormat.moduleName = \"format\"; //load defaults\n\nFormat.formatters = defaultFormatters;\n\nclass FrozenColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightPadding = 0;\n    this.initializationMode = \"left\";\n    this.active = false;\n    this.scrollEndTimer = false;\n    this.blocked = true;\n    this.registerColumnOption(\"frozen\");\n  } //reset initial state\n\n\n  reset() {\n    this.initializationMode = \"left\";\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightMargin = 0;\n    this.active = false;\n    this.table.columnManager.headersElement.style.marginLeft = 0;\n    this.table.columnManager.element.style.paddingRight = 0;\n  }\n\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-width\", this.layout.bind(this));\n    this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n    this.subscribe(\"table-layout\", this.layout.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"columns-loading\", this.reset.bind(this));\n    this.subscribe(\"column-add\", this.reinitializeColumns.bind(this));\n    this.subscribe(\"column-delete\", this.reinitializeColumns.bind(this));\n    this.subscribe(\"table-redraw\", this.layout.bind(this));\n    this.subscribe(\"layout-refreshing\", this.blockLayout.bind(this));\n    this.subscribe(\"layout-refreshed\", this.unblockLayout.bind(this));\n  }\n\n  blockLayout() {\n    this.blocked = true;\n  }\n\n  unblockLayout() {\n    this.blocked = false;\n  }\n\n  layoutCell(cell) {\n    this.layoutElement(cell.element, cell.column);\n  }\n\n  reinitializeColumns() {\n    this.reset();\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      this.initializeColumn(column);\n    });\n  } //initialize specific column\n\n\n  initializeColumn(column) {\n    var config = {\n      margin: 0,\n      edge: false\n    };\n\n    if (!column.isGroup) {\n      if (this.frozenCheck(column)) {\n        config.position = this.initializationMode;\n\n        if (this.initializationMode == \"left\") {\n          this.leftColumns.push(column);\n        } else {\n          this.rightColumns.unshift(column);\n        }\n\n        this.active = true;\n        column.modules.frozen = config;\n      } else {\n        this.initializationMode = \"right\";\n      }\n    }\n  }\n\n  frozenCheck(column) {\n    if (column.parent.isGroup && column.definition.frozen) {\n      console.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\n    }\n\n    if (column.parent.isGroup) {\n      return this.frozenCheck(column.parent);\n    } else {\n      return column.definition.frozen;\n    }\n  } //quick layout to smooth horizontal scrolling\n\n\n  scrollHorizontal() {\n    var rows;\n\n    if (this.active) {\n      clearTimeout(this.scrollEndTimer);\n      rows = this.table.rowManager.getVisibleRows();\n      this.calcMargins(true);\n      this.layoutColumnPosition();\n      this.layoutCalcRows();\n      rows.forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n    }\n  } //calculate margins for rows\n\n\n  calcMargins(scroll) {\n    if (!scroll) {\n      this.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\n      this.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    } //calculate right frozen columns\n\n\n    this.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\n  } //layout calculation rows\n\n\n  layoutCalcRows() {\n    if (this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow) {\n        this.layoutRow(this.table.modules.columnCalcs.topRow);\n      }\n\n      if (this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow) {\n        this.layoutRow(this.table.modules.columnCalcs.botRow);\n      }\n\n      if (this.table.modExists(\"groupRows\")) {\n        this.layoutGroupCalcs(this.table.modules.groupRows.getGroups());\n      }\n    }\n  }\n\n  layoutGroupCalcs(groups) {\n    groups.forEach(group => {\n      if (group.calcs.top) {\n        this.layoutRow(group.calcs.top);\n      }\n\n      if (group.calcs.bottom) {\n        this.layoutRow(group.calcs.bottom);\n      }\n\n      if (group.groupList && group.groupList.length) {\n        this.layoutGroupCalcs(group.groupList && group.groupList);\n      }\n    });\n  } //calculate column positions and layout headers\n\n\n  layoutColumnPosition(allCells) {\n    var leftParents = [];\n    var leftMargin = 0;\n    var rightMargin = 0;\n    this.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\n    this.table.columnManager.element.style.paddingRight = this.rightMargin;\n    this.leftColumns.forEach((column, i) => {\n      column.modules.frozen.margin = leftMargin + this.table.columnManager.scrollLeft + \"px\";\n\n      if (column.visible) {\n        leftMargin += column.getWidth();\n      }\n\n      if (i == this.leftColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n\n      if (column.parent.isGroup) {\n        var parentEl = this.getColGroupParentElement(column);\n\n        if (!leftParents.includes(parentEl)) {\n          this.layoutElement(parentEl, column);\n          leftParents.push(parentEl);\n        }\n\n        if (column.modules.frozen.edge) {\n          parentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n        }\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n    this.rightColumns.forEach((column, i) => {\n      if (column.visible) {\n        rightMargin += column.getWidth();\n      }\n\n      column.modules.frozen.margin = this.rightPadding - rightMargin + \"px\";\n\n      if (i == this.rightColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n\n      if (column.parent.isGroup) {\n        this.layoutElement(this.getColGroupParentElement(column), column);\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n  }\n\n  getColGroupParentElement(column) {\n    return column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\n  } //layout columns appropriately\n\n\n  layout() {\n    var visibleRows = [],\n        otherRows = [];\n\n    if (this.active && !this.blocked) {\n      //calculate row padding\n      this.calcMargins(); //calculate left columns\n\n      this.layoutColumnPosition();\n      visibleRows = this.table.rowManager.getVisibleRows();\n      otherRows = this.table.rowManager.getDisplayRows().filter(row => !visibleRows.includes(row));\n      otherRows.forEach(row => {\n        row.deinitialize();\n      });\n      visibleRows.forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.layoutCalcRows();\n    }\n  }\n\n  layoutRow(row) {\n    // console.trace(\"row\")\n    var rowEl = row.getElement();\n    rowEl.style.paddingLeft = this.leftMargin;\n\n    if (this.table.options.layout === \"fitDataFill\" && this.rightColumns.length) {\n      this.table.rowManager.getTableElement().style.minWidth = \"calc(100% - \" + this.rightMargin + \")\";\n    }\n\n    this.leftColumns.forEach(column => {\n      var cell = row.getCell(column);\n\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n    this.rightColumns.forEach(column => {\n      var cell = row.getCell(column);\n\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n  }\n\n  layoutElement(element, column) {\n    if (column.modules.frozen) {\n      element.style.position = \"absolute\";\n      element.style.left = column.modules.frozen.margin;\n      element.classList.add(\"tabulator-frozen\");\n\n      if (column.modules.frozen.edge) {\n        element.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n      }\n    }\n  }\n\n  _calcSpace(columns, index) {\n    var width = 0;\n\n    for (let i = 0; i < index; i++) {\n      if (columns[i].visible) {\n        width += columns[i].getWidth();\n      }\n    }\n\n    return width;\n  }\n\n}\n\nFrozenColumns.moduleName = \"frozenColumns\";\n\nclass FrozenRows extends Module {\n  constructor(table) {\n    super(table);\n    this.topElement = document.createElement(\"div\");\n    this.rows = []; //register component functions\n\n    this.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\n  }\n\n  initialize() {\n    this.rows = [];\n    this.topElement.classList.add(\"tabulator-frozen-rows-holder\"); // this.table.columnManager.element.append(this.topElement);\n\n    this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n    this.subscribe(\"row-deleting\", this.detachRow.bind(this));\n    this.subscribe(\"rows-visible\", this.visibleRows.bind(this));\n    this.registerDisplayHandler(this.getRows.bind(this), 10);\n  }\n\n  isRowFrozen(row) {\n    var index = this.rows.indexOf(row);\n    return index > -1;\n  }\n\n  isFrozen() {\n    return !!this.rows.length;\n  }\n\n  visibleRows(viewable, rows) {\n    this.rows.forEach(row => {\n      rows.push(row);\n    });\n    return rows;\n  } //filter frozen rows out of display data\n\n\n  getRows(rows) {\n    var output = rows.slice(0);\n    this.rows.forEach(function (row) {\n      var index = output.indexOf(row);\n\n      if (index > -1) {\n        output.splice(index, 1);\n      }\n    });\n    return output;\n  }\n\n  freezeRow(row) {\n    if (!row.modules.frozen) {\n      row.modules.frozen = true;\n      this.topElement.appendChild(row.getElement());\n      row.initialize();\n      row.normalizeHeight();\n      this.table.rowManager.adjustTableSize();\n      this.rows.push(row);\n      this.refreshData(false, \"display\");\n      this.styleRows();\n    } else {\n      console.warn(\"Freeze Error - Row is already frozen\");\n    }\n  }\n\n  unfreezeRow(row) {\n    var index = this.rows.indexOf(row);\n\n    if (row.modules.frozen) {\n      row.modules.frozen = false;\n      this.detachRow(row);\n      this.table.rowManager.adjustTableSize();\n      this.refreshData(false, \"display\");\n\n      if (this.rows.length) {\n        this.styleRows();\n      }\n    } else {\n      console.warn(\"Freeze Error - Row is already unfrozen\");\n    }\n  }\n\n  detachRow(row) {\n    var index = this.rows.indexOf(row);\n\n    if (index > -1) {\n      var rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n\n      this.rows.splice(index, 1);\n    }\n  }\n\n  styleRows(row) {\n    this.rows.forEach((row, i) => {\n      this.table.rowManager.styleRow(row, i);\n    });\n  }\n\n}\n\nFrozenRows.moduleName = \"frozenRows\"; //public group object\n\nclass GroupComponent {\n  constructor(group) {\n    this._group = group;\n    this.type = \"GroupComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._group.groupManager.table.componentFunctionBinder.handle(\"row\", target._group, name);\n        }\n      }\n    });\n  }\n\n  getKey() {\n    return this._group.key;\n  }\n\n  getField() {\n    return this._group.field;\n  }\n\n  getElement() {\n    return this._group.element;\n  }\n\n  getRows() {\n    return this._group.getRows(true);\n  }\n\n  getSubGroups() {\n    return this._group.getSubGroups(true);\n  }\n\n  getParentGroup() {\n    return this._group.parent ? this._group.parent.getComponent() : false;\n  }\n\n  isVisible() {\n    return this._group.visible;\n  }\n\n  show() {\n    this._group.show();\n  }\n\n  hide() {\n    this._group.hide();\n  }\n\n  toggle() {\n    this._group.toggleVisibility();\n  }\n\n  _getSelf() {\n    return this._group;\n  }\n\n  getTable() {\n    return this._group.groupManager.table;\n  }\n\n} //Group functions\n\n\nclass Group {\n  constructor(groupManager, parent, level, key, field, generator, oldGroup) {\n    this.groupManager = groupManager;\n    this.parent = parent;\n    this.key = key;\n    this.level = level;\n    this.field = field;\n    this.hasSubGroups = level < groupManager.groupIDLookups.length - 1;\n    this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\n    this.type = \"group\"; //type of element\n\n    this.old = oldGroup;\n    this.rows = [];\n    this.groups = [];\n    this.groupList = [];\n    this.generator = generator;\n    this.element = false;\n    this.elementContents = false;\n    this.height = 0;\n    this.outerHeight = 0;\n    this.initialized = false;\n    this.calcs = {};\n    this.initialized = false;\n    this.modules = {};\n    this.arrowElement = false;\n    this.visible = oldGroup ? oldGroup.visible : typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0];\n    this.component = null;\n    this.createElements();\n    this.addBindings();\n    this.createValueGroups();\n  }\n\n  wipe() {\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        group.wipe();\n      });\n    } else {\n      this.rows.forEach(row => {\n        if (row.modules) {\n          delete row.modules.group;\n        }\n      });\n    }\n\n    this.element = false;\n    this.arrowElement = false;\n    this.elementContents = false;\n  }\n\n  createElements() {\n    var arrow = document.createElement(\"div\");\n    arrow.classList.add(\"tabulator-arrow\");\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-row\");\n    this.element.classList.add(\"tabulator-group\");\n    this.element.classList.add(\"tabulator-group-level-\" + this.level);\n    this.element.setAttribute(\"role\", \"rowgroup\");\n    this.arrowElement = document.createElement(\"div\");\n    this.arrowElement.classList.add(\"tabulator-group-toggle\");\n    this.arrowElement.appendChild(arrow); //setup movable rows\n\n    if (this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")) {\n      this.groupManager.table.modules.moveRow.initializeGroupHeader(this);\n    }\n  }\n\n  createValueGroups() {\n    var level = this.level + 1;\n\n    if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n      this.groupManager.allowedValues[level].forEach(value => {\n        this._createGroup(value, level);\n      });\n    }\n  }\n\n  addBindings() {\n    var toggleElement;\n\n    if (this.groupManager.table.options.groupToggleElement) {\n      toggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\n      toggleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.toggleVisibility();\n      });\n    }\n  }\n\n  _createGroup(groupID, level) {\n    var groupKey = level + \"_\" + groupID;\n    var group = new Group(this.groupManager, this, level, groupID, this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n\n  _addRowToGroup(row) {\n    var level = this.level + 1;\n\n    if (this.hasSubGroups) {\n      var groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\n          groupKey = level + \"_\" + groupID;\n\n      if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n        if (this.groups[groupKey]) {\n          this.groups[groupKey].addRow(row);\n        }\n      } else {\n        if (!this.groups[groupKey]) {\n          this._createGroup(groupID, level);\n        }\n\n        this.groups[groupKey].addRow(row);\n      }\n    }\n  }\n\n  _addRow(row) {\n    this.rows.push(row);\n    row.modules.group = this;\n  }\n\n  insertRow(row, to, after) {\n    var data = this.conformRowData({});\n    row.updateData(data);\n    var toIndex = this.rows.indexOf(to);\n\n    if (toIndex > -1) {\n      if (after) {\n        this.rows.splice(toIndex + 1, 0, row);\n      } else {\n        this.rows.splice(toIndex, 0, row);\n      }\n    } else {\n      if (after) {\n        this.rows.push(row);\n      } else {\n        this.rows.unshift(row);\n      }\n    }\n\n    row.modules.group = this;\n    this.generateGroupHeaderContents();\n\n    if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n      this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n    }\n\n    this.groupManager.updateGroupRows(true);\n  }\n\n  scrollHeader(left) {\n    if (this.arrowElement) {\n      this.arrowElement.style.marginLeft = left;\n      this.groupList.forEach(function (child) {\n        child.scrollHeader(left);\n      });\n    }\n  }\n\n  getRowIndex(row) {} //update row data to match grouping contraints\n\n\n  conformRowData(data) {\n    if (this.field) {\n      data[this.field] = this.key;\n    } else {\n      console.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\n    }\n\n    if (this.parent) {\n      data = this.parent.conformRowData(data);\n    }\n\n    return data;\n  }\n\n  removeRow(row) {\n    var index = this.rows.indexOf(row);\n    var el = row.getElement();\n\n    if (index > -1) {\n      this.rows.splice(index, 1);\n    }\n\n    if (!this.groupManager.table.options.groupValues && !this.rows.length) {\n      if (this.parent) {\n        this.parent.removeGroup(this);\n      } else {\n        this.groupManager.removeGroup(this);\n      }\n\n      this.groupManager.updateGroupRows(true);\n    } else {\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n\n      this.generateGroupHeaderContents();\n\n      if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n        this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n      }\n    }\n  }\n\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n        index;\n\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n\n      if (!this.groupList.length) {\n        if (this.parent) {\n          this.parent.removeGroup(this);\n        } else {\n          this.groupManager.removeGroup(this);\n        }\n      }\n    }\n  }\n\n  getHeadersAndRows(noCalc) {\n    var output = [];\n    output.push(this);\n\n    this._visSet();\n\n    if (this.visible) {\n      if (this.groupList.length) {\n        this.groupList.forEach(function (group) {\n          output = output.concat(group.getHeadersAndRows(noCalc));\n        });\n      } else {\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n          if (this.calcs.top) {\n            this.calcs.top.detachElement();\n            this.calcs.top.deleteCells();\n          }\n\n          this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n          output.push(this.calcs.top);\n        }\n\n        output = output.concat(this.rows);\n\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n          if (this.calcs.bottom) {\n            this.calcs.bottom.detachElement();\n            this.calcs.bottom.deleteCells();\n          }\n\n          this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n          output.push(this.calcs.bottom);\n        }\n      }\n    } else {\n      if (!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\") {\n        if (this.groupManager.table.modExists(\"columnCalcs\")) {\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n            if (this.calcs.top) {\n              this.calcs.top.detachElement();\n              this.calcs.top.deleteCells();\n            }\n\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n              output.push(this.calcs.top);\n            }\n          }\n\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n            if (this.calcs.bottom) {\n              this.calcs.bottom.detachElement();\n              this.calcs.bottom.deleteCells();\n            }\n\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n              output.push(this.calcs.bottom);\n            }\n          }\n        }\n      }\n    }\n\n    return output;\n  }\n\n  getData(visible, transform) {\n    var output = [];\n\n    this._visSet();\n\n    if (!visible || visible && this.visible) {\n      this.rows.forEach(row => {\n        output.push(row.getData(transform || \"data\"));\n      });\n    }\n\n    return output;\n  }\n\n  getRowCount() {\n    var count = 0;\n\n    if (this.groupList.length) {\n      this.groupList.forEach(group => {\n        count += group.getRowCount();\n      });\n    } else {\n      count = this.rows.length;\n    }\n\n    return count;\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  hide() {\n    this.visible = false;\n\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.remove(\"tabulator-group-visible\");\n\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            row.detachElement();\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          rowEl.parentNode.removeChild(rowEl);\n        });\n      }\n\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\n  }\n\n  show() {\n    this.visible = true;\n\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.add(\"tabulator-group-visible\");\n      var prev = this.generateElement();\n\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            var rowEl = row.getElement();\n            prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n            row.initialize();\n            prev = rowEl;\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n          row.initialize();\n          prev = rowEl;\n        });\n      }\n\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\n  }\n\n  _visSet() {\n    var data = [];\n\n    if (typeof this.visible == \"function\") {\n      this.rows.forEach(function (row) {\n        data.push(row.getData());\n      });\n      this.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\n    }\n  }\n\n  getRowGroup(row) {\n    var match = false;\n\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        var result = group.getRowGroup(row);\n\n        if (result) {\n          match = result;\n        }\n      });\n    } else {\n      if (this.rows.find(function (item) {\n        return item === row;\n      })) {\n        match = this;\n      }\n    }\n\n    return match;\n  }\n\n  getSubGroups(component) {\n    var output = [];\n    this.groupList.forEach(function (child) {\n      output.push(component ? child.getComponent() : child);\n    });\n    return output;\n  }\n\n  getRows(compoment) {\n    var output = [];\n    this.rows.forEach(function (row) {\n      output.push(compoment ? row.getComponent() : row);\n    });\n    return output;\n  }\n\n  generateGroupHeaderContents() {\n    var data = [];\n    this.rows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    this.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\n\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n\n    if (typeof this.elementContents === \"string\") {\n      this.element.innerHTML = this.elementContents;\n    } else {\n      this.element.appendChild(this.elementContents);\n    }\n\n    this.element.insertBefore(this.arrowElement, this.element.firstChild);\n  }\n\n  getPath() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    path.unshift(this.key);\n\n    if (this.parent) {\n      this.parent.getPath(path);\n    }\n\n    return path;\n  } ////////////// Standard Row Functions //////////////\n\n\n  getElement() {\n    return this.elementContents ? this.element : this.generateElement();\n  }\n\n  generateElement() {\n    this.addBindings = false;\n\n    this._visSet();\n\n    if (this.visible) {\n      this.element.classList.add(\"tabulator-group-visible\");\n    } else {\n      this.element.classList.remove(\"tabulator-group-visible\");\n    }\n\n    for (var i = 0; i < this.element.childNodes.length; ++i) {\n      this.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\n    }\n\n    this.generateGroupHeaderContents(); // this.addBindings();\n\n    return this.element;\n  }\n\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  } //normalize the height of elements in the row\n\n\n  normalizeHeight() {\n    this.setHeight(this.element.clientHeight);\n  }\n\n  initialize(force) {\n    if (!this.initialized || force) {\n      this.normalizeHeight();\n      this.initialized = true;\n    }\n  }\n\n  reinitialize() {\n    this.initialized = false;\n    this.height = 0;\n\n    if (Helpers.elVisible(this.element)) {\n      this.initialize(true);\n    }\n  }\n\n  setHeight(height) {\n    if (this.height != height) {\n      this.height = height;\n      this.outerHeight = this.element.offsetHeight;\n    }\n  } //return rows outer height\n\n\n  getHeight() {\n    return this.outerHeight;\n  }\n\n  getGroup() {\n    return this;\n  }\n\n  reinitializeHeight() {}\n\n  calcHeight() {}\n\n  setCellHeight() {}\n\n  clearCellHeight() {}\n\n  deinitializeHeight() {} //////////////// Object Generation /////////////////\n\n\n  getComponent() {\n    if (!this.component) {\n      this.component = new GroupComponent(this);\n    }\n\n    return this.component;\n  }\n\n}\n\nclass GroupRows extends Module {\n  constructor(table) {\n    super(table);\n    this.groupIDLookups = false; //enable table grouping and set field to group by\n\n    this.startOpen = [function () {\n      return false;\n    }]; //starting state of group\n\n    this.headerGenerator = [function () {\n      return \"\";\n    }];\n    this.groupList = []; //ordered list of groups\n\n    this.allowedValues = false;\n    this.groups = {}; //hold row groups\n\n    this.displayIndex = 0; //index in display pipeline\n\n    this.displayHandler = this.getRows.bind(this); //register table options\n\n    this.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\n\n    this.registerTableOption(\"groupStartOpen\", true); //starting state of group\n\n    this.registerTableOption(\"groupValues\", false);\n    this.registerTableOption(\"groupUpdateOnCellEdit\", false);\n    this.registerTableOption(\"groupHeader\", false); //header generation function\n\n    this.registerTableOption(\"groupHeaderPrint\", null);\n    this.registerTableOption(\"groupHeaderClipboard\", null);\n    this.registerTableOption(\"groupHeaderHtmlOutput\", null);\n    this.registerTableOption(\"groupHeaderDownload\", null);\n    this.registerTableOption(\"groupToggleElement\", \"arrow\");\n    this.registerTableOption(\"groupClosedShowCalcs\", false); //register table functions\n\n    this.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\n    this.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\n    this.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\n    this.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\n    this.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\n    this.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\n  } //initialize group configuration\n\n\n  initialize() {\n    if (this.table.options.groupBy) {\n      if (this.table.options.groupUpdateOnCellEdit) {\n        this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n        this.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\n      }\n\n      this.subscribe(\"table-built\", this.configureGroupSetup.bind(this));\n      this.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\n      this.subscribe(\"rows-wipe\", this.wipe.bind(this));\n      this.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-moving\", this.rowMoving.bind(this));\n      this.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\n      this.subscribe(\"rows-sample\", this.rowSample.bind(this));\n      this.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\n      this.registerDisplayHandler(this.displayHandler, 20);\n      this.initialized = true;\n    }\n  }\n\n  configureGroupSetup() {\n    if (this.table.options.groupBy) {\n      var groupBy = this.table.options.groupBy,\n          startOpen = this.table.options.groupStartOpen,\n          groupHeader = this.table.options.groupHeader;\n      this.allowedValues = this.table.options.groupValues;\n\n      if (Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length) {\n        console.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\n      }\n\n      this.headerGenerator = [function () {\n        return \"\";\n      }];\n      this.startOpen = [function () {\n        return false;\n      }]; //starting state of group\n\n      this.langBind(\"groups|item\", (langValue, lang) => {\n        this.headerGenerator[0] = (value, count, data) => {\n          //header layout function\n          return (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + (count === 1 ? langValue : lang.groups.items) + \")</span>\";\n        };\n      });\n      this.groupIDLookups = [];\n\n      if (Array.isArray(groupBy) || groupBy) {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\") {\n          this.table.modules.columnCalcs.removeCalcs();\n        }\n      } else {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\") {\n          var cols = this.table.columnManager.getRealColumns();\n          cols.forEach(col => {\n            if (col.definition.topCalc) {\n              this.table.modules.columnCalcs.initializeTopRow();\n            }\n\n            if (col.definition.bottomCalc) {\n              this.table.modules.columnCalcs.initializeBottomRow();\n            }\n          });\n        }\n      }\n\n      if (!Array.isArray(groupBy)) {\n        groupBy = [groupBy];\n      }\n\n      groupBy.forEach((group, i) => {\n        var lookupFunc, column;\n\n        if (typeof group == \"function\") {\n          lookupFunc = group;\n        } else {\n          column = this.table.columnManager.getColumnByField(group);\n\n          if (column) {\n            lookupFunc = function (data) {\n              return column.getFieldValue(data);\n            };\n          } else {\n            lookupFunc = function (data) {\n              return data[group];\n            };\n          }\n        }\n\n        this.groupIDLookups.push({\n          field: typeof group === \"function\" ? false : group,\n          func: lookupFunc,\n          values: this.allowedValues ? this.allowedValues[i] : false\n        });\n      });\n\n      if (startOpen) {\n        if (!Array.isArray(startOpen)) {\n          startOpen = [startOpen];\n        }\n\n        startOpen.forEach(level => {});\n        this.startOpen = startOpen;\n      }\n\n      if (groupHeader) {\n        this.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\n      }\n    }\n  }\n\n  rowSample(rows, prevValue) {\n    var group = this.getGroups(false)[0];\n    prevValue.push(group.getRows(false)[0]);\n    return prevValue;\n  }\n\n  virtualRenderFill() {\n    var el = this.table.rowManager.tableElement;\n    var rows = this.table.rowManager.getVisibleRows();\n    rows = rows.filter(row => {\n      return row.type !== \"group\";\n    });\n    el.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\"; // if(this.table.options.groupBy){\n    // \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\n    // \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    // \t}\n    // }\n  }\n\n  rowAddingIndex(row, index, top) {\n    this.assignRowToGroup(row);\n    var groupRows = row.modules.group.rows;\n\n    if (groupRows.length > 1) {\n      if (!index || index && groupRows.indexOf(index) == -1) {\n        if (top) {\n          if (groupRows[0] !== row) {\n            index = groupRows[0];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        } else {\n          if (groupRows[groupRows.length - 1] !== row) {\n            index = groupRows[groupRows.length - 1];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        }\n      } else {\n        this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n      }\n    }\n\n    return index;\n  }\n\n  trackChanges() {\n    this.dispatch(\"group-changed\");\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  setGroupBy(groups) {\n    this.table.options.groupBy = groups;\n\n    if (!this.initialized) {\n      this.initialize();\n    } else {\n      this.configureGroupSetup();\n    }\n\n    this.refreshData();\n    this.trackChanges();\n  }\n\n  setGroupValues(groupValues) {\n    this.table.options.groupValues = groupValues;\n    this.configureGroupSetup();\n    this.refreshData();\n    this.trackChanges();\n  }\n\n  setGroupStartOpen(values) {\n    this.table.options.groupStartOpen = values;\n    this.configureGroupSetup();\n\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n\n  setGroupHeader(values) {\n    this.table.options.groupHeader = values;\n    this.configureGroupSetup();\n\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n\n  userGetGroups(values) {\n    return this.getGroups(true);\n  } // get grouped table data in the same format as getData()\n\n\n  userGetGroupedData() {\n    return this.table.options.groupBy ? this.getGroupedData() : this.getData();\n  } ///////////////////////////////////////\n  ///////// Component Functions /////////\n  ///////////////////////////////////////\n\n\n  rowGetGroup(row) {\n    return row.modules.group ? row.modules.group.getComponent() : false;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  rowMoving(from, to, after) {\n    if (!after && to instanceof Group) {\n      to = this.table.rowManager.prevDisplayRow(from) || to;\n    }\n\n    var toGroup = to instanceof Group ? to : to.modules.group;\n    var fromGroup = from instanceof Group ? from : from.modules.group;\n\n    if (toGroup === fromGroup) {\n      this.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\n    } else {\n      if (fromGroup) {\n        fromGroup.removeRow(from);\n      }\n\n      toGroup.insertRow(from, to, after);\n    }\n  }\n\n  rowDeleting(row) {\n    //remove from group\n    if (row.modules.group) {\n      row.modules.group.removeRow(row);\n    }\n  }\n\n  rowsUpdated(row) {\n    this.updateGroupRows(true);\n  }\n\n  cellUpdated(cell) {\n    this.reassignRowToGroup(cell.row);\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  } //return appropriate rows with group headers\n\n\n  getRows(rows) {\n    if (this.table.options.groupBy && this.groupIDLookups.length) {\n      this.dispatchExternal(\"dataGrouping\");\n      this.generateGroups(rows);\n\n      if (this.subscribedExternal(\"dataGrouped\")) {\n        this.dispatchExternal(\"dataGrouped\", this.getGroups(true));\n      }\n\n      return this.updateGroupRows();\n    } else {\n      return rows.slice(0);\n    }\n  }\n\n  getGroups(component) {\n    var groupComponents = [];\n    this.groupList.forEach(function (group) {\n      groupComponents.push(component ? group.getComponent() : group);\n    });\n    return groupComponents;\n  }\n\n  getChildGroups(group) {\n    var groupComponents = [];\n\n    if (!group) {\n      group = this;\n    }\n\n    group.groupList.forEach(child => {\n      if (child.groupList.length) {\n        groupComponents = groupComponents.concat(this.getChildGroups(child));\n      } else {\n        groupComponents.push(child);\n      }\n    });\n    return groupComponents;\n  }\n\n  wipe() {\n    this.groupList.forEach(function (group) {\n      group.wipe();\n    });\n  }\n\n  pullGroupListData(groupList) {\n    var groupListData = [];\n    groupList.forEach(group => {\n      var groupHeader = {};\n      groupHeader.level = 0;\n      groupHeader.rowCount = 0;\n      groupHeader.headerContent = \"\";\n      var childData = [];\n\n      if (group.hasSubGroups) {\n        childData = this.pullGroupListData(group.groupList);\n        groupHeader.level = group.level;\n        groupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\n\n        groupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\n        groupListData.push(groupHeader);\n        groupListData = groupListData.concat(childData);\n      } else {\n        groupHeader.level = group.level;\n        groupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\n        groupHeader.rowCount = group.getRows().length;\n        groupListData.push(groupHeader);\n        group.getRows().forEach(row => {\n          groupListData.push(row.getData(\"data\"));\n        });\n      }\n    });\n    return groupListData;\n  }\n\n  getGroupedData() {\n    return this.pullGroupListData(this.groupList);\n  }\n\n  getRowGroup(row) {\n    var match = false;\n    this.groupList.forEach(group => {\n      var result = group.getRowGroup(row);\n\n      if (result) {\n        match = result;\n      }\n    });\n    return match;\n  }\n\n  countGroups() {\n    return this.groupList.length;\n  }\n\n  generateGroups(rows) {\n    var oldGroups = this.groups;\n    this.groups = {};\n    this.groupList = [];\n\n    if (this.allowedValues && this.allowedValues[0]) {\n      this.allowedValues[0].forEach(value => {\n        this.createGroup(value, 0, oldGroups);\n      });\n      rows.forEach(row => {\n        this.assignRowToExistingGroup(row, oldGroups);\n      });\n    } else {\n      rows.forEach(row => {\n        this.assignRowToGroup(row, oldGroups);\n      });\n    }\n  }\n\n  createGroup(groupID, level, oldGroups) {\n    var groupKey = level + \"_\" + groupID,\n        group;\n    oldGroups = oldGroups || [];\n    group = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n\n  assignRowToExistingGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n        groupKey = \"0_\" + groupID;\n\n    if (this.groups[groupKey]) {\n      this.groups[groupKey].addRow(row);\n    }\n  }\n\n  assignRowToGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n        newGroupNeeded = !this.groups[\"0_\" + groupID];\n\n    if (newGroupNeeded) {\n      this.createGroup(groupID, 0, oldGroups);\n    }\n\n    this.groups[\"0_\" + groupID].addRow(row);\n    return !newGroupNeeded;\n  }\n\n  reassignRowToGroup(row) {\n    if (row.type === \"row\") {\n      var oldRowGroup = row.modules.group,\n          oldGroupPath = oldRowGroup.getPath(),\n          newGroupPath = this.getExpectedPath(row),\n          samePath = true; // figure out if new group path is the same as old group path\n\n      var samePath = oldGroupPath.length == newGroupPath.length && oldGroupPath.every((element, index) => {\n        return element === newGroupPath[index];\n      }); // refresh if they new path and old path aren't the same (aka the row's groupings have changed)\n\n      if (!samePath) {\n        oldRowGroup.removeRow(row);\n        this.assignRowToGroup(row, this.groups);\n        this.refreshData(true);\n      }\n    }\n  }\n\n  getExpectedPath(row) {\n    var groupPath = [],\n        rowData = row.getData();\n    this.groupIDLookups.forEach(groupId => {\n      groupPath.push(groupId.func(rowData));\n    });\n    return groupPath;\n  }\n\n  updateGroupRows(force) {\n    var output = [];\n    this.groupList.forEach(group => {\n      output = output.concat(group.getHeadersAndRows());\n    });\n\n    if (force) {\n      this.refreshData(true, this.displayHandler);\n    }\n\n    return output;\n  }\n\n  scrollHeaders(left) {\n    if (this.table.options.renderHorizontal === \"virtual\") {\n      left -= this.table.columnManager.renderer.vDomPadLeft;\n    }\n\n    left = left + \"px\";\n    this.groupList.forEach(group => {\n      group.scrollHeader(left);\n    });\n  }\n\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n        index;\n\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n    }\n  }\n\n}\n\nGroupRows.moduleName = \"groupRows\";\nvar defaultUndoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.oldValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    action.component.deleteActual();\n  },\n  rowDelete: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n\n    this._rebindRow(action.component, newRow);\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nvar defaultRedoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.newValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n\n    this._rebindRow(action.component, newRow);\n  },\n  rowDelete: function (action) {\n    action.component.deleteActual();\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\n\nclass History extends Module {\n  constructor(table) {\n    super(table);\n    this.history = [];\n    this.index = -1;\n    this.registerTableOption(\"history\", false); //enable edit history\n  }\n\n  initialize() {\n    if (this.table.options.history) {\n      this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n      this.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\n      this.subscribe(\"row-delete\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clear.bind(this));\n      this.subscribe(\"row-added\", this.rowAdded.bind(this));\n      this.subscribe(\"row-move\", this.rowMoved.bind(this));\n    }\n\n    this.registerTableFunction(\"undo\", this.undo.bind(this));\n    this.registerTableFunction(\"redo\", this.redo.bind(this));\n    this.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\n    this.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\n    this.registerTableFunction(\"clearHistory\", this.clear.bind(this));\n  }\n\n  rowMoved(from, to, after) {\n    this.action(\"rowMove\", from, {\n      posFrom: this.table.rowManager.getRowPosition(from),\n      posTo: this.table.rowManager.getRowPosition(to),\n      to: to,\n      after: after\n    });\n  }\n\n  rowAdded(row, data, pos, index) {\n    this.action(\"rowAdd\", row, {\n      data: data,\n      pos: pos,\n      index: index\n    });\n  }\n\n  rowDeleted(row) {\n    var index, rows;\n\n    if (this.table.options.groupBy) {\n      rows = row.getComponent().getGroup().rows;\n      index = rows.indexOf(row);\n\n      if (index) {\n        index = rows[index - 1];\n      }\n    } else {\n      index = row.table.rowManager.getRowIndex(row);\n\n      if (index) {\n        index = row.table.rowManager.rows[index - 1];\n      }\n    }\n\n    this.action(\"rowDelete\", row, {\n      data: row.getData(),\n      pos: !index,\n      index: index\n    });\n  }\n\n  cellUpdated(cell) {\n    this.action(\"cellEdit\", cell, {\n      oldValue: cell.oldValue,\n      newValue: cell.value\n    });\n  }\n\n  clear() {\n    this.history = [];\n    this.index = -1;\n  }\n\n  action(type, component, data) {\n    this.history = this.history.slice(0, this.index + 1);\n    this.history.push({\n      type: type,\n      component: component,\n      data: data\n    });\n    this.index++;\n  }\n\n  getHistoryUndoSize() {\n    return this.index + 1;\n  }\n\n  getHistoryRedoSize() {\n    return this.history.length - (this.index + 1);\n  }\n\n  clearComponentHistory(component) {\n    var index = this.history.findIndex(function (item) {\n      return item.component === component;\n    });\n\n    if (index > -1) {\n      this.history.splice(index, 1);\n\n      if (index <= this.index) {\n        this.index--;\n      }\n\n      this.clearComponentHistory(component);\n    }\n  }\n\n  undo() {\n    if (this.index > -1) {\n      let action = this.history[this.index];\n      History.undoers[action.type].call(this, action);\n      this.index--;\n      this.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Undo Error - No more history to undo\");\n      return false;\n    }\n  }\n\n  redo() {\n    if (this.history.length - 1 > this.index) {\n      this.index++;\n      let action = this.history[this.index];\n      History.redoers[action.type].call(this, action);\n      this.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Redo Error - No more history to redo\");\n      return false;\n    }\n  } //rebind rows to new element after deletion\n\n\n  _rebindRow(oldRow, newRow) {\n    this.history.forEach(function (action) {\n      if (action.component instanceof Row) {\n        if (action.component === oldRow) {\n          action.component = newRow;\n        }\n      } else if (action.component instanceof Cell) {\n        if (action.component.row === oldRow) {\n          var field = action.component.column.getField();\n\n          if (field) {\n            action.component = newRow.getCell(field);\n          }\n        }\n      }\n    });\n  }\n\n}\n\nHistory.moduleName = \"history\"; //load defaults\n\nHistory.undoers = defaultUndoers;\nHistory.redoers = defaultRedoers;\n\nclass HtmlTableImport extends Module {\n  constructor(table) {\n    super(table);\n    this.fieldIndex = [];\n    this.hasIndex = false;\n  }\n\n  initialize() {\n    this.tableElementCheck();\n  }\n\n  tableElementCheck() {\n    if (this.table.originalElement && this.table.originalElement.tagName === \"TABLE\") {\n      if (this.table.originalElement.childNodes.length) {\n        this.parseTable();\n      } else {\n        console.warn(\"Unable to parse data from empty table tag, Tabulator should be initialized on a div tag unless importing data from a table element.\");\n      }\n    }\n  }\n\n  parseTable() {\n    var element = this.table.originalElement,\n        options = this.table.options,\n        columns = options.columns,\n        headers = element.getElementsByTagName(\"th\"),\n        rows = element.getElementsByTagName(\"tbody\")[0],\n        data = [];\n    this.hasIndex = false;\n    this.dispatchExternal(\"htmlImporting\");\n    rows = rows ? rows.getElementsByTagName(\"tr\") : []; //check for Tabulator inline options\n\n    this._extractOptions(element, options);\n\n    if (headers.length) {\n      this._extractHeaders(headers, rows);\n    } else {\n      this._generateBlankHeaders(headers, rows);\n    } //iterate through table rows and build data set\n\n\n    for (var index = 0; index < rows.length; index++) {\n      var row = rows[index],\n          cells = row.getElementsByTagName(\"td\"),\n          item = {}; //create index if the dont exist in table\n\n      if (!this.hasIndex) {\n        item[options.index] = index;\n      }\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n\n        if (typeof this.fieldIndex[i] !== \"undefined\") {\n          item[this.fieldIndex[i]] = cell.innerHTML;\n        }\n      } //add row data to item\n\n\n      data.push(item);\n    }\n\n    options.data = data;\n    this.dispatchExternal(\"htmlImported\");\n  } //extract tabulator attribute options\n\n\n  _extractOptions(element, options, defaultOptions) {\n    var attributes = element.attributes;\n    var optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\n    var optionsList = {};\n    optionsArr.forEach(item => {\n      optionsList[item.toLowerCase()] = item;\n    });\n\n    for (var index in attributes) {\n      var attrib = attributes[index];\n      var name;\n\n      if (attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0) {\n        name = attrib.name.replace(\"tabulator-\", \"\");\n\n        if (typeof optionsList[name] !== \"undefined\") {\n          options[optionsList[name]] = this._attribValue(attrib.value);\n        }\n      }\n    }\n  } //get value of attribute\n\n\n  _attribValue(value) {\n    if (value === \"true\") {\n      return true;\n    }\n\n    if (value === \"false\") {\n      return false;\n    }\n\n    return value;\n  } //find column if it has already been defined\n\n\n  _findCol(title) {\n    var match = this.table.options.columns.find(column => {\n      return column.title === title;\n    });\n    return match || false;\n  } //extract column from headers\n\n\n  _extractHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n          exists = false,\n          col = this._findCol(header.textContent),\n          width;\n\n      if (col) {\n        exists = true;\n      } else {\n        col = {\n          title: header.textContent.trim()\n        };\n      }\n\n      if (!col.field) {\n        col.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\n      }\n\n      width = header.getAttribute(\"width\");\n\n      if (width && !col.width) {\n        col.width = width;\n      } //check for Tabulator inline options\n\n\n      this._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\n\n      this.fieldIndex[index] = col.field;\n\n      if (col.field == this.table.options.index) {\n        this.hasIndex = true;\n      }\n\n      if (!exists) {\n        this.table.options.columns.push(col);\n      }\n    }\n  } //generate blank headers\n\n\n  _generateBlankHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n          col = {\n        title: \"\",\n        field: \"col\" + index\n      };\n      this.fieldIndex[index] = col.field;\n      var width = header.getAttribute(\"width\");\n\n      if (width) {\n        col.width = width;\n      }\n\n      this.table.options.columns.push(col);\n    }\n  }\n\n}\n\nHtmlTableImport.moduleName = \"htmlTableImport\";\n\nfunction csvImporter(input) {\n  var data = [],\n      row = 0,\n      col = 0,\n      inQuote = false; //Iterate over each character\n\n  for (let index = 0; index < input.length; index++) {\n    let char = input[index],\n        nextChar = input[index + 1]; //Initialize empty row\n\n    if (!data[row]) {\n      data[row] = [];\n    } //Initialize empty column\n\n\n    if (!data[row][col]) {\n      data[row][col] = \"\";\n    } //Handle quotation mark inside string\n\n\n    if (char == '\"' && inQuote && nextChar == '\"') {\n      data[row][col] += char;\n      index++;\n      continue;\n    } //Begin / End Quote\n\n\n    if (char == '\"') {\n      inQuote = !inQuote;\n      continue;\n    } //Next column (if not in quote)\n\n\n    if (char == ',' && !inQuote) {\n      col++;\n      continue;\n    } //New row if new line and not in quote (CRLF) \n\n\n    if (char == '\\r' && nextChar == '\\n' && !inQuote) {\n      col = 0;\n      row++;\n      index++;\n      continue;\n    } //New row if new line and not in quote (CR or LF) \n\n\n    if ((char == '\\r' || char == '\\n') && !inQuote) {\n      col = 0;\n      row++;\n      continue;\n    } //Normal Character, append to column\n\n\n    data[row][col] += char;\n  }\n\n  return data;\n}\n\nfunction json$1(input) {\n  try {\n    return JSON.parse(input);\n  } catch (e) {\n    console.warn(\"JSON Import Error - File contents is invalid JSON\", e);\n    return Promise.reject();\n  }\n}\n\nvar defaultImporters = {\n  csv: csvImporter,\n  json: json$1\n};\n\nclass Import extends Module {\n  constructor(table) {\n    super(table);\n    this.registerTableOption(\"importFormat\");\n    this.registerTableOption(\"importReader\", \"text\");\n  }\n\n  initialize() {\n    this.registerTableFunction(\"import\", this.importFromFile.bind(this));\n\n    if (this.table.options.importFormat) {\n      this.subscribe(\"data-loading\", this.loadDataCheck.bind(this), 10);\n      this.subscribe(\"data-load\", this.loadData.bind(this), 10);\n    }\n  }\n\n  loadDataCheck(data) {\n    return typeof data === \"string\";\n  }\n\n  loadData(data, params, config, silent, previousData) {\n    return this.importData(this.lookupImporter(), data).then(this.structureData.bind(this)).catch(err => {\n      console.error(\"Import Error:\", err || \"Unable to import data\");\n      return Promise.reject(err);\n    });\n  }\n\n  lookupImporter(importFormat) {\n    var importer;\n\n    if (!importFormat) {\n      importFormat = this.table.options.importFormat;\n    }\n\n    if (typeof importFormat === \"string\") {\n      importer = Import.importers[importFormat];\n    } else {\n      importer = importFormat;\n    }\n\n    if (!importer) {\n      console.error(\"Import Error - Importer not found:\", importFormat);\n    }\n\n    return importer;\n  }\n\n  importFromFile(importFormat, extension) {\n    var importer = this.lookupImporter(importFormat);\n\n    if (importer) {\n      return this.pickFile(extension).then(this.importData.bind(this, importer)).then(this.structureData.bind(this)).then(this.setData.bind(this)).catch(err => {\n        console.error(\"Import Error:\", err || \"Unable to import file\");\n        return Promise.reject(err);\n      });\n    }\n  }\n\n  pickFile(extensions) {\n    return new Promise((resolve, reject) => {\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = extensions;\n      input.addEventListener(\"change\", e => {\n        var file = input.files[0],\n            reader = new FileReader();\n\n        switch (this.table.options.importReader) {\n          case \"buffer\":\n            reader.readAsArrayBuffer(file);\n            break;\n\n          case \"binary\":\n            reader.readAsBinaryString(file);\n            break;\n\n          case \"url\":\n            reader.readAsDataURL(file);\n            break;\n\n          case \"text\":\n          default:\n            reader.readAsText(file);\n        }\n\n        reader.onload = e => {\n          resolve(reader.result);\n        };\n\n        reader.onerror = e => {\n          console.warn(\"File Load Error - Unable to read file\");\n          reject();\n        };\n      });\n      input.click();\n    });\n  }\n\n  importData(importer, fileContents) {\n    var data = importer.call(this.table, fileContents);\n\n    if (data instanceof Promise) {\n      return data;\n    } else {\n      return data ? Promise.resolve(data) : Promise.reject();\n    }\n  }\n\n  structureData(parsedData) {\n    var data = [];\n\n    if (Array.isArray(parsedData) && parsedData.length && Array.isArray(parsedData[0])) {\n      if (this.table.options.autoColumns) {\n        data = this.structureArrayToObject(parsedData);\n      } else {\n        data = this.structureArrayToColumns(parsedData);\n      }\n\n      return data;\n    } else {\n      return parsedData;\n    }\n  }\n\n  structureArrayToObject(parsedData) {\n    var columns = parsedData.shift();\n    var data = parsedData.map(values => {\n      var row = {};\n      columns.forEach((key, i) => {\n        row[key] = values[i];\n      });\n      return row;\n    });\n    return data;\n  }\n\n  structureArrayToColumns(parsedData) {\n    var data = [],\n        columns = this.table.getColumns(); //remove first row if it is the column names\n\n    if (columns[0] && parsedData[0][0]) {\n      if (columns[0].getDefinition().title === parsedData[0][0]) {\n        parsedData.shift();\n      }\n    } //convert row arrays to objects\n\n\n    parsedData.forEach(rowData => {\n      var row = {};\n      rowData.forEach((value, index) => {\n        var column = columns[index];\n\n        if (column) {\n          row[column.getField()] = value;\n        }\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  setData(data) {\n    return this.table.setData(data);\n  }\n\n}\n\nImport.moduleName = \"import\"; //load defaults\n\nImport.importers = defaultImporters;\n\nclass Interaction extends Module {\n  constructor(table) {\n    super(table);\n    this.eventMap = {\n      //row events\n      rowClick: \"row-click\",\n      rowDblClick: \"row-dblclick\",\n      rowContext: \"row-contextmenu\",\n      rowMouseEnter: \"row-mouseenter\",\n      rowMouseLeave: \"row-mouseleave\",\n      rowMouseOver: \"row-mouseover\",\n      rowMouseOut: \"row-mouseout\",\n      rowMouseMove: \"row-mousemove\",\n      rowTap: \"row\",\n      rowDblTap: \"row\",\n      rowTapHold: \"row\",\n      //cell events\n      cellClick: \"cell-click\",\n      cellDblClick: \"cell-dblclick\",\n      cellContext: \"cell-contextmenu\",\n      cellMouseEnter: \"cell-mouseenter\",\n      cellMouseLeave: \"cell-mouseleave\",\n      cellMouseOver: \"cell-mouseover\",\n      cellMouseOut: \"cell-mouseout\",\n      cellMouseMove: \"cell-mousemove\",\n      cellTap: \"cell\",\n      cellDblTap: \"cell\",\n      cellTapHold: \"cell\",\n      //column header events\n      headerClick: \"column-click\",\n      headerDblClick: \"column-dblclick\",\n      headerContext: \"column-contextmenu\",\n      headerMouseEnter: \"column-mouseenter\",\n      headerMouseLeave: \"column-mouseleave\",\n      headerMouseOver: \"column-mouseover\",\n      headerMouseOut: \"column-mouseout\",\n      headerMouseMove: \"column-mousemove\",\n      headerTap: \"column\",\n      headerDblTap: \"column\",\n      headerTapHold: \"column\",\n      //group header\n      groupClick: \"group-click\",\n      groupDblClick: \"group-dblclick\",\n      groupContext: \"group-contextmenu\",\n      groupMouseEnter: \"group-mouseenter\",\n      groupMouseLeave: \"group-mouseleave\",\n      groupMouseOver: \"group-mouseover\",\n      groupMouseOut: \"group-mouseout\",\n      groupMouseMove: \"group-mousemove\",\n      groupTap: \"group\",\n      groupDblTap: \"group\",\n      groupTapHold: \"group\"\n    };\n    this.subscribers = {};\n    this.touchSubscribers = {};\n    this.columnSubscribers = {};\n    this.touchWatchers = {\n      row: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      cell: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      column: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      group: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      }\n    };\n    this.registerColumnOption(\"headerClick\");\n    this.registerColumnOption(\"headerDblClick\");\n    this.registerColumnOption(\"headerContext\");\n    this.registerColumnOption(\"headerMouseEnter\");\n    this.registerColumnOption(\"headerMouseLeave\");\n    this.registerColumnOption(\"headerMouseOver\");\n    this.registerColumnOption(\"headerMouseOut\");\n    this.registerColumnOption(\"headerMouseMove\");\n    this.registerColumnOption(\"headerTap\");\n    this.registerColumnOption(\"headerDblTap\");\n    this.registerColumnOption(\"headerTapHold\");\n    this.registerColumnOption(\"cellClick\");\n    this.registerColumnOption(\"cellDblClick\");\n    this.registerColumnOption(\"cellContext\");\n    this.registerColumnOption(\"cellMouseEnter\");\n    this.registerColumnOption(\"cellMouseLeave\");\n    this.registerColumnOption(\"cellMouseOver\");\n    this.registerColumnOption(\"cellMouseOut\");\n    this.registerColumnOption(\"cellMouseMove\");\n    this.registerColumnOption(\"cellTap\");\n    this.registerColumnOption(\"cellDblTap\");\n    this.registerColumnOption(\"cellTapHold\");\n  }\n\n  initialize() {\n    this.initializeExternalEvents();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this));\n  }\n\n  cellContentsSelectionFixer(e, cell) {\n    if (this.table.modExists(\"edit\")) {\n      if (this.table.modules.edit.currentCell === this) {\n        return; //prevent instant selection of editor content\n      }\n    }\n\n    e.preventDefault();\n\n    try {\n      if (document.selection) {\n        // IE\n        var range = document.body.createTextRange();\n        range.moveToElementText(this.element);\n        range.select();\n      } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(this.element);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    } catch (e) {}\n  }\n\n  initializeExternalEvents() {\n    for (let key in this.eventMap) {\n      this.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key));\n    }\n  }\n\n  subscriptionChanged(key, added) {\n    if (added) {\n      if (!this.subscribers[key]) {\n        if (this.eventMap[key].includes(\"-\")) {\n          this.subscribers[key] = this.handle.bind(this, key);\n          this.subscribe(this.eventMap[key], this.subscribers[key]);\n        } else {\n          this.subscribeTouchEvents(key);\n        }\n      }\n    } else {\n      if (this.eventMap[key].includes(\"-\")) {\n        if (this.subscribers[key] && !this.columnSubscribers[key] && !this.subscribedExternal(key)) {\n          this.unsubscribe(this.eventMap[key], this.subscribers[key]);\n          delete this.subscribers[key];\n        }\n      } else {\n        this.unsubscribeTouchEvents(key);\n      }\n    }\n  }\n\n  subscribeTouchEvents(key) {\n    var type = this.eventMap[key];\n\n    if (!this.touchSubscribers[type + \"-touchstart\"]) {\n      this.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\n      this.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\n      this.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n      this.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n    }\n\n    this.subscribers[key] = true;\n  }\n\n  unsubscribeTouchEvents(key) {\n    var notouch = true,\n        type = this.eventMap[key];\n\n    if (this.subscribers[key] && !this.subscribedExternal(key)) {\n      delete this.subscribers[key];\n\n      for (let i in this.eventMap) {\n        if (this.eventMap[i] === type) {\n          if (this.subscribers[i]) {\n            notouch = false;\n          }\n        }\n      }\n\n      if (notouch) {\n        this.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n        this.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n        delete this.touchSubscribers[type + \"-touchstart\"];\n        delete this.touchSubscribers[type + \"-touchend\"];\n      }\n    }\n  }\n\n  initializeColumn(column) {\n    var def = column.definition;\n\n    for (let key in this.eventMap) {\n      if (def[key]) {\n        this.subscriptionChanged(key, true);\n\n        if (!this.columnSubscribers[key]) {\n          this.columnSubscribers[key] = [];\n        }\n\n        this.columnSubscribers[key].push(column);\n      }\n    }\n  }\n\n  handle(action, e, component) {\n    this.dispatchEvent(action, e, component);\n  }\n\n  handleTouch(type, action, e, component) {\n    var watchers = this.touchWatchers[type];\n\n    if (type === \"column\") {\n      type = \"header\";\n    }\n\n    switch (action) {\n      case \"start\":\n        watchers.tap = true;\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = setTimeout(() => {\n          clearTimeout(watchers.tapHold);\n          watchers.tapHold = null;\n          watchers.tap = null;\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"TapHold\", e, component);\n        }, 1000);\n        break;\n\n      case \"end\":\n        if (watchers.tap) {\n          watchers.tap = null;\n          this.dispatchEvent(type + \"Tap\", e, component);\n        }\n\n        if (watchers.tapDbl) {\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"DblTap\", e, component);\n        } else {\n          watchers.tapDbl = setTimeout(() => {\n            clearTimeout(watchers.tapDbl);\n            watchers.tapDbl = null;\n          }, 300);\n        }\n\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = null;\n        break;\n    }\n  }\n\n  dispatchEvent(action, e, component) {\n    var componentObj = component.getComponent(),\n        callback;\n\n    if (this.columnSubscribers[action]) {\n      if (component instanceof Cell) {\n        callback = component.column.definition[action];\n      } else if (component instanceof Column) {\n        callback = component.definition[action];\n      }\n\n      if (callback) {\n        callback(e, componentObj);\n      }\n    }\n\n    this.dispatchExternal(action, e, componentObj);\n  }\n\n}\n\nInteraction.moduleName = \"interaction\";\nvar defaultBindings = {\n  navPrev: \"shift + 9\",\n  navNext: 9,\n  navUp: 38,\n  navDown: 40,\n  scrollPageUp: 33,\n  scrollPageDown: 34,\n  scrollToStart: 36,\n  scrollToEnd: 35,\n  undo: [\"ctrl + 90\", \"meta + 90\"],\n  redo: [\"ctrl + 89\", \"meta + 89\"],\n  copyToClipboard: [\"ctrl + 67\", \"meta + 89\"]\n};\nvar defaultActions = {\n  keyBlock: function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n  },\n  scrollPageUp: function (e) {\n    var rowManager = this.table.rowManager,\n        newPos = rowManager.scrollTop - rowManager.element.clientHeight,\n        scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      if (newPos >= 0) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n      }\n    }\n\n    this.table.element.focus();\n  },\n  scrollPageDown: function (e) {\n    var rowManager = this.table.rowManager,\n        newPos = rowManager.scrollTop + rowManager.element.clientHeight,\n        scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      if (newPos <= scrollMax) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n      }\n    }\n\n    this.table.element.focus();\n  },\n  scrollToStart: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n    }\n\n    this.table.element.focus();\n  },\n  scrollToEnd: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n    }\n\n    this.table.element.focus();\n  },\n  navPrev: function (e) {\n    this.dispatch(\"keybinding-nav-prev\", e);\n  },\n  navNext: function (e) {\n    this.dispatch(\"keybinding-nav-next\", e);\n  },\n  navLeft: function (e) {\n    this.dispatch(\"keybinding-nav-left\", e);\n  },\n  navRight: function (e) {\n    this.dispatch(\"keybinding-nav-right\", e);\n  },\n  navUp: function (e) {\n    this.dispatch(\"keybinding-nav-up\", e);\n  },\n  navDown: function (e) {\n    this.dispatch(\"keybinding-nav-down\", e);\n  },\n  undo: function (e) {\n    var cell = false;\n\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.undo();\n      }\n    }\n  },\n  redo: function (e) {\n    var cell = false;\n\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.redo();\n      }\n    }\n  },\n  copyToClipboard: function (e) {\n    if (!this.table.modules.edit.currentCell) {\n      if (this.table.modExists(\"clipboard\", true)) {\n        this.table.modules.clipboard.copy(false, true);\n      }\n    }\n  }\n};\n\nclass Keybindings extends Module {\n  constructor(table) {\n    super(table);\n    this.watchKeys = null;\n    this.pressedKeys = null;\n    this.keyupBinding = false;\n    this.keydownBinding = false;\n    this.registerTableOption(\"keybindings\", {}); //array for keybindings\n\n    this.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\n  }\n\n  initialize() {\n    var bindings = this.table.options.keybindings,\n        mergedBindings = {};\n    this.watchKeys = {};\n    this.pressedKeys = [];\n\n    if (bindings !== false) {\n      Object.assign(mergedBindings, Keybindings.bindings);\n      Object.assign(mergedBindings, bindings);\n      this.mapBindings(mergedBindings);\n      this.bindEvents();\n    }\n\n    this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n  }\n\n  mapBindings(bindings) {\n    for (let key in bindings) {\n      if (Keybindings.actions[key]) {\n        if (bindings[key]) {\n          if (typeof bindings[key] !== \"object\") {\n            bindings[key] = [bindings[key]];\n          }\n\n          bindings[key].forEach(binding => {\n            var bindingList = Array.isArray(binding) ? binding : [binding];\n            bindingList.forEach(item => {\n              this.mapBinding(key, item);\n            });\n          });\n        }\n      } else {\n        console.warn(\"Key Binding Error - no such action:\", key);\n      }\n    }\n  }\n\n  mapBinding(action, symbolsList) {\n    var binding = {\n      action: Keybindings.actions[action],\n      keys: [],\n      ctrl: false,\n      shift: false,\n      meta: false\n    };\n    var symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\n    symbols.forEach(symbol => {\n      switch (symbol) {\n        case \"ctrl\":\n          binding.ctrl = true;\n          break;\n\n        case \"shift\":\n          binding.shift = true;\n          break;\n\n        case \"meta\":\n          binding.meta = true;\n          break;\n\n        default:\n          symbol = isNaN(symbol) ? symbol.toUpperCase().charCodeAt(0) : parseInt(symbol);\n          binding.keys.push(symbol);\n\n          if (!this.watchKeys[symbol]) {\n            this.watchKeys[symbol] = [];\n          }\n\n          this.watchKeys[symbol].push(binding);\n      }\n    });\n  }\n\n  bindEvents() {\n    var self = this;\n\n    this.keyupBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n\n      if (bindings) {\n        self.pressedKeys.push(code);\n        bindings.forEach(function (binding) {\n          self.checkBinding(e, binding);\n        });\n      }\n    };\n\n    this.keydownBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n\n      if (bindings) {\n        var index = self.pressedKeys.indexOf(code);\n\n        if (index > -1) {\n          self.pressedKeys.splice(index, 1);\n        }\n      }\n    };\n\n    this.table.element.addEventListener(\"keydown\", this.keyupBinding);\n    this.table.element.addEventListener(\"keyup\", this.keydownBinding);\n  }\n\n  clearBindings() {\n    if (this.keyupBinding) {\n      this.table.element.removeEventListener(\"keydown\", this.keyupBinding);\n    }\n\n    if (this.keydownBinding) {\n      this.table.element.removeEventListener(\"keyup\", this.keydownBinding);\n    }\n  }\n\n  checkBinding(e, binding) {\n    var match = true;\n\n    if (e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta) {\n      binding.keys.forEach(key => {\n        var index = this.pressedKeys.indexOf(key);\n\n        if (index == -1) {\n          match = false;\n        }\n      });\n\n      if (match) {\n        binding.action.call(this, e);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nKeybindings.moduleName = \"keybindings\"; //load defaults\n\nKeybindings.bindings = defaultBindings;\nKeybindings.actions = defaultActions;\n\nclass Menu extends Module {\n  constructor(table) {\n    super(table);\n    this.menuContainer = null;\n    this.nestedMenuBlock = false;\n    this.currentComponent = null;\n    this.rootPopup = null;\n    this.columnSubscribers = {};\n    this.registerTableOption(\"menuContainer\", undefined); //deprecated\n\n    this.registerTableOption(\"rowContextMenu\", false);\n    this.registerTableOption(\"rowClickMenu\", false);\n    this.registerTableOption(\"groupContextMenu\", false);\n    this.registerTableOption(\"groupClickMenu\", false);\n    this.registerColumnOption(\"headerContextMenu\");\n    this.registerColumnOption(\"headerClickMenu\");\n    this.registerColumnOption(\"headerMenu\");\n    this.registerColumnOption(\"headerMenuIcon\");\n    this.registerColumnOption(\"contextMenu\");\n    this.registerColumnOption(\"clickMenu\");\n  }\n\n  initialize() {\n    this.deprecationCheck();\n    this.initializeRowWatchers();\n    this.initializeGroupWatchers();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n  }\n\n  deprecationCheck() {\n    if (typeof this.table.options.menuContainer !== \"undefined\") {\n      console.warn(\"Use of the menuContainer option is now deprecated. Please use the popupContainer option instead\");\n      this.table.options.popupContainer = this.table.options.menuContainer;\n    }\n  }\n\n  initializeRowWatchers() {\n    if (this.table.options.rowContextMenu) {\n      this.subscribe(\"row-contextmenu\", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu));\n      this.table.on(\"rowTapHold\", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu));\n    }\n\n    if (this.table.options.rowClickMenu) {\n      this.subscribe(\"row-click\", this.loadMenuEvent.bind(this, this.table.options.rowClickMenu));\n    }\n  }\n\n  initializeGroupWatchers() {\n    if (this.table.options.groupContextMenu) {\n      this.subscribe(\"group-contextmenu\", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu));\n      this.table.on(\"groupTapHold\", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu));\n    }\n\n    if (this.table.options.groupClickMenu) {\n      this.subscribe(\"group-click\", this.loadMenuEvent.bind(this, this.table.options.groupClickMenu));\n    }\n  }\n\n  initializeColumn(column) {\n    var def = column.definition; //handle column events\n\n    if (def.headerContextMenu && !this.columnSubscribers.headerContextMenu) {\n      this.columnSubscribers.headerContextMenu = this.loadMenuTableColumnEvent.bind(this, \"headerContextMenu\");\n      this.subscribe(\"column-contextmenu\", this.columnSubscribers.headerContextMenu);\n      this.table.on(\"headerTapHold\", this.loadMenuTableColumnEvent.bind(this, \"headerContextMenu\"));\n    }\n\n    if (def.headerClickMenu && !this.columnSubscribers.headerClickMenu) {\n      this.columnSubscribers.headerClickMenu = this.loadMenuTableColumnEvent.bind(this, \"headerClickMenu\");\n      this.subscribe(\"column-click\", this.columnSubscribers.headerClickMenu);\n    }\n\n    if (def.headerMenu) {\n      this.initializeColumnHeaderMenu(column);\n    } //handle cell events\n\n\n    if (def.contextMenu && !this.columnSubscribers.contextMenu) {\n      this.columnSubscribers.contextMenu = this.loadMenuTableCellEvent.bind(this, \"contextMenu\");\n      this.subscribe(\"cell-contextmenu\", this.columnSubscribers.contextMenu);\n      this.table.on(\"cellTapHold\", this.loadMenuTableCellEvent.bind(this, \"contextMenu\"));\n    }\n\n    if (def.clickMenu && !this.columnSubscribers.clickMenu) {\n      this.columnSubscribers.clickMenu = this.loadMenuTableCellEvent.bind(this, \"clickMenu\");\n      this.subscribe(\"cell-click\", this.columnSubscribers.clickMenu);\n    }\n  }\n\n  initializeColumnHeaderMenu(column) {\n    var icon = column.definition.headerMenuIcon,\n        headerMenuEl;\n    headerMenuEl = document.createElement(\"span\");\n    headerMenuEl.classList.add(\"tabulator-header-popup-button\");\n\n    if (icon) {\n      if (typeof icon === \"function\") {\n        icon = icon(column.getComponent());\n      }\n\n      if (icon instanceof HTMLElement) {\n        headerMenuEl.appendChild(icon);\n      } else {\n        headerMenuEl.innerHTML = icon;\n      }\n    } else {\n      headerMenuEl.innerHTML = \"&vellip;\";\n    }\n\n    headerMenuEl.addEventListener(\"click\", e => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.loadMenuEvent(column.definition.headerMenu, e, column);\n    });\n    column.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\n  }\n\n  loadMenuTableCellEvent(option, e, cell) {\n    if (cell._cell) {\n      cell = cell._cell;\n    }\n\n    if (cell.column.definition[option]) {\n      this.loadMenuEvent(cell.column.definition[option], e, cell);\n    }\n  }\n\n  loadMenuTableColumnEvent(option, e, column) {\n    if (column._column) {\n      column = column._column;\n    }\n\n    if (column.definition[option]) {\n      this.loadMenuEvent(column.definition[option], e, column);\n    }\n  }\n\n  loadMenuEvent(menu, e, component) {\n    if (component._group) {\n      component = component._group;\n    } else if (component._row) {\n      component = component._row;\n    }\n\n    menu = typeof menu == \"function\" ? menu.call(this.table, e, component.getComponent()) : menu;\n    this.loadMenu(e, component, menu);\n  }\n\n  loadMenu(e, component, menu, parentEl, parentPopup) {\n    var touch = !(e instanceof MouseEvent),\n        menuEl = document.createElement(\"div\"),\n        popup;\n    menuEl.classList.add(\"tabulator-menu\");\n\n    if (!touch) {\n      e.preventDefault();\n    } //abort if no menu set\n\n\n    if (!menu || !menu.length) {\n      return;\n    }\n\n    if (!parentEl) {\n      if (this.nestedMenuBlock) {\n        //abort if child menu already open\n        if (this.rootPopup) {\n          return;\n        }\n      } else {\n        this.nestedMenuBlock = setTimeout(() => {\n          this.nestedMenuBlock = false;\n        }, 100);\n      }\n\n      if (this.rootPopup) {\n        this.rootPopup.hide();\n      }\n\n      this.rootPopup = popup = this.popup(menuEl);\n    } else {\n      popup = parentPopup.child(menuEl);\n    }\n\n    menu.forEach(item => {\n      var itemEl = document.createElement(\"div\"),\n          label = item.label,\n          disabled = item.disabled;\n\n      if (item.separator) {\n        itemEl.classList.add(\"tabulator-menu-separator\");\n      } else {\n        itemEl.classList.add(\"tabulator-menu-item\");\n\n        if (typeof label == \"function\") {\n          label = label.call(this.table, component.getComponent());\n        }\n\n        if (label instanceof Node) {\n          itemEl.appendChild(label);\n        } else {\n          itemEl.innerHTML = label;\n        }\n\n        if (typeof disabled == \"function\") {\n          disabled = disabled.call(this.table, component.getComponent());\n        }\n\n        if (disabled) {\n          itemEl.classList.add(\"tabulator-menu-item-disabled\");\n          itemEl.addEventListener(\"click\", e => {\n            e.stopPropagation();\n          });\n        } else {\n          if (item.menu && item.menu.length) {\n            itemEl.addEventListener(\"click\", e => {\n              e.stopPropagation();\n              this.loadMenu(e, component, item.menu, itemEl, popup);\n            });\n          } else {\n            if (item.action) {\n              itemEl.addEventListener(\"click\", e => {\n                item.action(e, component.getComponent());\n              });\n            }\n          }\n        }\n\n        if (item.menu && item.menu.length) {\n          itemEl.classList.add(\"tabulator-menu-item-submenu\");\n        }\n      }\n\n      menuEl.appendChild(itemEl);\n    });\n    menuEl.addEventListener(\"click\", e => {\n      this.rootPopup.hide();\n    });\n    popup.show(parentEl || e);\n\n    if (popup === this.rootPopup) {\n      this.rootPopup.hideOnBlur(() => {\n        this.rootPopup = null;\n\n        if (this.currentComponent) {\n          this.dispatchExternal(\"menuClosed\", this.currentComponent.getComponent());\n          this.currentComponent = null;\n        }\n      });\n      this.currentComponent = component;\n      this.dispatchExternal(\"menuOpened\", component.getComponent());\n    }\n  }\n\n}\n\nMenu.moduleName = \"menu\";\n\nclass MoveColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating column header element\n\n    this.checkTimeout = false; //click check timeout holder\n\n    this.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\n\n    this.moving = false; //currently moving column\n\n    this.toCol = false; //destination column\n\n    this.toColAfter = false; //position of moving column relative to the desitnation column\n\n    this.startX = 0; //starting position within header element\n\n    this.autoScrollMargin = 40; //auto scroll on edge when within margin\n\n    this.autoScrollStep = 5; //auto scroll distance in pixels\n\n    this.autoScrollTimeout = false; //auto scroll timeout\n\n    this.touchMove = false;\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.registerTableOption(\"movableColumns\", false); //enable movable columns\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.classList.add(\"tabulator-col-placeholder\");\n    return el;\n  }\n\n  initialize() {\n    if (this.table.options.movableColumns) {\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    }\n  }\n\n  initializeColumn(column) {\n    var self = this,\n        config = {},\n        colEl;\n\n    if (!column.modules.frozen) {\n      colEl = column.getElement();\n\n      config.mousemove = function (e) {\n        if (column.parent === self.moving.parent) {\n          if ((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left + self.table.columnManager.element.scrollLeft > column.getWidth() / 2) {\n            if (self.toCol !== column || !self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\n              self.moveColumn(column, true);\n            }\n          } else {\n            if (self.toCol !== column || self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl);\n              self.moveColumn(column, false);\n            }\n          }\n        }\n      }.bind(self);\n\n      colEl.addEventListener(\"mousedown\", function (e) {\n        self.touchMove = false;\n\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, column);\n          }, self.checkPeriod);\n        }\n      });\n      colEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      self.bindTouchEvents(column);\n    }\n\n    column.modules.moveColumn = config;\n  }\n\n  bindTouchEvents(column) {\n    var colEl = column.getElement(),\n        startXMove = false,\n        //shifting center position of the cell\n    nextCol,\n        prevCol,\n        nextColWidth,\n        prevColWidth,\n        nextColWidthLast,\n        prevColWidthLast;\n    colEl.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextCol = column.nextColumn();\n        nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n        prevCol = column.prevColumn();\n        prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        nextColWidthLast = 0;\n        prevColWidthLast = 0;\n        startXMove = false;\n        this.startMove(e, column);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchmove\", e => {\n      var diff, moveToCol;\n\n      if (this.moving) {\n        this.moveHover(e);\n\n        if (!startXMove) {\n          startXMove = e.touches[0].pageX;\n        }\n\n        diff = e.touches[0].pageX - startXMove;\n\n        if (diff > 0) {\n          if (nextCol && diff - nextColWidthLast > nextColWidth) {\n            moveToCol = nextCol;\n\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\n              this.moveColumn(moveToCol, true);\n            }\n          }\n        } else {\n          if (prevCol && -diff - prevColWidthLast > prevColWidth) {\n            moveToCol = prevCol;\n\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\n              this.moveColumn(moveToCol, false);\n            }\n          }\n        }\n\n        if (moveToCol) {\n          nextCol = moveToCol.nextColumn();\n          nextColWidthLast = nextColWidth;\n          nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n          prevCol = moveToCol.prevColumn();\n          prevColWidthLast = prevColWidth;\n          prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        }\n      }\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n\n      if (this.moving) {\n        this.endMove(e);\n      }\n    });\n  }\n\n  startMove(e, column) {\n    var element = column.getElement(),\n        headerElement = this.table.columnManager.getElement(),\n        headersElement = this.table.columnManager.getHeadersElement();\n    this.moving = column;\n    this.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\n    this.table.element.classList.add(\"tabulator-block-select\"); //create placeholder\n\n    this.placeholderElement.style.width = column.getWidth() + \"px\";\n    this.placeholderElement.style.height = column.getHeight() + \"px\";\n    element.parentNode.insertBefore(this.placeholderElement, element);\n    element.parentNode.removeChild(element); //create hover element\n\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    this.table.columnManager.getElement().appendChild(this.hoverElement);\n    this.hoverElement.style.left = \"0\";\n    this.hoverElement.style.bottom = headerElement.clientHeight - headersElement.offsetHeight + \"px\";\n\n    if (!this.touchMove) {\n      this._bindMouseMove();\n\n      document.body.addEventListener(\"mousemove\", this.moveHover);\n      document.body.addEventListener(\"mouseup\", this.endMove);\n    }\n\n    this.moveHover(e);\n  }\n\n  _bindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n\n  _unbindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n\n  moveColumn(column, after) {\n    var movingCells = this.moving.getCells();\n    this.toCol = column;\n    this.toColAfter = after;\n\n    if (after) {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\n        }\n      });\n    } else {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\n        }\n      });\n    }\n  }\n\n  endMove(e) {\n    if (e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n\n      this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n      this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n\n      if (this.toCol) {\n        this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\n      }\n\n      this.moving = false;\n      this.toCol = false;\n      this.toColAfter = false;\n\n      if (!this.touchMove) {\n        document.body.removeEventListener(\"mousemove\", this.moveHover);\n        document.body.removeEventListener(\"mouseup\", this.endMove);\n      }\n    }\n  }\n\n  moveHover(e) {\n    var columnHolder = this.table.columnManager.getElement(),\n        scrollLeft = columnHolder.scrollLeft,\n        xPos = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left + scrollLeft,\n        scrollPos;\n    this.hoverElement.style.left = xPos - this.startX + \"px\";\n\n    if (xPos - scrollLeft < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.max(0, scrollLeft - 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n\n    if (scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.min(columnHolder.clientWidth, scrollLeft + 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n  }\n\n}\n\nMoveColumns.moduleName = \"moveColumn\";\n\nclass MoveRows extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating row header element\n\n    this.checkTimeout = false; //click check timeout holder\n\n    this.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\n\n    this.moving = false; //currently moving row\n\n    this.toRow = false; //destination row\n\n    this.toRowAfter = false; //position of moving row relative to the desitnation row\n\n    this.hasHandle = false; //row has handle instead of fully movable row\n\n    this.startY = 0; //starting Y position within header element\n\n    this.startX = 0; //starting X position within header element\n\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.tableRowDropEvent = false;\n    this.touchMove = false;\n    this.connection = false;\n    this.connectionSelectorsTables = false;\n    this.connectionSelectorsElements = false;\n    this.connectionElements = [];\n    this.connections = [];\n    this.connectedTable = false;\n    this.connectedRow = false;\n    this.registerTableOption(\"movableRows\", false); //enable movable rows\n\n    this.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\n\n    this.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\n\n    this.registerTableOption(\"movableRowsSender\", false);\n    this.registerTableOption(\"movableRowsReceiver\", \"insert\");\n    this.registerColumnOption(\"rowHandle\");\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.classList.add(\"tabulator-row-placeholder\");\n    return el;\n  }\n\n  initialize() {\n    if (this.table.options.movableRows) {\n      this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\n      this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\n      this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\n      this.subscribe(\"cell-init\", this.initializeCell.bind(this));\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n    }\n  }\n\n  initializeGroupHeader(group) {\n    var self = this,\n        config = {}; //inter table drag drop\n\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self); //same table drag drop\n\n\n    config.mousemove = function (e) {\n      if (e.pageY - Helpers.elOffset(group.element).top + self.table.rowManager.element.scrollTop > group.getHeight() / 2) {\n        if (self.toRow !== group || !self.toRowAfter) {\n          var rowEl = group.getElement();\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(group, true);\n        }\n      } else {\n        if (self.toRow !== group || self.toRowAfter) {\n          var rowEl = group.getElement();\n\n          if (rowEl.previousSibling) {\n            rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n            self.moveRow(group, false);\n          }\n        }\n      }\n    }.bind(self);\n\n    group.modules.moveRow = config;\n  }\n\n  initializeRow(row) {\n    var self = this,\n        config = {},\n        rowEl; //inter table drag drop\n\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self); //same table drag drop\n\n\n    config.mousemove = function (e) {\n      var rowEl = row.getElement();\n\n      if (e.pageY - Helpers.elOffset(rowEl).top + self.table.rowManager.element.scrollTop > row.getHeight() / 2) {\n        if (self.toRow !== row || !self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(row, true);\n        }\n      } else {\n        if (self.toRow !== row || self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n          self.moveRow(row, false);\n        }\n      }\n    }.bind(self);\n\n    if (!this.hasHandle) {\n      rowEl = row.getElement();\n      rowEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, row);\n          }, self.checkPeriod);\n        }\n      });\n      rowEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(row, row.getElement());\n    }\n\n    row.modules.moveRow = config;\n  }\n\n  initializeColumn(column) {\n    if (column.definition.rowHandle && this.table.options.movableRows !== false) {\n      this.hasHandle = true;\n    }\n  }\n\n  initializeCell(cell) {\n    if (cell.column.definition.rowHandle && this.table.options.movableRows !== false) {\n      var self = this,\n          cellEl = cell.getElement(true);\n      cellEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, cell.row);\n          }, self.checkPeriod);\n        }\n      });\n      cellEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(cell.row, cellEl);\n    }\n  }\n\n  bindTouchEvents(row, element) {\n    var startYMove = false,\n        //shifting center position of the cell\n    nextRow,\n        prevRow,\n        nextRowHeight,\n        prevRowHeight,\n        nextRowHeightLast,\n        prevRowHeightLast;\n    element.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextRow = row.nextRow();\n        nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n        prevRow = row.prevRow();\n        prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        nextRowHeightLast = 0;\n        prevRowHeightLast = 0;\n        startYMove = false;\n        this.startMove(e, row);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    this.moving, this.toRow, this.toRowAfter;\n    element.addEventListener(\"touchmove\", e => {\n      var diff, moveToRow;\n\n      if (this.moving) {\n        e.preventDefault();\n        this.moveHover(e);\n\n        if (!startYMove) {\n          startYMove = e.touches[0].pageY;\n        }\n\n        diff = e.touches[0].pageY - startYMove;\n\n        if (diff > 0) {\n          if (nextRow && diff - nextRowHeightLast > nextRowHeight) {\n            moveToRow = nextRow;\n\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\n              this.moveRow(moveToRow, true);\n            }\n          }\n        } else {\n          if (prevRow && -diff - prevRowHeightLast > prevRowHeight) {\n            moveToRow = prevRow;\n\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\n              this.moveRow(moveToRow, false);\n            }\n          }\n        }\n\n        if (moveToRow) {\n          nextRow = moveToRow.nextRow();\n          nextRowHeightLast = nextRowHeight;\n          nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n          prevRow = moveToRow.prevRow();\n          prevRowHeightLast = prevRowHeight;\n          prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        }\n      }\n    });\n    element.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n\n      if (this.moving) {\n        this.endMove(e);\n        this.touchMove = false;\n      }\n    });\n  }\n\n  _bindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n\n  _unbindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n\n  startMove(e, row) {\n    var element = row.getElement();\n    this.setStartPosition(e, row);\n    this.moving = row;\n    this.table.element.classList.add(\"tabulator-block-select\"); //create placeholder\n\n    this.placeholderElement.style.width = row.getWidth() + \"px\";\n    this.placeholderElement.style.height = row.getHeight() + \"px\";\n\n    if (!this.connection) {\n      element.parentNode.insertBefore(this.placeholderElement, element);\n      element.parentNode.removeChild(element);\n    } else {\n      this.table.element.classList.add(\"tabulator-movingrow-sending\");\n      this.connectToTables(row);\n    } //create hover element\n\n\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n\n    if (this.connection) {\n      document.body.appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this.hoverElement.style.width = this.table.element.clientWidth + \"px\";\n      this.hoverElement.style.whiteSpace = \"nowrap\";\n      this.hoverElement.style.overflow = \"hidden\";\n      this.hoverElement.style.pointerEvents = \"none\";\n    } else {\n      this.table.rowManager.getTableElement().appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n\n      this._bindMouseMove();\n    }\n\n    document.body.addEventListener(\"mousemove\", this.moveHover);\n    document.body.addEventListener(\"mouseup\", this.endMove);\n    this.dispatchExternal(\"rowMoving\", row.getComponent());\n    this.moveHover(e);\n  }\n\n  setStartPosition(e, row) {\n    var pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\n        pageY = this.touchMove ? e.touches[0].pageY : e.pageY,\n        element,\n        position;\n    element = row.getElement();\n\n    if (this.connection) {\n      position = element.getBoundingClientRect();\n      this.startX = position.left - pageX + window.pageXOffset;\n      this.startY = position.top - pageY + window.pageYOffset;\n    } else {\n      this.startY = pageY - element.getBoundingClientRect().top;\n    }\n  }\n\n  endMove(e) {\n    if (!e || e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n\n      if (!this.connection) {\n        this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n        this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      }\n\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n\n      if (this.toRow) {\n        this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\n      } else {\n        this.dispatchExternal(\"rowMoveCancelled\", this.moving.getComponent());\n      }\n\n      this.moving = false;\n      this.toRow = false;\n      this.toRowAfter = false;\n      document.body.removeEventListener(\"mousemove\", this.moveHover);\n      document.body.removeEventListener(\"mouseup\", this.endMove);\n\n      if (this.connection) {\n        this.table.element.classList.remove(\"tabulator-movingrow-sending\");\n        this.disconnectFromTables();\n      }\n    }\n  }\n\n  moveRow(row, after) {\n    this.toRow = row;\n    this.toRowAfter = after;\n  }\n\n  moveHover(e) {\n    if (this.connection) {\n      this.moveHoverConnections.call(this, e);\n    } else {\n      this.moveHoverTable.call(this, e);\n    }\n  }\n\n  moveHoverTable(e) {\n    var rowHolder = this.table.rowManager.getElement(),\n        scrollTop = rowHolder.scrollTop,\n        yPos = (this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top + scrollTop;\n    this.hoverElement.style.top = yPos - this.startY + \"px\";\n  }\n\n  moveHoverConnections(e) {\n    this.hoverElement.style.left = this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX) + \"px\";\n    this.hoverElement.style.top = this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY) + \"px\";\n  }\n\n  elementRowDrop(e, element, row) {\n    this.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\n  } //establish connection with other tables\n\n\n  connectToTables(row) {\n    var connectionTables;\n\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\n        row: row\n      });\n    }\n\n    if (this.connectionSelectorsElements) {\n      this.connectionElements = [];\n\n      if (!Array.isArray(this.connectionSelectorsElements)) {\n        this.connectionSelectorsElements = [this.connectionSelectorsElements];\n      }\n\n      this.connectionSelectorsElements.forEach(query => {\n        if (typeof query === \"string\") {\n          this.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\n        } else {\n          this.connectionElements.push(query);\n        }\n      });\n      this.connectionElements.forEach(element => {\n        var dropEvent = e => {\n          this.elementRowDrop(e, element, this.moving);\n        };\n\n        element.addEventListener(\"mouseup\", dropEvent);\n        element.tabulatorElementDropEvent = dropEvent;\n        element.classList.add(\"tabulator-movingrow-receiving\");\n      });\n    }\n  } //disconnect from other tables\n\n\n  disconnectFromTables() {\n    var connectionTables;\n\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\n    }\n\n    this.connectionElements.forEach(element => {\n      element.classList.remove(\"tabulator-movingrow-receiving\");\n      element.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\n      delete element.tabulatorElementDropEvent;\n    });\n  } //accept incomming connection\n\n\n  connect(table, row) {\n    if (!this.connectedTable) {\n      this.connectedTable = table;\n      this.connectedRow = row;\n      this.table.element.classList.add(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.tableRowDropEvent = this.tableRowDrop.bind(this);\n      this.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStart\", row, table);\n      return true;\n    } else {\n      console.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\n      return false;\n    }\n  } //close incomming connection\n\n\n  disconnect(table) {\n    if (table === this.connectedTable) {\n      this.connectedTable = false;\n      this.connectedRow = false;\n      this.table.element.classList.remove(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStop\", table);\n    } else {\n      console.warn(\"Move Row Error - trying to disconnect from non connected table\");\n    }\n  }\n\n  dropComplete(table, row, success) {\n    var sender = false;\n\n    if (success) {\n      switch (typeof this.table.options.movableRowsSender) {\n        case \"string\":\n          sender = this.senders[this.table.options.movableRowsSender];\n          break;\n\n        case \"function\":\n          sender = this.table.options.movableRowsSender;\n          break;\n      }\n\n      if (sender) {\n        sender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n      } else {\n        if (this.table.options.movableRowsSender) {\n          console.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\n        }\n      }\n\n      this.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    } else {\n      this.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    }\n\n    this.endMove();\n  }\n\n  tableRowDrop(e, row) {\n    var receiver = false,\n        success = false;\n    e.stopImmediatePropagation();\n\n    switch (typeof this.table.options.movableRowsReceiver) {\n      case \"string\":\n        receiver = this.receivers[this.table.options.movableRowsReceiver];\n        break;\n\n      case \"function\":\n        receiver = this.table.options.movableRowsReceiver;\n        break;\n    }\n\n    if (receiver) {\n      success = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      console.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver);\n    }\n\n    if (success) {\n      this.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      this.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    }\n\n    this.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\n      row: row,\n      success: success\n    });\n  }\n\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"connect\":\n        return this.connect(table, data.row);\n\n      case \"disconnect\":\n        return this.disconnect(table);\n\n      case \"dropcomplete\":\n        return this.dropComplete(table, data.row, data.success);\n    }\n  }\n\n}\n\nMoveRows.prototype.receivers = {\n  insert: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData(), undefined, toRow);\n    return true;\n  },\n  add: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData());\n    return true;\n  },\n  update: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      toRow.update(fromRow.getData());\n      return true;\n    }\n\n    return false;\n  },\n  replace: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      this.table.addRow(fromRow.getData(), undefined, toRow);\n      toRow.delete();\n      return true;\n    }\n\n    return false;\n  }\n};\nMoveRows.prototype.senders = {\n  delete: function (fromRow, toRow, toTable) {\n    fromRow.delete();\n  }\n};\nMoveRows.moduleName = \"moveRow\";\nvar defaultMutators = {};\n\nclass Mutator extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\n\n    this.enabled = true;\n    this.registerColumnOption(\"mutator\");\n    this.registerColumnOption(\"mutatorParams\");\n    this.registerColumnOption(\"mutatorData\");\n    this.registerColumnOption(\"mutatorDataParams\");\n    this.registerColumnOption(\"mutatorEdit\");\n    this.registerColumnOption(\"mutatorEditParams\");\n    this.registerColumnOption(\"mutatorClipboard\");\n    this.registerColumnOption(\"mutatorClipboardParams\");\n    this.registerColumnOption(\"mutateLink\");\n  }\n\n  initialize() {\n    this.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\n    this.subscribe(\"cell-value-changed\", this.mutateLink.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\n    this.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\n  }\n\n  rowDataChanged(row, tempData, updatedData) {\n    return this.transformRow(tempData, \"data\", updatedData);\n  } //initialize column mutator\n\n\n  initializeColumn(column) {\n    var match = false,\n        config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n          mutator;\n\n      if (column.definition[key]) {\n        mutator = this.lookupMutator(column.definition[key]);\n\n        if (mutator) {\n          match = true;\n          config[key] = {\n            mutator: mutator,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n\n    if (match) {\n      column.modules.mutate = config;\n    }\n  }\n\n  lookupMutator(value) {\n    var mutator = false; //set column mutator\n\n    switch (typeof value) {\n      case \"string\":\n        if (Mutator.mutators[value]) {\n          mutator = Mutator.mutators[value];\n        } else {\n          console.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\n        }\n\n        break;\n\n      case \"function\":\n        mutator = value;\n        break;\n    }\n\n    return mutator;\n  } //apply mutator to row\n\n\n  transformRow(data, type, updatedData) {\n    var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        value;\n\n    if (this.enabled) {\n      this.table.columnManager.traverse(column => {\n        var mutator, params, component;\n\n        if (column.modules.mutate) {\n          mutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\n\n          if (mutator) {\n            value = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\n\n            if (type == \"data\" || typeof value !== \"undefined\") {\n              component = column.getComponent();\n              params = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\n              column.setFieldValue(data, mutator.mutator(value, data, type, params, component));\n            }\n          }\n        }\n      });\n    }\n\n    return data;\n  } //apply mutator to new cell value\n\n\n  transformCell(cell, value) {\n    if (cell.column.modules.mutate) {\n      var mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\n          tempData = {};\n\n      if (mutator) {\n        tempData = Object.assign(tempData, cell.row.getData());\n        cell.column.setFieldValue(tempData, value);\n        return mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\n      }\n    }\n\n    return value;\n  }\n\n  mutateLink(cell) {\n    var links = cell.column.definition.mutateLink;\n\n    if (links) {\n      if (!Array.isArray(links)) {\n        links = [links];\n      }\n\n      links.forEach(link => {\n        var linkCell = cell.row.getCell(link);\n\n        if (linkCell) {\n          linkCell.setValue(linkCell.getValue(), true, true);\n        }\n      });\n    }\n  }\n\n  enable() {\n    this.enabled = true;\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n}\n\nMutator.moduleName = \"mutator\"; //load defaults\n\nMutator.mutators = defaultMutators;\n\nfunction rows(pageSize, currentRow, currentPage, totalRows, totalPages) {\n  var el = document.createElement(\"span\"),\n      showingEl = document.createElement(\"span\"),\n      valueEl = document.createElement(\"span\"),\n      ofEl = document.createElement(\"span\"),\n      totalEl = document.createElement(\"span\"),\n      rowsEl = document.createElement(\"span\");\n  this.table.modules.localize.langBind(\"pagination|counter|showing\", value => {\n    showingEl.innerHTML = value;\n  });\n  this.table.modules.localize.langBind(\"pagination|counter|of\", value => {\n    ofEl.innerHTML = value;\n  });\n  this.table.modules.localize.langBind(\"pagination|counter|rows\", value => {\n    rowsEl.innerHTML = value;\n  });\n\n  if (totalRows) {\n    valueEl.innerHTML = \" \" + currentRow + \"-\" + Math.min(currentRow + pageSize - 1, totalRows) + \" \";\n    totalEl.innerHTML = \" \" + totalRows + \" \";\n    el.appendChild(showingEl);\n    el.appendChild(valueEl);\n    el.appendChild(ofEl);\n    el.appendChild(totalEl);\n    el.appendChild(rowsEl);\n  } else {\n    valueEl.innerHTML = \" 0 \";\n    el.appendChild(showingEl);\n    el.appendChild(valueEl);\n    el.appendChild(rowsEl);\n  }\n\n  return el;\n}\n\nfunction pages(pageSize, currentRow, currentPage, totalRows, totalPages) {\n  var el = document.createElement(\"span\"),\n      showingEl = document.createElement(\"span\"),\n      valueEl = document.createElement(\"span\"),\n      ofEl = document.createElement(\"span\"),\n      totalEl = document.createElement(\"span\"),\n      rowsEl = document.createElement(\"span\");\n  this.table.modules.localize.langBind(\"pagination|counter|showing\", value => {\n    showingEl.innerHTML = value;\n  });\n  valueEl.innerHTML = \" \" + currentPage + \" \";\n  this.table.modules.localize.langBind(\"pagination|counter|of\", value => {\n    ofEl.innerHTML = value;\n  });\n  totalEl.innerHTML = \" \" + totalPages + \" \";\n  this.table.modules.localize.langBind(\"pagination|counter|pages\", value => {\n    rowsEl.innerHTML = value;\n  });\n  el.appendChild(showingEl);\n  el.appendChild(valueEl);\n  el.appendChild(ofEl);\n  el.appendChild(totalEl);\n  el.appendChild(rowsEl);\n  return el;\n}\n\nvar defaultPageCounters = {\n  rows: rows,\n  pages: pages\n};\n\nclass Page extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"local\";\n    this.progressiveLoad = false;\n    this.element = null;\n    this.pageCounterElement = null;\n    this.pageCounter = null;\n    this.size = 0;\n    this.page = 1;\n    this.count = 5;\n    this.max = 1;\n    this.remoteRowCountEstimate = null;\n    this.displayIndex = 0; //index in display pipeline\n\n    this.initialLoad = true;\n    this.dataChanging = false; //flag to check if data is being changed by this module\n\n    this.pageSizes = [];\n    this.registerTableOption(\"pagination\", false); //set pagination type\n\n    this.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\n\n    this.registerTableOption(\"paginationSize\", false); //set number of rows to a page\n\n    this.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\n\n    this.registerTableOption(\"paginationCounter\", false); // set pagination counter\n\n    this.registerTableOption(\"paginationCounterElement\", false); // set pagination counter\n\n    this.registerTableOption(\"paginationButtonCount\", 5); // set count of page button\n\n    this.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\n\n    this.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\n    // this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\n    // this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\n\n    this.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\n\n    this.registerTableOption(\"progressiveLoad\", false); //progressive loading\n\n    this.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\n\n    this.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\n\n    this.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\n    this.registerTableFunction(\"setPage\", this.setPage.bind(this));\n    this.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\n    this.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\n    this.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\n    this.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\n    this.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\n    this.registerTableFunction(\"getPage\", this.getPage.bind(this));\n    this.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.pagination) {\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      this.subscribe(\"footer-redraw\", this.footerRedraw.bind(this));\n\n      if (this.table.options.paginationAddRow == \"page\") {\n        this.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\n      }\n\n      if (this.table.options.paginationMode === \"remote\") {\n        this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n        this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      }\n\n      if (this.table.options.progressiveLoad) {\n        console.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\n      }\n\n      this.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\n      this.registerDisplayHandler(this.getRows.bind(this), 50);\n      this.createElements();\n      this.initializePageCounter();\n      this.initializePaginator();\n    } else if (this.table.options.progressiveLoad) {\n      this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n      this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.initializeProgressive(this.table.options.progressiveLoad);\n\n      if (this.table.options.progressiveLoad === \"scroll\") {\n        this.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\n      }\n    }\n  }\n\n  rowAddingPosition(row, top) {\n    var rowManager = this.table.rowManager,\n        dispRows = rowManager.getDisplayRows(),\n        index;\n\n    if (top) {\n      if (dispRows.length) {\n        index = dispRows[0];\n      } else {\n        if (rowManager.activeRows.length) {\n          index = rowManager.activeRows[rowManager.activeRows.length - 1];\n          top = false;\n        }\n      }\n    } else {\n      if (dispRows.length) {\n        index = dispRows[dispRows.length - 1];\n        top = dispRows.length < this.size ? false : true;\n      }\n    }\n\n    return {\n      index,\n      top\n    };\n  }\n\n  calculatePageSizes() {\n    var testElRow, testElCell;\n\n    if (this.table.options.paginationSize) {\n      this.size = this.table.options.paginationSize;\n    } else {\n      testElRow = document.createElement(\"div\");\n      testElRow.classList.add(\"tabulator-row\");\n      testElRow.style.visibility = \"hidden\";\n      testElCell = document.createElement(\"div\");\n      testElCell.classList.add(\"tabulator-cell\");\n      testElCell.innerHTML = \"Page Row Test\";\n      testElRow.appendChild(testElCell);\n      this.table.rowManager.getTableElement().appendChild(testElRow);\n      this.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\n      this.table.rowManager.getTableElement().removeChild(testElRow);\n    }\n\n    this.dispatchExternal(\"pageSizeChanged\", this.size);\n    this.generatePageSizeSelectList();\n  }\n\n  initialLoadComplete() {\n    this.initialLoad = false;\n  }\n\n  remotePageParams(data, config, silent, params) {\n    if (!this.initialLoad) {\n      if (this.progressiveLoad && !silent || !this.progressiveLoad && !this.dataChanging) {\n        this.reset(true);\n      }\n    } //configure request params\n\n\n    params.page = this.page; //set page size if defined\n\n    if (this.size) {\n      params.size = this.size;\n    }\n\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userSetPageToRow(row) {\n    if (this.table.options.pagination) {\n      row = this.rowManager.findRow(row);\n\n      if (row) {\n        return this.setPageToRow(row);\n      }\n    }\n\n    return Promise.reject();\n  }\n\n  userSetPageSize(size) {\n    if (this.table.options.pagination) {\n      this.setPageSize(size);\n      return this.setPage(1);\n    } else {\n      return false;\n    }\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  scrollVertical(top, dir) {\n    var element, diff, margin;\n\n    if (!dir && !this.table.dataLoader.loading) {\n      element = this.table.rowManager.getElement();\n      diff = element.scrollHeight - element.clientHeight - top;\n      margin = this.table.options.progressiveLoadScrollMargin || element.clientHeight * 2;\n\n      if (diff < margin) {\n        this.nextPage().catch(() => {}); //consume the exception thrown when on the last page\n      }\n    }\n  }\n\n  restOnRenderBefore(rows, renderInPosition) {\n    if (!renderInPosition) {\n      if (this.mode === \"local\") {\n        this.reset();\n      }\n    }\n\n    return rows;\n  }\n\n  rowsUpdated() {\n    this.refreshData(true, \"all\");\n  }\n\n  createElements() {\n    var button;\n    this.element = document.createElement(\"span\");\n    this.element.classList.add(\"tabulator-paginator\");\n    this.pagesElement = document.createElement(\"span\");\n    this.pagesElement.classList.add(\"tabulator-pages\");\n    button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    button.setAttribute(\"aria-label\", \"\");\n    button.setAttribute(\"title\", \"\");\n    this.firstBut = button.cloneNode(true);\n    this.firstBut.setAttribute(\"data-page\", \"first\");\n    this.prevBut = button.cloneNode(true);\n    this.prevBut.setAttribute(\"data-page\", \"prev\");\n    this.nextBut = button.cloneNode(true);\n    this.nextBut.setAttribute(\"data-page\", \"next\");\n    this.lastBut = button.cloneNode(true);\n    this.lastBut.setAttribute(\"data-page\", \"last\");\n\n    if (this.table.options.paginationSizeSelector) {\n      this.pageSizeSelect = document.createElement(\"select\");\n      this.pageSizeSelect.classList.add(\"tabulator-page-size\");\n    }\n  }\n\n  generatePageSizeSelectList() {\n    var pageSizes = [];\n\n    if (this.pageSizeSelect) {\n      if (Array.isArray(this.table.options.paginationSizeSelector)) {\n        pageSizes = this.table.options.paginationSizeSelector;\n        this.pageSizes = pageSizes;\n\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes.unshift(this.size);\n        }\n      } else {\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes = [];\n\n          for (let i = 1; i < 5; i++) {\n            pageSizes.push(this.size * i);\n          }\n\n          this.pageSizes = pageSizes;\n        } else {\n          pageSizes = this.pageSizes;\n        }\n      }\n\n      while (this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\n\n      pageSizes.forEach(item => {\n        var itemEl = document.createElement(\"option\");\n        itemEl.value = item;\n\n        if (item === true) {\n          this.langBind(\"pagination|all\", function (value) {\n            itemEl.innerHTML = value;\n          });\n        } else {\n          itemEl.innerHTML = item;\n        }\n\n        this.pageSizeSelect.appendChild(itemEl);\n      });\n      this.pageSizeSelect.value = this.size;\n    }\n  }\n\n  initializePageCounter() {\n    var counter = this.table.options.paginationCounter,\n        pageCounter = null;\n\n    if (counter) {\n      if (typeof counter === \"function\") {\n        pageCounter = counter;\n      } else {\n        pageCounter = Page.pageCounters[counter];\n      }\n\n      if (pageCounter) {\n        this.pageCounter = pageCounter;\n        this.pageCounterElement = document.createElement(\"span\");\n        this.pageCounterElement.classList.add(\"tabulator-page-counter\");\n      } else {\n        console.warn(\"Pagination Error - No such page counter found: \", counter);\n      }\n    }\n  } //setup pagination\n\n\n  initializePaginator(hidden) {\n    var pageSelectLabel, paginationCounterHolder;\n\n    if (!hidden) {\n      //build pagination element\n      //bind localizations\n      this.langBind(\"pagination|first\", value => {\n        this.firstBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|first_title\", value => {\n        this.firstBut.setAttribute(\"aria-label\", value);\n        this.firstBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|prev\", value => {\n        this.prevBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|prev_title\", value => {\n        this.prevBut.setAttribute(\"aria-label\", value);\n        this.prevBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|next\", value => {\n        this.nextBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|next_title\", value => {\n        this.nextBut.setAttribute(\"aria-label\", value);\n        this.nextBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|last\", value => {\n        this.lastBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|last_title\", value => {\n        this.lastBut.setAttribute(\"aria-label\", value);\n        this.lastBut.setAttribute(\"title\", value);\n      }); //click bindings\n\n      this.firstBut.addEventListener(\"click\", () => {\n        this.setPage(1);\n      });\n      this.prevBut.addEventListener(\"click\", () => {\n        this.previousPage();\n      });\n      this.nextBut.addEventListener(\"click\", () => {\n        this.nextPage();\n      });\n      this.lastBut.addEventListener(\"click\", () => {\n        this.setPage(this.max);\n      });\n\n      if (this.table.options.paginationElement) {\n        this.element = this.table.options.paginationElement;\n      }\n\n      if (this.pageSizeSelect) {\n        pageSelectLabel = document.createElement(\"label\");\n        this.langBind(\"pagination|page_size\", value => {\n          this.pageSizeSelect.setAttribute(\"aria-label\", value);\n          this.pageSizeSelect.setAttribute(\"title\", value);\n          pageSelectLabel.innerHTML = value;\n        });\n        this.element.appendChild(pageSelectLabel);\n        this.element.appendChild(this.pageSizeSelect);\n        this.pageSizeSelect.addEventListener(\"change\", e => {\n          this.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\n          this.setPage(1);\n        });\n      } //append to DOM\n\n\n      this.element.appendChild(this.firstBut);\n      this.element.appendChild(this.prevBut);\n      this.element.appendChild(this.pagesElement);\n      this.element.appendChild(this.nextBut);\n      this.element.appendChild(this.lastBut);\n\n      if (!this.table.options.paginationElement && !hidden) {\n        if (this.table.options.paginationCounter) {\n          if (this.table.options.paginationCounterElement) {\n            if (this.table.options.paginationCounterElement instanceof HTMLElement) {\n              this.table.options.paginationCounterElement.appendChild(this.pageCounterElement);\n            } else if (typeof this.table.options.paginationCounterElement === \"string\") {\n              paginationCounterHolder = document.querySelector(this.table.options.paginationCounterElement);\n\n              if (paginationCounterHolder) {\n                paginationCounterHolder.appendChild(this.pageCounterElement);\n              } else {\n                console.warn(\"Pagination Error - Unable to find element matching paginationCounterElement selector:\", this.table.options.paginationCounterElement);\n              }\n            }\n          } else {\n            this.footerAppend(this.pageCounterElement);\n          }\n        }\n\n        this.footerAppend(this.element);\n      }\n\n      this.page = this.table.options.paginationInitialPage;\n      this.count = this.table.options.paginationButtonCount;\n    } //set default values\n\n\n    this.mode = this.table.options.paginationMode;\n  }\n\n  initializeProgressive(mode) {\n    this.initializePaginator(true);\n    this.mode = \"progressive_\" + mode;\n    this.progressiveLoad = true;\n  }\n\n  trackChanges() {\n    this.dispatch(\"page-changed\");\n  }\n\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n\n  getDisplayIndex() {\n    return this.displayIndex;\n  } //calculate maximum page from number of rows\n\n\n  setMaxRows(rowCount) {\n    if (!rowCount) {\n      this.max = 1;\n    } else {\n      this.max = this.size === true ? 1 : Math.ceil(rowCount / this.size);\n    }\n\n    if (this.page > this.max) {\n      this.page = this.max;\n    }\n  } //reset to first page without triggering action\n\n\n  reset(force) {\n    if (!this.initialLoad) {\n      if (this.mode == \"local\" || force) {\n        this.page = 1;\n      }\n    }\n  } //set the maximum page\n\n\n  setMaxPage(max) {\n    max = parseInt(max);\n    this.max = max || 1;\n\n    if (this.page > this.max) {\n      this.page = this.max;\n      this.trigger();\n    }\n  } //set current page number\n\n\n  setPage(page) {\n    switch (page) {\n      case \"first\":\n        return this.setPage(1);\n\n      case \"prev\":\n        return this.previousPage();\n\n      case \"next\":\n        return this.nextPage();\n\n      case \"last\":\n        return this.setPage(this.max);\n    }\n\n    page = parseInt(page);\n\n    if (page > 0 && page <= this.max || this.mode !== \"local\") {\n      this.page = page;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\n      return Promise.reject();\n    }\n  }\n\n  setPageToRow(row) {\n    var rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\n    var index = rows.indexOf(row);\n\n    if (index > -1) {\n      var page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\n      return this.setPage(page);\n    } else {\n      console.warn(\"Pagination Error - Requested row is not visible\");\n      return Promise.reject();\n    }\n  }\n\n  setPageSize(size) {\n    if (size !== true) {\n      size = parseInt(size);\n    }\n\n    if (size > 0) {\n      this.size = size;\n      this.dispatchExternal(\"pageSizeChanged\", size);\n    }\n\n    if (this.pageSizeSelect) {\n      // this.pageSizeSelect.value = size;\n      this.generatePageSizeSelectList();\n    }\n\n    this.trackChanges();\n  }\n\n  _setPageCounter(totalRows, size, currentRow) {\n    var content;\n\n    if (this.pageCounter) {\n      if (this.mode === \"remote\") {\n        size = this.size;\n        currentRow = (this.page - 1) * this.size + 1;\n        totalRows = this.remoteRowCountEstimate;\n      }\n\n      content = this.pageCounter.call(this, size, currentRow, this.page, totalRows, this.max);\n\n      switch (typeof content) {\n        case \"object\":\n          if (content instanceof Node) {\n            //clear previous cell contents\n            while (this.pageCounterElement.firstChild) this.pageCounterElement.removeChild(this.pageCounterElement.firstChild);\n\n            this.pageCounterElement.appendChild(content);\n          } else {\n            this.pageCounterElement.innerHTML = \"\";\n\n            if (content != null) {\n              console.warn(\"Page Counter Error - Page Counter has returned a type of object, the only valid page counter object return is an instance of Node, the page counter returned:\", content);\n            }\n          }\n\n          break;\n\n        case \"undefined\":\n        case \"null\":\n          this.pageCounterElement.innerHTML = \"\";\n          break;\n\n        default:\n          this.pageCounterElement.innerHTML = content;\n      }\n    }\n  } //setup the pagination buttons\n\n\n  _setPageButtons() {\n    let leftSize = Math.floor((this.count - 1) / 2);\n    let rightSize = Math.ceil((this.count - 1) / 2);\n    let min = this.max - this.page + leftSize + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - leftSize, 1);\n    let max = this.page <= rightSize ? Math.min(this.count, this.max) : Math.min(this.page + rightSize, this.max);\n\n    while (this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\n\n    if (this.page == 1) {\n      this.firstBut.disabled = true;\n      this.prevBut.disabled = true;\n    } else {\n      this.firstBut.disabled = false;\n      this.prevBut.disabled = false;\n    }\n\n    if (this.page == this.max) {\n      this.lastBut.disabled = true;\n      this.nextBut.disabled = true;\n    } else {\n      this.lastBut.disabled = false;\n      this.nextBut.disabled = false;\n    }\n\n    for (let i = min; i <= max; i++) {\n      if (i > 0 && i <= this.max) {\n        this.pagesElement.appendChild(this._generatePageButton(i));\n      }\n    }\n\n    this.footerRedraw();\n  }\n\n  _generatePageButton(page) {\n    var button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n\n    if (page == this.page) {\n      button.classList.add(\"active\");\n    }\n\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    this.langBind(\"pagination|page_title\", value => {\n      button.setAttribute(\"aria-label\", value + \" \" + page);\n      button.setAttribute(\"title\", value + \" \" + page);\n    });\n    button.setAttribute(\"data-page\", page);\n    button.textContent = page;\n    button.addEventListener(\"click\", e => {\n      this.setPage(page);\n    });\n    return button;\n  } //previous page\n\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\n      return Promise.reject();\n    }\n  } //next page\n\n\n  nextPage() {\n    if (this.page < this.max) {\n      this.page++;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      if (!this.progressiveLoad) {\n        console.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\n      }\n\n      return Promise.reject();\n    }\n  } //return current page number\n\n\n  getPage() {\n    return this.page;\n  } //return max page number\n\n\n  getPageMax() {\n    return this.max;\n  }\n\n  getPageSize(size) {\n    return this.size;\n  }\n\n  getMode() {\n    return this.mode;\n  } //return appropriate rows for current page\n\n\n  getRows(data) {\n    var actualRowPageSize = 0,\n        output,\n        start,\n        end,\n        actualStartRow;\n    var actualRows = data.filter(row => {\n      return row.type === \"row\";\n    });\n\n    if (this.mode == \"local\") {\n      output = [];\n      this.setMaxRows(data.length);\n\n      if (this.size === true) {\n        start = 0;\n        end = data.length;\n      } else {\n        start = this.size * (this.page - 1);\n        end = start + parseInt(this.size);\n      }\n\n      this._setPageButtons();\n\n      for (let i = start; i < end; i++) {\n        let row = data[i];\n\n        if (row) {\n          output.push(row);\n\n          if (row.type === \"row\") {\n            if (!actualStartRow) {\n              actualStartRow = row;\n            }\n\n            actualRowPageSize++;\n          }\n        }\n      }\n\n      this._setPageCounter(actualRows.length, actualRowPageSize, actualStartRow ? actualRows.indexOf(actualStartRow) + 1 : 0);\n\n      return output;\n    } else {\n      this._setPageButtons();\n\n      this._setPageCounter(actualRows.length);\n\n      return data.slice(0);\n    }\n  }\n\n  trigger() {\n    var left;\n\n    switch (this.mode) {\n      case \"local\":\n        left = this.table.rowManager.scrollLeft;\n        this.refreshData();\n        this.table.rowManager.scrollHorizontal(left);\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        return Promise.resolve();\n\n      case \"remote\":\n        this.dataChanging = true;\n        return this.reloadData(null).finally(() => {\n          this.dataChanging = false;\n        });\n\n      case \"progressive_load\":\n      case \"progressive_scroll\":\n        return this.reloadData(null, true);\n\n      default:\n        console.warn(\"Pagination Error - no such pagination mode:\", this.mode);\n        return Promise.reject();\n    }\n  }\n\n  _parseRemoteData(data) {\n    var data, margin;\n\n    if (typeof data.last_page === \"undefined\") {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\n    }\n\n    if (data.data) {\n      this.max = parseInt(data.last_page) || 1;\n      this.remoteRowCountEstimate = typeof data.last_row !== \"undefined\" ? data.last_row : data.last_page * this.size - (this.page == data.last_page ? this.size - data.data.length : 0);\n\n      if (this.progressiveLoad) {\n        switch (this.mode) {\n          case \"progressive_load\":\n            if (this.page == 1) {\n              this.table.rowManager.setData(data.data, false, this.page == 1);\n            } else {\n              this.table.rowManager.addRows(data.data);\n            }\n\n            if (this.page < this.max) {\n              setTimeout(() => {\n                this.nextPage();\n              }, this.table.options.progressiveLoadDelay);\n            }\n\n            break;\n\n          case \"progressive_scroll\":\n            data = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\n            this.table.rowManager.setData(data, this.page !== 1, this.page == 1);\n            margin = this.table.options.progressiveLoadScrollMargin || this.table.rowManager.element.clientHeight * 2;\n\n            if (this.table.rowManager.element.scrollHeight <= this.table.rowManager.element.clientHeight + margin) {\n              if (this.page < this.max) {\n                setTimeout(() => {\n                  this.nextPage();\n                });\n              }\n            }\n\n            break;\n        }\n\n        return false;\n      } else {\n        // left = this.table.rowManager.scrollLeft;\n        this.dispatchExternal(\"pageLoaded\", this.getPage()); // this.table.rowManager.scrollHorizontal(left);\n        // this.table.columnManager.scrollHorizontal(left);\n      }\n    } else {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\n    }\n\n    return data.data;\n  } //handle the footer element being redrawn\n\n\n  footerRedraw() {\n    var footer = this.table.footerManager.containerElement;\n\n    if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n      this.pagesElement.style.display = 'none';\n    } else {\n      this.pagesElement.style.display = '';\n\n      if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n        this.pagesElement.style.display = 'none';\n      }\n    }\n  }\n\n}\n\nPage.moduleName = \"page\"; //load defaults\n\nPage.pageCounters = defaultPageCounters; // read peristence information from storage\n\nvar defaultReaders = {\n  local: function (id, type) {\n    var data = localStorage.getItem(id + \"-\" + type);\n    return data ? JSON.parse(data) : false;\n  },\n  cookie: function (id, type) {\n    var cookie = document.cookie,\n        key = id + \"-\" + type,\n        cookiePos = cookie.indexOf(key + \"=\"),\n        end,\n        data; //if cookie exists, decode and load column data into tabulator\n\n    if (cookiePos > -1) {\n      cookie = cookie.slice(cookiePos);\n      end = cookie.indexOf(\";\");\n\n      if (end > -1) {\n        cookie = cookie.slice(0, end);\n      }\n\n      data = cookie.replace(key + \"=\", \"\");\n    }\n\n    return data ? JSON.parse(data) : false;\n  }\n}; //write persistence information to storage\n\nvar defaultWriters = {\n  local: function (id, type, data) {\n    localStorage.setItem(id + \"-\" + type, JSON.stringify(data));\n  },\n  cookie: function (id, type, data) {\n    var expireDate = new Date();\n    expireDate.setDate(expireDate.getDate() + 10000);\n    document.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\n  }\n};\n\nclass Persistence extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"\";\n    this.id = \"\"; // this.persistProps = [\"field\", \"width\", \"visible\"];\n\n    this.defWatcherBlock = false;\n    this.config = {};\n    this.readFunc = false;\n    this.writeFunc = false;\n    this.registerTableOption(\"persistence\", false);\n    this.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\n\n    this.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\n\n    this.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\n\n    this.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\n  } // Test for whether localStorage is available for use.\n\n\n  localStorageTest() {\n    var testKey = \"_tabulator_test\";\n\n    try {\n      window.localStorage.setItem(testKey, testKey);\n      window.localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  } //setup parameters\n\n\n  initialize() {\n    if (this.table.options.persistence) {\n      //determine persistent layout storage type\n      var mode = this.table.options.persistenceMode,\n          id = this.table.options.persistenceID,\n          retreivedData;\n      this.mode = mode !== true ? mode : this.localStorageTest() ? \"local\" : \"cookie\";\n\n      if (this.table.options.persistenceReaderFunc) {\n        if (typeof this.table.options.persistenceReaderFunc === \"function\") {\n          this.readFunc = this.table.options.persistenceReaderFunc;\n        } else {\n          if (Persistence.readers[this.table.options.persistenceReaderFunc]) {\n            this.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\n          } else {\n            console.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\n          }\n        }\n      } else {\n        if (Persistence.readers[this.mode]) {\n          this.readFunc = Persistence.readers[this.mode];\n        } else {\n          console.warn(\"Persistence Read Error - invalid reader set\", this.mode);\n        }\n      }\n\n      if (this.table.options.persistenceWriterFunc) {\n        if (typeof this.table.options.persistenceWriterFunc === \"function\") {\n          this.writeFunc = this.table.options.persistenceWriterFunc;\n        } else {\n          if (Persistence.writers[this.table.options.persistenceWriterFunc]) {\n            this.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\n          } else {\n            console.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\n          }\n        }\n      } else {\n        if (Persistence.writers[this.mode]) {\n          this.writeFunc = Persistence.writers[this.mode];\n        } else {\n          console.warn(\"Persistence Write Error - invalid writer set\", this.mode);\n        }\n      } //set storage tag\n\n\n      this.id = \"tabulator-\" + (id || this.table.element.getAttribute(\"id\") || \"\");\n      this.config = {\n        sort: this.table.options.persistence === true || this.table.options.persistence.sort,\n        filter: this.table.options.persistence === true || this.table.options.persistence.filter,\n        group: this.table.options.persistence === true || this.table.options.persistence.group,\n        page: this.table.options.persistence === true || this.table.options.persistence.page,\n        columns: this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns\n      }; //load pagination data if needed\n\n      if (this.config.page) {\n        retreivedData = this.retreiveData(\"page\");\n\n        if (retreivedData) {\n          if (typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)) {\n            this.table.options.paginationSize = retreivedData.paginationSize;\n          }\n\n          if (typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)) {\n            this.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\n          }\n        }\n      } //load group data if needed\n\n\n      if (this.config.group) {\n        retreivedData = this.retreiveData(\"group\");\n\n        if (retreivedData) {\n          if (typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)) {\n            this.table.options.groupBy = retreivedData.groupBy;\n          }\n\n          if (typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)) {\n            this.table.options.groupStartOpen = retreivedData.groupStartOpen;\n          }\n\n          if (typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)) {\n            this.table.options.groupHeader = retreivedData.groupHeader;\n          }\n        }\n      }\n\n      if (this.config.columns) {\n        this.table.options.columns = this.load(\"columns\", this.table.options.columns);\n        this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n        this.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\n      }\n\n      this.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\n      this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n      this.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\n      this.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\n      this.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\n      this.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\n      this.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\n      this.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\n    }\n\n    this.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\n    this.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\n  }\n\n  eventSave(type) {\n    if (this.config[type]) {\n      this.save(type);\n    }\n  }\n\n  tableBuilt() {\n    var options = this.table.options,\n        sorters,\n        filters;\n\n    if (this.config.sort) {\n      sorters = this.load(\"sort\");\n\n      if (!sorters === false) {\n        this.table.options.initialSort = sorters;\n      }\n    }\n\n    if (this.config.filter) {\n      filters = this.load(\"filter\");\n\n      if (!filters === false) {\n        this.table.options.initialFilter = filters;\n      }\n    }\n  }\n\n  tableRedraw(force) {\n    if (force && this.config.columns) {\n      this.save(\"columns\");\n    }\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  getColumnLayout() {\n    return this.parseColumns(this.table.columnManager.getColumns());\n  }\n\n  setColumnLayout(layout) {\n    this.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout));\n    return true;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumn(column) {\n    var def, keys;\n\n    if (this.config.columns) {\n      this.defWatcherBlock = true;\n      def = column.getDefinition();\n      keys = this.config.columns === true ? Object.keys(def) : this.config.columns;\n      keys.forEach(key => {\n        var props = Object.getOwnPropertyDescriptor(def, key);\n        var value = def[key];\n\n        if (props) {\n          Object.defineProperty(def, key, {\n            set: function (newValue) {\n              value = newValue;\n\n              if (!this.defWatcherBlock) {\n                this.save(\"columns\");\n              }\n\n              if (props.set) {\n                props.set(newValue);\n              }\n            },\n            get: function () {\n              if (props.get) {\n                props.get();\n              }\n\n              return value;\n            }\n          });\n        }\n      });\n      this.defWatcherBlock = false;\n    }\n  } //load saved definitions\n\n\n  load(type, current) {\n    var data = this.retreiveData(type);\n\n    if (current) {\n      data = data ? this.mergeDefinition(current, data) : current;\n    }\n\n    return data;\n  } //retreive data from memory\n\n\n  retreiveData(type) {\n    return this.readFunc ? this.readFunc(this.id, type) : false;\n  } //merge old and new column definitions\n\n\n  mergeDefinition(oldCols, newCols) {\n    var output = [];\n    newCols = newCols || [];\n    newCols.forEach((column, to) => {\n      var from = this._findColumn(oldCols, column),\n          keys;\n\n      if (from) {\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(from);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n\n        keys.forEach(key => {\n          if (key !== \"columns\" && typeof column[key] !== \"undefined\") {\n            from[key] = column[key];\n          }\n        });\n\n        if (from.columns) {\n          from.columns = this.mergeDefinition(from.columns, column.columns);\n        }\n\n        output.push(from);\n      }\n    });\n    oldCols.forEach((column, i) => {\n      var from = this._findColumn(newCols, column);\n\n      if (!from) {\n        if (output.length > i) {\n          output.splice(i, 0, column);\n        } else {\n          output.push(column);\n        }\n      }\n    });\n    return output;\n  } //find matching columns\n\n\n  _findColumn(columns, subject) {\n    var type = subject.columns ? \"group\" : subject.field ? \"field\" : \"object\";\n    return columns.find(function (col) {\n      switch (type) {\n        case \"group\":\n          return col.title === subject.title && col.columns.length === subject.columns.length;\n\n        case \"field\":\n          return col.field === subject.field;\n\n        case \"object\":\n          return col === subject;\n      }\n    });\n  } //save data\n\n\n  save(type) {\n    var data = {};\n\n    switch (type) {\n      case \"columns\":\n        data = this.parseColumns(this.table.columnManager.getColumns());\n        break;\n\n      case \"filter\":\n        data = this.table.modules.filter.getFilters();\n        break;\n\n      case \"sort\":\n        data = this.validateSorters(this.table.modules.sort.getSort());\n        break;\n\n      case \"group\":\n        data = this.getGroupConfig();\n        break;\n\n      case \"page\":\n        data = this.getPageConfig();\n        break;\n    }\n\n    if (this.writeFunc) {\n      this.writeFunc(this.id, type, data);\n    }\n  } //ensure sorters contain no function data\n\n\n  validateSorters(data) {\n    data.forEach(function (item) {\n      item.column = item.field;\n      delete item.field;\n    });\n    return data;\n  }\n\n  getGroupConfig() {\n    var data = {};\n\n    if (this.config.group) {\n      if (this.config.group === true || this.config.group.groupBy) {\n        data.groupBy = this.table.options.groupBy;\n      }\n\n      if (this.config.group === true || this.config.group.groupStartOpen) {\n        data.groupStartOpen = this.table.options.groupStartOpen;\n      }\n\n      if (this.config.group === true || this.config.group.groupHeader) {\n        data.groupHeader = this.table.options.groupHeader;\n      }\n    }\n\n    return data;\n  }\n\n  getPageConfig() {\n    var data = {};\n\n    if (this.config.page) {\n      if (this.config.page === true || this.config.page.size) {\n        data.paginationSize = this.table.modules.page.getPageSize();\n      }\n\n      if (this.config.page === true || this.config.page.page) {\n        data.paginationInitialPage = this.table.modules.page.getPage();\n      }\n    }\n\n    return data;\n  } //parse columns for data to store\n\n\n  parseColumns(columns) {\n    var definitions = [],\n        excludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\n    columns.forEach(column => {\n      var defStore = {},\n          colDef = column.getDefinition(),\n          keys;\n\n      if (column.isGroup) {\n        defStore.title = colDef.title;\n        defStore.columns = this.parseColumns(column.getColumns());\n      } else {\n        defStore.field = column.getField();\n\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(colDef);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n\n        keys.forEach(key => {\n          switch (key) {\n            case \"width\":\n              defStore.width = column.getWidth();\n              break;\n\n            case \"visible\":\n              defStore.visible = column.visible;\n              break;\n\n            default:\n              if (typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1) {\n                defStore[key] = colDef[key];\n              }\n\n          }\n        });\n      }\n\n      definitions.push(defStore);\n    });\n    return definitions;\n  }\n\n}\n\nPersistence.moduleName = \"persistence\";\nPersistence.moduleInitOrder = -10; //load defaults\n\nPersistence.readers = defaultReaders;\nPersistence.writers = defaultWriters;\n\nclass Popup$1 extends Module {\n  constructor(table) {\n    super(table);\n    this.columnSubscribers = {};\n    this.registerTableOption(\"rowContextPopup\", false);\n    this.registerTableOption(\"rowClickPopup\", false);\n    this.registerTableOption(\"groupContextPopup\", false);\n    this.registerTableOption(\"groupClickPopup\", false);\n    this.registerColumnOption(\"headerContextPopup\");\n    this.registerColumnOption(\"headerClickPopup\");\n    this.registerColumnOption(\"headerPopup\");\n    this.registerColumnOption(\"headerPopupIcon\");\n    this.registerColumnOption(\"contextPopup\");\n    this.registerColumnOption(\"clickPopup\");\n  }\n\n  initialize() {\n    this.initializeRowWatchers();\n    this.initializeGroupWatchers();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n  }\n\n  initializeRowWatchers() {\n    if (this.table.options.rowContextPopup) {\n      this.subscribe(\"row-contextmenu\", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup));\n      this.table.on(\"rowTapHold\", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup));\n    }\n\n    if (this.table.options.rowClickPopup) {\n      this.subscribe(\"row-click\", this.loadPopupEvent.bind(this, this.table.options.rowClickPopup));\n    }\n  }\n\n  initializeGroupWatchers() {\n    if (this.table.options.groupContextPopup) {\n      this.subscribe(\"group-contextmenu\", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup));\n      this.table.on(\"groupTapHold\", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup));\n    }\n\n    if (this.table.options.groupClickPopup) {\n      this.subscribe(\"group-click\", this.loadPopupEvent.bind(this, this.table.options.groupClickPopup));\n    }\n  }\n\n  initializeColumn(column) {\n    var def = column.definition; //handle column events\n\n    if (def.headerContextPopup && !this.columnSubscribers.headerContextPopup) {\n      this.columnSubscribers.headerContextPopup = this.loadPopupTableColumnEvent.bind(this, \"headerContextPopup\");\n      this.subscribe(\"column-contextmenu\", this.columnSubscribers.headerContextPopup);\n      this.table.on(\"headerTapHold\", this.loadPopupTableColumnEvent.bind(this, \"headerContextPopup\"));\n    }\n\n    if (def.headerClickPopup && !this.columnSubscribers.headerClickPopup) {\n      this.columnSubscribers.headerClickPopup = this.loadPopupTableColumnEvent.bind(this, \"headerClickPopup\");\n      this.subscribe(\"column-click\", this.columnSubscribers.headerClickPopup);\n    }\n\n    if (def.headerPopup) {\n      this.initializeColumnHeaderPopup(column);\n    } //handle cell events\n\n\n    if (def.contextPopup && !this.columnSubscribers.contextPopup) {\n      this.columnSubscribers.contextPopup = this.loadPopupTableCellEvent.bind(this, \"contextPopup\");\n      this.subscribe(\"cell-contextmenu\", this.columnSubscribers.contextPopup);\n      this.table.on(\"cellTapHold\", this.loadPopupTableCellEvent.bind(this, \"contextPopup\"));\n    }\n\n    if (def.clickPopup && !this.columnSubscribers.clickPopup) {\n      this.columnSubscribers.clickPopup = this.loadPopupTableCellEvent.bind(this, \"clickPopup\");\n      this.subscribe(\"cell-click\", this.columnSubscribers.clickPopup);\n    }\n  }\n\n  initializeColumnHeaderPopup(column) {\n    var icon = column.definition.headerPopupIcon,\n        headerPopupEl;\n    headerPopupEl = document.createElement(\"span\");\n    headerPopupEl.classList.add(\"tabulator-header-popup-button\");\n\n    if (icon) {\n      if (typeof icon === \"function\") {\n        icon = icon(column.getComponent());\n      }\n\n      if (icon instanceof HTMLElement) {\n        headerPopupEl.appendChild(icon);\n      } else {\n        headerPopupEl.innerHTML = icon;\n      }\n    } else {\n      headerPopupEl.innerHTML = \"&vellip;\";\n    }\n\n    headerPopupEl.addEventListener(\"click\", e => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.loadPopupEvent(column.definition.headerPopup, e, column);\n    });\n    column.titleElement.insertBefore(headerPopupEl, column.titleElement.firstChild);\n  }\n\n  loadPopupTableCellEvent(option, e, cell) {\n    if (cell._cell) {\n      cell = cell._cell;\n    }\n\n    if (cell.column.definition[option]) {\n      this.loadPopupEvent(cell.column.definition[option], e, cell);\n    }\n  }\n\n  loadPopupTableColumnEvent(option, e, column) {\n    if (column._column) {\n      column = column._column;\n    }\n\n    if (column.definition[option]) {\n      this.loadPopupEvent(column.definition[option], e, column);\n    }\n  }\n\n  loadPopupEvent(contents, e, component) {\n    var renderedCallback;\n\n    function onRendered(callback) {\n      renderedCallback = callback;\n    }\n\n    if (component._group) {\n      component = component._group;\n    } else if (component._row) {\n      component = component._row;\n    }\n\n    contents = typeof contents == \"function\" ? contents.call(this.table, e, component.getComponent(), onRendered) : contents;\n    this.loadPopup(e, component, contents, renderedCallback);\n  }\n\n  loadPopup(e, component, contents, renderedCallback) {\n    var touch = !(e instanceof MouseEvent),\n        contentsEl,\n        popup;\n\n    if (contents instanceof HTMLElement) {\n      contentsEl = contents;\n    } else {\n      contentsEl = document.createElement(\"div\");\n      contentsEl.innerHTML = contents;\n    }\n\n    contentsEl.classList.add(\"tabulator-popup\");\n    contentsEl.addEventListener(\"click\", e => {\n      e.stopPropagation();\n    });\n\n    if (!touch) {\n      e.preventDefault();\n    }\n\n    popup = this.popup(contentsEl);\n\n    if (typeof renderedCallback === \"function\") {\n      popup.renderCallback(renderedCallback);\n    }\n\n    popup.show(e).hideOnBlur(() => {\n      this.dispatchExternal(\"popupClosed\", component.getComponent());\n    });\n    this.dispatchExternal(\"popupOpened\", component.getComponent());\n  }\n\n}\n\nPopup$1.moduleName = \"popup\";\n\nclass Print extends Module {\n  constructor(table) {\n    super(table);\n    this.element = false;\n    this.manualBlock = false;\n    this.registerTableOption(\"printAsHtml\", false); //enable print as html\n\n    this.registerTableOption(\"printFormatter\", false); //printing page formatter\n\n    this.registerTableOption(\"printHeader\", false); //page header contents\n\n    this.registerTableOption(\"printFooter\", false); //page footer contents\n\n    this.registerTableOption(\"printStyled\", true); //enable print as html styling\n\n    this.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\n\n    this.registerTableOption(\"printConfig\", {}); //print config options\n\n    this.registerColumnOption(\"print\");\n    this.registerColumnOption(\"titlePrint\");\n  }\n\n  initialize() {\n    if (this.table.options.printAsHtml) {\n      window.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\n      window.addEventListener(\"afterprint\", this.cleanup.bind(this));\n    }\n\n    this.registerTableFunction(\"print\", this.printFullscreen.bind(this));\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  replaceTable() {\n    if (!this.manualBlock) {\n      this.element = document.createElement(\"div\");\n      this.element.classList.add(\"tabulator-print-table\");\n      this.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\n      this.table.element.style.display = \"none\";\n      this.table.element.parentNode.insertBefore(this.element, this.table.element);\n    }\n  }\n\n  cleanup() {\n    document.body.classList.remove(\"tabulator-print-fullscreen-hide\");\n\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n      this.table.element.style.display = \"\";\n    }\n  }\n\n  printFullscreen(visible, style, config) {\n    var scrollX = window.scrollX,\n        scrollY = window.scrollY,\n        headerEl = document.createElement(\"div\"),\n        footerEl = document.createElement(\"div\"),\n        tableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\n        headerContent,\n        footerContent;\n    this.manualBlock = true;\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-print-fullscreen\");\n\n    if (this.table.options.printHeader) {\n      headerEl.classList.add(\"tabulator-print-header\");\n      headerContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\n\n      if (typeof headerContent == \"string\") {\n        headerEl.innerHTML = headerContent;\n      } else {\n        headerEl.appendChild(headerContent);\n      }\n\n      this.element.appendChild(headerEl);\n    }\n\n    this.element.appendChild(tableEl);\n\n    if (this.table.options.printFooter) {\n      footerEl.classList.add(\"tabulator-print-footer\");\n      footerContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\n\n      if (typeof footerContent == \"string\") {\n        footerEl.innerHTML = footerContent;\n      } else {\n        footerEl.appendChild(footerContent);\n      }\n\n      this.element.appendChild(footerEl);\n    }\n\n    document.body.classList.add(\"tabulator-print-fullscreen-hide\");\n    document.body.appendChild(this.element);\n\n    if (this.table.options.printFormatter) {\n      this.table.options.printFormatter(this.element, tableEl);\n    }\n\n    window.print();\n    this.cleanup();\n    window.scrollTo(scrollX, scrollY);\n    this.manualBlock = false;\n  }\n\n}\n\nPrint.moduleName = \"print\";\n\nclass ReactiveData extends Module {\n  constructor(table) {\n    super(table);\n    this.data = false;\n    this.blocked = false; //block reactivity while performing update\n\n    this.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\n\n    this.currentVersion = 0;\n    this.registerTableOption(\"reactiveData\", false); //enable data reactivity\n  }\n\n  initialize() {\n    if (this.table.options.reactiveData) {\n      this.subscribe(\"cell-value-save-before\", this.block.bind(this));\n      this.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-save-before\", this.block.bind(this));\n      this.subscribe(\"row-data-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\n      this.subscribe(\"data-processing\", this.watchData.bind(this));\n      this.subscribe(\"table-destroy\", this.unwatchData.bind(this));\n    }\n  }\n\n  watchData(data) {\n    var self = this,\n        version;\n    this.currentVersion++;\n    version = this.currentVersion;\n    this.unwatchData();\n    this.data = data; //override array push function\n\n    this.origFuncs.push = data.push;\n    Object.defineProperty(this.data, \"push\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, false);\n          });\n        }\n\n        return self.origFuncs.push.apply(data, arguments);\n      }\n    }); //override array unshift function\n\n    this.origFuncs.unshift = data.unshift;\n    Object.defineProperty(this.data, \"unshift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, true);\n          });\n        }\n\n        return self.origFuncs.unshift.apply(data, arguments);\n      }\n    }); //override array shift function\n\n    this.origFuncs.shift = data.shift;\n    Object.defineProperty(this.data, \"shift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[0]);\n\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n\n        return self.origFuncs.shift.call(data);\n      }\n    }); //override array pop function\n\n    this.origFuncs.pop = data.pop;\n    Object.defineProperty(this.data, \"pop\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\n\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n\n        return self.origFuncs.pop.call(data);\n      }\n    }); //override array splice function\n\n    this.origFuncs.splice = data.splice;\n    Object.defineProperty(this.data, \"splice\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments),\n            start = args[0] < 0 ? data.length + args[0] : args[0],\n            end = args[1],\n            newRows = args[2] ? args.slice(2) : false,\n            startRow;\n\n        if (!self.blocked && version === self.currentVersion) {\n          //add new rows\n          if (newRows) {\n            startRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\n\n            if (startRow) {\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, startRow, true);\n              });\n            } else {\n              newRows = newRows.slice().reverse();\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, false, true);\n              });\n            }\n          } //delete removed rows\n\n\n          if (end !== 0) {\n            var oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\n            oldRows.forEach((rowData, i) => {\n              var row = self.table.rowManager.getRowFromDataObject(rowData);\n\n              if (row) {\n                row.deleteActual(i !== oldRows.length - 1);\n              }\n            });\n          }\n\n          if (newRows || end !== 0) {\n            self.table.rowManager.reRenderInPosition();\n          }\n        }\n\n        return self.origFuncs.splice.apply(data, arguments);\n      }\n    });\n  }\n\n  unwatchData() {\n    if (this.data !== false) {\n      for (var key in this.origFuncs) {\n        Object.defineProperty(this.data, key, {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: this.origFuncs.key\n        });\n      }\n    }\n  }\n\n  watchRow(row) {\n    var data = row.getData();\n    this.blocked = true;\n\n    for (var key in data) {\n      this.watchKey(row, data, key);\n    }\n\n    if (this.table.options.dataTree) {\n      this.watchTreeChildren(row);\n    }\n\n    this.blocked = false;\n  }\n\n  watchTreeChildren(row) {\n    var childField = row.getData()[this.table.options.dataTreeChildField],\n        origFuncs = {};\n\n    function rebuildTree() {\n      this.table.modules.dataTree.initializeRow(row);\n      this.table.modules.dataTree.layoutRow(row);\n      this.table.rowManager.refreshActiveData(\"tree\", false, true);\n    }\n\n    if (childField) {\n      origFuncs.push = childField.push;\n      Object.defineProperty(childField, \"push\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.push.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.unshift = childField.unshift;\n      Object.defineProperty(childField, \"unshift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.unshift.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.shift = childField.shift;\n      Object.defineProperty(childField, \"shift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.shift.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.pop = childField.pop;\n      Object.defineProperty(childField, \"pop\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.pop.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.splice = childField.splice;\n      Object.defineProperty(childField, \"splice\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.splice.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n    }\n  }\n\n  watchKey(row, data, key) {\n    var props = Object.getOwnPropertyDescriptor(data, key),\n        value = data[key],\n        version = this.currentVersion;\n    Object.defineProperty(data, key, {\n      set: newValue => {\n        value = newValue;\n\n        if (!this.blocked && version === this.currentVersion) {\n          var update = {};\n          update[key] = newValue;\n          row.updateData(update);\n        }\n\n        if (props.set) {\n          props.set(newValue);\n        }\n      },\n      get: () => {\n        if (props.get) {\n          props.get();\n        }\n\n        return value;\n      }\n    });\n  }\n\n  unwatchRow(row) {\n    var data = row.getData();\n\n    for (var key in data) {\n      Object.defineProperty(data, key, {\n        value: data[key]\n      });\n    }\n  }\n\n  block() {\n    this.blocked = true;\n  }\n\n  unblock() {\n    this.blocked = false;\n  }\n\n}\n\nReactiveData.moduleName = \"reactiveData\";\n\nclass ResizeColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startX = false;\n    this.startWidth = false;\n    this.latestX = false;\n    this.handle = null;\n    this.initialNextColumn = null;\n    this.nextColumn = null;\n    this.initialized = false;\n    this.registerColumnOption(\"resizable\", true);\n    this.registerTableOption(\"resizableColumnFit\", false);\n  }\n\n  initialize() {\n    this.subscribe(\"column-rendered\", this.layoutColumnHeader.bind(this));\n  }\n\n  initializeEventWatchers() {\n    if (!this.initialized) {\n      this.subscribe(\"cell-rendered\", this.layoutCellHandles.bind(this));\n      this.subscribe(\"cell-delete\", this.deInitializeComponent.bind(this));\n      this.subscribe(\"cell-height\", this.resizeHandle.bind(this));\n      this.subscribe(\"column-moved\", this.columnLayoutUpdated.bind(this));\n      this.subscribe(\"column-hide\", this.deInitializeColumn.bind(this));\n      this.subscribe(\"column-show\", this.columnLayoutUpdated.bind(this));\n      this.subscribe(\"column-delete\", this.deInitializeComponent.bind(this));\n      this.subscribe(\"column-height\", this.resizeHandle.bind(this));\n      this.initialized = true;\n    }\n  }\n\n  layoutCellHandles(cell) {\n    if (cell.row.type === \"row\") {\n      this.deInitializeComponent(cell);\n      this.initializeColumn(\"cell\", cell, cell.column, cell.element);\n    }\n  }\n\n  layoutColumnHeader(column) {\n    if (column.definition.resizable) {\n      this.initializeEventWatchers();\n      this.deInitializeComponent(column);\n      this.initializeColumn(\"header\", column, column, column.element);\n    }\n  }\n\n  columnLayoutUpdated(column) {\n    var prev = column.prevColumn();\n    this.reinitializeColumn(column);\n\n    if (prev) {\n      this.reinitializeColumn(prev);\n    }\n  }\n\n  reinitializeColumn(column) {\n    column.cells.forEach(cell => {\n      if (cell.modules.resize && cell.modules.resize.handleEl) {\n        cell.element.after(cell.modules.resize.handleEl);\n      }\n    });\n\n    if (column.modules.resize && column.modules.resize.handleEl) {\n      column.element.after(column.modules.resize.handleEl);\n    }\n  }\n\n  initializeColumn(type, component, column, element) {\n    var self = this,\n        variableHeight = false,\n        mode = column.definition.resizable,\n        config = {},\n        nearestColumn = column.getLastColumn(); //set column resize mode\n\n    if (type === \"header\") {\n      variableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\n      config = {\n        variableHeight: variableHeight\n      };\n    }\n\n    if ((mode === true || mode == type) && this._checkResizability(nearestColumn)) {\n      var handle = document.createElement('div');\n      handle.className = \"tabulator-col-resize-handle\";\n      handle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n\n      var handleDown = function (e) {\n        self.startColumn = column;\n        self.initialNextColumn = self.nextColumn = nearestColumn.nextColumn();\n\n        self._mouseDown(e, nearestColumn, handle);\n      };\n\n      handle.addEventListener(\"mousedown\", handleDown);\n      handle.addEventListener(\"touchstart\", handleDown, {\n        passive: true\n      }); //resize column on  double click\n\n      handle.addEventListener(\"dblclick\", e => {\n        var oldWidth = nearestColumn.getWidth();\n        e.stopPropagation();\n        nearestColumn.reinitializeWidth(true);\n\n        if (oldWidth !== nearestColumn.getWidth()) {\n          self.dispatch(\"column-resized\", nearestColumn);\n          self.table.externalEvents.dispatch(\"columnResized\", nearestColumn.getComponent());\n        }\n      });\n      config.handleEl = handle;\n\n      if (element.parentNode) {\n        element.after(handle);\n      }\n    }\n\n    component.modules.resize = config;\n  }\n\n  deInitializeColumn(column) {\n    this.deInitializeComponent(column);\n    column.cells.forEach(cell => {\n      this.deInitializeComponent(cell);\n    });\n  }\n\n  deInitializeComponent(component) {\n    var handleEl;\n\n    if (component.modules.resize) {\n      handleEl = component.modules.resize.handleEl;\n\n      if (handleEl && handleEl.parentElement) {\n        handleEl.parentElement.removeChild(handleEl);\n      }\n    }\n  }\n\n  resizeHandle(component, height) {\n    if (component.modules.resize && component.modules.resize.handleEl) {\n      component.modules.resize.handleEl.style.height = height;\n    }\n  }\n\n  _checkResizability(column) {\n    return column.definition.resizable;\n  }\n\n  _mouseDown(e, column, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n\n    function mouseMove(e) {\n      var x = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX,\n          startDiff = x - self.startX,\n          moveDiff = x - self.latestX,\n          blockedBefore,\n          blockedAfter;\n      self.latestX = x;\n\n      if (self.table.rtl) {\n        startDiff = -startDiff;\n        moveDiff = -moveDiff;\n      }\n\n      blockedBefore = column.width == column.minWidth || column.width == column.maxWidth;\n      column.setWidth(self.startWidth + startDiff);\n      blockedAfter = column.width == column.minWidth || column.width == column.maxWidth;\n\n      if (moveDiff < 0) {\n        self.nextColumn = self.initialNextColumn;\n      }\n\n      if (self.table.options.resizableColumnFit && self.nextColumn && !(blockedBefore && blockedAfter)) {\n        let colWidth = self.nextColumn.getWidth();\n\n        if (moveDiff > 0) {\n          if (colWidth <= self.nextColumn.minWidth) {\n            self.nextColumn = self.nextColumn.nextColumn();\n          }\n        }\n\n        if (self.nextColumn) {\n          self.nextColumn.setWidth(self.nextColumn.getWidth() - moveDiff);\n        }\n      }\n\n      self.table.columnManager.renderer.rerenderColumns(true);\n\n      if (!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n    }\n\n    function mouseUp(e) {\n      //block editor from taking action while resizing is taking place\n      if (self.startColumn.modules.edit) {\n        self.startColumn.modules.edit.blocked = false;\n      }\n\n      if (self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n\n      document.body.removeEventListener(\"mouseup\", mouseUp);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n\n      if (self.startWidth !== column.getWidth()) {\n        self.dispatch(\"column-resized\", column);\n        self.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\n      }\n    }\n\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n    //block editor from taking action while resizing is taking place\n\n    if (self.startColumn.modules.edit) {\n      self.startColumn.modules.edit.blocked = true;\n    }\n\n    self.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\n    self.latestX = self.startX;\n    self.startWidth = column.getWidth();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n\n}\n\nResizeColumns.moduleName = \"resizeColumns\";\n\nclass ResizeRows extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startY = false;\n    this.startHeight = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerTableOption(\"resizableRows\", false); //resizable rows\n  }\n\n  initialize() {\n    if (this.table.options.resizableRows) {\n      this.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\n    }\n  }\n\n  initializeRow(row) {\n    var self = this,\n        rowEl = row.getElement();\n    var handle = document.createElement('div');\n    handle.className = \"tabulator-row-resize-handle\";\n    var prevHandle = document.createElement('div');\n    prevHandle.className = \"tabulator-row-resize-handle prev\";\n    handle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n\n    var handleDown = function (e) {\n      self.startRow = row;\n\n      self._mouseDown(e, row, handle);\n    };\n\n    handle.addEventListener(\"mousedown\", handleDown);\n    handle.addEventListener(\"touchstart\", handleDown, {\n      passive: true\n    });\n    prevHandle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n\n    var prevHandleDown = function (e) {\n      var prevRow = self.table.rowManager.prevDisplayRow(row);\n\n      if (prevRow) {\n        self.startRow = prevRow;\n\n        self._mouseDown(e, prevRow, prevHandle);\n      }\n    };\n\n    prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n    prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n      passive: true\n    });\n    rowEl.appendChild(handle);\n    rowEl.appendChild(prevHandle);\n  }\n\n  _mouseDown(e, row, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n\n    function mouseMove(e) {\n      row.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\n    }\n\n    function mouseUp(e) {\n      // //block editor from taking action while resizing is taking place\n      // if(self.startColumn.modules.edit){\n      // \tself.startColumn.modules.edit.blocked = false;\n      // }\n      document.body.removeEventListener(\"mouseup\", mouseMove);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      self.dispatchExternal(\"rowResized\", row.getComponent());\n    }\n\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n    //block editor from taking action while resizing is taking place\n    // if(self.startColumn.modules.edit){\n    // \tself.startColumn.modules.edit.blocked = true;\n    // }\n\n    self.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\n    self.startHeight = row.getHeight();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n\n}\n\nResizeRows.moduleName = \"resizeRows\";\n\nclass ResizeTable extends Module {\n  constructor(table) {\n    super(table);\n    this.binding = false;\n    this.observer = false;\n    this.containerObserver = false;\n    this.tableHeight = 0;\n    this.tableWidth = 0;\n    this.containerHeight = 0;\n    this.containerWidth = 0;\n    this.autoResize = false;\n    this.registerTableOption(\"autoResize\", true); //auto resize table\n  }\n\n  initialize() {\n    if (this.table.options.autoResize) {\n      var table = this.table,\n          tableStyle;\n      this.tableHeight = table.element.clientHeight;\n      this.tableWidth = table.element.clientWidth;\n\n      if (table.element.parentNode) {\n        this.containerHeight = table.element.parentNode.clientHeight;\n        this.containerWidth = table.element.parentNode.clientWidth;\n      }\n\n      if (typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\") {\n        this.autoResize = true;\n        this.observer = new ResizeObserver(entry => {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            var nodeHeight = Math.floor(entry[0].contentRect.height);\n            var nodeWidth = Math.floor(entry[0].contentRect.width);\n\n            if (this.tableHeight != nodeHeight || this.tableWidth != nodeWidth) {\n              this.tableHeight = nodeHeight;\n              this.tableWidth = nodeWidth;\n\n              if (table.element.parentNode) {\n                this.containerHeight = table.element.parentNode.clientHeight;\n                this.containerWidth = table.element.parentNode.clientWidth;\n              }\n\n              this.table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          }\n        });\n        this.observer.observe(table.element);\n        tableStyle = window.getComputedStyle(table.element);\n\n        if (this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))) {\n          this.containerObserver = new ResizeObserver(entry => {\n            if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n              var nodeHeight = Math.floor(entry[0].contentRect.height);\n              var nodeWidth = Math.floor(entry[0].contentRect.width);\n\n              if (this.containerHeight != nodeHeight || this.containerWidth != nodeWidth) {\n                this.containerHeight = nodeHeight;\n                this.containerWidth = nodeWidth;\n                this.tableHeight = table.element.clientHeight;\n                this.tableWidth = table.element.clientWidth;\n              }\n\n              table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          });\n          this.containerObserver.observe(this.table.element.parentNode);\n        }\n\n        this.subscribe(\"table-resize\", this.tableResized.bind(this));\n      } else {\n        this.binding = function () {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            table.columnManager.renderer.rerenderColumns(true);\n            table.redraw();\n          }\n        };\n\n        window.addEventListener(\"resize\", this.binding);\n      }\n\n      this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n    }\n  }\n\n  tableResized() {\n    this.table.rowManager.redraw();\n  }\n\n  clearBindings() {\n    if (this.binding) {\n      window.removeEventListener(\"resize\", this.binding);\n    }\n\n    if (this.observer) {\n      this.observer.unobserve(this.table.element);\n    }\n\n    if (this.containerObserver) {\n      this.containerObserver.unobserve(this.table.element.parentNode);\n    }\n  }\n\n}\n\nResizeTable.moduleName = \"resizeTable\";\n\nclass ResponsiveLayout extends Module {\n  constructor(table) {\n    super(table);\n    this.columns = [];\n    this.hiddenColumns = [];\n    this.mode = \"\";\n    this.index = 0;\n    this.collapseFormatter = [];\n    this.collapseStartOpen = true;\n    this.collapseHandleColumn = false;\n    this.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\n\n    this.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\n\n    this.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\n\n    this.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\n\n    this.registerColumnOption(\"responsive\");\n  } //generate responsive columns list\n\n\n  initialize() {\n    if (this.table.options.responsiveLayout) {\n      this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n      this.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\n\n      if (this.table.options.responsiveLayout === \"collapse\") {\n        this.subscribe(\"row-init\", this.initializeRow.bind(this));\n        this.subscribe(\"row-layout\", this.layoutRow.bind(this));\n      }\n    }\n  }\n\n  tableRedraw(force) {\n    if ([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1) {\n      if (!force) {\n        this.update();\n      }\n    }\n  }\n\n  initializeResponsivity() {\n    var columns = [];\n    this.mode = this.table.options.responsiveLayout;\n    this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\n    this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\n    this.hiddenColumns = []; //determine level of responsivity for each column\n\n    this.table.columnManager.columnsByIndex.forEach((column, i) => {\n      if (column.modules.responsive) {\n        if (column.modules.responsive.order && column.modules.responsive.visible) {\n          column.modules.responsive.index = i;\n          columns.push(column);\n\n          if (!column.visible && this.mode === \"collapse\") {\n            this.hiddenColumns.push(column);\n          }\n        }\n      }\n    }); //sort list by responsivity\n\n    columns = columns.reverse();\n    columns = columns.sort((a, b) => {\n      var diff = b.modules.responsive.order - a.modules.responsive.order;\n      return diff || b.modules.responsive.index - a.modules.responsive.index;\n    });\n    this.columns = columns;\n\n    if (this.mode === \"collapse\") {\n      this.generateCollapsedContent();\n    } //assign collapse column\n\n\n    for (let col of this.table.columnManager.columnsByIndex) {\n      if (col.definition.formatter == \"responsiveCollapse\") {\n        this.collapseHandleColumn = col;\n        break;\n      }\n    }\n\n    if (this.collapseHandleColumn) {\n      if (this.hiddenColumns.length) {\n        this.collapseHandleColumn.show();\n      } else {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  } //define layout information\n\n\n  initializeColumn(column) {\n    var def = column.getDefinition();\n    column.modules.responsive = {\n      order: typeof def.responsive === \"undefined\" ? 1 : def.responsive,\n      visible: def.visible === false ? false : true\n    };\n  }\n\n  initializeRow(row) {\n    var el;\n\n    if (row.type !== \"calc\") {\n      el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-responsive-collapse\");\n      row.modules.responsiveLayout = {\n        element: el,\n        open: this.collapseStartOpen\n      };\n\n      if (!this.collapseStartOpen) {\n        el.style.display = 'none';\n      }\n    }\n  }\n\n  layoutRow(row) {\n    var rowEl = row.getElement();\n\n    if (row.modules.responsiveLayout) {\n      rowEl.appendChild(row.modules.responsiveLayout.element);\n      this.generateCollapsedRowContent(row);\n    }\n  } //update column visibility\n\n\n  updateColumnVisibility(column, responsiveToggle) {\n    if (!responsiveToggle && column.modules.responsive) {\n      column.modules.responsive.visible = column.visible;\n      this.initializeResponsivity();\n    }\n  }\n\n  hideColumn(column) {\n    var colCount = this.hiddenColumns.length;\n    column.hide(false, true);\n\n    if (this.mode === \"collapse\") {\n      this.hiddenColumns.unshift(column);\n      this.generateCollapsedContent();\n\n      if (this.collapseHandleColumn && !colCount) {\n        this.collapseHandleColumn.show();\n      }\n    }\n  }\n\n  showColumn(column) {\n    var index;\n    column.show(false, true); //set column width to prevent calculation loops on uninitialized columns\n\n    column.setWidth(column.getWidth());\n\n    if (this.mode === \"collapse\") {\n      index = this.hiddenColumns.indexOf(column);\n\n      if (index > -1) {\n        this.hiddenColumns.splice(index, 1);\n      }\n\n      this.generateCollapsedContent();\n\n      if (this.collapseHandleColumn && !this.hiddenColumns.length) {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  } //redraw columns to fit space\n\n\n  update() {\n    var self = this,\n        working = true;\n\n    while (working) {\n      let width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\n      let diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\n\n      if (diff < 0) {\n        //table is too wide\n        let column = self.columns[self.index];\n\n        if (column) {\n          self.hideColumn(column);\n          self.index++;\n        } else {\n          working = false;\n        }\n      } else {\n        //table has spare space\n        let column = self.columns[self.index - 1];\n\n        if (column) {\n          if (diff > 0) {\n            if (diff >= column.getWidth()) {\n              self.showColumn(column);\n              self.index--;\n            } else {\n              working = false;\n            }\n          } else {\n            working = false;\n          }\n        } else {\n          working = false;\n        }\n      }\n\n      if (!self.table.rowManager.activeRowsCount) {\n        self.table.rowManager.renderEmptyScroll();\n      }\n    }\n  }\n\n  generateCollapsedContent() {\n    var self = this,\n        rows = this.table.rowManager.getDisplayRows();\n    rows.forEach(function (row) {\n      self.generateCollapsedRowContent(row);\n    });\n  }\n\n  generateCollapsedRowContent(row) {\n    var el, contents;\n\n    if (row.modules.responsiveLayout) {\n      el = row.modules.responsiveLayout.element;\n\n      while (el.firstChild) el.removeChild(el.firstChild);\n\n      contents = this.collapseFormatter(this.generateCollapsedRowData(row));\n\n      if (contents) {\n        el.appendChild(contents);\n      }\n    }\n  }\n\n  generateCollapsedRowData(row) {\n    var self = this,\n        data = row.getData(),\n        output = [],\n        mockCellComponent;\n    this.hiddenColumns.forEach(function (column) {\n      var value = column.getFieldValue(data);\n\n      if (column.definition.title && column.field) {\n        if (column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters) {\n          mockCellComponent = {\n            value: false,\n            data: {},\n            getValue: function () {\n              return value;\n            },\n            getData: function () {\n              return data;\n            },\n            getElement: function () {\n              return document.createElement(\"div\");\n            },\n            getRow: function () {\n              return row.getComponent();\n            },\n            getColumn: function () {\n              return column.getComponent();\n            }\n          };\n\n          function onRendered(callback) {\n            callback();\n          }\n\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\n          });\n        } else {\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: value\n          });\n        }\n      }\n    });\n    return output;\n  }\n\n  formatCollapsedData(data) {\n    var list = document.createElement(\"table\");\n    data.forEach(function (item) {\n      var row = document.createElement(\"tr\");\n      var titleData = document.createElement(\"td\");\n      var valueData = document.createElement(\"td\");\n      var node_content;\n      var titleHighlight = document.createElement(\"strong\");\n      titleData.appendChild(titleHighlight);\n      this.langBind(\"columns|\" + item.field, function (text) {\n        titleHighlight.innerHTML = text || item.title;\n      });\n\n      if (item.value instanceof Node) {\n        node_content = document.createElement(\"div\");\n        node_content.appendChild(item.value);\n        valueData.appendChild(node_content);\n      } else {\n        valueData.innerHTML = item.value;\n      }\n\n      row.appendChild(titleData);\n      row.appendChild(valueData);\n      list.appendChild(row);\n    }, this);\n    return Object.keys(data).length ? list : \"\";\n  }\n\n}\n\nResponsiveLayout.moduleName = \"responsiveLayout\";\n\nclass SelectRow extends Module {\n  constructor(table) {\n    super(table);\n    this.selecting = false; //flag selecting in progress\n\n    this.lastClickedRow = false; //last clicked row\n\n    this.selectPrev = []; //hold previously selected element for drag drop selection\n\n    this.selectedRows = []; //hold selected rows\n\n    this.headerCheckboxElement = null; // hold header select element\n\n    this.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\n\n    this.registerTableOption(\"selectableRangeMode\", \"drag\"); //highlight rows on hover\n\n    this.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\n\n    this.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\n\n    this.registerTableOption(\"selectableCheck\", function (data, row) {\n      return true;\n    }); //check wheather row is selectable\n\n    this.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\n    this.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\n    this.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\n    this.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\n    this.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this)); //register component functions\n\n    this.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\n  }\n\n  initialize() {\n    if (this.table.options.selectable !== false) {\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\n      this.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\n\n      if (this.table.options.selectable && !this.table.options.selectablePersistence) {\n        this.subscribe(\"data-refreshing\", this.deselectRows.bind(this));\n      }\n    }\n  }\n\n  rowRetrieve(type, prevValue) {\n    return type === \"selected\" ? this.selectedRows : prevValue;\n  }\n\n  rowDeleted(row) {\n    this._deselectRow(row, true);\n  }\n\n  clearSelectionData(silent) {\n    this.selecting = false;\n    this.lastClickedRow = false;\n    this.selectPrev = [];\n    this.selectedRows = [];\n\n    if (silent !== true) {\n      this._rowSelectionChanged();\n    }\n  }\n\n  initializeRow(row) {\n    var self = this,\n        element = row.getElement(); // trigger end of row selection\n\n    var endSelect = function () {\n      setTimeout(function () {\n        self.selecting = false;\n      }, 50);\n      document.body.removeEventListener(\"mouseup\", endSelect);\n    };\n\n    row.modules.select = {\n      selected: false\n    }; //set row selection class\n\n    if (self.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      element.classList.add(\"tabulator-selectable\");\n      element.classList.remove(\"tabulator-unselectable\");\n\n      if (self.table.options.selectable && self.table.options.selectable != \"highlight\") {\n        if (self.table.options.selectableRangeMode === \"click\") {\n          element.addEventListener(\"click\", this.handleComplexRowClick.bind(this, row));\n        } else {\n          element.addEventListener(\"click\", function (e) {\n            if (!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()) {\n              self.table._clearSelection();\n            }\n\n            if (!self.selecting) {\n              self.toggleRow(row);\n            }\n          });\n          element.addEventListener(\"mousedown\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n\n              self.selecting = true;\n              self.selectPrev = [];\n              document.body.addEventListener(\"mouseup\", endSelect);\n              document.body.addEventListener(\"keyup\", endSelect);\n              self.toggleRow(row);\n              return false;\n            }\n          });\n          element.addEventListener(\"mouseenter\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n\n              self.toggleRow(row);\n\n              if (self.selectPrev[1] == row) {\n                self.toggleRow(self.selectPrev[0]);\n              }\n            }\n          });\n          element.addEventListener(\"mouseout\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n\n              self.selectPrev.unshift(row);\n            }\n          });\n        }\n      }\n    } else {\n      element.classList.add(\"tabulator-unselectable\");\n      element.classList.remove(\"tabulator-selectable\");\n    }\n  }\n\n  handleComplexRowClick(row, e) {\n    if (e.shiftKey) {\n      this.table._clearSelection();\n\n      this.lastClickedRow = this.lastClickedRow || row;\n      var lastClickedRowIdx = this.table.rowManager.getDisplayRowIndex(this.lastClickedRow);\n      var rowIdx = this.table.rowManager.getDisplayRowIndex(row);\n      var fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\n      var toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\n      var rows = this.table.rowManager.getDisplayRows().slice(0);\n      var toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\n\n      if (e.ctrlKey || e.metaKey) {\n        toggledRows.forEach(toggledRow => {\n          if (toggledRow !== this.lastClickedRow) {\n            if (this.table.options.selectable !== true && !this.isRowSelected(row)) {\n              if (this.selectedRows.length < this.table.options.selectable) {\n                this.toggleRow(toggledRow);\n              }\n            } else {\n              this.toggleRow(toggledRow);\n            }\n          }\n        });\n        this.lastClickedRow = row;\n      } else {\n        this.deselectRows(undefined, true);\n\n        if (this.table.options.selectable !== true) {\n          if (toggledRows.length > this.table.options.selectable) {\n            toggledRows = toggledRows.slice(0, this.table.options.selectable);\n          }\n        }\n\n        this.selectRows(toggledRows);\n      }\n\n      this.table._clearSelection();\n    } else if (e.ctrlKey || e.metaKey) {\n      this.toggleRow(row);\n      this.lastClickedRow = row;\n    } else {\n      this.deselectRows(undefined, true);\n      this.selectRows(row);\n      this.lastClickedRow = row;\n    }\n  } //toggle row selection\n\n\n  toggleRow(row) {\n    if (this.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      if (row.modules.select && row.modules.select.selected) {\n        this._deselectRow(row);\n      } else {\n        this._selectRow(row);\n      }\n    }\n  } //select a number of rows\n\n\n  selectRows(rows) {\n    var rowMatch;\n\n    switch (typeof rows) {\n      case \"undefined\":\n        this.table.rowManager.rows.forEach(row => {\n          this._selectRow(row, true, true);\n        });\n\n        this._rowSelectionChanged();\n\n        break;\n\n      case \"string\":\n        rowMatch = this.table.rowManager.findRow(rows);\n\n        if (rowMatch) {\n          this._selectRow(rowMatch, true, true);\n        } else {\n          this.table.rowManager.getRows(rows).forEach(row => {\n            this._selectRow(row, true, true);\n          });\n        }\n\n        this._rowSelectionChanged();\n\n        break;\n\n      default:\n        if (Array.isArray(rows)) {\n          rows.forEach(row => {\n            this._selectRow(row, true, true);\n          });\n\n          this._rowSelectionChanged();\n        } else {\n          this._selectRow(rows, false, true);\n        }\n\n        break;\n    }\n  } //select an individual row\n\n\n  _selectRow(rowInfo, silent, force) {\n    //handle max row count\n    if (!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force) {\n      if (this.selectedRows.length >= this.table.options.selectable) {\n        if (this.table.options.selectableRollingSelection) {\n          this._deselectRow(this.selectedRows[0]);\n        } else {\n          return false;\n        }\n      }\n    }\n\n    var row = this.table.rowManager.findRow(rowInfo);\n\n    if (row) {\n      if (this.selectedRows.indexOf(row) == -1) {\n        row.getElement().classList.add(\"tabulator-selected\");\n\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n\n        row.modules.select.selected = true;\n\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = true;\n        }\n\n        this.selectedRows.push(row);\n\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, true);\n        }\n\n        this.dispatchExternal(\"rowSelected\", row.getComponent());\n\n        this._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n\n  isRowSelected(row) {\n    return this.selectedRows.indexOf(row) !== -1;\n  } //deselect a number of rows\n\n\n  deselectRows(rows, silent) {\n    var self = this,\n        rowCount;\n\n    if (typeof rows == \"undefined\") {\n      rowCount = self.selectedRows.length;\n\n      for (let i = 0; i < rowCount; i++) {\n        self._deselectRow(self.selectedRows[0], true);\n      }\n\n      if (rowCount) {\n        self._rowSelectionChanged(silent);\n      }\n    } else {\n      if (Array.isArray(rows)) {\n        rows.forEach(function (row) {\n          self._deselectRow(row, true);\n        });\n\n        self._rowSelectionChanged(silent);\n      } else {\n        self._deselectRow(rows, silent);\n      }\n    }\n  } //deselect an individual row\n\n\n  _deselectRow(rowInfo, silent) {\n    var self = this,\n        row = self.table.rowManager.findRow(rowInfo),\n        index;\n\n    if (row) {\n      index = self.selectedRows.findIndex(function (selectedRow) {\n        return selectedRow == row;\n      });\n\n      if (index > -1) {\n        row.getElement().classList.remove(\"tabulator-selected\");\n\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n\n        row.modules.select.selected = false;\n\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = false;\n        }\n\n        self.selectedRows.splice(index, 1);\n\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, false);\n        }\n\n        this.dispatchExternal(\"rowDeselected\", row.getComponent());\n\n        self._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n\n  getSelectedData() {\n    var data = [];\n    this.selectedRows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    return data;\n  }\n\n  getSelectedRows() {\n    var rows = [];\n    this.selectedRows.forEach(function (row) {\n      rows.push(row.getComponent());\n    });\n    return rows;\n  }\n\n  _rowSelectionChanged(silent) {\n    if (this.headerCheckboxElement) {\n      if (this.selectedRows.length === 0) {\n        this.headerCheckboxElement.checked = false;\n        this.headerCheckboxElement.indeterminate = false;\n      } else if (this.table.rowManager.rows.length === this.selectedRows.length) {\n        this.headerCheckboxElement.checked = true;\n        this.headerCheckboxElement.indeterminate = false;\n      } else {\n        this.headerCheckboxElement.indeterminate = true;\n        this.headerCheckboxElement.checked = false;\n      }\n    }\n\n    if (!silent) {\n      this.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\n    }\n  }\n\n  registerRowSelectCheckbox(row, element) {\n    if (!row._row.modules.select) {\n      row._row.modules.select = {};\n    }\n\n    row._row.modules.select.checkboxEl = element;\n  }\n\n  registerHeaderSelectCheckbox(element) {\n    this.headerCheckboxElement = element;\n  }\n\n  childRowSelection(row, select) {\n    var children = this.table.modules.dataTree.getChildren(row, true);\n\n    if (select) {\n      for (let child of children) {\n        this._selectRow(child, true);\n      }\n    } else {\n      for (let child of children) {\n        this._deselectRow(child, true);\n      }\n    }\n  }\n\n}\n\nSelectRow.moduleName = \"selectRow\"; //sort numbers\n\nfunction number$1(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var decimal = params.decimalSeparator;\n  var thousand = params.thousandSeparator;\n  var emptyAlign = 0;\n  a = String(a);\n  b = String(b);\n\n  if (thousand) {\n    a = a.split(thousand).join(\"\");\n    b = b.split(thousand).join(\"\");\n  }\n\n  if (decimal) {\n    a = a.split(decimal).join(\".\");\n    b = b.split(decimal).join(\".\");\n  }\n\n  a = parseFloat(a);\n  b = parseFloat(b); //handle non numeric values\n\n  if (isNaN(a)) {\n    emptyAlign = isNaN(b) ? 0 : -1;\n  } else if (isNaN(b)) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    return a - b;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort strings\n\n\nfunction string(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  var locale; //handle empty values\n\n  if (!a) {\n    emptyAlign = !b ? 0 : -1;\n  } else if (!b) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    switch (typeof params.locale) {\n      case \"boolean\":\n        if (params.locale) {\n          locale = this.langLocale();\n        }\n\n        break;\n\n      case \"string\":\n        locale = params.locale;\n        break;\n    }\n\n    return String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort datetime\n\n\nfunction datetime$1(a, b, aRow, bRow, column, dir, params) {\n  var DT = window.DateTime || luxon.DateTime;\n  var format = params.format || \"dd/MM/yyyy HH:mm:ss\",\n      alignEmptyValues = params.alignEmptyValues,\n      emptyAlign = 0;\n\n  if (typeof DT != \"undefined\") {\n    if (DT.isDateTime(a)) {\n      a = a;\n    } else if (format === \"iso\") {\n      a = DT.fromISO(String(a));\n    } else {\n      a = DT.fromFormat(String(a), format);\n    }\n\n    if (DT.isDateTime(b)) {\n      b = b;\n    } else if (format === \"iso\") {\n      a = DT.fromISO(String(b));\n    } else {\n      b = DT.fromFormat(String(b), format);\n    }\n\n    if (!a.isValid) {\n      emptyAlign = !b.isValid ? 0 : -1;\n    } else if (!b.isValid) {\n      emptyAlign = 1;\n    } else {\n      //compare valid values\n      return a - b;\n    } //fix empty values in position\n\n\n    if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n      emptyAlign *= -1;\n    }\n\n    return emptyAlign;\n  } else {\n    console.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\n  }\n} //sort date\n\n\nfunction date(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"dd/MM/yyyy\";\n  }\n\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n} //sort times\n\n\nfunction time(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"HH:mm\";\n  }\n\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n} //sort booleans\n\n\nfunction boolean(a, b, aRow, bRow, column, dir, params) {\n  var el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\n  var el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\n  return el1 - el2;\n} //sort if element contains any data\n\n\nfunction array(a, b, aRow, bRow, column, dir, params) {\n  var el1 = 0;\n  var el2 = 0;\n  var type = params.type || \"length\";\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n\n  function calc(value) {\n    switch (type) {\n      case \"length\":\n        return value.length;\n\n      case \"sum\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        });\n\n      case \"max\":\n        return Math.max.apply(null, value);\n\n      case \"min\":\n        return Math.min.apply(null, value);\n\n      case \"avg\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        }) / value.length;\n    }\n  } //handle non array values\n\n\n  if (!Array.isArray(a)) {\n    alignEmptyValues = !Array.isArray(b) ? 0 : -1;\n  } else if (!Array.isArray(b)) {\n    alignEmptyValues = 1;\n  } else {\n    //compare valid values\n    el1 = a ? calc(a) : 0;\n    el2 = b ? calc(b) : 0;\n    return el1 - el2;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n} //sort if element contains any data\n\n\nfunction exists(a, b, aRow, bRow, column, dir, params) {\n  var el1 = typeof a == \"undefined\" ? 0 : 1;\n  var el2 = typeof b == \"undefined\" ? 0 : 1;\n  return el1 - el2;\n} //sort alpha numeric strings\n\n\nfunction alphanum(as, bs, aRow, bRow, column, dir, params) {\n  var a,\n      b,\n      a1,\n      b1,\n      i = 0,\n      L,\n      rx = /(\\d+)|(\\D+)/g,\n      rd = /\\d/;\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0; //handle empty values\n\n  if (!as && as !== 0) {\n    emptyAlign = !bs && bs !== 0 ? 0 : -1;\n  } else if (!bs && bs !== 0) {\n    emptyAlign = 1;\n  } else {\n    if (isFinite(as) && isFinite(bs)) return as - bs;\n    a = String(as).toLowerCase();\n    b = String(bs).toLowerCase();\n    if (a === b) return 0;\n    if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n    a = a.match(rx);\n    b = b.match(rx);\n    L = a.length > b.length ? b.length : a.length;\n\n    while (i < L) {\n      a1 = a[i];\n      b1 = b[i++];\n\n      if (a1 !== b1) {\n        if (isFinite(a1) && isFinite(b1)) {\n          if (a1.charAt(0) === \"0\") a1 = \".\" + a1;\n          if (b1.charAt(0) === \"0\") b1 = \".\" + b1;\n          return a1 - b1;\n        } else return a1 > b1 ? 1 : -1;\n      }\n    }\n\n    return a.length > b.length;\n  } //fix empty values in position\n\n\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n\n  return emptyAlign;\n}\n\nvar defaultSorters = {\n  number: number$1,\n  string: string,\n  date: date,\n  time: time,\n  datetime: datetime$1,\n  boolean: boolean,\n  array: array,\n  exists: exists,\n  alphanum: alphanum\n};\n\nclass Sort extends Module {\n  constructor(table) {\n    super(table);\n    this.sortList = []; //holder current sort\n\n    this.changed = false; //has the sort changed since last render\n\n    this.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\n\n    this.registerTableOption(\"initialSort\", false); //initial sorting criteria\n\n    this.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\n\n    this.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\n\n    this.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\n\n    this.registerColumnOption(\"sorter\");\n    this.registerColumnOption(\"sorterParams\");\n    this.registerColumnOption(\"headerSort\", true);\n    this.registerColumnOption(\"headerSortStartingDir\");\n    this.registerColumnOption(\"headerSortTristate\");\n  }\n\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    this.registerDataHandler(this.sort.bind(this), 20);\n    this.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\n    this.registerTableFunction(\"getSorters\", this.getSort.bind(this));\n    this.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\n\n    if (this.table.options.sortMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteSortParams.bind(this));\n    }\n  }\n\n  tableBuilt() {\n    if (this.table.options.initialSort) {\n      this.setSort(this.table.options.initialSort);\n    }\n  }\n\n  remoteSortParams(data, config, silent, params) {\n    var sorters = this.getSort();\n    sorters.forEach(item => {\n      delete item.column;\n    });\n    params.sort = sorters;\n    return params;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userSetSort(sortList, dir) {\n    this.setSort(sortList, dir); // this.table.rowManager.sorterRefresh();\n\n    this.refreshSort();\n  }\n\n  clearSort() {\n    this.clear(); // this.table.rowManager.sorterRefresh();\n\n    this.refreshSort();\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n  //initialize column header for sorting\n\n\n  initializeColumn(column) {\n    var sorter = false,\n        colEl,\n        arrowEl;\n\n    switch (typeof column.definition.sorter) {\n      case \"string\":\n        if (Sort.sorters[column.definition.sorter]) {\n          sorter = Sort.sorters[column.definition.sorter];\n        } else {\n          console.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\n        }\n\n        break;\n\n      case \"function\":\n        sorter = column.definition.sorter;\n        break;\n    }\n\n    column.modules.sort = {\n      sorter: sorter,\n      dir: \"none\",\n      params: column.definition.sorterParams || {},\n      startingDir: column.definition.headerSortStartingDir || \"asc\",\n      tristate: column.definition.headerSortTristate\n    };\n\n    if (column.definition.headerSort !== false) {\n      colEl = column.getElement();\n      colEl.classList.add(\"tabulator-sortable\");\n      arrowEl = document.createElement(\"div\");\n      arrowEl.classList.add(\"tabulator-col-sorter\");\n\n      if (typeof this.table.options.headerSortElement == \"object\") {\n        arrowEl.appendChild(this.table.options.headerSortElement);\n      } else {\n        arrowEl.innerHTML = this.table.options.headerSortElement;\n      } //create sorter arrow\n\n\n      column.titleHolderElement.appendChild(arrowEl);\n      column.modules.sort.element = arrowEl; //sort on click\n\n      colEl.addEventListener(\"click\", e => {\n        var dir = \"\",\n            sorters = [],\n            match = false;\n\n        if (column.modules.sort) {\n          if (column.modules.sort.tristate) {\n            if (column.modules.sort.dir == \"none\") {\n              dir = column.modules.sort.startingDir;\n            } else {\n              if (column.modules.sort.dir == column.modules.sort.startingDir) {\n                dir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\n              } else {\n                dir = \"none\";\n              }\n            }\n          } else {\n            switch (column.modules.sort.dir) {\n              case \"asc\":\n                dir = \"desc\";\n                break;\n\n              case \"desc\":\n                dir = \"asc\";\n                break;\n\n              default:\n                dir = column.modules.sort.startingDir;\n            }\n          }\n\n          if (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\n            sorters = this.getSort();\n            match = sorters.findIndex(sorter => {\n              return sorter.field === column.getField();\n            });\n\n            if (match > -1) {\n              sorters[match].dir = dir;\n\n              if (match != sorters.length - 1) {\n                match = sorters.splice(match, 1)[0];\n\n                if (dir != \"none\") {\n                  sorters.push(match);\n                }\n              }\n            } else {\n              if (dir != \"none\") {\n                sorters.push({\n                  column: column,\n                  dir: dir\n                });\n              }\n            } //add to existing sort\n\n\n            this.setSort(sorters);\n          } else {\n            if (dir == \"none\") {\n              this.clear();\n            } else {\n              //sort by column only\n              this.setSort(column, dir);\n            }\n          } // this.table.rowManager.sorterRefresh(!this.sortList.length);\n\n\n          this.refreshSort();\n        }\n      });\n    }\n  }\n\n  refreshSort() {\n    if (this.table.options.sortMode === \"remote\") {\n      this.reloadData();\n    } else {\n      this.refreshData(true);\n    } //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n\n  } //check if the sorters have changed since last use\n\n\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  } //return current sorters\n\n\n  getSort() {\n    var self = this,\n        sorters = [];\n    self.sortList.forEach(function (item) {\n      if (item.column) {\n        sorters.push({\n          column: item.column.getComponent(),\n          field: item.column.getField(),\n          dir: item.dir\n        });\n      }\n    });\n    return sorters;\n  } //change sort list and trigger sort\n\n\n  setSort(sortList, dir) {\n    var self = this,\n        newSortList = [];\n\n    if (!Array.isArray(sortList)) {\n      sortList = [{\n        column: sortList,\n        dir: dir\n      }];\n    }\n\n    sortList.forEach(function (item) {\n      var column;\n      column = self.table.columnManager.findColumn(item.column);\n\n      if (column) {\n        item.column = column;\n        newSortList.push(item);\n        self.changed = true;\n      } else {\n        console.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\n      }\n    });\n    self.sortList = newSortList;\n    this.dispatch(\"sort-changed\");\n  } //clear sorters\n\n\n  clear() {\n    this.setSort([]);\n  } //find appropriate sorter for column\n\n\n  findSorter(column) {\n    var row = this.table.rowManager.activeRows[0],\n        sorter = \"string\",\n        field,\n        value;\n\n    if (row) {\n      row = row.getData();\n      field = column.getField();\n\n      if (field) {\n        value = column.getFieldValue(row);\n\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              }\n            }\n\n            break;\n        }\n      }\n    }\n\n    return Sort.sorters[sorter];\n  } //work through sort list sorting data\n\n\n  sort(data) {\n    var self = this,\n        sortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\n        sortListActual = [],\n        rowComponents = [];\n\n    if (this.subscribedExternal(\"dataSorting\")) {\n      this.dispatchExternal(\"dataSorting\", self.getSort());\n    }\n\n    self.clearColumnHeaders();\n\n    if (this.table.options.sortMode !== \"remote\") {\n      //build list of valid sorters and trigger column specific callbacks before sort begins\n      sortList.forEach(function (item, i) {\n        var sortObj = item.column.modules.sort;\n\n        if (item.column && sortObj) {\n          //if no sorter has been defined, take a guess\n          if (!sortObj.sorter) {\n            sortObj.sorter = self.findSorter(item.column);\n          }\n\n          item.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\n          sortListActual.push(item);\n        }\n\n        self.setColumnHeader(item.column, item.dir);\n      }); //sort data\n\n      if (sortListActual.length) {\n        self._sortItems(data, sortListActual);\n      }\n    } else {\n      sortList.forEach(function (item, i) {\n        self.setColumnHeader(item.column, item.dir);\n      });\n    }\n\n    if (this.subscribedExternal(\"dataSorted\")) {\n      data.forEach(row => {\n        rowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\n    }\n\n    return data;\n  } //clear sort arrows on columns\n\n\n  clearColumnHeaders() {\n    this.table.columnManager.getRealColumns().forEach(function (column) {\n      if (column.modules.sort) {\n        column.modules.sort.dir = \"none\";\n        column.getElement().setAttribute(\"aria-sort\", \"none\");\n      }\n    });\n  } //set the column header sort direction\n\n\n  setColumnHeader(column, dir) {\n    column.modules.sort.dir = dir;\n    column.getElement().setAttribute(\"aria-sort\", dir);\n  } //sort each item in sort list\n\n\n  _sortItems(data, sortList) {\n    var sorterCount = sortList.length - 1;\n    data.sort((a, b) => {\n      var result;\n\n      for (var i = sorterCount; i >= 0; i--) {\n        let sortItem = sortList[i];\n        result = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\n\n        if (result !== 0) {\n          break;\n        }\n      }\n\n      return result;\n    });\n  } //process individual rows for a sort function on active data\n\n\n  _sortRow(a, b, column, dir, params) {\n    var el1Comp, el2Comp; //switch elements depending on search direction\n\n    var el1 = dir == \"asc\" ? a : b;\n    var el2 = dir == \"asc\" ? b : a;\n    a = column.getFieldValue(el1.getData());\n    b = column.getFieldValue(el2.getData());\n    a = typeof a !== \"undefined\" ? a : \"\";\n    b = typeof b !== \"undefined\" ? b : \"\";\n    el1Comp = el1.getComponent();\n    el2Comp = el2.getComponent();\n    return column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\n  }\n\n}\n\nSort.moduleName = \"sort\"; //load defaults\n\nSort.sorters = defaultSorters;\n\nclass Tooltip extends Module {\n  constructor(table) {\n    super(table);\n    this.tooltipSubscriber = null, this.headerSubscriber = null, this.timeout = null;\n    this.popupInstance = null;\n    this.registerTableOption(\"tooltipGenerationMode\", undefined); //deprecated\n\n    this.registerTableOption(\"tooltipDelay\", 300);\n    this.registerColumnOption(\"tooltip\");\n    this.registerColumnOption(\"headerTooltip\");\n  }\n\n  initialize() {\n    this.deprecationCheck();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n  }\n\n  deprecationCheck() {\n    if (typeof this.table.options.tooltipGenerationMode !== \"undefined\") {\n      console.warn(\"Use of the tooltipGenerationMode option is now deprecated. This option is no longer needed as tooltips are always generated on hover now\");\n    }\n  }\n\n  initializeColumn(column) {\n    if (column.definition.headerTooltip && !this.headerSubscriber) {\n      this.headerSubscriber = true;\n      this.subscribe(\"column-mousemove\", this.mousemoveCheck.bind(this, \"headerTooltip\"));\n      this.subscribe(\"column-mouseout\", this.mouseoutCheck.bind(this, \"headerTooltip\"));\n    }\n\n    if (column.definition.tooltip && !this.tooltipSubscriber) {\n      this.tooltipSubscriber = true;\n      this.subscribe(\"cell-mousemove\", this.mousemoveCheck.bind(this, \"tooltip\"));\n      this.subscribe(\"cell-mouseout\", this.mouseoutCheck.bind(this, \"tooltip\"));\n    }\n  }\n\n  mousemoveCheck(action, e, component) {\n    var tooltip = action === \"tooltip\" ? component.column.definition.tooltip : component.definition.headerTooltip;\n\n    if (tooltip) {\n      this.clearPopup();\n      this.timeout = setTimeout(this.loadTooltip.bind(this, e, component, tooltip), this.table.options.tooltipDelay);\n    }\n  }\n\n  mouseoutCheck(action, e, component) {\n    if (!this.popupInstance) {\n      this.clearPopup();\n    }\n  }\n\n  clearPopup(action, e, component) {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n\n    if (this.popupInstance) {\n      this.popupInstance.hide();\n    }\n  }\n\n  loadTooltip(e, component, tooltip) {\n    var contentsEl, renderedCallback, coords;\n\n    function onRendered(callback) {\n      renderedCallback = callback;\n    }\n\n    if (typeof tooltip === \"function\") {\n      tooltip = tooltip(e, component.getComponent(), onRendered);\n    }\n\n    if (tooltip instanceof HTMLElement) {\n      contentsEl = tooltip;\n    } else {\n      contentsEl = document.createElement(\"div\");\n\n      if (tooltip === true) {\n        if (component instanceof Cell) {\n          tooltip = component.value;\n        } else {\n          if (component.definition.field) {\n            this.langBind(\"columns|\" + component.definition.field, value => {\n              contentsEl.innerHTML = tooltip = value || component.definition.title;\n            });\n          } else {\n            tooltip = component.definition.title;\n          }\n        }\n      }\n\n      contentsEl.innerHTML = tooltip;\n    }\n\n    if (tooltip || tooltip === 0 || tooltip === \"0\" || tooltip === false) {\n      contentsEl.classList.add(\"tabulator-tooltip\");\n      contentsEl.addEventListener(\"mousemove\", e => e.preventDefault());\n      this.popupInstance = this.popup(contentsEl);\n\n      if (typeof renderedCallback === \"function\") {\n        this.popupInstance.renderCallback(renderedCallback);\n      }\n\n      coords = this.popupInstance.containerEventCoords(e);\n      this.popupInstance.show(coords.x + 15, coords.y + 15).hideOnBlur(() => {\n        this.dispatchExternal(\"TooltipClosed\", component.getComponent());\n        this.popupInstance = null;\n      });\n      this.dispatchExternal(\"TooltipOpened\", component.getComponent());\n    }\n  }\n\n}\n\nTooltip.moduleName = \"tooltip\";\nvar defaultValidators = {\n  //is integer\n  integer: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  },\n  //is float\n  float: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && value % 1 !== 0;\n  },\n  //must be a number\n  numeric: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return !isNaN(value);\n  },\n  //must be a string\n  string: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return isNaN(value);\n  },\n  //maximum value\n  max: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return parseFloat(value) <= parameters;\n  },\n  //minimum value\n  min: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return parseFloat(value) >= parameters;\n  },\n  //starts with  value\n  starts: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\n  },\n  //ends with  value\n  ends: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\n  },\n  //minimum string length\n  minLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).length >= parameters;\n  },\n  //maximum string length\n  maxLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    return String(value).length <= parameters;\n  },\n  //in provided value list\n  in: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    if (typeof parameters == \"string\") {\n      parameters = parameters.split(\"|\");\n    }\n\n    return value === \"\" || parameters.indexOf(value) > -1;\n  },\n  //must match provided regex\n  regex: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    var reg = new RegExp(parameters);\n    return reg.test(value);\n  },\n  //value must be unique in this column\n  unique: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n\n    var unique = true;\n    var cellData = cell.getData();\n\n    var column = cell.getColumn()._getSelf();\n\n    this.table.rowManager.rows.forEach(function (row) {\n      var data = row.getData();\n\n      if (data !== cellData) {\n        if (value == column.getFieldValue(data)) {\n          unique = false;\n        }\n      }\n    });\n    return unique;\n  },\n  //must have a value\n  required: function (cell, value, parameters) {\n    return value !== \"\" && value !== null && typeof value !== \"undefined\";\n  }\n};\n\nclass Validate extends Module {\n  constructor(table) {\n    super(table);\n    this.invalidCells = [];\n    this.registerTableOption(\"validationMode\", \"blocking\");\n    this.registerColumnOption(\"validator\");\n    this.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\n    this.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\n    this.registerTableFunction(\"validate\", this.userValidate.bind(this));\n    this.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\n    this.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\n    this.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\n    this.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\n  }\n\n  initialize() {\n    this.subscribe(\"cell-delete\", this.clearValidation.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"edit-success\", this.editValidate.bind(this));\n    this.subscribe(\"edit-editor-clear\", this.editorClear.bind(this));\n    this.subscribe(\"edit-edited-clear\", this.editedClear.bind(this));\n  } ///////////////////////////////////\n  ///////// Event Handling //////////\n  ///////////////////////////////////\n\n\n  editValidate(cell, value, previousValue) {\n    var valid = this.table.options.validationMode !== \"manual\" ? this.validate(cell.column.modules.validate, cell, value) : true; // allow time for editor to make render changes then style cell\n\n    if (valid !== true) {\n      setTimeout(() => {\n        cell.getElement().classList.add(\"tabulator-validation-fail\");\n        this.dispatchExternal(\"validationFailed\", cell.getComponent(), value, valid);\n      });\n    }\n\n    return valid;\n  }\n\n  editorClear(cell, cancelled) {\n    if (cancelled) {\n      if (cell.column.modules.validate) {\n        this.cellValidate(cell);\n      }\n    }\n\n    cell.getElement().classList.remove(\"tabulator-validation-fail\");\n  }\n\n  editedClear(cell) {\n    if (cell.modules.validate) {\n      cell.modules.validate.invalid = false;\n    }\n  } ///////////////////////////////////\n  ////////// Cell Functions /////////\n  ///////////////////////////////////\n\n\n  cellIsValid(cell) {\n    return cell.modules.validate ? cell.modules.validate.invalid || true : true;\n  }\n\n  cellValidate(cell) {\n    return this.validate(cell.column.modules.validate, cell, cell.getValue());\n  } ///////////////////////////////////\n  ///////// Column Functions ////////\n  ///////////////////////////////////\n\n\n  columnValidate(column) {\n    var invalid = [];\n    column.cells.forEach(cell => {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  } ///////////////////////////////////\n  ////////// Row Functions //////////\n  ///////////////////////////////////\n\n\n  rowValidate(row) {\n    var invalid = [];\n    row.cells.forEach(cell => {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  } ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n\n  userClearCellValidation(cells) {\n    if (!cells) {\n      cells = this.getInvalidCells();\n    }\n\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n\n    cells.forEach(cell => {\n      this.clearValidation(cell._getSelf());\n    });\n  }\n\n  userValidate(cells) {\n    var output = []; //clear row data\n\n    this.table.rowManager.rows.forEach(row => {\n      row = row.getComponent();\n      var valid = row.validate();\n\n      if (valid !== true) {\n        output = output.concat(valid);\n      }\n    });\n    return output.length ? output : true;\n  } ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.validator !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  } //validate\n\n\n  initializeColumn(column) {\n    var self = this,\n        config = [],\n        validator;\n\n    if (column.definition.validator) {\n      if (Array.isArray(column.definition.validator)) {\n        column.definition.validator.forEach(item => {\n          validator = self._extractValidator(item);\n\n          if (validator) {\n            config.push(validator);\n          }\n        });\n      } else {\n        validator = this._extractValidator(column.definition.validator);\n\n        if (validator) {\n          config.push(validator);\n        }\n      }\n\n      column.modules.validate = config.length ? config : false;\n    }\n  }\n\n  _extractValidator(value) {\n    var type, params, pos;\n\n    switch (typeof value) {\n      case \"string\":\n        pos = value.indexOf(':');\n\n        if (pos > -1) {\n          type = value.substring(0, pos);\n          params = value.substring(pos + 1);\n        } else {\n          type = value;\n        }\n\n        return this._buildValidator(type, params);\n\n      case \"function\":\n        return this._buildValidator(value);\n\n      case \"object\":\n        return this._buildValidator(value.type, value.parameters);\n    }\n  }\n\n  _buildValidator(type, params) {\n    var func = typeof type == \"function\" ? type : Validate.validators[type];\n\n    if (!func) {\n      console.warn(\"Validator Setup Error - No matching validator found:\", type);\n      return false;\n    } else {\n      return {\n        type: typeof type == \"function\" ? \"function\" : type,\n        func: func,\n        params: params\n      };\n    }\n  }\n\n  validate(validators, cell, value) {\n    var self = this,\n        failedValidators = [],\n        invalidIndex = this.invalidCells.indexOf(cell);\n\n    if (validators) {\n      validators.forEach(item => {\n        if (!item.func.call(self, cell.getComponent(), value, item.params)) {\n          failedValidators.push({\n            type: item.type,\n            parameters: item.params\n          });\n        }\n      });\n    }\n\n    if (!cell.modules.validate) {\n      cell.modules.validate = {};\n    }\n\n    if (!failedValidators.length) {\n      cell.modules.validate.invalid = false;\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    } else {\n      cell.modules.validate.invalid = failedValidators;\n\n      if (this.table.options.validationMode !== \"manual\") {\n        cell.getElement().classList.add(\"tabulator-validation-fail\");\n      }\n\n      if (invalidIndex == -1) {\n        this.invalidCells.push(cell);\n      }\n    }\n\n    return failedValidators.length ? failedValidators : true;\n  }\n\n  getInvalidCells() {\n    var output = [];\n    this.invalidCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n\n  clearValidation(cell) {\n    var invalidIndex;\n\n    if (cell.modules.validate && cell.modules.validate.invalid) {\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      cell.modules.validate.invalid = false;\n      invalidIndex = this.invalidCells.indexOf(cell);\n\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    }\n  }\n\n}\n\nValidate.moduleName = \"validate\"; //load defaults\n\nValidate.validators = defaultValidators;\nvar modules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AccessorModule: Accessor,\n  AjaxModule: Ajax,\n  ClipboardModule: Clipboard,\n  ColumnCalcsModule: ColumnCalcs,\n  DataTreeModule: DataTree,\n  DownloadModule: Download,\n  EditModule: Edit$1,\n  ExportModule: Export,\n  FilterModule: Filter,\n  FormatModule: Format,\n  FrozenColumnsModule: FrozenColumns,\n  FrozenRowsModule: FrozenRows,\n  GroupRowsModule: GroupRows,\n  HistoryModule: History,\n  HtmlTableImportModule: HtmlTableImport,\n  ImportModule: Import,\n  InteractionModule: Interaction,\n  KeybindingsModule: Keybindings,\n  MenuModule: Menu,\n  MoveColumnsModule: MoveColumns,\n  MoveRowsModule: MoveRows,\n  MutatorModule: Mutator,\n  PageModule: Page,\n  PersistenceModule: Persistence,\n  PopupModule: Popup$1,\n  PrintModule: Print,\n  ReactiveDataModule: ReactiveData,\n  ResizeColumnsModule: ResizeColumns,\n  ResizeRowsModule: ResizeRows,\n  ResizeTableModule: ResizeTable,\n  ResponsiveLayoutModule: ResponsiveLayout,\n  SelectRowModule: SelectRow,\n  SortModule: Sort,\n  TooltipModule: Tooltip,\n  ValidateModule: Validate\n});\nvar defaultOptions = {\n  debugEventsExternal: false,\n  //flag to console log events\n  debugEventsInternal: false,\n  //flag to console log events\n  debugInvalidOptions: true,\n  //allow toggling of invalid option warnings\n  debugInitialization: true,\n  //allow toggling of invalid option warnings\n  height: false,\n  //height of tabulator\n  minHeight: false,\n  //minimum height of tabulator\n  maxHeight: false,\n  //maximum height of tabulator\n  columnHeaderVertAlign: \"top\",\n  //vertical alignment of column headers\n  popupContainer: false,\n  columns: [],\n  //store for colum header info\n  columnDefaults: {},\n  //store column default props\n  data: false,\n  //default starting data\n  autoColumns: false,\n  //build columns from data row structure\n  autoColumnsDefinitions: false,\n  nestedFieldSeparator: \".\",\n  //separator for nested data\n  footerElement: false,\n  //hold footer element\n  index: \"id\",\n  //filed for row index\n  textDirection: \"auto\",\n  addRowPos: \"bottom\",\n  //position to insert blank rows, top|bottom\n  headerVisible: true,\n  //hide header\n  renderVertical: \"virtual\",\n  renderHorizontal: \"basic\",\n  renderVerticalBuffer: 0,\n  // set virtual DOM buffer size\n  scrollToRowPosition: \"top\",\n  scrollToRowIfVisible: true,\n  scrollToColumnPosition: \"left\",\n  scrollToColumnIfVisible: true,\n  rowFormatter: false,\n  rowFormatterPrint: null,\n  rowFormatterClipboard: null,\n  rowFormatterHtmlOutput: null,\n  rowHeight: null,\n  placeholder: false,\n  dataLoader: true,\n  dataLoaderLoading: false,\n  dataLoaderError: false,\n  dataLoaderErrorTimeout: 3000,\n  dataSendParams: {},\n  dataReceiveParams: {}\n};\n\nclass OptionsList {\n  constructor(table, msgType) {\n    let defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.table = table;\n    this.msgType = msgType;\n    this.registeredDefaults = Object.assign({}, defaults);\n  }\n\n  register(option, value) {\n    this.registeredDefaults[option] = value;\n  }\n\n  generate(defaultOptions) {\n    let userOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var output = Object.assign({}, this.registeredDefaults);\n    Object.assign(output, defaultOptions);\n\n    if (userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions) {\n      for (var key in userOptions) {\n        if (!output.hasOwnProperty(key)) {\n          console.warn(\"Invalid \" + this.msgType + \" option:\", key);\n        }\n      }\n    }\n\n    for (var key in output) {\n      if (key in userOptions) {\n        output[key] = userOptions[key];\n      } else {\n        if (Array.isArray(output[key])) {\n          output[key] = Object.assign([], output[key]);\n        } else if (typeof output[key] === \"object\" && output[key] !== null) {\n          output[key] = Object.assign({}, output[key]);\n        } else if (typeof output[key] === \"undefined\") {\n          delete output[key];\n        }\n      }\n    }\n\n    return output;\n  }\n\n}\n\nclass Renderer extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.elementVertical = table.rowManager.element;\n    this.elementHorizontal = table.columnManager.element;\n    this.tableElement = table.rowManager.tableElement;\n    this.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\n  } ///////////////////////////////////\n  /////// Internal Bindings /////////\n  ///////////////////////////////////\n\n\n  initialize() {//initialize core functionality\n  }\n\n  clearRows() {//clear down existing rows layout\n  }\n\n  clearColumns() {//clear down existing columns layout\n  }\n\n  reinitializeColumnWidths(columns) {//resize columns to fit data\n  }\n\n  renderRows() {//render rows from a clean slate\n  }\n\n  renderColumns() {//render columns from a clean slate\n  }\n\n  rerenderRows(callback) {\n    // rerender rows and keep position\n    if (callback) {\n      callback();\n    }\n  }\n\n  rerenderColumns(update, blockRedraw) {//rerender columns\n  }\n\n  renderRowCells(row) {//render the cells in a row\n  }\n\n  rerenderRowCells(row, force) {//rerender the cells in a row\n  }\n\n  scrollColumns(left, dir) {//handle horizontal scrolling\n  }\n\n  scrollRows(top, dir) {//handle vertical scolling\n  }\n\n  resize() {//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\n  }\n\n  scrollToRow(row) {//scroll to a specific row\n  }\n\n  scrollToRowNearestTop(row) {//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\n  }\n\n  visibleRows(includingBuffer) {\n    //return the visible rows\n    return [];\n  } ///////////////////////////////////\n  //////// Helper Functions /////////\n  ///////////////////////////////////\n\n\n  rows() {\n    return this.table.rowManager.getDisplayRows();\n  }\n\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  } ///////////////////////////////////\n  /////// External Triggers /////////\n  /////// (DO NOT OVERRIDE) /////////\n  ///////////////////////////////////\n\n\n  clear() {\n    //clear down existing layout\n    this.clearRows();\n    this.clearColumns();\n  }\n\n  render() {\n    //render from a clean slate\n    this.renderRows();\n    this.renderColumns();\n  }\n\n  rerender(callback) {\n    // rerender and keep position\n    this.rerenderRows();\n    this.rerenderColumns();\n  }\n\n  scrollToRowPosition(row, position, ifVisible) {\n    var rowIndex = this.rows().indexOf(row),\n        rowEl = row.getElement(),\n        offset = 0;\n    return new Promise((resolve, reject) => {\n      if (rowIndex > -1) {\n        if (typeof ifVisible === \"undefined\") {\n          ifVisible = this.table.options.scrollToRowIfVisible;\n        } //check row visibility\n\n\n        if (!ifVisible) {\n          if (Helpers.elVisible(rowEl)) {\n            offset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\n\n            if (offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight) {\n              resolve();\n              return false;\n            }\n          }\n        }\n\n        if (typeof position === \"undefined\") {\n          position = this.table.options.scrollToRowPosition;\n        }\n\n        if (position === \"nearest\") {\n          position = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\";\n        } //scroll to row\n\n\n        this.scrollToRow(row); //align to correct position\n\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - (this.elementVertical.scrollHeight - rowEl.offsetTop) / 2;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight / 2;\n            }\n\n            break;\n\n          case \"bottom\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\n            }\n\n            break;\n        }\n\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Row not visible\");\n        reject(\"Scroll Error - Row not visible\");\n      }\n    });\n  }\n\n}\n\nclass BaiscHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n  }\n\n  renderRowCells(row) {\n    row.cells.forEach(cell => {\n      row.element.appendChild(cell.getElement());\n      cell.cellRendered();\n    });\n  }\n\n  reinitializeColumnWidths(columns) {\n    columns.forEach(function (column) {\n      column.reinitializeWidth();\n    });\n  }\n\n}\n\nclass VirtualDomHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n    this.leftCol = 0;\n    this.rightCol = 0;\n    this.scrollLeft = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n    this.fitDataColAvg = 0;\n    this.windowBuffer = 200; //pixel margin to make column visible before it is shown on screen\n\n    this.visibleRows = null;\n    this.initialized = false;\n    this.isFitData = false;\n    this.columns = [];\n  }\n\n  initialize() {\n    this.compatibilityCheck();\n    this.layoutCheck();\n    this.vertScrollListen();\n  }\n\n  compatibilityCheck() {\n    var columns = this.options(\"columns\"),\n        frozen = false,\n        ok = true;\n\n    if (this.options(\"layout\") == \"fitDataTable\") {\n      console.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\n      ok = false;\n    }\n\n    if (this.options(\"responsiveLayout\")) {\n      console.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\n      ok = false;\n    }\n\n    if (this.options(\"rtl\")) {\n      console.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\n      ok = false;\n    }\n\n    if (columns) {\n      frozen = columns.find(col => {\n        return col.frozen;\n      });\n\n      if (frozen) {\n        console.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\n        ok = false;\n      }\n    } // if(!ok){\n    // \toptions.virtualDomHoz = false;\n    // }\n\n\n    return ok;\n  }\n\n  layoutCheck() {\n    this.isFitData = this.options(\"layout\").startsWith('fitData');\n  }\n\n  vertScrollListen() {\n    this.subscribe(\"scroll-vertical\", this.clearVisRowCache.bind(this));\n    this.subscribe(\"data-refreshed\", this.clearVisRowCache.bind(this));\n  }\n\n  clearVisRowCache() {\n    this.visibleRows = null;\n  } //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n\n  renderColumns(row, force) {\n    this.dataChange();\n  }\n\n  scrollColumns(left, dir) {\n    if (this.scrollLeft != left) {\n      this.scrollLeft = left;\n      this.scroll(left - (this.vDomScrollPosLeft + this.windowBuffer));\n    }\n  }\n\n  calcWindowBuffer() {\n    var buffer = this.elementVertical.clientWidth;\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      if (column.visible) {\n        var width = column.getWidth();\n\n        if (width > buffer) {\n          buffer = width;\n        }\n      }\n    });\n    this.windowBuffer = buffer * 2;\n  }\n\n  rerenderColumns(update, blockRedraw) {\n    var old = {\n      cols: this.columns,\n      leftCol: this.leftCol,\n      rightCol: this.rightCol\n    },\n        colPos = 0;\n\n    if (update && !this.initialized) {\n      return;\n    }\n\n    this.clear();\n    this.calcWindowBuffer();\n    this.scrollLeft = this.elementVertical.scrollLeft;\n    this.vDomScrollPosLeft = this.scrollLeft - this.windowBuffer;\n    this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer;\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      var config = {};\n\n      if (column.visible) {\n        var width = column.getWidth();\n        config.leftPos = colPos;\n        config.rightPos = colPos + width;\n        config.width = width;\n\n        if (this.isFitData) {\n          config.fitDataCheck = column.modules.vdomHoz ? column.modules.vdomHoz.fitDataCheck : true;\n        }\n\n        if (colPos + width > this.vDomScrollPosLeft && colPos < this.vDomScrollPosRight) {\n          //column is visible\n          if (this.leftCol == -1) {\n            this.leftCol = this.columns.length;\n            this.vDomPadLeft = colPos;\n          }\n\n          this.rightCol = this.columns.length;\n        } else {\n          // column is hidden\n          if (this.leftCol !== -1) {\n            this.vDomPadRight += width;\n          }\n        }\n\n        this.columns.push(column);\n        column.modules.vdomHoz = config;\n        colPos += width;\n      }\n    });\n    this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    this.initialized = true;\n\n    if (!blockRedraw) {\n      if (!update || this.reinitChanged(old)) {\n        this.reinitializeRows();\n      }\n    }\n\n    this.elementVertical.scrollLeft = this.scrollLeft;\n  }\n\n  renderRowCells(row) {\n    if (this.initialized) {\n      this.initializeRow(row);\n    } else {\n      row.cells.forEach(cell => {\n        row.element.appendChild(cell.getElement());\n        cell.cellRendered();\n      });\n    }\n  }\n\n  rerenderRowCells(row, force) {\n    this.reinitializeRow(row, force);\n  }\n\n  reinitializeColumnWidths(columns) {\n    for (let i = this.leftCol; i <= this.rightCol; i++) {\n      this.columns[i].reinitializeWidth();\n    }\n  } //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n\n  deinitialize() {\n    this.initialized = false;\n  }\n\n  clear() {\n    this.columns = [];\n    this.leftCol = -1;\n    this.rightCol = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n  }\n\n  dataChange() {\n    var change = false,\n        collsWidth = 0,\n        colEnd = 0,\n        row,\n        rowEl;\n\n    if (this.isFitData) {\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        if (!column.definition.width && column.visible) {\n          change = true;\n        }\n      });\n\n      if (change) {\n        if (change && this.table.rowManager.getDisplayRows().length) {\n          this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer;\n          var row = this.chain(\"rows-sample\", [1], [], () => {\n            return this.table.rowManager.getDisplayRows();\n          })[0];\n\n          if (row) {\n            rowEl = row.getElement();\n            row.generateCells();\n            this.tableElement.appendChild(rowEl);\n\n            for (var colEnd = 0; colEnd < row.cells.length; colEnd++) {\n              let cell = row.cells[colEnd];\n              rowEl.appendChild(cell.getElement());\n              cell.column.reinitializeWidth();\n              collsWidth += cell.column.getWidth(); // if(collsWidth > this.vDomScrollPosRight){\n              // \tbreak;\n              // }\n            }\n\n            rowEl.parentNode.removeChild(rowEl); // this.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\n            // for(colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++){\n            // \tthis.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\n            // }\n\n            this.rerenderColumns(false, true);\n          }\n        }\n      }\n    } else {\n      if (this.options(\"layout\") === \"fitColumns\") {\n        this.layoutRefresh();\n        this.rerenderColumns(false, true);\n      }\n    }\n  }\n\n  reinitChanged(old) {\n    var match = true;\n\n    if (old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol) {\n      return true;\n    }\n\n    old.cols.forEach((col, i) => {\n      if (col !== this.columns[i]) {\n        match = false;\n      }\n    });\n    return !match;\n  }\n\n  reinitializeRows() {\n    var rows = this.getVisibleRows();\n    rows.forEach(row => {\n      this.reinitializeRow(row, true);\n    });\n  }\n\n  getVisibleRows() {\n    if (!this.visibleRows) {\n      this.visibleRows = this.table.rowManager.getVisibleRows();\n    }\n\n    return this.visibleRows;\n  }\n\n  scroll(diff) {\n    this.vDomScrollPosLeft += diff;\n    this.vDomScrollPosRight += diff;\n\n    if (Math.abs(diff) > this.windowBuffer / 2) {\n      this.rerenderColumns();\n    } else {\n      if (diff > 0) {\n        //scroll right\n        this.addColRight();\n        this.removeColLeft();\n      } else {\n        //scroll left\n        this.addColLeft();\n        this.removeColRight();\n      }\n    }\n  }\n\n  colPositionAdjust(start, end, diff) {\n    for (let i = start; i < end; i++) {\n      let column = this.columns[i];\n      column.modules.vdomHoz.leftPos += diff;\n      column.modules.vdomHoz.rightPos += diff;\n    }\n  }\n\n  addColRight() {\n    var changes = false;\n\n    while (true) {\n      let column = this.columns[this.rightCol + 1];\n\n      if (column) {\n        if (column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight) {\n          changes = true;\n          this.getVisibleRows().forEach(row => {\n            if (row.type !== \"group\") {\n              var cell = row.getCell(column);\n              row.getElement().appendChild(cell.getElement());\n              cell.cellRendered();\n            }\n          });\n          this.fitDataColActualWidthCheck(column);\n          this.rightCol++; // Don't move this below the >= check below\n\n          if (this.rightCol >= this.columns.length - 1) {\n            this.vDomPadRight = 0;\n          } else {\n            this.vDomPadRight -= column.getWidth();\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (changes) {\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    }\n  }\n\n  addColLeft() {\n    var changes = false;\n\n    while (true) {\n      let column = this.columns[this.leftCol - 1];\n\n      if (column) {\n        if (column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft) {\n          changes = true;\n          this.getVisibleRows().forEach(row => {\n            if (row.type !== \"group\") {\n              var cell = row.getCell(column);\n              row.getElement().prepend(cell.getElement());\n              cell.cellRendered();\n            }\n          });\n          this.leftCol--; // don't move this below the <= check below\n\n          if (this.leftCol <= 0) {\n            // replicating logic in addColRight\n            this.vDomPadLeft = 0;\n          } else {\n            this.vDomPadLeft -= column.getWidth();\n          }\n\n          let diff = this.fitDataColActualWidthCheck(column);\n\n          if (diff) {\n            this.scrollLeft = this.elementVertical.scrollLeft = this.elementVertical.scrollLeft + diff;\n            this.vDomPadRight -= diff;\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (changes) {\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    }\n  }\n\n  removeColRight() {\n    var changes = false;\n\n    while (true) {\n      let column = this.columns[this.rightCol];\n\n      if (column) {\n        if (column.modules.vdomHoz.leftPos > this.vDomScrollPosRight) {\n          changes = true;\n          this.getVisibleRows().forEach(row => {\n            if (row.type !== \"group\") {\n              var cell = row.getCell(column);\n\n              try {\n                row.getElement().removeChild(cell.getElement());\n              } catch (ex) {\n                console.warn(\"Could not removeColRight\", ex.message);\n              }\n            }\n          });\n          this.vDomPadRight += column.getWidth();\n          this.rightCol--;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (changes) {\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    }\n  }\n\n  removeColLeft() {\n    var changes = false;\n\n    while (true) {\n      let column = this.columns[this.leftCol];\n\n      if (column) {\n        if (column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft) {\n          changes = true;\n          this.getVisibleRows().forEach(row => {\n            if (row.type !== \"group\") {\n              var cell = row.getCell(column);\n\n              try {\n                row.getElement().removeChild(cell.getElement());\n              } catch (ex) {\n                console.warn(\"Could not removeColLeft\", ex.message);\n              }\n            }\n          });\n          this.vDomPadLeft += column.getWidth();\n          this.leftCol++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (changes) {\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    }\n  }\n\n  fitDataColActualWidthCheck(column) {\n    var newWidth, widthDiff;\n\n    if (column.modules.vdomHoz.fitDataCheck) {\n      column.reinitializeWidth();\n      newWidth = column.getWidth();\n      widthDiff = newWidth - column.modules.vdomHoz.width;\n\n      if (widthDiff) {\n        column.modules.vdomHoz.rightPos += widthDiff;\n        column.modules.vdomHoz.width = newWidth;\n        this.colPositionAdjust(this.columns.indexOf(column) + 1, this.columns.length, widthDiff);\n      }\n\n      column.modules.vdomHoz.fitDataCheck = false;\n    }\n\n    return widthDiff;\n  }\n\n  initializeRow(row) {\n    if (row.type !== \"group\") {\n      row.modules.vdomHoz = {\n        leftCol: this.leftCol,\n        rightCol: this.rightCol\n      };\n\n      for (let i = this.leftCol; i <= this.rightCol; i++) {\n        let column = this.columns[i];\n\n        if (column && column.visible) {\n          let cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      }\n    }\n  }\n\n  reinitializeRow(row, force) {\n    if (row.type !== \"group\") {\n      if (force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol) {\n        var rowEl = row.getElement();\n\n        while (rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\n\n        this.initializeRow(row);\n      }\n    }\n  }\n\n}\n\nclass ColumnManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.blockHozScrollEvent = false;\n    this.headersElement = null;\n    this.element = null; //containing element\n\n    this.columns = []; // column definition object\n\n    this.columnsByIndex = []; //columns by index\n\n    this.columnsByField = {}; //columns by field\n\n    this.scrollLeft = 0;\n    this.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\n    this.renderer = null;\n  } ////////////// Setup Functions /////////////////\n\n\n  initialize() {\n    this.initializeRenderer();\n    this.headersElement = this.createHeadersElement();\n    this.element = this.createHeaderElement();\n    this.element.insertBefore(this.headersElement, this.element.firstChild);\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n  }\n\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomHorizontal,\n      \"basic\": BaiscHorizontal\n    };\n\n    if (typeof this.table.options.renderHorizontal === \"string\") {\n      renderClass = renderers[this.table.options.renderHorizontal];\n    } else {\n      renderClass = this.table.options.renderHorizontal;\n    }\n\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\n    }\n  }\n\n  createHeadersElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-headers\");\n    el.setAttribute(\"role\", \"row\");\n    return el;\n  }\n\n  createHeaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-header\");\n    el.setAttribute(\"role\", \"rowgroup\");\n\n    if (!this.table.options.headerVisible) {\n      el.classList.add(\"tabulator-header-hidden\");\n    }\n\n    return el;\n  } //return containing element\n\n\n  getElement() {\n    return this.element;\n  } //return header containing element\n\n\n  getHeadersElement() {\n    return this.headersElement;\n  } //scroll horizontally to match table body\n\n\n  scrollHorizontal(left) {\n    var hozAdjust = 0,\n        scrollWidth = this.element.scrollWidth - this.table.element.clientWidth; // this.tempScrollBlock();\n\n    this.element.scrollLeft = left; //adjust for vertical scrollbar moving table when present\n\n    if (left > scrollWidth) {\n      hozAdjust = left - scrollWidth;\n      this.element.style.marginLeft = -hozAdjust + \"px\";\n    } else {\n      this.element.style.marginLeft = 0;\n    }\n\n    this.scrollLeft = left;\n    this.renderer.scrollColumns(left);\n  } ///////////// Column Setup Functions /////////////\n\n\n  generateColumnsFromRowData(data) {\n    var cols = [],\n        definitions = this.table.options.autoColumnsDefinitions,\n        row,\n        sorter;\n\n    if (data && data.length) {\n      row = data[0];\n\n      for (var key in row) {\n        let col = {\n          field: key,\n          title: key\n        };\n        let value = row[key];\n\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n\n          case \"object\":\n            if (Array.isArray(value)) {\n              sorter = \"array\";\n            } else {\n              sorter = \"string\";\n            }\n\n            break;\n\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              } else {\n                sorter = \"string\";\n              }\n            }\n\n            break;\n        }\n\n        col.sorter = sorter;\n        cols.push(col);\n      }\n\n      if (definitions) {\n        switch (typeof definitions) {\n          case \"function\":\n            this.table.options.columns = definitions.call(this.table, cols);\n            break;\n\n          case \"object\":\n            if (Array.isArray(definitions)) {\n              cols.forEach(col => {\n                var match = definitions.find(def => {\n                  return def.field === col.field;\n                });\n\n                if (match) {\n                  Object.assign(col, match);\n                }\n              });\n            } else {\n              cols.forEach(col => {\n                if (definitions[col.field]) {\n                  Object.assign(col, definitions[col.field]);\n                }\n              });\n            }\n\n            this.table.options.columns = cols;\n            break;\n        }\n      } else {\n        this.table.options.columns = cols;\n      }\n\n      this.setColumns(this.table.options.columns);\n    }\n  }\n\n  setColumns(cols, row) {\n    while (this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\n\n    this.columns = [];\n    this.columnsByIndex = [];\n    this.columnsByField = {};\n    this.dispatch(\"columns-loading\");\n    cols.forEach((def, i) => {\n      this._addColumn(def);\n    });\n\n    this._reIndexColumns();\n\n    this.dispatch(\"columns-loaded\");\n    this.renderer.rerenderColumns(false, true);\n    this.redraw(true);\n  }\n\n  _addColumn(definition, before, nextToColumn) {\n    var column = new Column(definition, this),\n        colEl = column.getElement(),\n        index = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\n\n    if (nextToColumn && index > -1) {\n      var topColumn = nextToColumn.getTopColumn();\n      var parentIndex = this.columns.indexOf(topColumn);\n      var nextEl = topColumn.getElement();\n\n      if (before) {\n        this.columns.splice(parentIndex, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl);\n      } else {\n        this.columns.splice(parentIndex + 1, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\n      }\n    } else {\n      if (before) {\n        this.columns.unshift(column);\n        this.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\n      } else {\n        this.columns.push(column);\n        this.headersElement.appendChild(column.getElement());\n      }\n    }\n\n    column.columnRendered();\n    return column;\n  }\n\n  registerColumnField(col) {\n    if (col.definition.field) {\n      this.columnsByField[col.definition.field] = col;\n    }\n  }\n\n  registerColumnPosition(col) {\n    this.columnsByIndex.push(col);\n  }\n\n  _reIndexColumns() {\n    this.columnsByIndex = [];\n    this.columns.forEach(function (column) {\n      column.reRegisterPosition();\n    });\n  } //ensure column headers take up the correct amount of space in column groups\n\n\n  verticalAlignHeaders() {\n    var minHeight = 0;\n    this.columns.forEach(column => {\n      var height;\n      column.clearVerticalAlign();\n      height = column.getHeight();\n\n      if (height > minHeight) {\n        minHeight = height;\n      }\n    });\n    this.columns.forEach(column => {\n      column.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\n    });\n    this.table.rowManager.adjustTableSize();\n  } //////////////// Column Details /////////////////\n\n\n  findColumn(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Column) {\n        //subject is column element\n        return subject;\n      } else if (subject instanceof ColumnComponent) {\n        //subject is public column component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the column header\n        let match = this.columns.find(column => {\n          return column.element === subject;\n        });\n        return match || false;\n      }\n    } else {\n      //subject should be treated as the field name of the column\n      return this.columnsByField[subject] || false;\n    } //catch all for any other type of input\n\n\n    return false;\n  }\n\n  getColumnByField(field) {\n    return this.columnsByField[field];\n  }\n\n  getColumnsByFieldRoot(root) {\n    var matches = [];\n    Object.keys(this.columnsByField).forEach(field => {\n      var fieldRoot = field.split(\".\")[0];\n\n      if (fieldRoot === root) {\n        matches.push(this.columnsByField[field]);\n      }\n    });\n    return matches;\n  }\n\n  getColumnByIndex(index) {\n    return this.columnsByIndex[index];\n  }\n\n  getFirstVisibleColumn(index) {\n    var index = this.columnsByIndex.findIndex(col => {\n      return col.visible;\n    });\n    return index > -1 ? this.columnsByIndex[index] : false;\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  findColumnIndex(column) {\n    return this.columnsByIndex.findIndex(col => {\n      return column === col;\n    });\n  } //return all columns that are not groups\n\n\n  getRealColumns() {\n    return this.columnsByIndex;\n  } //travers across columns and call action\n\n\n  traverse(callback) {\n    this.columnsByIndex.forEach((column, i) => {\n      callback(column, i);\n    });\n  } //get defintions of actual columns\n\n\n  getDefinitions(active) {\n    var output = [];\n    this.columnsByIndex.forEach(column => {\n      if (!active || active && column.visible) {\n        output.push(column.getDefinition());\n      }\n    });\n    return output;\n  } //get full nested definition tree\n\n\n  getDefinitionTree() {\n    var output = [];\n    this.columns.forEach(column => {\n      output.push(column.getDefinition(true));\n    });\n    return output;\n  }\n\n  getComponents(structured) {\n    var output = [],\n        columns = structured ? this.columns : this.columnsByIndex;\n    columns.forEach(column => {\n      output.push(column.getComponent());\n    });\n    return output;\n  }\n\n  getWidth() {\n    var width = 0;\n    this.columnsByIndex.forEach(column => {\n      if (column.visible) {\n        width += column.getWidth();\n      }\n    });\n    return width;\n  }\n\n  moveColumn(from, to, after) {\n    this.moveColumnActual(from, to, after);\n    to.element.parentNode.insertBefore(from.element, to.element);\n\n    if (after) {\n      to.element.parentNode.insertBefore(to.element, from.element);\n    }\n\n    this.verticalAlignHeaders();\n    this.table.rowManager.reinitialize();\n  }\n\n  moveColumnActual(from, to, after) {\n    if (from.parent.isGroup) {\n      this._moveColumnInArray(from.parent.columns, from, to, after);\n    } else {\n      this._moveColumnInArray(this.columns, from, to, after);\n    }\n\n    this._moveColumnInArray(this.columnsByIndex, from, to, after, true);\n\n    this.renderer.rerenderColumns(true);\n    this.dispatch(\"column-moved\", from, to, after);\n\n    if (this.subscribedExternal(\"columnMoved\")) {\n      this.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\n    }\n  }\n\n  _moveColumnInArray(columns, from, to, after, updateRows) {\n    var fromIndex = columns.indexOf(from),\n        toIndex,\n        rows = [];\n\n    if (fromIndex > -1) {\n      columns.splice(fromIndex, 1);\n      toIndex = columns.indexOf(to);\n\n      if (toIndex > -1) {\n        if (after) {\n          toIndex = toIndex + 1;\n        }\n      } else {\n        toIndex = fromIndex;\n      }\n\n      columns.splice(toIndex, 0, from);\n\n      if (updateRows) {\n        rows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\n        rows = rows.concat(this.table.rowManager.rows);\n        rows.forEach(function (row) {\n          if (row.cells.length) {\n            var cell = row.cells.splice(fromIndex, 1)[0];\n            row.cells.splice(toIndex, 0, cell);\n          }\n        });\n      }\n    }\n  }\n\n  scrollToColumn(column, position, ifVisible) {\n    var left = 0,\n        offset = 0,\n        adjust = 0,\n        colEl = column.getElement();\n    return new Promise((resolve, reject) => {\n      if (typeof position === \"undefined\") {\n        position = this.table.options.scrollToColumnPosition;\n      }\n\n      if (typeof ifVisible === \"undefined\") {\n        ifVisible = this.table.options.scrollToColumnIfVisible;\n      }\n\n      if (column.visible) {\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            adjust = -this.element.clientWidth / 2;\n            break;\n\n          case \"right\":\n            adjust = colEl.clientWidth - this.headersElement.clientWidth;\n            break;\n        } //check column visibility\n\n\n        if (!ifVisible) {\n          offset = colEl.offsetLeft;\n\n          if (offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth) {\n            return false;\n          }\n        } //calculate scroll position\n\n\n        left = colEl.offsetLeft + adjust;\n        left = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth), 0);\n        this.table.rowManager.scrollHorizontal(left);\n        this.scrollHorizontal(left);\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Column not visible\");\n        reject(\"Scroll Error - Column not visible\");\n      }\n    });\n  } //////////////// Cell Management /////////////////\n\n\n  generateCells(row) {\n    var cells = [];\n    this.columnsByIndex.forEach(column => {\n      cells.push(column.generateCell(row));\n    });\n    return cells;\n  } //////////////// Column Management /////////////////\n\n\n  getFlexBaseWidth() {\n    var totalWidth = this.table.element.clientWidth,\n        //table element width\n    fixedWidth = 0; //adjust for vertical scrollbar if present\n\n    if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n      totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n    }\n\n    this.columnsByIndex.forEach(function (column) {\n      var width, minWidth, colWidth;\n\n      if (column.visible) {\n        width = column.definition.width || 0;\n        minWidth = parseInt(column.minWidth);\n\n        if (typeof width == \"string\") {\n          if (width.indexOf(\"%\") > -1) {\n            colWidth = totalWidth / 100 * parseInt(width);\n          } else {\n            colWidth = parseInt(width);\n          }\n        } else {\n          colWidth = width;\n        }\n\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n      }\n    });\n    return fixedWidth;\n  }\n\n  addColumn(definition, before, nextToColumn) {\n    return new Promise((resolve, reject) => {\n      var column = this._addColumn(definition, before, nextToColumn);\n\n      this._reIndexColumns();\n\n      this.dispatch(\"column-add\", definition, before, nextToColumn);\n\n      if (this.layoutMode() != \"fitColumns\") {\n        column.reinitializeWidth();\n      }\n\n      this.redraw(true);\n      this.table.rowManager.reinitialize();\n      this.renderer.rerenderColumns();\n      resolve(column);\n    });\n  } //remove column from system\n\n\n  deregisterColumn(column) {\n    var field = column.getField(),\n        index; //remove from field list\n\n    if (field) {\n      delete this.columnsByField[field];\n    } //remove from index list\n\n\n    index = this.columnsByIndex.indexOf(column);\n\n    if (index > -1) {\n      this.columnsByIndex.splice(index, 1);\n    } //remove from column list\n\n\n    index = this.columns.indexOf(column);\n\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n\n    this.verticalAlignHeaders();\n    this.redraw();\n  } //redraw columns\n\n\n  redraw(force) {\n    if (Helpers.elVisible(this.element)) {\n      this.verticalAlignHeaders();\n    }\n\n    if (force) {\n      this.table.rowManager.resetScroll();\n      this.table.rowManager.reinitialize();\n    }\n\n    if (!this.confirm(\"table-redrawing\", force)) {\n      this.layoutRefresh();\n    }\n\n    this.dispatch(\"table-redraw\", force);\n    this.table.footerManager.redraw();\n  }\n\n}\n\nclass BaiscVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n\n  clearRows() {\n    var element = this.tableElement; // element.children.detach();\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.scrollTop = 0;\n    element.scrollLeft = 0;\n    element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n  }\n\n  renderRows() {\n    var element = this.tableElement,\n        onlyGroupHeaders = true;\n    this.rows().forEach((row, index) => {\n      this.styleRow(row, index);\n      element.appendChild(row.getElement());\n      row.initialize(true);\n\n      if (row.type !== \"group\") {\n        onlyGroupHeaders = false;\n      }\n    });\n\n    if (onlyGroupHeaders) {\n      element.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    } else {\n      element.style.minWidth = \"\";\n    }\n  }\n\n  rerenderRows(callback) {\n    this.clearRows();\n    this.renderRows();\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  scrollToRowNearestTop(row) {\n    var rowTop = Helpers.elOffset(row.getElement()).top;\n    return !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\n  }\n\n  scrollToRow(row) {\n    var rowEl = row.getElement();\n    this.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\n  }\n\n  visibleRows(includingBuffer) {\n    return this.rows();\n  }\n\n}\n\nclass VirtualDomVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomRowHeight = 20; //approximation of row heights for padding\n\n    this.vDomTop = 0; //hold position for first rendered row in the virtual DOM\n\n    this.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\n\n    this.vDomScrollPosTop = 0; //last scroll position of the vDom top;\n\n    this.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\n\n    this.vDomTopPad = 0; //hold value of padding for top of virtual DOM\n\n    this.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\n\n    this.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\n\n    this.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\n\n    this.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\n\n    this.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\n\n    this.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\n\n    this.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\n  } //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n\n  clearRows() {\n    var element = this.tableElement; // element.children.detach();\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.style.paddingTop = \"\";\n    element.style.paddingBottom = \"\"; // element.style.minWidth = \"\";\n\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n    this.elementVertical.scrollTop = 0;\n    this.elementVertical.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomTop = 0;\n    this.vDomBottom = 0;\n    this.vDomTopPad = 0;\n    this.vDomBottomPad = 0;\n    this.vDomScrollPosTop = 0;\n    this.vDomScrollPosBottom = 0;\n  }\n\n  renderRows() {\n    this._virtualRenderFill();\n  }\n\n  rerenderRows(callback) {\n    var scrollTop = this.elementVertical.scrollTop;\n    var topRow = false;\n    var topOffset = false;\n    var left = this.table.rowManager.scrollLeft;\n    var rows = this.rows();\n\n    for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n      if (rows[i]) {\n        var diff = scrollTop - rows[i].getElement().offsetTop;\n\n        if (topOffset === false || Math.abs(diff) < topOffset) {\n          topOffset = diff;\n          topRow = i;\n        } else {\n          break;\n        }\n      }\n    }\n\n    rows.forEach(row => {\n      row.deinitializeHeight();\n    });\n\n    if (callback) {\n      callback();\n    }\n\n    this._virtualRenderFill(topRow === false ? this.rows.length - 1 : topRow, true, topOffset || 0);\n\n    this.scrollColumns(left);\n  }\n\n  scrollColumns(left) {\n    this.table.rowManager.scrollHorizontal(left);\n  }\n\n  scrollRows(top, dir) {\n    var topDiff = top - this.vDomScrollPosTop;\n    var bottomDiff = top - this.vDomScrollPosBottom;\n    var margin = this.vDomWindowBuffer * 2;\n    var rows = this.rows();\n    this.scrollTop = top;\n\n    if (-topDiff > margin || bottomDiff > margin) {\n      //if big scroll redraw table;\n      var left = this.table.rowManager.scrollLeft;\n\n      this._virtualRenderFill(Math.floor(this.elementVertical.scrollTop / this.elementVertical.scrollHeight * rows.length));\n\n      this.scrollColumns(left);\n    } else {\n      if (dir) {\n        //scrolling up\n        if (topDiff < 0) {\n          this._addTopRow(rows, -topDiff);\n        }\n\n        if (bottomDiff < 0) {\n          //hide bottom row if needed\n          if (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer) {\n            this._removeBottomRow(rows, -bottomDiff);\n          } else {\n            this.vDomScrollPosBottom = this.scrollTop;\n          }\n        }\n      } else {\n        if (bottomDiff >= 0) {\n          this._addBottomRow(rows, bottomDiff);\n        } //scrolling down\n\n\n        if (topDiff >= 0) {\n          //hide top row if needed\n          if (this.scrollTop > this.vDomWindowBuffer) {\n            this._removeTopRow(rows, topDiff);\n          } else {\n            this.vDomScrollPosTop = this.scrollTop;\n          }\n        }\n      }\n    }\n  }\n\n  resize() {\n    this.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\n  }\n\n  scrollToRowNearestTop(row) {\n    var rowIndex = this.rows().indexOf(row);\n    return !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\n  }\n\n  scrollToRow(row) {\n    var index = this.rows().indexOf(row);\n\n    if (index > -1) {\n      this._virtualRenderFill(index, true);\n    }\n  }\n\n  visibleRows(includingBuffer) {\n    var topEdge = this.elementVertical.scrollTop,\n        bottomEdge = this.elementVertical.clientHeight + topEdge,\n        topFound = false,\n        topRow = 0,\n        bottomRow = 0,\n        rows = this.rows();\n\n    if (includingBuffer) {\n      topRow = this.vDomTop;\n      bottomRow = this.vDomBottom;\n    } else {\n      for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n        if (rows[i]) {\n          if (!topFound) {\n            if (topEdge - rows[i].getElement().offsetTop >= 0) {\n              topRow = i;\n            } else {\n              topFound = true;\n\n              if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n                bottomRow = i;\n              } else {\n                break;\n              }\n            }\n          } else {\n            if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n              bottomRow = i;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return rows.slice(topRow, bottomRow + 1);\n  } //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n  //full virtual render\n\n\n  _virtualRenderFill(position, forceMove, offset) {\n    var element = this.tableElement,\n        holder = this.elementVertical,\n        topPad = 0,\n        rowsHeight = 0,\n        heightOccupied = 0,\n        topPadHeight = 0,\n        i = 0,\n        rows = this.rows(),\n        rowsCount = rows.length,\n        containerHeight = this.elementVertical.clientHeight;\n    position = position || 0;\n    offset = offset || 0;\n\n    if (!position) {\n      this.clear();\n    } else {\n      while (element.firstChild) element.removeChild(element.firstChild); //check if position is too close to bottom of table\n\n\n      heightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\n\n      if (heightOccupied < containerHeight) {\n        position -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\n\n        if (position < 0) {\n          position = 0;\n        }\n      } //calculate initial pad\n\n\n      topPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight), this.vDomWindowMinMarginRows), position);\n      position -= topPad;\n    }\n\n    if (rowsCount && Helpers.elVisible(this.elementVertical)) {\n      this.vDomTop = position;\n      this.vDomBottom = position - 1;\n\n      while ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount - 1) {\n        var index = this.vDomBottom + 1,\n            row = rows[index],\n            rowHeight = 0;\n        this.styleRow(row, index);\n        element.appendChild(row.getElement());\n        row.initialize();\n\n        if (!row.heightInitialized) {\n          row.normalizeHeight(true);\n        }\n\n        rowHeight = row.getHeight();\n\n        if (i < topPad) {\n          topPadHeight += rowHeight;\n        } else {\n          rowsHeight += rowHeight;\n        }\n\n        if (rowHeight > this.vDomWindowBuffer) {\n          this.vDomWindowBuffer = rowHeight * 2;\n        }\n\n        this.vDomBottom++;\n        i++;\n      }\n\n      if (!position) {\n        this.vDomTopPad = 0; //adjust rowheight to match average of rendered elements\n\n        this.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\n        this.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom - 1);\n        this.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\n      } else {\n        this.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : this.vDomRowHeight * this.vDomTop + offset;\n        this.vDomBottomPad = this.vDomBottom == rowsCount - 1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\n      }\n\n      element.style.paddingTop = this.vDomTopPad + \"px\";\n      element.style.paddingBottom = this.vDomBottomPad + \"px\";\n\n      if (forceMove) {\n        this.scrollTop = this.vDomTopPad + topPadHeight + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\n      }\n\n      this.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight); //adjust for horizontal scrollbar if present (and not at top of table)\n\n      if (this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove) {\n        this.scrollTop += this.elementVertical.offsetHeight - containerHeight;\n      }\n\n      this.vDomScrollPosTop = this.scrollTop;\n      this.vDomScrollPosBottom = this.scrollTop;\n      holder.scrollTop = this.scrollTop;\n      this.dispatch(\"render-virtual-fill\");\n    }\n  }\n\n  _addTopRow(rows, fillableSpace) {\n    var table = this.tableElement,\n        addedRows = [],\n        paddingAdjust = 0,\n        index = this.vDomTop - 1,\n        i = 0;\n\n    while (true) {\n      if (this.vDomTop) {\n        let row = rows[index],\n            rowHeight,\n            initialized;\n\n        if (row && i < this.vDomMaxRenderChain) {\n          rowHeight = row.getHeight() || this.vDomRowHeight;\n          initialized = row.initialized;\n\n          if (fillableSpace >= rowHeight) {\n            this.styleRow(row, index);\n            table.insertBefore(row.getElement(), table.firstChild);\n\n            if (!row.initialized || !row.heightInitialized) {\n              addedRows.push(row);\n            }\n\n            row.initialize();\n\n            if (!initialized) {\n              rowHeight = row.getElement().offsetHeight;\n\n              if (rowHeight > this.vDomWindowBuffer) {\n                this.vDomWindowBuffer = rowHeight * 2;\n              }\n            }\n\n            fillableSpace -= rowHeight;\n            paddingAdjust += rowHeight;\n            this.vDomTop--;\n            index--;\n            i++;\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n\n    this._quickNormalizeRowHeight(addedRows);\n\n    if (paddingAdjust) {\n      this.vDomTopPad -= paddingAdjust;\n\n      if (this.vDomTopPad < 0) {\n        this.vDomTopPad = index * this.vDomRowHeight;\n      }\n\n      if (index < 1) {\n        this.vDomTopPad = 0;\n      }\n\n      table.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop -= paddingAdjust;\n    }\n  }\n\n  _removeTopRow(rows, fillableSpace) {\n    var removableRows = [],\n        paddingAdjust = 0,\n        i = 0;\n\n    while (true) {\n      let row = rows[this.vDomTop],\n          rowHeight;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n\n        if (fillableSpace >= rowHeight) {\n          this.vDomTop++;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n\n    if (paddingAdjust) {\n      this.vDomTopPad += paddingAdjust;\n      this.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\n    }\n  }\n\n  _addBottomRow(rows, fillableSpace) {\n    var table = this.tableElement,\n        addedRows = [],\n        paddingAdjust = 0,\n        index = this.vDomBottom + 1,\n        i = 0;\n\n    while (true) {\n      let row = rows[index],\n          rowHeight,\n          initialized;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        initialized = row.initialized;\n\n        if (fillableSpace >= rowHeight) {\n          this.styleRow(row, index);\n          table.appendChild(row.getElement());\n\n          if (!row.initialized || !row.heightInitialized) {\n            addedRows.push(row);\n          }\n\n          row.initialize();\n\n          if (!initialized) {\n            rowHeight = row.getElement().offsetHeight;\n\n            if (rowHeight > this.vDomWindowBuffer) {\n              this.vDomWindowBuffer = rowHeight * 2;\n            }\n          }\n\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          this.vDomBottom++;\n          index++;\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n\n    this._quickNormalizeRowHeight(addedRows);\n\n    if (paddingAdjust) {\n      this.vDomBottomPad -= paddingAdjust;\n\n      if (this.vDomBottomPad < 0 || index == rows.length - 1) {\n        this.vDomBottomPad = 0;\n      }\n\n      table.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom += paddingAdjust;\n    }\n  }\n\n  _removeBottomRow(rows, fillableSpace) {\n    var removableRows = [],\n        paddingAdjust = 0,\n        i = 0;\n\n    while (true) {\n      let row = rows[this.vDomBottom],\n          rowHeight;\n\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n\n        if (fillableSpace >= rowHeight) {\n          this.vDomBottom--;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n\n    if (paddingAdjust) {\n      this.vDomBottomPad += paddingAdjust;\n\n      if (this.vDomBottomPad < 0) {\n        this.vDomBottomPad = 0;\n      }\n\n      this.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom -= paddingAdjust;\n    }\n  }\n\n  _quickNormalizeRowHeight(rows) {\n    for (let row of rows) {\n      row.calcHeight();\n    }\n\n    for (let row of rows) {\n      row.setCellHeight();\n    }\n  }\n\n}\n\nclass RowManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.element = this.createHolderElement(); //containing element\n\n    this.tableElement = this.createTableElement(); //table element\n\n    this.heightFixer = this.createTableElement(); //table element\n\n    this.placeholder = null; //placeholder element\n\n    this.placeholderContents = null; //placeholder element\n\n    this.firstRender = false; //handle first render\n\n    this.renderMode = \"virtual\"; //current rendering mode\n\n    this.fixedHeight = false; //current rendering mode\n\n    this.rows = []; //hold row data objects\n\n    this.activeRowsPipeline = []; //hold calculation of active rows\n\n    this.activeRows = []; //rows currently available to on display in the table\n\n    this.activeRowsCount = 0; //count of active rows\n\n    this.displayRows = []; //rows currently on display in the table\n\n    this.displayRowsCount = 0; //count of display rows\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.rowNumColumn = false; //hold column component for row number column\n\n    this.redrawBlock = false; //prevent redraws to allow multiple data manipulations before continuing\n\n    this.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\n\n    this.redrawBlockRenderInPosition = false; //store latest redraw function calls for when redraw is needed\n\n    this.dataPipeline = []; //hold data pipeline tasks\n\n    this.displayPipeline = []; //hold data display pipeline tasks\n\n    this.renderer = null;\n  } //////////////// Setup Functions /////////////////\n\n\n  createHolderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-tableholder\");\n    el.setAttribute(\"tabindex\", 0);\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n\n  createTableElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-table\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n\n  initializePlaceholder() {\n    //configure placeholder element\n    if (typeof this.table.options.placeholder == \"string\") {\n      let el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-placeholder\");\n      let contents = document.createElement(\"div\");\n      contents.classList.add(\"tabulator-placeholder-contents\");\n      contents.innerHTML = this.table.options.placeholder;\n      el.appendChild(contents);\n      this.placeholderContents = contents;\n      this.placeholder = el;\n    }\n  } //return containing element\n\n\n  getElement() {\n    return this.element;\n  } //return table element\n\n\n  getTableElement() {\n    return this.tableElement;\n  } //return position of row in table\n\n\n  getRowPosition(row, active) {\n    if (active) {\n      return this.activeRows.indexOf(row);\n    } else {\n      return this.rows.indexOf(row);\n    }\n  }\n\n  initialize() {\n    this.initializePlaceholder();\n    this.initializeRenderer(); //initialize manager\n\n    this.element.appendChild(this.tableElement);\n    this.firstRender = true; //scroll header along with table body\n\n    this.element.addEventListener(\"scroll\", () => {\n      var left = this.element.scrollLeft,\n          leftDir = this.scrollLeft > left,\n          top = this.element.scrollTop,\n          topDir = this.scrollTop > top; //handle horizontal scrolling\n\n      if (this.scrollLeft != left) {\n        this.scrollLeft = left;\n        this.dispatch(\"scroll-horizontal\", left, leftDir);\n        this.dispatchExternal(\"scrollHorizontal\", left, leftDir);\n\n        this._positionPlaceholder();\n      } //handle vertical scrolling\n\n\n      if (this.scrollTop != top) {\n        this.scrollTop = top;\n        this.renderer.scrollRows(top, topDir);\n        this.dispatch(\"scroll-vertical\", top, topDir);\n        this.dispatchExternal(\"scrollVertical\", top, topDir);\n      }\n    });\n  } ////////////////// Row Manipulation //////////////////\n\n\n  findRow(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        return subject;\n      } else if (subject instanceof RowComponent$1) {\n        //subject is public row component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the row\n        let match = this.rows.find(row => {\n          return row.getElement() === subject;\n        });\n        return match || false;\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      return false;\n    } else {\n      //subject should be treated as the index of the row\n      let match = this.rows.find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n      return match || false;\n    } //catch all for any other type of input\n\n\n    return false;\n  }\n\n  getRowFromDataObject(data) {\n    var match = this.rows.find(row => {\n      return row.data === data;\n    });\n    return match || false;\n  }\n\n  getRowFromPosition(position, active) {\n    if (active) {\n      return this.activeRows[position];\n    } else {\n      return this.rows[position];\n    }\n  }\n\n  scrollToRow(row, position, ifVisible) {\n    return this.renderer.scrollToRowPosition(row, position, ifVisible);\n  } ////////////////// Data Handling //////////////////\n\n\n  setData(data, renderInPosition, columnsChanged) {\n    return new Promise((resolve, reject) => {\n      if (renderInPosition && this.getDisplayRows().length) {\n        if (this.table.options.pagination) {\n          this._setDataActual(data, true);\n        } else {\n          this.reRenderInPosition(() => {\n            this._setDataActual(data);\n          });\n        }\n      } else {\n        if (this.table.options.autoColumns && columnsChanged && this.table.initialized) {\n          this.table.columnManager.generateColumnsFromRowData(data);\n        }\n\n        this.resetScroll();\n\n        this._setDataActual(data);\n      }\n\n      resolve();\n    });\n  }\n\n  _setDataActual(data, renderInPosition) {\n    this.dispatchExternal(\"dataProcessing\", data);\n\n    this._wipeElements();\n\n    if (Array.isArray(data)) {\n      this.dispatch(\"data-processing\", data);\n      data.forEach((def, i) => {\n        if (def && typeof def === \"object\") {\n          var row = new Row(def, this);\n          this.rows.push(row);\n        } else {\n          console.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\n        }\n      });\n      this.refreshActiveData(false, false, renderInPosition);\n      this.dispatch(\"data-processed\", data);\n      this.dispatchExternal(\"dataProcessed\", data);\n    } else {\n      console.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\n    }\n  }\n\n  _wipeElements() {\n    this.dispatch(\"rows-wipe\");\n    this.rows.forEach(row => {\n      row.wipe();\n    });\n    this.rows = [];\n    this.activeRows = [];\n    this.activeRowsPipeline = [];\n    this.activeRowsCount = 0;\n    this.displayRows = [];\n    this.displayRowsCount = 0;\n    this.adjustTableSize();\n  }\n\n  deleteRow(row, blockRedraw) {\n    var allIndex = this.rows.indexOf(row),\n        activeIndex = this.activeRows.indexOf(row);\n\n    if (activeIndex > -1) {\n      this.activeRows.splice(activeIndex, 1);\n    }\n\n    if (allIndex > -1) {\n      this.rows.splice(allIndex, 1);\n    }\n\n    this.setActiveRows(this.activeRows);\n    this.displayRowIterator(rows => {\n      var displayIndex = rows.indexOf(row);\n\n      if (displayIndex > -1) {\n        rows.splice(displayIndex, 1);\n      }\n    });\n\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n\n    this.regenerateRowNumbers();\n    this.dispatchExternal(\"rowDeleted\", row.getComponent());\n\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.getData());\n    }\n  }\n\n  addRow(data, pos, index, blockRedraw) {\n    var row = this.addRowActual(data, pos, index, blockRedraw);\n    return row;\n  } //add multiple rows\n\n\n  addRows(data, pos, index) {\n    var rows = [];\n    return new Promise((resolve, reject) => {\n      pos = this.findAddRowPos(pos);\n\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n\n      data.length - 1;\n\n      if (typeof index == \"undefined\" && pos || typeof index !== \"undefined\" && !pos) {\n        data.reverse();\n      }\n\n      data.forEach((item, i) => {\n        var row = this.addRow(item, pos, index, true);\n        rows.push(row);\n        this.dispatch(\"row-added\", row, data, pos, index);\n      });\n      this.refreshActiveData(false, false, true);\n      this.regenerateRowNumbers();\n\n      if (rows.length) {\n        this._clearPlaceholder();\n      }\n\n      resolve(rows);\n    });\n  }\n\n  findAddRowPos(pos) {\n    if (typeof pos === \"undefined\") {\n      pos = this.table.options.addRowPos;\n    }\n\n    if (pos === \"pos\") {\n      pos = true;\n    }\n\n    if (pos === \"bottom\") {\n      pos = false;\n    }\n\n    return pos;\n  }\n\n  addRowActual(data, pos, index, blockRedraw) {\n    var row = data instanceof Row ? data : new Row(data || {}, this),\n        top = this.findAddRowPos(pos),\n        allIndex = -1,\n        activeIndex,\n        chainResult;\n\n    if (!index) {\n      chainResult = this.chain(\"row-adding-position\", [row, top], null, {\n        index,\n        top\n      });\n      index = chainResult.index;\n      top = chainResult.top;\n    }\n\n    if (typeof index !== \"undefined\") {\n      index = this.findRow(index);\n    }\n\n    index = this.chain(\"row-adding-index\", [row, index, top], null, index);\n\n    if (index) {\n      allIndex = this.rows.indexOf(index);\n    }\n\n    if (index && allIndex > -1) {\n      activeIndex = this.activeRows.indexOf(index);\n      this.displayRowIterator(function (rows) {\n        var displayIndex = rows.indexOf(index);\n\n        if (displayIndex > -1) {\n          rows.splice(top ? displayIndex : displayIndex + 1, 0, row);\n        }\n      });\n\n      if (activeIndex > -1) {\n        this.activeRows.splice(top ? activeIndex : activeIndex + 1, 0, row);\n      }\n\n      this.rows.splice(top ? allIndex : allIndex + 1, 0, row);\n    } else {\n      if (top) {\n        this.displayRowIterator(function (rows) {\n          rows.unshift(row);\n        });\n        this.activeRows.unshift(row);\n        this.rows.unshift(row);\n      } else {\n        this.displayRowIterator(function (rows) {\n          rows.push(row);\n        });\n        this.activeRows.push(row);\n        this.rows.push(row);\n      }\n    }\n\n    this.setActiveRows(this.activeRows);\n    this.dispatchExternal(\"rowAdded\", row.getComponent());\n\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n    }\n\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n\n    return row;\n  }\n\n  moveRow(from, to, after) {\n    this.dispatch(\"row-move\", from, to, after);\n    this.moveRowActual(from, to, after);\n    this.regenerateRowNumbers();\n    this.dispatch(\"row-moved\", from, to, after);\n    this.dispatchExternal(\"rowMoved\", from.getComponent());\n  }\n\n  moveRowActual(from, to, after) {\n    this.moveRowInArray(this.rows, from, to, after);\n    this.moveRowInArray(this.activeRows, from, to, after);\n    this.displayRowIterator(rows => {\n      this.moveRowInArray(rows, from, to, after);\n    });\n    this.dispatch(\"row-moving\", from, to, after);\n  }\n\n  moveRowInArray(rows, from, to, after) {\n    var fromIndex, toIndex, start, end;\n\n    if (from !== to) {\n      fromIndex = rows.indexOf(from);\n\n      if (fromIndex > -1) {\n        rows.splice(fromIndex, 1);\n        toIndex = rows.indexOf(to);\n\n        if (toIndex > -1) {\n          if (after) {\n            rows.splice(toIndex + 1, 0, from);\n          } else {\n            rows.splice(toIndex, 0, from);\n          }\n        } else {\n          rows.splice(fromIndex, 0, from);\n        }\n      } //restyle rows\n\n\n      if (rows === this.getDisplayRows()) {\n        start = fromIndex < toIndex ? fromIndex : toIndex;\n        end = toIndex > fromIndex ? toIndex : fromIndex + 1;\n\n        for (let i = start; i <= end; i++) {\n          if (rows[i]) {\n            this.styleRow(rows[i], i);\n          }\n        }\n      }\n    }\n  }\n\n  clearData() {\n    this.setData([]);\n  }\n\n  getRowIndex(row) {\n    return this.findRowIndex(row, this.rows);\n  }\n\n  getDisplayRowIndex(row) {\n    var index = this.getDisplayRows().indexOf(row);\n    return index > -1 ? index : false;\n  }\n\n  nextDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n        nextRow = false;\n\n    if (index !== false && index < this.displayRowsCount - 1) {\n      nextRow = this.getDisplayRows()[index + 1];\n    }\n\n    if (nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")) {\n      return this.nextDisplayRow(nextRow, rowOnly);\n    }\n\n    return nextRow;\n  }\n\n  prevDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n        prevRow = false;\n\n    if (index) {\n      prevRow = this.getDisplayRows()[index - 1];\n    }\n\n    if (rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")) {\n      return this.prevDisplayRow(prevRow, rowOnly);\n    }\n\n    return prevRow;\n  }\n\n  findRowIndex(row, list) {\n    var rowIndex;\n    row = this.findRow(row);\n\n    if (row) {\n      rowIndex = list.indexOf(row);\n\n      if (rowIndex > -1) {\n        return rowIndex;\n      }\n    }\n\n    return false;\n  }\n\n  getData(active, transform) {\n    var output = [],\n        rows = this.getRows(active);\n    rows.forEach(function (row) {\n      if (row.type == \"row\") {\n        output.push(row.getData(transform || \"data\"));\n      }\n    });\n    return output;\n  }\n\n  getComponents(active) {\n    var output = [],\n        rows = this.getRows(active);\n    rows.forEach(function (row) {\n      output.push(row.getComponent());\n    });\n    return output;\n  }\n\n  getDataCount(active) {\n    var rows = this.getRows(active);\n    return rows.length;\n  }\n\n  scrollHorizontal(left) {\n    this.scrollLeft = left;\n    this.element.scrollLeft = left;\n    this.dispatch(\"scroll-horizontal\", left);\n  }\n\n  registerDataPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.dataPipeline.push({\n        handler,\n        priority\n      });\n      this.dataPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Data pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n\n  registerDisplayPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.displayPipeline.push({\n        handler,\n        priority\n      });\n      this.displayPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Display pipeline handlers must have a priority in order to be registered\");\n    }\n  } //set active data set\n\n\n  refreshActiveData(handler, skipStage, renderInPosition) {\n    var table = this.table,\n        stage = \"\",\n        index = 0,\n        cascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"];\n\n    if (typeof handler === \"function\") {\n      index = this.dataPipeline.findIndex(item => {\n        return item.handler === handler;\n      });\n\n      if (index > -1) {\n        stage = \"dataPipeline\";\n\n        if (skipStage) {\n          if (index == this.dataPipeline.length - 1) {\n            stage = \"display\";\n          } else {\n            index++;\n          }\n        }\n      } else {\n        index = this.displayPipeline.findIndex(item => {\n          return item.handler === handler;\n        });\n\n        if (index > -1) {\n          stage = \"displayPipeline\";\n\n          if (skipStage) {\n            if (index == this.displayPipeline.length - 1) {\n              stage = \"end\";\n            } else {\n              index++;\n            }\n          }\n        } else {\n          console.error(\"Unable to refresh data, invalid handler provided\", handler);\n          return;\n        }\n      }\n    } else {\n      stage = handler || \"all\";\n      index = 0;\n    }\n\n    if (this.redrawBlock) {\n      if (!this.redrawBlockRestoreConfig || this.redrawBlockRestoreConfig && (this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index || cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))) {\n        this.redrawBlockRestoreConfig = {\n          handler: handler,\n          skipStage: skipStage,\n          renderInPosition: renderInPosition,\n          stage: stage,\n          index: index\n        };\n      }\n\n      return;\n    } else {\n      if (Helpers.elVisible(this.element)) {\n        if (renderInPosition) {\n          this.reRenderInPosition(this.refreshPipelines.bind(this, handler, stage, index, renderInPosition));\n        } else {\n          this.refreshPipelines(handler, stage, index, renderInPosition);\n\n          if (!handler) {\n            this.table.columnManager.renderer.renderColumns();\n          }\n\n          this.renderTable();\n\n          if (table.options.layoutColumnsOnNewData) {\n            this.table.columnManager.redraw(true);\n          }\n        }\n      } else {\n        this.refreshPipelines(handler, stage, index, renderInPosition);\n      }\n\n      this.dispatch(\"data-refreshed\");\n    }\n  }\n\n  refreshPipelines(handler, stage, index, renderInPosition) {\n    this.dispatch(\"data-refreshing\");\n\n    if (!handler) {\n      this.activeRowsPipeline[0] = this.rows.slice(0);\n    } //cascade through data refresh stages\n\n\n    switch (stage) {\n      case \"all\": //handle case where alldata needs refreshing\n\n      case \"dataPipeline\":\n        for (let i = index; i < this.dataPipeline.length; i++) {\n          let result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\n          this.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\n        }\n\n        this.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\n        this.regenerateRowNumbers();\n\n      case \"display\":\n        index = 0;\n        this.resetDisplayRows();\n\n      case \"displayPipeline\":\n        for (let i = index; i < this.displayPipeline.length; i++) {\n          let result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\n          this.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\n        }\n\n      //case to handle scenario when trying to skip past end stage\n    }\n  } //regenerate row numbers for row number formatter if in use\n\n\n  regenerateRowNumbers() {\n    if (this.rowNumColumn) {\n      this.activeRows.forEach(row => {\n        var cell = row.getCell(this.rowNumColumn);\n\n        if (cell) {\n          cell._generateContents();\n        }\n      });\n    }\n  }\n\n  setActiveRows(activeRows) {\n    this.activeRows = activeRows;\n    this.activeRowsCount = this.activeRows.length;\n  } //reset display rows array\n\n\n  resetDisplayRows() {\n    this.displayRows = [];\n    this.displayRows.push(this.activeRows.slice(0));\n    this.displayRowsCount = this.displayRows[0].length;\n  }\n\n  getNextDisplayIndex() {\n    return this.displayRows.length;\n  } //set display row pipeline data\n\n\n  setDisplayRows(displayRows, index) {\n    var output = true;\n\n    if (index && typeof this.displayRows[index] != \"undefined\") {\n      this.displayRows[index] = displayRows;\n      output = true;\n    } else {\n      this.displayRows.push(displayRows);\n      output = index = this.displayRows.length - 1;\n    }\n\n    if (index == this.displayRows.length - 1) {\n      this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n    }\n\n    return output;\n  }\n\n  getDisplayRows(index) {\n    if (typeof index == \"undefined\") {\n      return this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : [];\n    } else {\n      return this.displayRows[index] || [];\n    }\n  }\n\n  getVisibleRows(chain, viewable) {\n    var rows = Object.assign([], this.renderer.visibleRows(!viewable));\n\n    if (chain) {\n      rows = this.chain(\"rows-visible\", [viewable], rows, rows);\n    }\n\n    return rows;\n  } //repeat action accross display rows\n\n\n  displayRowIterator(callback) {\n    this.activeRowsPipeline.forEach(callback);\n    this.displayRows.forEach(callback);\n    this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n  } //return only actual rows (not group headers etc)\n\n\n  getRows(type) {\n    var rows;\n\n    switch (type) {\n      case \"active\":\n        rows = this.activeRows;\n        break;\n\n      case \"display\":\n        rows = this.table.rowManager.getDisplayRows();\n        break;\n\n      case \"visible\":\n        rows = this.getVisibleRows(false, true);\n        break;\n\n      default:\n        rows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\n    }\n\n    return rows;\n  } ///////////////// Table Rendering /////////////////\n  //trigger rerender of table in current position\n\n\n  reRenderInPosition(callback) {\n    if (this.redrawBlock) {\n      if (callback) {\n        callback();\n      } else {\n        this.redrawBlockRenderInPosition = true;\n      }\n    } else {\n      this.renderer.rerenderRows(callback);\n    }\n  }\n\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomVertical,\n      \"basic\": BaiscVertical\n    };\n\n    if (typeof this.table.options.renderVertical === \"string\") {\n      renderClass = renderers[this.table.options.renderVertical];\n    } else {\n      renderClass = this.table.options.renderVertical;\n    }\n\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n\n      if (this.table.element.clientHeight || this.table.options.height) {\n        this.fixedHeight = true;\n      } else {\n        this.fixedHeight = false;\n      }\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderVertical);\n    }\n  }\n\n  getRenderMode() {\n    return this.renderMode;\n  }\n\n  renderTable() {\n    this.dispatchExternal(\"renderStarted\");\n    this.element.scrollTop = 0;\n\n    this._clearTable();\n\n    if (this.displayRowsCount) {\n      this.renderer.renderRows();\n\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.layoutRefresh();\n      }\n    } else {\n      this.renderEmptyScroll();\n    }\n\n    if (!this.fixedHeight) {\n      this.adjustTableSize();\n    }\n\n    this.dispatch(\"table-layout\");\n\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n\n    this.dispatchExternal(\"renderComplete\");\n  } //show scrollbars on empty table div\n\n\n  renderEmptyScroll() {\n    if (this.placeholder) {\n      this.tableElement.style.display = \"none\";\n    } else {\n      this.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\"; // this.tableElement.style.minHeight = \"1px\";\n      // this.tableElement.style.visibility = \"hidden\";\n    }\n  }\n\n  _clearTable() {\n    var element = this.tableElement;\n\n    this._clearPlaceholder();\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.renderer.clearRows();\n  }\n\n  _showPlaceholder() {\n    if (this.placeholder) {\n      this.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\n      this.getElement().appendChild(this.placeholder);\n\n      this._positionPlaceholder();\n    }\n  }\n\n  _clearPlaceholder() {\n    if (this.placeholder && this.placeholder.parentNode) {\n      this.placeholder.parentNode.removeChild(this.placeholder);\n    }\n  }\n\n  _positionPlaceholder() {\n    if (this.placeholder && this.placeholder.parentNode) {\n      this.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\n      this.placeholderContents.style.width = this.table.rowManager.element.clientWidth + \"px\";\n      this.placeholderContents.style.marginLeft = this.scrollLeft + \"px\";\n    }\n  }\n\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  } //normalize height of active rows\n\n\n  normalizeHeight() {\n    this.activeRows.forEach(function (row) {\n      row.normalizeHeight();\n    });\n  } //adjust the height of the table holder to fit in the Tabulator element\n\n\n  adjustTableSize() {\n    var initialHeight = this.element.clientHeight;\n\n    if (this.renderer.verticalFillMode === \"fill\") {\n      let otherHeight = Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\n\n      if (this.fixedHeight) {\n        this.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\n      } else {\n        this.element.style.height = \"\";\n        this.element.style.height = this.table.element.clientHeight - otherHeight + \"px\";\n        this.element.scrollTop = this.scrollTop;\n      }\n\n      this.renderer.resize(); //check if the table has changed size when dealing with variable height tables\n\n      if (!this.fixedHeight && initialHeight != this.element.clientHeight) {\n        if (this.subscribed(\"table-resize\")) {\n          this.dispatch(\"table-resize\");\n        } else {\n          this.redraw();\n        }\n      }\n    }\n\n    this._positionPlaceholder();\n  } //renitialize all rows\n\n\n  reinitialize() {\n    this.rows.forEach(function (row) {\n      row.reinitialize(true);\n    });\n  } //prevent table from being redrawn\n\n\n  blockRedraw() {\n    this.redrawBlock = true;\n    this.redrawBlockRestoreConfig = false;\n  } //restore table redrawing\n\n\n  restoreRedraw() {\n    this.redrawBlock = false;\n\n    if (this.redrawBlockRestoreConfig) {\n      this.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition);\n      this.redrawBlockRestoreConfig = false;\n    } else {\n      if (this.redrawBlockRenderInPosition) {\n        this.reRenderInPosition();\n      }\n    }\n\n    this.redrawBlockRenderInPosition = false;\n  } //redraw table\n\n\n  redraw(force) {\n    var left = this.scrollLeft;\n    this.adjustTableSize();\n    this.table.tableWidth = this.table.element.clientWidth;\n\n    if (!force) {\n      this.reRenderInPosition();\n      this.scrollHorizontal(left);\n    } else {\n      this.renderTable();\n    }\n  }\n\n  resetScroll() {\n    this.element.scrollLeft = 0;\n    this.element.scrollTop = 0;\n\n    if (this.table.browser === \"ie\") {\n      var event = document.createEvent(\"Event\");\n      event.initEvent(\"scroll\", false, true);\n      this.element.dispatchEvent(event);\n    } else {\n      this.element.dispatchEvent(new Event('scroll'));\n    }\n  }\n\n}\n\nclass FooterManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.active = false;\n    this.element = this.createElement(); //containing element\n\n    this.containerElement = this.createContainerElement(); //containing element\n\n    this.external = false;\n  }\n\n  initialize() {\n    this.initializeElement();\n  }\n\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-footer\");\n    return el;\n  }\n\n  createContainerElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-footer-contents\");\n    this.element.appendChild(el);\n    return el;\n  }\n\n  initializeElement() {\n    if (this.table.options.footerElement) {\n      switch (typeof this.table.options.footerElement) {\n        case \"string\":\n          if (this.table.options.footerElement[0] === \"<\") {\n            this.containerElement.innerHTML = this.table.options.footerElement;\n          } else {\n            this.external = true;\n            this.containerElement = document.querySelector(this.table.options.footerElement);\n          }\n\n          break;\n\n        default:\n          this.element = this.table.options.footerElement;\n          break;\n      }\n    }\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  append(element) {\n    this.activate();\n    this.containerElement.appendChild(element);\n    this.table.rowManager.adjustTableSize();\n  }\n\n  prepend(element) {\n    this.activate();\n    this.element.insertBefore(element, this.element.firstChild);\n    this.table.rowManager.adjustTableSize();\n  }\n\n  remove(element) {\n    element.parentNode.removeChild(element);\n    this.deactivate();\n  }\n\n  deactivate(force) {\n    if (!this.element.firstChild || force) {\n      if (!this.external) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      this.active = false;\n    }\n  }\n\n  activate() {\n    if (!this.active) {\n      this.active = true;\n\n      if (!this.external) {\n        this.table.element.appendChild(this.getElement());\n        this.table.element.style.display = '';\n      }\n    }\n  }\n\n  redraw() {\n    this.dispatch(\"footer-redraw\");\n  }\n\n}\n\nclass InteractionManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.el = null;\n    this.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\n    this.previousTargets = {};\n    this.listeners = [\"click\", \"dblclick\", \"contextmenu\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mousemove\", \"touchstart\", \"touchend\"];\n    this.componentMap = {\n      \"tabulator-cell\": \"cell\",\n      \"tabulator-row\": \"row\",\n      \"tabulator-group\": \"group\",\n      \"tabulator-col\": \"column\"\n    };\n    this.pseudoTrackers = {\n      \"row\": {\n        subscriber: null,\n        target: null\n      },\n      \"cell\": {\n        subscriber: null,\n        target: null\n      },\n      \"group\": {\n        subscriber: null,\n        target: null\n      },\n      \"column\": {\n        subscriber: null,\n        target: null\n      }\n    };\n    this.pseudoTracking = false;\n  }\n\n  initialize() {\n    this.el = this.table.element;\n    this.buildListenerMap();\n    this.bindSubscriptionWatchers();\n  }\n\n  buildListenerMap() {\n    var listenerMap = {};\n    this.listeners.forEach(listener => {\n      listenerMap[listener] = {\n        handler: null,\n        components: []\n      };\n    });\n    this.listeners = listenerMap;\n  }\n\n  bindPseudoEvents() {\n    Object.keys(this.pseudoTrackers).forEach(key => {\n      this.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\n      this.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\n    });\n    this.pseudoTracking = true;\n  }\n\n  pseudoMouseEnter(key, e, target) {\n    if (this.pseudoTrackers[key].target !== target) {\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, this.pseudoTrackers[key].target);\n      }\n\n      this.pseudoMouseLeave(key, e);\n      this.pseudoTrackers[key].target = target;\n      this.dispatch(key + \"-mouseenter\", e, target);\n    }\n  }\n\n  pseudoMouseLeave(key, e) {\n    var leaveList = Object.keys(this.pseudoTrackers),\n        linkedKeys = {\n      \"row\": [\"cell\"],\n      \"cell\": [\"row\"]\n    };\n    leaveList = leaveList.filter(item => {\n      var links = linkedKeys[key];\n      return item !== key && (!links || links && !links.includes(item));\n    });\n    leaveList.forEach(key => {\n      var target = this.pseudoTrackers[key].target;\n\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n        this.pseudoTrackers[key].target = null;\n      }\n    });\n  }\n\n  bindSubscriptionWatchers() {\n    var listeners = Object.keys(this.listeners),\n        components = Object.values(this.componentMap);\n\n    for (let comp of components) {\n      for (let listener of listeners) {\n        let key = comp + \"-\" + listener;\n        this.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\n      }\n    }\n\n    this.subscribe(\"table-destroy\", this.clearWatchers.bind(this));\n  }\n\n  subscriptionChanged(component, key, added) {\n    var listener = this.listeners[key].components,\n        index = listener.indexOf(component),\n        changed = false;\n\n    if (added) {\n      if (index === -1) {\n        listener.push(component);\n        changed = true;\n      }\n    } else {\n      if (!this.subscribed(component + \"-\" + key)) {\n        if (index > -1) {\n          listener.splice(index, 1);\n          changed = true;\n        }\n      }\n    }\n\n    if ((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking) {\n      this.bindPseudoEvents();\n    }\n\n    if (changed) {\n      this.updateEventListeners();\n    }\n  }\n\n  updateEventListeners() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n\n      if (listener.components.length) {\n        if (!listener.handler) {\n          listener.handler = this.track.bind(this, key);\n          this.el.addEventListener(key, listener.handler); // this.el.addEventListener(key, listener.handler, {passive: true})\n        }\n      } else {\n        if (listener.handler) {\n          this.el.removeEventListener(key, listener.handler);\n          listener.handler = null;\n        }\n      }\n    }\n  }\n\n  track(type, e) {\n    var path = e.composedPath && e.composedPath() || e.path;\n    var targets = this.findTargets(path);\n    targets = this.bindComponents(type, targets);\n    this.triggerEvents(type, e, targets);\n\n    if (this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length) {\n      this.pseudoMouseLeave(\"none\", e);\n    }\n  }\n\n  findTargets(path) {\n    var targets = {};\n    let componentMap = Object.keys(this.componentMap);\n\n    for (let el of path) {\n      let classList = el.classList ? [...el.classList] : [];\n      let abort = classList.filter(item => {\n        return this.abortClasses.includes(item);\n      });\n\n      if (abort.length) {\n        break;\n      }\n\n      let elTargets = classList.filter(item => {\n        return componentMap.includes(item);\n      });\n\n      for (let target of elTargets) {\n        targets[this.componentMap[target]] = el;\n      }\n    }\n\n    if (targets.group && targets.group === targets.row) {\n      delete targets.row;\n    }\n\n    return targets;\n  }\n\n  bindComponents(type, targets) {\n    //ensure row component is looked up before cell\n    var keys = Object.keys(targets).reverse(),\n        listener = this.listeners[type],\n        targetMatches = {};\n\n    for (let key of keys) {\n      let component;\n      let target = targets[key];\n      let previousTarget = this.previousTargets[key];\n\n      if (previousTarget && previousTarget.target === target) {\n        component = previousTarget.component;\n      } else {\n        switch (key) {\n          case \"row\":\n          case \"group\":\n            if (listener.components.includes(\"row\") || listener.components.includes(\"cell\") || listener.components.includes(\"group\")) {\n              let rows = this.table.rowManager.getVisibleRows(true);\n              component = rows.find(row => {\n                return row.getElement() === target;\n              });\n\n              if (targets[\"row\"] && targets[\"row\"].parentNode && targets[\"row\"].parentNode.closest(\".tabulator-row\")) {\n                targets[key] = false;\n              }\n            }\n\n            break;\n\n          case \"column\":\n            if (listener.components.includes(\"column\")) {\n              component = this.table.columnManager.findColumn(target);\n            }\n\n            break;\n\n          case \"cell\":\n            if (listener.components.includes(\"cell\")) {\n              if (targets[\"row\"] instanceof Row) {\n                component = targets[\"row\"].findCell(target);\n              } else {\n                if (targets[\"row\"]) {\n                  console.warn(\"Event Target Lookup Error - The row this cell is attached to cannot be found, has the table been reinitialized without being destroyed first?\");\n                }\n              }\n            }\n\n            break;\n        }\n      }\n\n      if (component) {\n        targets[key] = component;\n        targetMatches[key] = {\n          target: target,\n          component: component\n        };\n      }\n    }\n\n    this.previousTargets = targetMatches;\n    return targets;\n  }\n\n  triggerEvents(type, e, targets) {\n    var listener = this.listeners[type];\n\n    for (let key in targets) {\n      if (targets[key] && listener.components.includes(key)) {\n        this.dispatch(key + \"-\" + type, e, targets[key]);\n      }\n    }\n  }\n\n  clearWatchers() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n\n      if (listener.handler) {\n        this.el.removeEventListener(key, listener.handler);\n        listener.handler = null;\n      }\n    }\n  }\n\n}\n\nclass ComponentFunctionBinder {\n  constructor(table) {\n    this.table = table;\n    this.bindings = {};\n  }\n\n  bind(type, funcName, handler) {\n    if (!this.bindings[type]) {\n      this.bindings[type] = {};\n    }\n\n    if (this.bindings[type][funcName]) {\n      console.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, handler);\n    } else {\n      this.bindings[type][funcName] = handler;\n    }\n  }\n\n  handle(type, component, name) {\n    if (this.bindings[type] && this.bindings[type][name] && typeof this.bindings[type][name].bind === 'function') {\n      return this.bindings[type][name].bind(null, component);\n    } else {\n      if (name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")) {\n        console.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\");\n      }\n    }\n  }\n\n}\n\nclass DataLoader extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.requestOrder = 0; //prevent requests coming out of sequence if overridden by another load request\n\n    this.loading = false;\n  }\n\n  initialize() {}\n\n  load(data, params, config, replace, silent) {\n    var requestNo = ++this.requestOrder;\n    this.dispatchExternal(\"dataLoading\", data); //parse json data to array\n\n    if (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)) {\n      data = JSON.parse(data);\n    }\n\n    if (this.confirm(\"data-loading\", [data, params, config, silent])) {\n      this.loading = true;\n\n      if (!silent) {\n        this.alertLoader();\n      } //get params for request\n\n\n      params = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\n      params = this.mapParams(params, this.table.options.dataSendParams);\n      var result = this.chain(\"data-load\", [data, params, config, silent], false, Promise.resolve([]));\n      return result.then(response => {\n        if (!Array.isArray(response) && typeof response == \"object\") {\n          response = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\n        }\n\n        var rowData = this.chain(\"data-loaded\", response, null, response);\n\n        if (requestNo == this.requestOrder) {\n          this.clearAlert();\n\n          if (rowData !== false) {\n            this.dispatchExternal(\"dataLoaded\", rowData);\n            this.table.rowManager.setData(rowData, replace, !replace);\n          }\n        } else {\n          console.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\n        }\n      }).catch(error => {\n        console.error(\"Data Load Error: \", error);\n        this.dispatchExternal(\"dataLoadError\", error);\n\n        if (!silent) {\n          this.alertError();\n        }\n\n        setTimeout(() => {\n          this.clearAlert();\n        }, this.table.options.dataLoaderErrorTimeout);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dispatchExternal(\"dataLoaded\", data);\n\n      if (!data) {\n        data = [];\n      }\n\n      this.table.rowManager.setData(data, replace, !replace);\n      return Promise.resolve();\n    }\n  }\n\n  mapParams(params, map) {\n    var output = {};\n\n    for (let key in params) {\n      output[map.hasOwnProperty(key) ? map[key] : key] = params[key];\n    }\n\n    return output;\n  }\n\n  objectInvert(obj) {\n    var output = {};\n\n    for (let key in obj) {\n      output[obj[key]] = key;\n    }\n\n    return output;\n  }\n\n  blockActiveLoad() {\n    this.requestOrder++;\n  }\n\n  alertLoader() {\n    var shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\n\n    if (shouldLoad) {\n      this.table.alertManager.alert(this.table.options.dataLoaderLoading || this.langText(\"data|loading\"));\n    }\n  }\n\n  alertError() {\n    this.table.alertManager.alert(this.table.options.dataLoaderError || this.langText(\"data|error\"), \"error\");\n  }\n\n  clearAlert() {\n    this.table.alertManager.clear();\n  }\n\n}\n\nclass ExternalEventBus {\n  constructor(table, optionsList, debug) {\n    this.table = table;\n    this.events = {};\n    this.optionsList = optionsList || {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.debug = debug;\n  }\n\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n\n    this.subscriptionNotifiers[key].push(callback);\n\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n\n  subscribe(key, callback) {\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n\n    this.events[key].push(callback);\n\n    this._notifiySubscriptionChange(key, true);\n  }\n\n  unsubscribe(key, callback) {\n    var index;\n\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item === callback;\n        });\n\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      } else {\n        delete this.events[key];\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n\n    this._notifiySubscriptionChange(key, false);\n  }\n\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n\n  _dispatch() {\n    var args = Array.from(arguments),\n        key = args.shift(),\n        result;\n\n    if (this.events[key]) {\n      this.events[key].forEach((callback, i) => {\n        let callResult = callback.apply(this.table, args);\n\n        if (!i) {\n          result = callResult;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  _debugDispatch() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"ExternalEvent:\" + args[0];\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._dispatch(...arguments);\n  }\n\n}\n\nclass InternalEventBus {\n  constructor(debug) {\n    this.events = {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\n    this.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\n    this.debug = debug;\n  }\n\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n\n    this.subscriptionNotifiers[key].push(callback);\n\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n\n  subscribe(key, callback) {\n    let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;\n\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n\n    this.events[key].push({\n      callback,\n      priority\n    });\n    this.events[key].sort((a, b) => {\n      return a.priority - b.priority;\n    });\n\n    this._notifiySubscriptionChange(key, true);\n  }\n\n  unsubscribe(key, callback) {\n    var index;\n\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item.callback === callback;\n        });\n\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n\n    this._notifiySubscriptionChange(key, false);\n  }\n\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n\n  _chain(key, args, initialValue, fallback) {\n    var value = initialValue;\n\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        value = subscriber.callback.apply(this, args.concat([value]));\n      });\n      return value;\n    } else {\n      return typeof fallback === \"function\" ? fallback() : fallback;\n    }\n  }\n\n  _confirm(key, args) {\n    var confirmed = false;\n\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        if (subscriber.callback.apply(this, args)) {\n          confirmed = true;\n        }\n      });\n    }\n\n    return confirmed;\n  }\n\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n\n  _dispatch() {\n    var args = Array.from(arguments),\n        key = args.shift();\n\n    if (this.events[key]) {\n      this.events[key].forEach(subscriber => {\n        let callResult = subscriber.callback.apply(this, args);\n      });\n    }\n  }\n\n  _debugDispatch() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._dispatch(...arguments);\n  }\n\n  _debugChain() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._chain(...arguments);\n  }\n\n  _debugConfirm() {\n    var args = Array.from(arguments),\n        key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n\n    return this._confirm(...arguments);\n  }\n\n}\n\nclass TableRegistry {\n  static register(table) {\n    TableRegistry.tables.push(table);\n  }\n\n  static deregister(table) {\n    var index = TableRegistry.tables.indexOf(table);\n\n    if (index > -1) {\n      TableRegistry.tables.splice(index, 1);\n    }\n  }\n\n  static lookupTable(query, silent) {\n    var results = [],\n        matches,\n        match;\n\n    if (typeof query === \"string\") {\n      matches = document.querySelectorAll(query);\n\n      if (matches.length) {\n        for (var i = 0; i < matches.length; i++) {\n          match = TableRegistry.matchElement(matches[i]);\n\n          if (match) {\n            results.push(match);\n          }\n        }\n      }\n    } else if (typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement || query instanceof Tabulator) {\n      match = TableRegistry.matchElement(query);\n\n      if (match) {\n        results.push(match);\n      }\n    } else if (Array.isArray(query)) {\n      query.forEach(function (item) {\n        results = results.concat(TableRegistry.lookupTable(item));\n      });\n    } else {\n      if (!silent) {\n        console.warn(\"Table Connection Error - Invalid Selector\", query);\n      }\n    }\n\n    return results;\n  }\n\n  static matchElement(element) {\n    return TableRegistry.tables.find(function (table) {\n      return element instanceof Tabulator ? table === element : table.element === element;\n    });\n  }\n\n}\n\nTableRegistry.tables = []; //resize columns to fit data they contain\n\nfunction fitData(columns) {\n  this.table.columnManager.renderer.reinitializeColumnWidths(columns);\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n} //resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\n\n\nfunction fitDataGeneral(columns) {\n  columns.forEach(function (column) {\n    column.reinitializeWidth();\n  });\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n} //resize columns to fit data the contain and stretch last column to fill table\n\n\nfunction fitDataStretch(columns) {\n  var colsWidth = 0,\n      tableWidth = this.table.rowManager.element.clientWidth,\n      gap = 0,\n      lastCol = false;\n  columns.forEach((column, i) => {\n    if (!column.widthFixed) {\n      column.reinitializeWidth();\n    }\n\n    if (this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible) {\n      lastCol = column;\n    }\n\n    if (column.visible) {\n      colsWidth += column.getWidth();\n    }\n  });\n\n  if (lastCol) {\n    gap = tableWidth - colsWidth + lastCol.getWidth();\n\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      lastCol.setWidth(0);\n      this.table.modules.responsiveLayout.update();\n    }\n\n    if (gap > 0) {\n      lastCol.setWidth(gap);\n    } else {\n      lastCol.reinitializeWidth();\n    }\n  } else {\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      this.table.modules.responsiveLayout.update();\n    }\n  }\n} //resize columns to fit\n\n\nfunction fitColumns(columns) {\n  var totalWidth = this.table.element.clientWidth; //table element width\n\n  var fixedWidth = 0; //total width of columns with a defined width\n\n  var flexWidth = 0; //total width available to flexible columns\n\n  var flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\n\n  var flexColWidth = 0; //desired width of flexible columns\n\n  var flexColumns = []; //array of flexible width columns\n\n  var fixedShrinkColumns = []; //array of fixed width columns that can shrink\n\n  var flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\n\n  var overflowWidth = 0; //horizontal overflow width\n\n  var gapFill = 0; //number of pixels to be added to final column to close and half pixel gaps\n\n  function calcWidth(width) {\n    var colWidth;\n\n    if (typeof width == \"string\") {\n      if (width.indexOf(\"%\") > -1) {\n        colWidth = totalWidth / 100 * parseInt(width);\n      } else {\n        colWidth = parseInt(width);\n      }\n    } else {\n      colWidth = width;\n    }\n\n    return colWidth;\n  } //ensure columns resize to take up the correct amount of space\n\n\n  function scaleColumns(columns, freeSpace, colWidth, shrinkCols) {\n    var oversizeCols = [],\n        oversizeSpace = 0,\n        remainingSpace = 0,\n        nextColWidth = 0,\n        remainingFlexGrowUnits = flexGrowUnits,\n        gap = 0,\n        changeUnits = 0,\n        undersizeCols = [];\n\n    function calcGrow(col) {\n      return colWidth * (col.column.definition.widthGrow || 1);\n    }\n\n    function calcShrink(col) {\n      return calcWidth(col.width) - colWidth * (col.column.definition.widthShrink || 0);\n    }\n\n    columns.forEach(function (col, i) {\n      var width = shrinkCols ? calcShrink(col) : calcGrow(col);\n\n      if (col.column.minWidth >= width) {\n        oversizeCols.push(col);\n      } else {\n        if (col.column.maxWidth && col.column.maxWidth < width) {\n          col.width = col.column.maxWidth;\n          freeSpace -= col.column.maxWidth;\n          remainingFlexGrowUnits -= shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n\n          if (remainingFlexGrowUnits) {\n            colWidth = Math.floor(freeSpace / remainingFlexGrowUnits);\n          }\n        } else {\n          undersizeCols.push(col);\n          changeUnits += shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n        }\n      }\n    });\n\n    if (oversizeCols.length) {\n      oversizeCols.forEach(function (col) {\n        oversizeSpace += shrinkCols ? col.width - col.column.minWidth : col.column.minWidth;\n        col.width = col.column.minWidth;\n      });\n      remainingSpace = freeSpace - oversizeSpace;\n      nextColWidth = changeUnits ? Math.floor(remainingSpace / changeUnits) : remainingSpace;\n      gap = remainingSpace - nextColWidth * changeUnits;\n      gap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\n    } else {\n      gap = changeUnits ? freeSpace - Math.floor(freeSpace / changeUnits) * changeUnits : freeSpace;\n      undersizeCols.forEach(function (column) {\n        column.width = shrinkCols ? calcShrink(column) : calcGrow(column);\n      });\n    }\n\n    return gap;\n  }\n\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  } //adjust for vertical scrollbar if present\n\n\n  if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n    totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n  }\n\n  columns.forEach(function (column) {\n    var width, minWidth, colWidth;\n\n    if (column.visible) {\n      width = column.definition.width;\n      minWidth = parseInt(column.minWidth);\n\n      if (width) {\n        colWidth = calcWidth(width);\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n\n        if (column.definition.widthShrink) {\n          fixedShrinkColumns.push({\n            column: column,\n            width: colWidth > minWidth ? colWidth : minWidth\n          });\n          flexShrinkUnits += column.definition.widthShrink;\n        }\n      } else {\n        flexColumns.push({\n          column: column,\n          width: 0\n        });\n        flexGrowUnits += column.definition.widthGrow || 1;\n      }\n    }\n  }); //calculate available space\n\n  flexWidth = totalWidth - fixedWidth; //calculate correct column size\n\n  flexColWidth = Math.floor(flexWidth / flexGrowUnits); //generate column widths\n\n  var gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false); //increase width of last column to account for rounding errors\n\n  if (flexColumns.length && gapFill > 0) {\n    flexColumns[flexColumns.length - 1].width += +gapFill;\n  } //caculate space for columns to be shrunk into\n\n\n  flexColumns.forEach(function (col) {\n    flexWidth -= col.width;\n  });\n  overflowWidth = Math.abs(gapFill) + flexWidth; //shrink oversize columns if there is no available space\n\n  if (overflowWidth > 0 && flexShrinkUnits) {\n    gapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\n  } //decrease width of last column to account for rounding errors\n\n\n  if (fixedShrinkColumns.length) {\n    fixedShrinkColumns[fixedShrinkColumns.length - 1].width -= gapFill;\n  }\n\n  flexColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n  fixedShrinkColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n}\n\nvar defaultModes = {\n  fitData: fitData,\n  fitDataFill: fitDataGeneral,\n  fitDataTable: fitDataGeneral,\n  fitDataStretch: fitDataStretch,\n  fitColumns: fitColumns\n};\n\nclass Layout extends Module {\n  constructor(table) {\n    super(table, \"layout\");\n    this.mode = null;\n    this.registerTableOption(\"layout\", \"fitData\"); //layout type\n\n    this.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\n\n    this.registerColumnOption(\"widthGrow\");\n    this.registerColumnOption(\"widthShrink\");\n  } //initialize layout system\n\n\n  initialize() {\n    var layout = this.table.options.layout;\n\n    if (Layout.modes[layout]) {\n      this.mode = layout;\n    } else {\n      console.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\n      this.mode = 'fitData';\n    }\n\n    this.table.element.setAttribute(\"tabulator-layout\", this.mode);\n  }\n\n  getMode() {\n    return this.mode;\n  } //trigger table layout\n\n\n  layout() {\n    this.dispatch(\"layout-refreshing\");\n    Layout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\n    this.dispatch(\"layout-refreshed\");\n  }\n\n}\n\nLayout.moduleName = \"layout\"; //load defaults\n\nLayout.modes = defaultModes;\nvar defaultLangs = {\n  \"default\": {\n    //hold default locale text\n    \"groups\": {\n      \"item\": \"item\",\n      \"items\": \"items\"\n    },\n    \"columns\": {},\n    \"data\": {\n      \"loading\": \"Loading\",\n      \"error\": \"Error\"\n    },\n    \"pagination\": {\n      \"page_size\": \"Page Size\",\n      \"page_title\": \"Show Page\",\n      \"first\": \"First\",\n      \"first_title\": \"First Page\",\n      \"last\": \"Last\",\n      \"last_title\": \"Last Page\",\n      \"prev\": \"Prev\",\n      \"prev_title\": \"Prev Page\",\n      \"next\": \"Next\",\n      \"next_title\": \"Next Page\",\n      \"all\": \"All\",\n      \"counter\": {\n        \"showing\": \"Showing\",\n        \"of\": \"of\",\n        \"rows\": \"rows\",\n        \"pages\": \"pages\"\n      }\n    },\n    \"headerFilters\": {\n      \"default\": \"filter column...\",\n      \"columns\": {}\n    }\n  }\n};\n\nclass Localize extends Module {\n  constructor(table) {\n    super(table);\n    this.locale = \"default\"; //current locale\n\n    this.lang = false; //current language\n\n    this.bindings = {}; //update events to call when locale is changed\n\n    this.langList = {};\n    this.registerTableOption(\"locale\", false); //current system language\n\n    this.registerTableOption(\"langs\", {});\n  }\n\n  initialize() {\n    this.langList = Helpers.deepClone(Localize.langs);\n\n    if (this.table.options.columnDefaults.headerFilterPlaceholder !== false) {\n      this.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\n    }\n\n    for (let locale in this.table.options.langs) {\n      this.installLang(locale, this.table.options.langs[locale]);\n    }\n\n    this.setLocale(this.table.options.locale);\n    this.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\n    this.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\n    this.registerTableFunction(\"getLang\", this.getLang.bind(this));\n  } //set header placehoder\n\n\n  setHeaderFilterPlaceholder(placeholder) {\n    this.langList.default.headerFilters.default = placeholder;\n  } //set header filter placeholder by column\n\n\n  setHeaderFilterColumnPlaceholder(column, placeholder) {\n    this.langList.default.headerFilters.columns[column] = placeholder;\n\n    if (this.lang && !this.lang.headerFilters.columns[column]) {\n      this.lang.headerFilters.columns[column] = placeholder;\n    }\n  } //setup a lang description object\n\n\n  installLang(locale, lang) {\n    if (this.langList[locale]) {\n      this._setLangProp(this.langList[locale], lang);\n    } else {\n      this.langList[locale] = lang;\n    }\n  }\n\n  _setLangProp(lang, values) {\n    for (let key in values) {\n      if (lang[key] && typeof lang[key] == \"object\") {\n        this._setLangProp(lang[key], values[key]);\n      } else {\n        lang[key] = values[key];\n      }\n    }\n  } //set current locale\n\n\n  setLocale(desiredLocale) {\n    desiredLocale = desiredLocale || \"default\"; //fill in any matching languge values\n\n    function traverseLang(trans, path) {\n      for (var prop in trans) {\n        if (typeof trans[prop] == \"object\") {\n          if (!path[prop]) {\n            path[prop] = {};\n          }\n\n          traverseLang(trans[prop], path[prop]);\n        } else {\n          path[prop] = trans[prop];\n        }\n      }\n    } //determing correct locale to load\n\n\n    if (desiredLocale === true && navigator.language) {\n      //get local from system\n      desiredLocale = navigator.language.toLowerCase();\n    }\n\n    if (desiredLocale) {\n      //if locale is not set, check for matching top level locale else use default\n      if (!this.langList[desiredLocale]) {\n        let prefix = desiredLocale.split(\"-\")[0];\n\n        if (this.langList[prefix]) {\n          console.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\n          desiredLocale = prefix;\n        } else {\n          console.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\n          desiredLocale = \"default\";\n        }\n      }\n    }\n\n    this.locale = desiredLocale; //load default lang template\n\n    this.lang = Helpers.deepClone(this.langList.default || {});\n\n    if (desiredLocale != \"default\") {\n      traverseLang(this.langList[desiredLocale], this.lang);\n    }\n\n    this.dispatchExternal(\"localized\", this.locale, this.lang);\n\n    this._executeBindings();\n  } //get current locale\n\n\n  getLocale(locale) {\n    return this.locale;\n  } //get lang object for given local or current if none provided\n\n\n  getLang(locale) {\n    return locale ? this.langList[locale] : this.lang;\n  } //get text for current locale\n\n\n  getText(path, value) {\n    var path = value ? path + \"|\" + value : path,\n        pathArray = path.split(\"|\"),\n        text = this._getLangElement(pathArray, this.locale); // if(text === false){\n    // \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\n    // }\n\n\n    return text || \"\";\n  } //traverse langs object and find localized copy\n\n\n  _getLangElement(path, locale) {\n    var root = this.lang;\n    path.forEach(function (level) {\n      var rootPath;\n\n      if (root) {\n        rootPath = root[level];\n\n        if (typeof rootPath != \"undefined\") {\n          root = rootPath;\n        } else {\n          root = false;\n        }\n      }\n    });\n    return root;\n  } //set update binding\n\n\n  bind(path, callback) {\n    if (!this.bindings[path]) {\n      this.bindings[path] = [];\n    }\n\n    this.bindings[path].push(callback);\n    callback(this.getText(path), this.lang);\n  } //itterate through bindings and trigger updates\n\n\n  _executeBindings() {\n    for (let path in this.bindings) {\n      this.bindings[path].forEach(binding => {\n        binding(this.getText(path), this.lang);\n      });\n    }\n  }\n\n}\n\nLocalize.moduleName = \"localize\"; //load defaults\n\nLocalize.langs = defaultLangs;\n\nclass Comms extends Module {\n  constructor(table) {\n    super(table);\n  }\n\n  initialize() {\n    this.registerTableFunction(\"tableComms\", this.receive.bind(this));\n  }\n\n  getConnections(selectors) {\n    var connections = [],\n        connection;\n    connection = TableRegistry.lookupTable(selectors);\n    connection.forEach(con => {\n      if (this.table !== con) {\n        connections.push(con);\n      }\n    });\n    return connections;\n  }\n\n  send(selectors, module, action, data) {\n    var connections = this.getConnections(selectors);\n    connections.forEach(connection => {\n      connection.tableComms(this.table.element, module, action, data);\n    });\n\n    if (!connections.length && selectors) {\n      console.warn(\"Table Connection Error - No tables matching selector found\", selectors);\n    }\n  }\n\n  receive(table, module, action, data) {\n    if (this.table.modExists(module)) {\n      return this.table.modules[module].commsReceived(table, action, data);\n    } else {\n      console.warn(\"Inter-table Comms Error - no such module:\", module);\n    }\n  }\n\n}\n\nComms.moduleName = \"comms\";\nvar coreModules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LayoutModule: Layout,\n  LocalizeModule: Localize,\n  CommsModule: Comms\n});\n\nclass ModuleBinder {\n  constructor(tabulator, modules) {\n    this.bindStaticFuctionality(tabulator);\n    this.bindModules(tabulator, coreModules, true);\n\n    if (modules) {\n      this.bindModules(tabulator, modules);\n    }\n  }\n\n  bindStaticFuctionality(tabulator) {\n    tabulator.moduleBindings = {};\n\n    tabulator.extendModule = function (name, property, values) {\n      if (tabulator.moduleBindings[name]) {\n        var source = tabulator.moduleBindings[name][property];\n\n        if (source) {\n          if (typeof values == \"object\") {\n            for (let key in values) {\n              source[key] = values[key];\n            }\n          } else {\n            console.warn(\"Module Error - Invalid value type, it must be an object\");\n          }\n        } else {\n          console.warn(\"Module Error - property does not exist:\", property);\n        }\n      } else {\n        console.warn(\"Module Error - module does not exist:\", name);\n      }\n    };\n\n    tabulator.registerModule = function (modules) {\n      if (!Array.isArray(modules)) {\n        modules = [modules];\n      }\n\n      modules.forEach(mod => {\n        tabulator.registerModuleBinding(mod);\n      });\n    };\n\n    tabulator.registerModuleBinding = function (mod) {\n      tabulator.moduleBindings[mod.moduleName] = mod;\n    };\n\n    tabulator.findTable = function (query) {\n      var results = TableRegistry.lookupTable(query, true);\n      return Array.isArray(results) && !results.length ? false : results;\n    }; //ensure that module are bound to instantiated function\n\n\n    tabulator.prototype.bindModules = function () {\n      var orderedStartMods = [],\n          orderedEndMods = [],\n          unOrderedMods = [];\n      this.modules = {};\n\n      for (var name in tabulator.moduleBindings) {\n        let mod = tabulator.moduleBindings[name];\n        let module = new mod(this);\n        this.modules[name] = module;\n\n        if (mod.prototype.moduleCore) {\n          this.modulesCore.push(module);\n        } else {\n          if (mod.moduleInitOrder) {\n            if (mod.moduleInitOrder < 0) {\n              orderedStartMods.push(module);\n            } else {\n              orderedEndMods.push(module);\n            }\n          } else {\n            unOrderedMods.push(module);\n          }\n        }\n      }\n\n      orderedStartMods.sort((a, b) => a.moduleInitOrder > b.moduleInitOrder ? 1 : -1);\n      orderedEndMods.sort((a, b) => a.moduleInitOrder > b.moduleInitOrder ? 1 : -1);\n      this.modulesRegular = orderedStartMods.concat(unOrderedMods.concat(orderedEndMods));\n    };\n  }\n\n  bindModules(tabulator, modules, core) {\n    var mods = Object.values(modules);\n\n    if (core) {\n      mods.forEach(mod => {\n        mod.prototype.moduleCore = true;\n      });\n    }\n\n    tabulator.registerModule(mods);\n  }\n\n}\n\nclass Alert extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.element = this._createAlertElement();\n    this.msgElement = this._createMsgElement();\n    this.type = null;\n    this.element.appendChild(this.msgElement);\n  }\n\n  _createAlertElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-alert\");\n    return el;\n  }\n\n  _createMsgElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-alert-msg\");\n    el.setAttribute(\"role\", \"alert\");\n    return el;\n  }\n\n  _typeClass() {\n    return \"tabulator-alert-state-\" + this.type;\n  }\n\n  alert(content) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"msg\";\n\n    if (content) {\n      this.clear();\n      this.type = type;\n\n      while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n\n      this.msgElement.classList.add(this._typeClass());\n\n      if (typeof content === \"function\") {\n        content = content();\n      }\n\n      if (content instanceof HTMLElement) {\n        this.msgElement.appendChild(content);\n      } else {\n        this.msgElement.innerHTML = content;\n      }\n\n      this.table.element.appendChild(this.element);\n    }\n  }\n\n  clear() {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n\n    this.msgElement.classList.remove(this._typeClass());\n  }\n\n}\n\nclass Tabulator {\n  constructor(element, options) {\n    this.options = {};\n    this.columnManager = null; // hold Column Manager\n\n    this.rowManager = null; //hold Row Manager\n\n    this.footerManager = null; //holder Footer Manager\n\n    this.alertManager = null; //hold Alert Manager\n\n    this.vdomHoz = null; //holder horizontal virtual dom\n\n    this.externalEvents = null; //handle external event messaging\n\n    this.eventBus = null; //handle internal event messaging\n\n    this.interactionMonitor = false; //track user interaction\n\n    this.browser = \"\"; //hold current browser type\n\n    this.browserSlow = false; //handle reduced functionality for slower browsers\n\n    this.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\n\n    this.rtl = false; //check if the table is in RTL mode\n\n    this.originalElement = null; //hold original table element if it has been replaced\n\n    this.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\n\n    this.dataLoader = false; //bind component functions\n\n    this.modules = {}; //hold all modules bound to this table\n\n    this.modulesCore = []; //hold core modules bound to this table (for initialization purposes)\n\n    this.modulesRegular = []; //hold regular modules bound to this table (for initialization purposes)\n\n    this.optionsList = new OptionsList(this, \"table constructor\");\n    this.initialized = false;\n\n    if (this.initializeElement(element)) {\n      this.initializeCoreSystems(options); //delay table creation to allow event bindings immediately after the constructor\n\n      setTimeout(() => {\n        this._create();\n      });\n    }\n\n    TableRegistry.register(this); //register table for inter-device communication\n  }\n\n  initializeElement(element) {\n    if (typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement) {\n      this.element = element;\n      return true;\n    } else if (typeof element === \"string\") {\n      this.element = document.querySelector(element);\n\n      if (this.element) {\n        return true;\n      } else {\n        console.error(\"Tabulator Creation Error - no element found matching selector: \", element);\n        return false;\n      }\n    } else {\n      console.error(\"Tabulator Creation Error - Invalid element provided:\", element);\n      return false;\n    }\n  }\n\n  initializeCoreSystems(options) {\n    this.columnManager = new ColumnManager(this);\n    this.rowManager = new RowManager(this);\n    this.footerManager = new FooterManager(this);\n    this.dataLoader = new DataLoader(this);\n    this.alertManager = new Alert(this);\n    this.bindModules();\n    this.options = this.optionsList.generate(Tabulator.defaultOptions, options);\n\n    this._clearObjectPointers();\n\n    this._mapDeprecatedFunctionality();\n\n    this.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\n    this.eventBus = new InternalEventBus(this.options.debugEventsInternal);\n    this.interactionMonitor = new InteractionManager(this);\n    this.dataLoader.initialize(); // this.columnManager.initialize();\n    // this.rowManager.initialize();\n\n    this.footerManager.initialize();\n  } //convert deprecated functionality to new functions\n\n\n  _mapDeprecatedFunctionality() {//all previously deprecated functionality removed in the 5.0 release\n  }\n\n  _clearSelection() {\n    this.element.classList.add(\"tabulator-block-select\");\n\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n\n    this.element.classList.remove(\"tabulator-block-select\");\n  } //create table\n\n\n  _create() {\n    this.externalEvents.dispatch(\"tableBuilding\");\n    this.eventBus.dispatch(\"table-building\");\n\n    this._rtlCheck();\n\n    this._buildElement();\n\n    this._initializeTable();\n\n    this._loadInitialData();\n\n    this.initialized = true;\n    this.externalEvents.dispatch(\"tableBuilt\");\n  }\n\n  _rtlCheck() {\n    var style = window.getComputedStyle(this.element);\n\n    switch (this.options.textDirection) {\n      case \"auto\":\n        if (style.direction !== \"rtl\") {\n          break;\n        }\n\n      case \"rtl\":\n        this.element.classList.add(\"tabulator-rtl\");\n        this.rtl = true;\n        break;\n\n      case \"ltr\":\n        this.element.classList.add(\"tabulator-ltr\");\n\n      default:\n        this.rtl = false;\n    }\n  } //clear pointers to objects in default config object\n\n\n  _clearObjectPointers() {\n    this.options.columns = this.options.columns.slice(0);\n\n    if (Array.isArray(this.options.data) && !this.options.reactiveData) {\n      this.options.data = this.options.data.slice(0);\n    }\n  } //build tabulator element\n\n\n  _buildElement() {\n    var element = this.element,\n        options = this.options,\n        newElement;\n\n    if (element.tagName === \"TABLE\") {\n      this.originalElement = this.element;\n      newElement = document.createElement(\"div\"); //transfer attributes to new element\n\n      var attributes = element.attributes; // loop through attributes and apply them on div\n\n      for (var i in attributes) {\n        if (typeof attributes[i] == \"object\") {\n          newElement.setAttribute(attributes[i].name, attributes[i].value);\n        }\n      } // replace table with div element\n\n\n      element.parentNode.replaceChild(newElement, element);\n      this.element = element = newElement;\n    }\n\n    element.classList.add(\"tabulator\");\n    element.setAttribute(\"role\", \"grid\"); //empty element\n\n    while (element.firstChild) element.removeChild(element.firstChild); //set table height\n\n\n    if (options.height) {\n      options.height = isNaN(options.height) ? options.height : options.height + \"px\";\n      element.style.height = options.height;\n    } //set table min height\n\n\n    if (options.minHeight !== false) {\n      options.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\n      element.style.minHeight = options.minHeight;\n    } //set table maxHeight\n\n\n    if (options.maxHeight !== false) {\n      options.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\n      element.style.maxHeight = options.maxHeight;\n    }\n  } //initialize core systems and modules\n\n\n  _initializeTable() {\n    var element = this.element,\n        options = this.options;\n    this.interactionMonitor.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n\n    this._detectBrowser(); //initialize core modules\n\n\n    this.modulesCore.forEach(mod => {\n      mod.initialize();\n    }); //build table elements\n\n    element.appendChild(this.columnManager.getElement());\n    element.appendChild(this.rowManager.getElement());\n\n    if (options.footerElement) {\n      this.footerManager.activate();\n    }\n\n    if (options.autoColumns && options.data) {\n      this.columnManager.generateColumnsFromRowData(this.options.data);\n    } //initialize regular modules\n\n\n    this.modulesRegular.forEach(mod => {\n      mod.initialize();\n    });\n    this.columnManager.setColumns(options.columns);\n    this.eventBus.dispatch(\"table-built\");\n  }\n\n  _loadInitialData() {\n    this.dataLoader.load(this.options.data);\n  } //deconstructor\n\n\n  destroy() {\n    var element = this.element;\n    TableRegistry.deregister(this); //deregister table from inter-device communication\n\n    this.eventBus.dispatch(\"table-destroy\"); //clear row data\n\n    this.rowManager.rows.forEach(function (row) {\n      row.wipe();\n    });\n    this.rowManager.rows = [];\n    this.rowManager.activeRows = [];\n    this.rowManager.displayRows = []; //clear DOM\n\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    element.classList.remove(\"tabulator\");\n  }\n\n  _detectBrowser() {\n    var ua = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (ua.indexOf(\"Trident\") > -1) {\n      this.browser = \"ie\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Edge\") > -1) {\n      this.browser = \"edge\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Firefox\") > -1) {\n      this.browser = \"firefox\";\n      this.browserSlow = false;\n    } else {\n      this.browser = \"other\";\n      this.browserSlow = false;\n    }\n\n    this.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.slice(0, 4));\n  }\n\n  initGuard(func, msg) {\n    var stack, line;\n\n    if (this.options.debugInitialization && !this.initialized) {\n      if (!func) {\n        stack = new Error().stack.split(\"\\n\");\n        line = stack[0] == \"Error\" ? stack[2] : stack[1];\n\n        if (line[0] == \" \") {\n          func = line.trim().split(\" \")[1].split(\".\")[1];\n        } else {\n          func = line.trim().split(\"@\")[0];\n        }\n      }\n\n      console.warn(\"Table Not Initialized - Calling the \" + func + \" function before the table is initialized may result in inconsistent behavior, Please wait for the `tableBuilt` event before calling this function.\" + (msg ? \" \" + msg : \"\"));\n    }\n\n    return this.initialized;\n  } ////////////////// Data Handling //////////////////\n  //block table redrawing\n\n\n  blockRedraw() {\n    this.initGuard();\n    return this.rowManager.blockRedraw();\n  } //restore table redrawing\n\n\n  restoreRedraw() {\n    this.initGuard();\n    return this.rowManager.restoreRedraw();\n  } //load data\n\n\n  setData(data, params, config) {\n    this.initGuard(false, \"To set initial data please use the 'data' property in the table constructor.\");\n    return this.dataLoader.load(data, params, config, false);\n  } //clear data\n\n\n  clearData() {\n    this.initGuard();\n    this.dataLoader.blockActiveLoad();\n    this.rowManager.clearData();\n  } //get table data array\n\n\n  getData(active) {\n    return this.rowManager.getData(active);\n  } //get table data array count\n\n\n  getDataCount(active) {\n    return this.rowManager.getDataCount(active);\n  } //replace data, keeping table in position with same sort\n\n\n  replaceData(data, params, config) {\n    this.initGuard();\n    return this.dataLoader.load(data, params, config, true, true);\n  } //update table data\n\n\n  updateData(data) {\n    var responses = 0;\n    this.initGuard();\n    return new Promise((resolve, reject) => {\n      this.dataLoader.blockActiveLoad();\n\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n\n      if (data) {\n        data.forEach(item => {\n          var row = this.rowManager.findRow(item[this.options.index]);\n\n          if (row) {\n            responses++;\n            row.updateData(item).then(() => {\n              responses--;\n\n              if (!responses) {\n                resolve();\n              }\n            });\n          }\n        });\n      } else {\n        console.warn(\"Update Error - No data provided\");\n        reject(\"Update Error - No data provided\");\n      }\n    });\n  }\n\n  addData(data, pos, index) {\n    this.initGuard();\n    return new Promise((resolve, reject) => {\n      this.dataLoader.blockActiveLoad();\n\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n\n      if (data) {\n        this.rowManager.addRows(data, pos, index).then(rows => {\n          var output = [];\n          rows.forEach(function (row) {\n            output.push(row.getComponent());\n          });\n          resolve(output);\n        });\n      } else {\n        console.warn(\"Update Error - No data provided\");\n        reject(\"Update Error - No data provided\");\n      }\n    });\n  } //update table data\n\n\n  updateOrAddData(data) {\n    var rows = [],\n        responses = 0;\n    this.initGuard();\n    return new Promise((resolve, reject) => {\n      this.dataLoader.blockActiveLoad();\n\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n\n      if (data) {\n        data.forEach(item => {\n          var row = this.rowManager.findRow(item[this.options.index]);\n          responses++;\n\n          if (row) {\n            row.updateData(item).then(() => {\n              responses--;\n              rows.push(row.getComponent());\n\n              if (!responses) {\n                resolve(rows);\n              }\n            });\n          } else {\n            this.rowManager.addRows(item).then(newRows => {\n              responses--;\n              rows.push(newRows[0].getComponent());\n\n              if (!responses) {\n                resolve(rows);\n              }\n            });\n          }\n        });\n      } else {\n        console.warn(\"Update Error - No data provided\");\n        reject(\"Update Error - No data provided\");\n      }\n    });\n  } //get row object\n\n\n  getRow(index) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", index);\n      return false;\n    }\n  } //get row object\n\n\n  getRowFromPosition(position, active) {\n    var row = this.rowManager.getRowFromPosition(position, active);\n\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", position);\n      return false;\n    }\n  } //delete row from table\n\n\n  deleteRow(index) {\n    var foundRows = [];\n    this.initGuard();\n\n    if (!Array.isArray(index)) {\n      index = [index];\n    } //find matching rows\n\n\n    for (let item of index) {\n      let row = this.rowManager.findRow(item, true);\n\n      if (row) {\n        foundRows.push(row);\n      } else {\n        console.error(\"Delete Error - No matching row found:\", item);\n        return Promise.reject(\"Delete Error - No matching row found\");\n      }\n    } //sort rows into correct order to ensure smooth delete from table\n\n\n    foundRows.sort((a, b) => {\n      return this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\n    }); //delete rows\n\n    foundRows.forEach(row => {\n      row.delete();\n    });\n    this.rowManager.reRenderInPosition();\n    return Promise.resolve();\n  } //add row to table\n\n\n  addRow(data, pos, index) {\n    this.initGuard();\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    return this.rowManager.addRows(data, pos, index).then(rows => {\n      return rows[0].getComponent();\n    });\n  } //update a row if it exitsts otherwise create it\n\n\n  updateOrAddRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    this.initGuard();\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (row) {\n      return row.updateData(data).then(() => {\n        return row.getComponent();\n      });\n    } else {\n      return this.rowManager.addRows(data).then(rows => {\n        return rows[0].getComponent();\n      });\n    }\n  } //update row data\n\n\n  updateRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    this.initGuard();\n\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n\n    if (row) {\n      return row.updateData(data).then(() => {\n        return Promise.resolve(row.getComponent());\n      });\n    } else {\n      console.warn(\"Update Error - No matching row found:\", index);\n      return Promise.reject(\"Update Error - No matching row found\");\n    }\n  } //scroll to row in DOM\n\n\n  scrollToRow(index, position, ifVisible) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return this.rowManager.scrollToRow(row, position, ifVisible);\n    } else {\n      console.warn(\"Scroll Error - No matching row found:\", index);\n      return Promise.reject(\"Scroll Error - No matching row found\");\n    }\n  }\n\n  moveRow(from, to, after) {\n    var fromRow = this.rowManager.findRow(from);\n    this.initGuard();\n\n    if (fromRow) {\n      fromRow.moveToRow(to, after);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", from);\n    }\n  }\n\n  getRows(active) {\n    return this.rowManager.getComponents(active);\n  } //get position of row in table\n\n\n  getRowPosition(index, active) {\n    var row = this.rowManager.findRow(index);\n\n    if (row) {\n      return this.rowManager.getRowPosition(row, active);\n    } else {\n      console.warn(\"Position Error - No matching row found:\", index);\n      return false;\n    }\n  } /////////////// Column Functions  ///////////////\n\n\n  setColumns(definition) {\n    this.initGuard(false, \"To set initial columns please use the 'columns' property in the table constructor\");\n    this.columnManager.setColumns(definition);\n  }\n\n  getColumns(structured) {\n    return this.columnManager.getComponents(structured);\n  }\n\n  getColumn(field) {\n    var column = this.columnManager.findColumn(field);\n\n    if (column) {\n      return column.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  getColumnDefinitions() {\n    return this.columnManager.getDefinitionTree();\n  }\n\n  showColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n\n    if (column) {\n      column.show();\n    } else {\n      console.warn(\"Column Show Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  hideColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n\n    if (column) {\n      column.hide();\n    } else {\n      console.warn(\"Column Hide Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  toggleColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n\n    if (column) {\n      if (column.visible) {\n        column.hide();\n      } else {\n        column.show();\n      }\n    } else {\n      console.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  addColumn(definition, before, field) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n    return this.columnManager.addColumn(definition, before, column).then(column => {\n      return column.getComponent();\n    });\n  }\n\n  deleteColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n\n    if (column) {\n      return column.delete();\n    } else {\n      console.warn(\"Column Delete Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n\n  updateColumnDefinition(field, definition) {\n    var column = this.columnManager.findColumn(field);\n    this.initGuard();\n\n    if (column) {\n      return column.updateDefinition(definition);\n    } else {\n      console.warn(\"Column Update Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n\n  moveColumn(from, to, after) {\n    var fromColumn = this.columnManager.findColumn(from),\n        toColumn = this.columnManager.findColumn(to);\n    this.initGuard();\n\n    if (fromColumn) {\n      if (toColumn) {\n        this.columnManager.moveColumn(fromColumn, toColumn, after);\n      } else {\n        console.warn(\"Move Error - No matching column found:\", toColumn);\n      }\n    } else {\n      console.warn(\"Move Error - No matching column found:\", from);\n    }\n  } //scroll to column in DOM\n\n\n  scrollToColumn(field, position, ifVisible) {\n    return new Promise((resolve, reject) => {\n      var column = this.columnManager.findColumn(field);\n\n      if (column) {\n        return this.columnManager.scrollToColumn(column, position, ifVisible);\n      } else {\n        console.warn(\"Scroll Error - No matching column found:\", field);\n        return Promise.reject(\"Scroll Error - No matching column found\");\n      }\n    });\n  } //////////// General Public Functions ////////////\n  //redraw list without updating data\n\n\n  redraw(force) {\n    this.initGuard();\n    this.columnManager.redraw(force);\n    this.rowManager.redraw(force);\n  }\n\n  setHeight(height) {\n    this.options.height = isNaN(height) ? height : height + \"px\";\n    this.element.style.height = this.options.height;\n    this.rowManager.initializeRenderer();\n    this.rowManager.redraw();\n  } //////////////////// Event Bus ///////////////////\n\n\n  on(key, callback) {\n    this.externalEvents.subscribe(key, callback);\n  }\n\n  off(key, callback) {\n    this.externalEvents.unsubscribe(key, callback);\n  }\n\n  dispatchEvent() {\n    var args = Array.from(arguments),\n        key = args.shift();\n    this.externalEvents.dispatch(...arguments);\n  } //////////////////// Alerts ///////////////////\n\n\n  alert(contents, type) {\n    this.initGuard();\n    this.alertManager.alert(contents, type);\n  }\n\n  clearAlert() {\n    this.initGuard();\n    this.alertManager.clear();\n  } ////////////// Extension Management //////////////\n\n\n  modExists(plugin, required) {\n    if (this.modules[plugin]) {\n      return true;\n    } else {\n      if (required) {\n        console.error(\"Tabulator Module Not Installed: \" + plugin);\n      }\n\n      return false;\n    }\n  }\n\n  module(key) {\n    var mod = this.modules[key];\n\n    if (!mod) {\n      console.error(\"Tabulator module not installed: \" + key);\n    }\n\n    return mod;\n  }\n\n} //default setup options\n\n\nTabulator.defaultOptions = defaultOptions; //bind modules and static functionality\n\nnew ModuleBinder(Tabulator); //tabulator with all modules installed\n\nclass TabulatorFull extends Tabulator {} //bind modules and static functionality\n\n\nnew ModuleBinder(TabulatorFull, modules);\n\nclass PseudoRow {\n  constructor(type) {\n    this.type = type;\n    this.element = this._createElement();\n  }\n\n  _createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    return el;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  getComponent() {\n    return false;\n  }\n\n  getData() {\n    return {};\n  }\n\n  getHeight() {\n    return this.element.outerHeight;\n  }\n\n  initialize() {}\n\n  reinitialize() {}\n\n  normalizeHeight() {}\n\n  generateCells() {}\n\n  reinitializeHeight() {}\n\n  calcHeight() {}\n\n  setCellHeight() {}\n\n  clearCellHeight() {}\n\n}\n\nexport { Accessor as AccessorModule, Ajax as AjaxModule, CalcComponent, CellComponent, Clipboard as ClipboardModule, ColumnCalcs as ColumnCalcsModule, ColumnComponent, DataTree as DataTreeModule, Download as DownloadModule, Edit$1 as EditModule, Export as ExportModule, Filter as FilterModule, Format as FormatModule, FrozenColumns as FrozenColumnsModule, FrozenRows as FrozenRowsModule, GroupComponent, GroupRows as GroupRowsModule, History as HistoryModule, HtmlTableImport as HtmlTableImportModule, Import as ImportModule, Interaction as InteractionModule, Keybindings as KeybindingsModule, Menu as MenuModule, Module, MoveColumns as MoveColumnsModule, MoveRows as MoveRowsModule, Mutator as MutatorModule, Page as PageModule, Persistence as PersistenceModule, Popup$1 as PopupModule, Print as PrintModule, PseudoRow, ReactiveData as ReactiveDataModule, Renderer, ResizeColumns as ResizeColumnsModule, ResizeRows as ResizeRowsModule, ResizeTable as ResizeTableModule, ResponsiveLayout as ResponsiveLayoutModule, RowComponent$1 as RowComponent, SelectRow as SelectRowModule, Sort as SortModule, Tabulator, TabulatorFull, Tooltip as TooltipModule, Validate as ValidateModule };","map":{"version":3,"mappings":"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","names":["CoreFeature","constructor","table","reloadData","data","silent","dataLoader","load","undefined","langText","modules","localize","getText","arguments","langBind","bind","langLocale","getLocale","commsConnections","comms","getConnections","commsSend","send","layoutMode","layout","getMode","layoutRefresh","subscribe","eventBus","unsubscribe","subscribed","key","subscriptionChange","dispatch","chain","confirm","dispatchExternal","externalEvents","subscribedExternal","subscriptionChangeExternal","options","setOption","value","module","Helpers","elVisible","el","offsetWidth","offsetHeight","elOffset","box","getBoundingClientRect","top","window","pageYOffset","document","documentElement","clientTop","left","pageXOffset","clientLeft","deepClone","obj","clone","list","objectProto","__proto__","arrayProto","Object","assign","Array","isArray","i","subject","match","copy","findIndex","item","unshift","Popup","element","parent","container","_lookupContainer","reversedX","childPopup","blurable","blurCallback","renderedCallback","visible","classList","add","blurEvent","hide","escEvent","_escapeCheck","popupContainer","querySelector","console","warn","_checkContainerIsParent","body","parentNode","renderCallback","callback","containerEventCoords","e","touch","MouseEvent","x","touches","pageX","y","pageY","parentOffset","elementPositionCoords","position","offset","containerOffset","show","origin","parentEl","coords","HTMLElement","style","appendChild","_fitToScreen","scrollTop","right","Math","max","scrollHeight","parseInt","isVisible","hideOnBlur","setTimeout","rowManager","addEventListener","keyCode","removeEventListener","removeChild","child","Module","name","_handler","initialize","registerTableOption","optionsList","register","registerColumnOption","columnManager","registerTableFunction","func","initGuard","registerComponentFunction","component","handler","componentFunctionBinder","registerDataHandler","priority","registerDataPipelineHandler","registerDisplayHandler","registerDisplayPipelineHandler","refreshData","renderInPosition","refreshActiveData","footerAppend","footerManager","append","footerPrepend","prepend","footerRemove","remove","popup","menuEl","menuContainer","alert","content","type","alertManager","clearAlert","clear","Accessor","allowedTypes","initializeColumn","transformRow","column","config","forEach","charAt","toUpperCase","slice","accessor","definition","lookupAccessor","params","accessors","row","rowComponent","getComponent","traverse","colCompnent","getFieldValue","setFieldValue","moduleName","defautlAccessors","method","generateParamsList","prefix","output","concat","push","serializeParams","encoded","encodeURIComponent","join","url","keys","length","toLowerCase","includes","contentType","Promise","resolve","reject","urlGenerator","call","ajaxContentType","contentTypeFormatters","headers","Accept","mode","location","credentials","fetch","then","response","ok","json","catch","error","status","statusText","JSON","stringify","form","FormData","Ajax","loaderPromise","ajaxRequestFunc","defaultLoaderPromise","ajaxURLGenerator","defaultURLGenerator","ajaxURL","setUrl","setDefaultConfig","ajaxConfig","getUrl","requestDataCheck","requestParams","requestData","ajaxParams","previousData","generateConfig","sendRequest","defaultConfig","ajaxRequesting","ajaxResponse","defaultContentTypeFormatters","replace","rows","setData","update","updateOrAddData","insert","addData","clipboard","headerFindSuccess","columns","columnMap","split","find","title","trim","field","columnsByIndex","shift","Clipboard","pasteParser","pasteAction","customSelection","rowRange","blocked","clipboardCopyRowRange","plain","html","preventDefault","clipboardCopyFormatter","export","generateExportList","clipboardCopyConfig","clipboardCopyStyled","genereateHTMLTable","generatePlainContent","clipboardData","originalEvent","reset","paste","setPasteParser","clipboardPasteParser","setPasteAction","clipboardPasteAction","rowData","col","getKey","range","internal","sel","textRange","getSelection","createRange","selectNodeContents","toString","removeAllRanges","addRange","selection","createTextRange","moveToElementText","select","execCommand","action","pasteActions","parser","pasteParsers","checkPaseOrigin","getPasteData","modExists","mutateData","mutator","valid","target","tagName","edit","currentCell","getData","defaultPasteActions","defaultPasteParsers","CalcComponent","_row","Proxy","get","receiver","handle","transform","getElement","getTable","getCells","cells","cell","getCell","_getSelf","CellComponent","_cell","getValue","getOldValue","getInitialValue","initialValue","getRow","getField","getColumn","setValue","mutate","restoreOldValue","setValueActual","restoreInitialValue","checkHeight","Cell","oldValue","height","width","minWidth","loaded","build","generateElement","setWidth","_configureCell","createElement","className","setAttribute","vertAligns","bottom","middle","hozAligns","center","textAlign","hozAlign","vertAlign","display","alignItems","justifyContent","cssClass","classNames","_generateContents","val","innerHTML","Node","firstChild","cellRendered","containerOnly","layoutElement","force","changed","setValueProcessData","cellEdited","widthStyled","clearWidth","getWidth","setMinWidth","minWidthStyled","setMaxWidth","maxWidth","maxWidthStyled","reinitializeHeight","clearHeight","setHeight","heightStyled","getHeight","delete","redrawBlock","deleteCell","calcs","getIndex","getCellIndex","ColumnComponent","_column","getDefinition","getTitleDownload","isGroup","toggle","getSubColumns","getParentColumn","Column","scrollTo","scrollToColumn","move","to","after","toColumn","findColumn","moveColumn","getNextColumn","nextCol","nextColumn","getPrevColumn","prevCol","prevColumn","updateDefinition","updates","result","reinitializeWidth","renderer","rerenderColumns","def","contentElement","titleHolderElement","titleElement","groupElement","createGroupElement","fieldStructure","titleDownload","titleFormatterRendered","mapDefinitions","setField","maxInitialWidth","widthFixed","newCol","attachColumn","checkColumnVisibility","registerColumnField","_initialize","bindModuleColumns","defaults","columnDefaults","generate","defaultOptionList","checkDefinition","indexOf","nestedFieldSeparator","_getNestedData","_getFlatData","_setNestedData","_setFlatData","registerColumnPosition","reRegisterPosition","_mapDepricatedFunctionality","headerVertical","_bindEvents","_buildColumnHeaderContent","_buildGroupHeader","_buildColumnHeader","dblTap","tapHold","tap","headerClick","headerDblClick","headerContext","headerTap","passive","headerDblTap","clearTimeout","headerTapHold","classeNames","headerHozAlign","_buildColumnHeaderTitle","text","_formatColumnHeaderTitle","contents","structure","dataObj","verticalAlign","alignment","paddingTop","clearVerticalAlign","minHeight","formatter","getGroupElement","getFirstColumn","getLastColumn","getColumns","getTopColumn","updateBranches","colDefs","responsiveToggle","matchChildWidths","childWidth","index","setWidthActual","isNaN","checkCellHeights","heightInitialized","offsetParent","clearCellHeight","columnRendered","generateCell","findColumnIndex","_nextVisibleColumn","getColumnByIndex","_prevVisibleColumn","fitToData","setTo","addColumn","getPosition","active","normalizeHeight","reformat","getNextRow","nextRow","getPrevRow","prevRow","Row","manualHeight","outerHeight","initialized","create","created","detachElement","generateCells","rowFormatter","deinitialize","deinitializeHeight","reinitialize","calcHeight","rowHeight","maxHeight","setCellHeight","updateData","tempData","newRowData","updatedData","attrname","findCell","nextDisplayRow","prevDisplayRow","moveToRow","before","toRow","moveRowActual","deleteActual","blockRedraw","detatchModules","deleteCells","wipe","getGroup","defaultCalculations","values","calcParams","precision","sum","Number","String","topCalcs","botCalcs","genColumn","topElement","botElement","topRow","botRow","topInitialized","initializeColumnCheck","rowsUpdated","recalcActiveRows","recalcActiveRowsRefresh","tableRedraw","userRecalc","visibleRows","groupBy","recalcRowGroup","recalcAll","cellValueChanged","topCalc","columnCalcs","topCalcParams","botCalcParams","ColumnCalcs","calculations","removeCalcs","botInitialized","initializeTopRow","insertBefore","initializeBottomRow","scrollHorizontal","recalc","generateRow","groups","group","recalcGroup","rowsToData","generateTopRow","generateBottomRow","dataTree","dataTreeChildColumnCalcs","open","children","pos","format","getFormatter","generateRowData","paramKey","hasTopCalcs","hasBottomCalcs","redraw","getResults","results","getGroupResults","subGroups","getSubGroups","subGroupResults","subgroup","groupObj","indent","collapseEl","expandEl","branchEl","collapseRow","expandRow","toggleRow","getTreeParent","getRowChildren","addTreeChildRow","dataTreeChildField","dummyEl","dataTreeCollapseElement","tabIndex","dataTreeExpandElement","startOpen","rowDelete","rowDataChanged","initializeElementField","columnMoving","redrawNeeded","layoutRow","elementField","initializeRow","childArray","controlEl","reinitializeRowChildren","cloneNode","rtl","marginRight","paddingRight","generateControlElement","oldControl","stopPropagation","replaceChild","setDisplayIndex","getDisplayIndex","getRows","getChildren","allChildren","dataTreeFilter","dataTreeSort","subChildren","sub","generateChildren","childData","childRow","isRowExpanded","getFilteredTreeChildren","childIndex","findChildIndex","getTreeChildren","recurse","getChildField","csv","setFileContents","fileContents","depth","pdf","header","autoTableParams","rowGroupStyles","fontStyle","fontSize","cellPadding","fillColor","rowCalcStyles","jsPDFParams","parseRow","styles","colSpan","rowSpan","doc","head","xlsx","sheetName","workbook","utils","book_new","tableFeatures","SheetNames","generateSheet","merges","worksheet","s","c","r","XLSX","sheet","sheetOnly","intercept","s2ab","buf","ArrayBuffer","Uint8Array","view","bookType","bookSST","jsonLines","defaultDownloaders","blob","download","downloadToTab","filename","interceptCallback","buildLink","mime","triggerDownload","downloadFunc","Download","groupHeader","newTab","Blob","navigator","commsReceived","maskInput","maskLetter","maskLetterChar","maskNumber","maskWildcard","fillSymbols","symbol","mask","char","input","onRendered","success","cancel","editorParams","padding","boxSizing","elementAttributes","cellValue","preventScroll","onChange","textarea","vertNav","count","resize","heightNow","number","blurFunc","editor","_initializeParams","displayItems","focusedItem","listEl","_createListElement","initialValues","isFilter","filterTimeout","typing","listIteration","actions","_deprecationCheck","_initializeValue","_onRendered","clickStop","cellEl","_setListWidth","_createInputElement","clearable","autocomplete","attribs","valueCheck","verticalNavigation","placeholderLoading","filterDelay","emptyValue","filter","_bindInputEvents","_inputFocus","_inputClick","_inputBlur","_filter","_inputSearch","_inputKeyDown","_inputKeyUp","_preventBlur","_keyUp","stopImmediatePropagation","_keyDown","_focusItem","_keySide","_keyEnter","_chooseItem","_keyEsc","_keyHomeEnd","_keySelectLetter","_keyAutoCompLetter","_scrollToValue","filterTerm","character","behavior","block","inline","headerFilterInitialListGen","rebuildOptionsList","_generateOptions","_sortOptions","_buildList","_showList","_filterList","itteration","filtered","_ajaxRequest","valuesURL","valuesLookup","responseValues","_addPlaceholder","placeholder","_clearList","term","_uniqueColumnValues","getColumnByField","_parseList","inputValues","map","label","_parseListItem","option","itemParams","selected","level","original","_parseListGroup","sorter","sort","_sortGroup","_defaultSortFunction","as","bs","emptyAlign","isFinite","a","b","rd","rx","L","a1","b1","_filterOptions","_filterItem","matches","_defaultFilterFunc","_buildItem","itemFormatter","getAttribute","_groupClick","_styleItem","startVis","_itemClick","_cancel","_clearChoices","currentItems","splice","_resolveValue","multiselect","freetext","Edit","star","maxStars","size","stars","starsHolder","starChange","self","browser","buildStar","nextStar","starHolder","changeValue","whiteSpace","progress","min","percent","bar","mouseDrag","mouseDragWidth","calcVal","backgroundColor","updateValue","tickCross","tristate","indetermValue","indetermState","trueValueSet","falseValueSet","checkedValue","trueValue","falseValue","defaultEditors","Edit$1","mouseClick","recursionBlock","editedCells","editors","getEditedCells","clearCellEdited","navigatePrev","navigateNext","navigateLeft","navigateRight","cellisEdited","clearEdited","cellCancelEdit","bindEditor","columnDeleteCheck","cancelEdit","keybindingNavigateNext","newRow","blur","addRow","nextCell","findNextEditableCell","findPrevEditableCell","navigateUp","navigateDown","allowEdit","prevCell","rowDeleteCheck","check","getCurrentCell","clearEditor","invalidEdit","button","focusCellNoEvent","editCell","forceEdit","focusScrollAdjust","getRenderMode","bottomEdge","clientHeight","rowEl","topEdge","scrollLeft","rightEdge","clientWidth","leftEdge","renderHorizontal","rendered","cellEditor","edited","editIndex","ExportRow","ExportColumn","Export","colVisProp","cloneTableStyle","bodyToExportRows","genereateTable","rowLookup","findRow","pagination","getDisplayRows","displayRows","generateColumnGroupHeaders","columnGroups","colData","processColumnGroup","maxDepth","groupData","subGroupData","columnVisCheck","headersToExportRows","headerDepth","exportRows","parseColumnGroup","rowGroups","exportCols","genereateTableElement","headerEl","bodyEl","lookupTableStyles","setup","oddRow","evenRow","calcRow","styleCells","getElementsByClassName","genereateHeaderElement","mapElementStyles","genereateGroupElement","genereateCalcElement","genereateRowElement","cellWrapper","formatExportValue","treeElementField","holder","getHtml","from","lookup","getComputedStyle","props","filterVal","rowVal","filterParams","keywords","keyword","Filter","filterList","headerFilterColumns","prevHeaderFilterChangeCheck","tableInitialized","searchData","userSetFilter","userRefreshFilter","userSetHeaderFilterFocus","userGetHeaderFilterValue","userRemoveFilter","setHeaderFilterFocus","reloadHeaderFilter","hideHeaderFilterElements","tableBuilt","initialHeaderFilter","remoteFilterParams","userAddFilter","getHeaderFilterValue","userSetHeaderFilterValue","userClearFilter","userClearHeaderFilter","searchRows","initializeColumnHeaderFilter","filterChangeCheck","filterFunc","prevSuccess","emptyFunc","headerFilterFunc","headerFilterFuncParams","fieldVal","filterType","colVal","attrType","tagType","generateHeaderFilterElement","filterElement","editorElement","typingTimer","searchTrigger","headerFilter","headerPos","headerFilterLiveFilterDelay","showHeaderFilterElements","setHeaderFilterValue","refreshFilter","filterMode","trackChanges","hasChanged","setFilter","addFilter","findFilter","findSubFilters","filters","getFilters","ajax","filtersToArray","getHeaderFilters","removeFilter","clearFilter","clearHeaderFilter","headerFilters","search","activeRows","searchType","activeRowComponents","rowList","filterRow","filterRecurse","subFilter","defaultFilters","money","formatterParams","sign","integer","decimal","rgx","decimalSym","thousandSym","negativeSign","emptyToSpace","floatVal","link","urlPrefix","labelTraverse","src","tickCross$1","empty","truthy","tick","tickElement","cross","datetime","DT","luxon","inputFormat","invalid","newDatetime","setZone","outputFormat","datetimediff","invalidPlaceholder","suffix","unit","date","humanize","star$1","starActive","starInactive","overflow","traffic","colors","color","percentValue","parseFloat","round","floor","progress$1","legendAlign","legend","legendColor","barEl","barContainer","legendEl","holderEl","responsiveLayout","toggleList","isOpen","checkbox","RowComponent","RowComponent$1","selectableRangeMode","selectRow","selectedRows","defaultFormatters","plaintext","html$1","image","buttonTick","buttonCross","rownum","rowSelection","Format","formatValue","lookupFormatter","print","formatters","formatHeader","mockCell","titleFormatter","sanitizeHTML","entityMap","FrozenColumns","leftColumns","rightColumns","leftMargin","rightMargin","rightPadding","initializationMode","scrollEndTimer","layoutCell","reinitializeColumns","blockLayout","unblockLayout","margin","edge","frozenCheck","layoutCalcRows","calcMargins","layoutGroupCalcs","layoutColumnPosition","leftParents","headersElement","marginLeft","frozen","getColGroupParentElement","allCells","otherRows","getVisibleRows","paddingLeft","getTableElement","_calcSpace","FrozenRows","detachRow","isRowFrozen","isFrozen","freezeRow","unfreezeRow","styleRows","GroupComponent","_group","getParentGroup","toggleVisibility","Group","groupManager","generator","oldGroup","hasSubGroups","old","groupList","elementContents","createElements","createValueGroups","arrow","arrowElement","allowedValues","addBindings","toggleElement","groupToggleElement","_createGroup","groupKey","groupID","_addRowToGroup","groupIDLookups","_addRow","insertRow","toIndex","generateGroupHeaderContents","updateGroupRows","scrollHeader","getRowIndex","conformRowData","removeRow","groupValues","removeGroup","getHeadersAndRows","noCalc","_visSet","getRowCount","checkClassicModeGroupHeaderWidth","prev","setDisplayRows","getRowGroup","compoment","getPath","path","childNodes","GroupRows","headerGenerator","displayHandler","setGroupBy","setGroupStartOpen","userGetGroupedData","configureGroupSetup","rowDeleting","rowMoving","groupStartOpen","cols","getRealColumns","lookupFunc","rowSample","prevValue","virtualRenderFill","tableElement","rowAddingIndex","groupRows","moveRowInArray","setGroupValues","setGroupHeader","userGetGroups","rowGetGroup","toGroup","fromGroup","cellUpdated","generateGroups","getGroups","groupComponents","getChildGroups","pullGroupListData","groupListData","getGroupedData","countGroups","oldGroups","createGroup","assignRowToExistingGroup","assignRowToGroup","newGroupNeeded","reassignRowToGroup","oldGroupPath","newGroupPath","samePath","oldRowGroup","getExpectedPath","groupPath","groupId","scrollHeaders","defaultUndoers","cellEdit","rowAdd","_rebindRow","rowMove","defaultRedoers","history","clearComponentHistory","rowAdded","rowMoved","posFrom","getRowPosition","posTo","rowDeleted","newValue","getHistoryUndoSize","getHistoryRedoSize","undo","History","redo","oldRow","hasIndex","tableElementCheck","originalElement","parseTable","_extractOptions","_generateBlankHeaders","fieldIndex","defaultOptions","attributes","optionsArr","attrib","_attribValue","_findCol","_extractHeaders","exists","HtmlTableImport","inQuote","nextChar","json$1","loadDataCheck","loadData","err","lookupImporter","importFormat","importer","Import","importFromFile","extension","pickFile","importData","reader","FileReader","importReader","onerror","structureData","parsedData","autoColumns","structureArrayToObject","structureArrayToColumns","eventMap","rowClick","rowDblClick","rowContext","rowMouseEnter","rowMouseLeave","rowMouseOver","rowMouseOut","rowMouseMove","rowTap","rowDblTap","rowTapHold","cellClick","cellDblClick","cellContext","cellMouseEnter","cellMouseLeave","cellMouseOver","cellMouseOut","cellMouseMove","cellTap","cellDblTap","cellTapHold","headerMouseEnter","headerMouseLeave","headerMouseOver","headerMouseOut","headerMouseMove","groupClick","groupDblClick","groupContext","groupMouseEnter","groupMouseLeave","groupMouseOver","groupMouseOut","groupMouseMove","groupTap","groupDblTap","groupTapHold","subscribers","touchSubscribers","columnSubscribers","touchWatchers","tapDbl","cellContentsSelectionFixer","initializeExternalEvents","subscriptionChanged","added","subscribeTouchEvents","unsubscribeTouchEvents","notouch","dispatchEvent","handleTouch","watchers","componentObj","Interaction","defaultBindings","navPrev","navNext","navUp","navDown","scrollPageUp","scrollPageDown","scrollToEnd","copyToClipboard","defaultActions","keyBlock","newPos","scrollMax","scrollToRow","focus","scrollToStart","navLeft","navRight","Keybindings","watchKeys","bindings","keybindings","mergedBindings","pressedKeys","mapBindings","binding","bindingList","mapBinding","symbolsList","ctrl","meta","symbols","bindEvents","keyupBinding","code","keydownBinding","clearBindings","checkBinding","Menu","rootPopup","initializeGroupWatchers","deprecationCheck","initializeRowWatchers","rowContextMenu","rowClickMenu","groupContextMenu","groupClickMenu","headerContextMenu","loadMenuTableColumnEvent","headerClickMenu","initializeColumnHeaderMenu","contextMenu","loadMenuTableCellEvent","clickMenu","icon","headerMenuEl","headerMenu","loadMenuEvent","menu","loadMenu","nestedMenuBlock","parentPopup","itemEl","disabled","currentComponent","MoveColumns","placeholderElement","hoverElement","checkTimeout","checkPeriod","moving","toCol","startX","autoScrollMargin","autoScrollTimeout","endMove","createPlaceholderElement","movableColumns","colEl","bindTouchEvents","startXMove","nextColWidth","prevColWidth","nextColWidthLast","prevColWidthLast","diff","moveToCol","moveHover","startMove","headerElement","_bindMouseMove","mousemove","_unbindMouseMove","movingCells","toColAfter","xPos","touchMove","scrollPos","MoveRows","toRowAfter","hasHandle","tableRowDropEvent","connection","connectionSelectorsTables","connectionElements","connections","connectedTable","connectedRow","movableRows","movableRowsConnectedTables","connectionSelectorsElements","movableRowsConnectedElements","initializeGroupHeader","nextSibling","moveRow","tableRowDrop","which","rowHandle","initializeCell","startYMove","nextRowHeight","prevRowHeight","nextRowHeightLast","prevRowHeightLast","setStartPosition","connectToTables","pointerEvents","startY","disconnectFromTables","moveHoverConnections","moveHoverTable","yPos","rowHolder","elementRowDrop","connectionTables","query","dropEvent","connect","mouseup","disconnect","dropComplete","sender","movableRowsSender","prototype","receivers","fromRow","fromTable","defaultMutators","Mutator","enabled","transformCell","lookupMutator","mutateLink","links","linkCell","enable","disable","pageSize","currentRow","currentPage","totalRows","totalPages","showingEl","valueEl","ofEl","totalEl","rowsEl","defaultPageCounters","pages","Page","progressiveLoad","pageCounterElement","page","displayIndex","initialLoad","dataChanging","pageSizes","setMaxPage","userSetPageSize","initialLoadComplete","calculatePageSizes","footerRedraw","remotePageParams","_parseRemoteData","restOnRenderBefore","initializePageCounter","rowAddingPosition","dispRows","paginationSize","testElRow","visibility","testElCell","generatePageSizeSelectList","userSetPageToRow","setPageToRow","scrollVertical","dir","nextPage","firstBut","prevBut","nextBut","pageSizeSelect","paginationSizeSelector","counter","pageCounter","initializePaginator","pageSelectLabel","paginationCounterHolder","lastBut","setPage","previousPage","paginationElement","setPageSize","paginationCounter","paginationCounterElement","paginationInitialPage","paginationButtonCount","initializeProgressive","setMaxRows","rowCount","trigger","_setPageCounter","_setPageButtons","leftSize","rightSize","pagesElement","_generatePageButton","getPage","getPageMax","getPageSize","actualRowPageSize","start","end","actualStartRow","finally","remoteRowCountEstimate","addRows","footer","containerElement","defaultReaders","local","id","localStorage","cookie","cookiePos","expireDate","setDate","Persistence","defWatcherBlock","localStorageTest","testKey","removeItem","persistence","persistenceMode","persistenceID","retreivedData","readFunc","persistenceReaderFunc","readers","writeFunc","persistenceWriterFunc","retreiveData","save","eventSave","sorters","initialSort","getColumnLayout","setColumnLayout","setColumns","set","mergeDefinition","current","newCols","_findColumn","oldCols","parseColumns","validateSorters","getGroupConfig","getPageConfig","definitions","excludedKeys","defStore","colDef","moduleInitOrder","Popup$1","rowClickPopup","loadPopupEvent","groupClickPopup","headerContextPopup","on","headerClickPopup","contextPopup","clickPopup","initializeColumnHeaderPopup","headerPopupIcon","headerPopupEl","loadPopupTableCellEvent","loadPopupTableColumnEvent","loadPopup","contentsEl","Print","manualBlock","replaceTable","cleanup","printFullscreen","scrollY","footerEl","tableEl","headerContent","footerContent","printHeader","printFooter","printFormatter","scrollX","ReactiveData","origFuncs","currentVersion","watchData","version","unwatchData","enumerable","configurable","args","apply","defineProperty","getRowFromDataObject","pop","newRows","startRow","oldRows","writable","watchRow","watchTreeChildren","rebuildTree","childField","watchKey","getOwnPropertyDescriptor","unwatchRow","unblock","ResizeColumns","startColumn","startWidth","initializeEventWatchers","deInitializeComponent","layoutCellHandles","layoutColumnHeader","resizable","columnLayoutUpdated","reinitializeColumn","handleEl","variableHeight","nearestColumn","initialNextColumn","handleDown","oldWidth","deInitializeColumn","parentElement","resizeHandle","_checkResizability","_mouseDown","mouseMove","startDiff","moveDiff","blockedBefore","blockedAfter","colWidth","browserSlow","mouseUp","ResizeRows","startHeight","prevHandle","prevHandleDown","observer","containerWidth","autoResize","tableStyle","tableHeight","containerHeight","ResizeObserver","entry","nodeHeight","contentRect","nodeWidth","fixedHeight","containerObserver","browserMobile","tableResized","ResizeTable","ResponsiveLayout","hiddenColumns","collapseStartOpen","initializeResponsivity","collapseFormatter","responsiveLayoutCollapseFormatter","generateCollapsedContent","collapseHandleColumn","responsive","order","generateCollapsedRowContent","updateColumnVisibility","hideColumn","colCount","showColumn","working","headerVisible","activeRowsCount","generateCollapsedRowData","mockCellComponent","formatCollapsedData","titleData","node_content","titleHighlight","valueData","SelectRow","selecting","lastClickedRow","selectPrev","headerCheckboxElement","selectRows","deselectRows","isRowSelected","rowRetrieve","clearSelectionData","endSelect","selectableCheck","_clearSelection","handleComplexRowClick","shiftKey","rowIdx","getDisplayRowIndex","fromRowIdx","lastClickedRowIdx","toRowIdx","toggledRows","toggledRow","selectable","rowMatch","_rowSelectionChanged","_selectRow","rowInfo","selectableRollingSelection","dataTreeSelectPropagate","childRowSelection","_deselectRow","selectedRow","checkboxEl","checked","getSelectedData","getSelectedRows","indeterminate","registerRowSelectCheckbox","registerHeaderSelectCheckbox","alignEmptyValues","decimalSeparator","thousand","thousandSeparator","string","aRow","bRow","locale","localeCompare","datetime$1","DateTime","isDateTime","fromISO","fromFormat","el1","el2","calc","d","alphanum","defaultSorters","time","boolean","array","Sort","sortList","remoteSortParams","userSetSort","setSort","clearSort","arrowEl","startingDir","headerSortStartingDir","headerSort","headerSortElement","columnHeaderSortMulti","refreshSort","getSort","newSortList","findSorter","sortOrderReverse","sortListActual","rowComponents","sortMode","sortObj","_sortItems","clearColumnHeaders","setColumnHeader","_sortRow","el1Comp","el2Comp","Tooltip","tooltipSubscriber","headerSubscriber","tooltipGenerationMode","tooltip","mousemoveCheck","mouseoutCheck","popupInstance","clearPopup","timeout","loadTooltip","parameters","float","numeric","starts","ends","endsWith","minLength","maxLength","in","regex","reg","unique","cellData","required","Validate","getInvalidCells","clearValidation","columnValidate","rowValidate","editValidate","editorClear","validate","cellValidate","editedClear","cellIsValid","userClearCellValidation","userValidate","validator","_extractValidator","_buildValidator","validators","failedValidators","invalidIndex","invalidCells","validationMode","ResizeRowsModule","ResizeTableModule","ResponsiveLayoutModule","SelectRowModule","SortModule","TooltipModule","ValidateModule","debugEventsExternal","debugEventsInternal","debugInvalidOptions","debugInitialization","columnHeaderVertAlign","autoColumnsDefinitions","footerElement","textDirection","addRowPos","renderVertical","renderVerticalBuffer","scrollToRowPosition","scrollToRowIfVisible","scrollToColumnPosition","scrollToColumnIfVisible","rowFormatterPrint","rowFormatterClipboard","rowFormatterHtmlOutput","dataLoaderLoading","dataLoaderError","dataLoaderErrorTimeout","dataSendParams","dataReceiveParams","OptionsList","msgType","registeredDefaults","userOptions","Renderer","clearRows","clearColumns","reinitializeColumnWidths","renderRows","renderColumns","rerenderRows","renderRowCells","rerenderRowCells","scrollColumns","scrollRows","scrollToRowNearestTop","styleRow","render","rerender","ifVisible","rowIndex","elementVertical","BaiscHorizontal","VirtualDomHorizontal","rightCol","vDomScrollPosRight","vDomPadLeft","vDomPadRight","fitDataColAvg","layoutCheck","vertScrollListen","compatibilityCheck","isFitData","startsWith","clearVisRowCache","dataChange","scroll","calcWindowBuffer","buffer","leftCol","colPos","vDomScrollPosLeft","vdomHoz","reinitChanged","reinitializeRows","change","collsWidth","colEnd","removeColRight","colPositionAdjust","rightPos","addColRight","leftPos","changes","fitDataColActualWidthCheck","addColLeft","ex","removeColLeft","newWidth","widthDiff","fitDataCheck","reinitializeRow","ColumnManager","blockHozScrollEvent","RendererVirtualDomHorizontal","initializeRenderer","renderClass","renderers","createHeadersElement","createHeaderElement","getHeadersElement","hozAdjust","scrollWidth","generateColumnsFromRowData","_addColumn","nextToColumn","topColumn","parentIndex","nextEl","columnsByField","_reIndexColumns","verticalAlignHeaders","adjustTableSize","getColumnsByFieldRoot","getFirstVisibleColumn","getDefinitions","getDefinitionTree","getComponents","structured","moveColumnActual","_moveColumnInArray","fromIndex","updateRows","adjust","offsetLeft","getFlexBaseWidth","totalWidth","fixedWidth","deregisterColumn","BaiscVertical","onlyGroupHeaders","rowTop","VirtualDomVertical","vDomRowHeight","vDomTop","vDomScrollPosBottom","vDomBottomPad","vDomTopNewRows","paddingBottom","vDomScrollPosTop","topOffset","topDiff","bottomDiff","_addTopRow","vDomScrollHeight","_addBottomRow","_removeTopRow","topFound","bottomRow","_virtualRenderFill","forceMove","topPad","rowsHeight","heightOccupied","topPadHeight","rowsCount","vDomWindowBuffer","vDomBottom","fillableSpace","addedRows","paddingAdjust","_quickNormalizeRowHeight","vDomTopPad","removableRows","vDomMaxRenderChain","_removeBottomRow","RowManager","heightFixer","createTableElement","placeholderContents","firstRender","renderMode","displayRowsCount","rowNumColumn","dataPipeline","createHolderElement","initializePlaceholder","leftDir","topDir","_positionPlaceholder","getRowFromPosition","_setDataActual","_wipeElements","activeRowsPipeline","deleteRow","allIndex","activeIndex","displayRowIterator","regenerateRowNumbers","_showPlaceholder","addRowActual","_clearPlaceholder","findAddRowPos","chainResult","setActiveRows","reRenderInPosition","clearData","findRowIndex","rowOnly","getDataCount","skipStage","stage","cascadeOrder","redrawBlockRestoreConfig","refreshPipelines","renderTable","displayPipeline","resetDisplayRows","getNextDisplayIndex","redrawBlockRenderInPosition","_clearTable","renderEmptyScroll","initialHeight","otherHeight","restoreRedraw","tableWidth","resetScroll","event","FooterManager","createContainerElement","initializeElement","deactivate","external","activate","InteractionManager","abortClasses","previousTargets","listeners","componentMap","pseudoTrackers","subscriber","pseudoTracking","buildListenerMap","bindSubscriptionWatchers","listener","listenerMap","components","bindPseudoEvents","pseudoMouseEnter","pseudoMouseLeave","linkedKeys","leaveList","updateEventListeners","track","targets","findTargets","bindComponents","targetMatches","previousTarget","triggerEvents","ComponentFunctionBinder","funcName","DataLoader","loading","alertLoader","mapParams","alertError","objectInvert","blockActiveLoad","debug","events","subscriptionNotifiers","_notifiySubscriptionChange","notifiers","_dispatch","_debugDispatch","_debugConfirm","_chain","fallback","_confirm","confirmed","callResult","_debugChain","TableRegistry","lookupTable","matchElement","Tabulator","fitData","fitDataStretch","colsWidth","gap","lastCol","flexGrowUnits","flexColWidth","flexColumns","fixedShrinkColumns","flexShrinkUnits","overflowWidth","gapFill","calcWidth","scaleColumns","freeSpace","shrinkCols","oversizeCols","oversizeSpace","remainingSpace","remainingFlexGrowUnits","changeUnits","undersizeCols","calcGrow","calcShrink","widthShrink","flexWidth","defaultModes","fitDataFill","fitDataTable","fitColumns","Layout","defaultLangs","Localize","lang","langList","headerFilterPlaceholder","setHeaderFilterPlaceholder","langs","setHeaderFilterColumnPlaceholder","default","installLang","_setLangProp","setLocale","desiredLocale","traverseLang","trans","getLang","pathArray","_getLangElement","root","rootPath","_executeBindings","Comms","selectors","con","coreModules","LayoutModule","LocalizeModule","CommsModule","ModuleBinder","tabulator","bindModules","bindStaticFuctionality","source","property","registerModule","mod","orderedEndMods","unOrderedMods","moduleBindings","moduleCore","modulesCore","orderedStartMods","core","mods","Alert","_createAlertElement","_createMsgElement","_typeClass","msgElement","interactionMonitor","modulesRegular","_create","initializeCoreSystems","_mapDeprecatedFunctionality","_loadInitialData","_rtlCheck","_clearObjectPointers","_buildElement","newElement","_initializeTable","_detectBrowser","destroy","ua","stack","line","Error","msg","replaceData","responses","parse","foundRows","updateOrAddRow","updateRow","getColumnDefinitions","toggleColumn","deleteColumn","updateColumnDefinition","fromColumn","off","plugin","TabulatorFull","PseudoRow","_createElement"],"sources":["D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\CoreFeature.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Helpers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Popup.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\Module.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\defaults\\accessors.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\Accessor.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\config.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\urlGenerator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\loaderPromise.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\contentTypeFormatters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\Ajax.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteActions.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteParsers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\Clipboard.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\CalcComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\CellComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\Cell.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\ColumnComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\defaults\\options.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\Column.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\RowComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\Row.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\defaults\\calculations.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\ColumnCalcs.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\DataTree\\DataTree.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\csv.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\json.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\pdf.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\xlsx.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\html.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\jsonLines.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\Download.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\inputMask.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\input.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\textarea.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\number.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\range.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\List.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\select.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\list.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\autocomplete.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\star.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\progress.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\tickCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\Edit.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportRow.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportColumn.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\Export.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\defaults\\filters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\Filter.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\plaintext.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\html.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\textarea.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\money.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\link.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\image.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\tickCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetime.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetimediff.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\lookup.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\star.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\traffic.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\progress.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\color.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonTick.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonCross.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rownum.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\handle.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\responsiveCollapse.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rowSelection.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\Format.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenColumns\\FrozenColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenRows\\FrozenRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupComponent.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\Group.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\undoers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\redoers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\History.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\HtmlTableImport\\HtmlTableImport.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Import\\defaults\\importers\\csv.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Import\\defaults\\importers\\json.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Import\\defaults\\importers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Import\\Import.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Interaction\\Interaction.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\bindings.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\actions.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\Keybindings.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Menu\\Menu.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveColumns\\MoveColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveRows\\MoveRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\defaults\\mutators.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\Mutator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\defaults\\pageCounters\\rows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\defaults\\pageCounters\\pages.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\defaults\\pageCounters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\Page.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\readers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\writers.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\Persistence.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Popup\\Popup.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Print\\Print.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ReactiveData\\ReactiveData.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeColumns\\ResizeColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeRows\\ResizeRows.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeTable\\ResizeTable.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResponsiveLayout\\ResponsiveLayout.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\SelectRow\\SelectRow.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\number.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\string.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\datetime.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\date.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\time.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\boolean.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\array.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\exists.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\alphanum.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\Sort.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Tooltip\\Tooltip.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\defaults\\validators.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\Validate.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\defaults\\options.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\OptionsList.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\Renderer.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicHorizontal.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomHorizontal.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\ColumnManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicVertical.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomVertical.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\RowManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\FooterManager.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InteractionMonitor.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ComponentFunctionBinder.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\DataLoader.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ExternalEventBus.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InternalEventBus.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\TableRegistry.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitData.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataGeneral.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataStretch.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitColumns.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\Layout.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\defaults\\langs.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\Localize.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Comms\\Comms.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ModuleBinder.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Alert.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\Tabulator.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\TabulatorFull.js","D:\\move-forward\\react-ukol\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\PseudoRow.js"],"sourcesContent":["export default class CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// DataLoad /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\treloadData(data, silent){\r\n\t\treturn this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t///////////// Localization ///////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlangText(){\r\n\t\treturn this.table.modules.localize.getText(...arguments);\r\n\t}\r\n\r\n\tlangBind(){\r\n\t\treturn this.table.modules.localize.bind(...arguments);\r\n\t}\r\n\r\n\tlangLocale(){\r\n\t\treturn this.table.modules.localize.getLocale(...arguments);\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t////////// Inter Table Comms /////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tcommsConnections(){\r\n\t\treturn this.table.modules.comms.getConnections(...arguments);\r\n\t}\r\n\r\n\tcommsSend(){\r\n\t\treturn this.table.modules.comms.send(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Layout  /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlayoutMode(){\r\n\t\treturn this.table.modules.layout.getMode();\r\n\t}\r\n\r\n\tlayoutRefresh(){\r\n\t\treturn this.table.modules.layout.layout();\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// Event Bus ////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tsubscribe(){\r\n\t\treturn this.table.eventBus.subscribe(...arguments);\r\n\t}\r\n\r\n\tunsubscribe(){\r\n\t\treturn this.table.eventBus.unsubscribe(...arguments);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.table.eventBus.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChange(){\r\n\t\treturn this.table.eventBus.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\tdispatch(){\r\n\t\treturn this.table.eventBus.dispatch(...arguments);\r\n\t}\r\n\r\n\tchain(){\r\n\t\treturn this.table.eventBus.chain(...arguments);\r\n\t}\r\n\r\n\tconfirm(){\r\n\t\treturn this.table.eventBus.confirm(...arguments);\r\n\t}\r\n\r\n\tdispatchExternal(){\r\n\t\treturn this.table.externalEvents.dispatch(...arguments);\r\n\t}\r\n\r\n\tsubscribedExternal(key){\r\n\t\treturn this.table.externalEvents.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChangeExternal(){\r\n\t\treturn this.table.externalEvents.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Options /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\toptions(key){\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\tsetOption(key, value){\r\n\t\tif(typeof value !== \"undefined\"){\r\n\t\t\tthis.table.options[key] = value;\r\n\t\t}\r\n\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Modules /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tmodule(key){\r\n\t\treturn this.table.module(key);\r\n\t}\r\n}","export default class Helpers{\r\n\r\n\tstatic elVisible(el){\r\n\t\treturn !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\r\n\t}\r\n\r\n\tstatic elOffset(el){\r\n\t\tvar box = el.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop: box.top + window.pageYOffset - document.documentElement.clientTop,\r\n\t\t\tleft: box.left + window.pageXOffset - document.documentElement.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\tstatic deepClone(obj, clone, list = []){\r\n\t\tvar objectProto = {}.__proto__,\r\n\t\tarrayProto = [].__proto__;\r\n\r\n\t\tif (!clone){\r\n\t\t\tclone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\r\n\t\t}\r\n\r\n\t\tfor(var i in obj) {\r\n\t\t\tlet subject = obj[i],\r\n\t\t\tmatch, copy;\r\n\r\n\t\t\tif(subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)){\r\n\t\t\t\tmatch = list.findIndex((item) => {\r\n\t\t\t\t\treturn item.subject === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(match > -1){\r\n\t\t\t\t\tclone[i] = list[match].copy;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcopy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\r\n\r\n\t\t\t\t\tlist.unshift({subject, copy});\r\n\r\n\t\t\t\t\tclone[i] = this.deepClone(subject, copy, list);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\n\r\nexport default class Popup extends CoreFeature{\r\n    constructor(table, element, parent){\r\n        super(table);\r\n        \r\n        this.element = element;\r\n        this.container = this._lookupContainer();\r\n        \r\n        this.parent = parent;\r\n        \r\n        this.reversedX = false;\r\n        this.childPopup = null;\r\n        this.blurable = false;\r\n        this.blurCallback = null;\r\n        this.renderedCallback = null;\r\n        \r\n        this.visible = false;\r\n        \r\n        this.element.classList.add(\"tabulator-popup-container\");\r\n        \r\n        this.blurEvent = this.hide.bind(this, false);\r\n        this.escEvent = this._escapeCheck.bind(this);\r\n    }\r\n    \r\n    _lookupContainer(){\r\n        var container = this.table.options.popupContainer;\r\n        \r\n        if(typeof container === \"string\"){\r\n            container = document.querySelector(container);\r\n            \r\n            if(!container){\r\n                console.warn(\"Menu Error - no container element found matching selector:\",  this.table.options.popupContainer , \"(defaulting to document body)\");\r\n            }\r\n        }else if (container === true){\r\n            container = this.table.element;\r\n        }\r\n        \r\n        if(container && !this._checkContainerIsParent(container)){\r\n            container = false;\r\n            console.warn(\"Menu Error - container element does not contain this table:\",  this.table.options.popupContainer , \"(defaulting to document body)\");\r\n        }\r\n        \r\n        if(!container){\r\n            container = document.body;\r\n        }\r\n        \r\n        return container;\r\n    }\r\n    \r\n    _checkContainerIsParent(container, element = this.table.element){\r\n        if(container === element){\r\n            return true;\r\n        }else{\r\n            return element.parentNode ? this._checkContainerIsParent(container, element.parentNode) : false;\r\n        }\r\n    }\r\n    \r\n    renderCallback(callback){\r\n        this.renderedCallback = callback;\r\n    }\r\n    \r\n    containerEventCoords(e){\r\n        var touch = !(e instanceof MouseEvent);\r\n        \r\n        var x = touch ? e.touches[0].pageX : e.pageX;\r\n        var y = touch ? e.touches[0].pageY : e.pageY;\r\n        \r\n        if(this.container !== document.body){\r\n            let parentOffset = Helpers.elOffset(this.container);\r\n            \r\n            x -= parentOffset.left;\r\n            y -= parentOffset.top;\r\n        }\r\n        \r\n        return {x, y};\r\n    }\r\n    \r\n    elementPositionCoords(element, position = \"right\"){\r\n        var offset = Helpers.elOffset(element),\r\n        containerOffset, x, y;\r\n        \r\n        if(this.container !== document.body){\r\n            containerOffset = Helpers.elOffset(this.container);\r\n            \r\n            offset.left -= containerOffset.left;\r\n            offset.top -= containerOffset.top;\r\n        }\r\n        \r\n        switch(position){\r\n            case \"right\":\r\n            x = offset.left + element.offsetWidth;\r\n            y = offset.top - 1;\r\n            break;\r\n            \r\n            case \"bottom\":\r\n            x = offset.left;\r\n            y = offset.top + element.offsetHeight;\r\n            break;\r\n        }\r\n        \r\n        return {x, y, offset};\r\n    }\r\n    \r\n    show(origin, position){\r\n        var x, y, parentEl, parentOffset, containerOffset, coords;\r\n        \r\n        if(origin instanceof HTMLElement){\r\n            parentEl = origin;\r\n            coords = this.elementPositionCoords(origin, position);\r\n            \r\n            parentOffset = coords.offset;\r\n            x = coords.x;\r\n            y = coords.y;\r\n            \r\n        }else if(typeof origin === \"number\"){\r\n            parentOffset = {top:0, left:0};\r\n            x = origin;\r\n            y = position;\r\n        }else{\r\n            coords = this.containerEventCoords(origin);\r\n            \r\n            x = coords.x;\r\n            y = coords.y;\r\n            \r\n            this.reversedX = false;\r\n        }\r\n        \r\n        this.element.style.top = y + \"px\";\r\n        this.element.style.left = x + \"px\";\r\n        \r\n        this.container.appendChild(this.element);\r\n        \r\n        if(typeof this.renderedCallback === \"function\"){\r\n            this.renderedCallback();\r\n        }\r\n        \r\n        this._fitToScreen(x, y, parentEl, parentOffset, position);\r\n        \r\n        this.visible = true;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    _fitToScreen(x, y, parentEl, parentOffset, position){\r\n        var scrollTop = this.container === document.body ? document.documentElement.scrollTop : this.container.scrollTop;\r\n\r\n        //move menu to start on right edge if it is too close to the edge of the screen\r\n        if((x + this.element.offsetWidth) >= this.container.offsetWidth || this.reversedX){\r\n            this.element.style.left = \"\";\r\n            \r\n            if(parentEl){\r\n                this.element.style.right = (this.container.offsetWidth - parentOffset.left) + \"px\";\r\n            }else{\r\n                this.element.style.right = (this.container.offsetWidth - x) + \"px\";\r\n            }\r\n            \r\n            this.reversedX = true;\r\n        }\r\n\r\n        //move menu to start on bottom edge if it is too close to the edge of the screen\r\n        if((y + this.element.offsetHeight) > Math.max(this.container.offsetHeight, scrollTop ? this.container.scrollHeight : 0)) {\r\n            if(parentEl){\r\n                switch(position){\r\n                    case \"bottom\":\r\n                    this.element.style.top = (parseInt(this.element.style.top) - this.element.offsetHeight - parentEl.offsetHeight - 1) + \"px\";\r\n                    break;\r\n\r\n                    default:\r\n                    this.element.style.top = (parseInt(this.element.style.top) - this.element.offsetHeight + parentEl.offsetHeight + 1) + \"px\";\r\n                }\r\n                \r\n            }else{\r\n                this.element.style.top = (parseInt(this.element.style.top) - this.element.offsetHeight) + \"px\";\r\n            }\r\n        }\r\n    }\r\n    \r\n    isVisible(){\r\n        return this.visible;\r\n    }\r\n    \r\n    hideOnBlur(callback){\r\n        this.blurable = true;\r\n        \r\n        if(this.visible){\r\n            setTimeout(() => {\r\n                this.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\r\n                this.subscribe(\"cell-editing\", this.blurEvent);\r\n                document.body.addEventListener(\"click\", this.blurEvent);\r\n                document.body.addEventListener(\"contextmenu\", this.blurEvent);\r\n                window.addEventListener(\"resize\", this.blurEvent);\r\n                document.body.addEventListener(\"keydown\", this.escEvent);\r\n            }, 100);\r\n            \r\n            this.blurCallback = callback;\r\n        }\r\n        \r\n        return this;\r\n    }\r\n    \r\n    _escapeCheck(e){\r\n        if(e.keyCode == 27){\r\n            this.hide();\r\n        }\r\n    }\r\n    \r\n    hide(silent = false){\r\n        if(this.visible){\r\n            if(this.blurable){\r\n                document.body.removeEventListener(\"keydown\", this.escEvent);\r\n                document.body.removeEventListener(\"click\", this.blurEvent);\r\n                document.body.removeEventListener(\"contextmenu\", this.blurEvent);\r\n                window.removeEventListener(\"resize\", this.blurEvent);\r\n                this.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\r\n                this.unsubscribe(\"cell-editing\", this.blurEvent);\r\n            }\r\n            \r\n            if(this.childPopup){\r\n                this.childPopup.hide();\r\n            }\r\n            \r\n            if(this.parent){\r\n                this.parent.childPopup = null;\r\n            }\r\n            \r\n            if(this.element.parentNode){\r\n                this.element.parentNode.removeChild(this.element);\r\n            }\r\n\r\n             this.visible = false;\r\n\r\n            if(this.blurCallback && !silent){\r\n                this.blurCallback();\r\n            }\r\n        }\r\n        \r\n        return this;\r\n    }\r\n    \r\n    child(element){\r\n        if(this.childPopup){\r\n            this.childPopup.hide();\r\n        }\r\n        \r\n        this.childPopup = new Popup(this.table, element, this);\r\n        \r\n        return this.childPopup;\r\n    }\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Popup from './tools/Popup.js';\r\n\r\nclass Module extends CoreFeature{\r\n\r\n\tconstructor(table, name){\r\n\t\tsuper(table);\r\n\r\n\t\tthis._handler = null;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// setup module when table is initialized, to be overriden in module\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Options Registration ///////\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableOption(key, value){\r\n\t\tthis.table.optionsList.register(key, value);\r\n\t}\r\n\r\n\tregisterColumnOption(key, value){\r\n\t\tthis.table.columnManager.optionsList.register(key, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/// Public Function Registration ///\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableFunction(name, func){\r\n\t\tif(typeof this.table[name] === \"undefined\"){\r\n\t\t\tthis.table[name] = (...args) => {\r\n\t\t\t\tthis.table.initGuard(name);\r\n\r\n\t\t\t\treturn func(...args);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Unable to bind table function, name already in use\", name)\r\n\t\t}\r\n\t}\r\n\r\n\tregisterComponentFunction(component, func, handler){\r\n\t\treturn this.table.componentFunctionBinder.bind(component, func, handler);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Data Pipeline //////////\r\n\t///////////////////////////////////\r\n\r\n\tregisterDataHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDataPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\tregisterDisplayHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDisplayPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\trefreshData(renderInPosition, handler){\r\n\t\tif(!handler){\r\n\t\t\thandler = this._handler;\r\n\t\t}\r\n\r\n\t\tif(handler){\r\n\t\t\tthis.table.rowManager.refreshActiveData(handler, false, renderInPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Footer Management ////////\r\n\t///////////////////////////////////\r\n\r\n\tfooterAppend(element){\r\n\t\treturn this.table.footerManager.append(element)\r\n\t}\r\n\r\n\tfooterPrepend(element){\r\n\t\treturn this.table.footerManager.prepend(element)\r\n\t}\r\n\r\n\tfooterRemove(element){\r\n\t\treturn this.table.footerManager.remove(element)\r\n\t} \r\n\r\n\t///////////////////////////////////\r\n\t//////// Popups Management ////////\r\n\t///////////////////////////////////\r\n\t\r\n\tpopup(menuEl, menuContainer){\r\n\t\treturn new Popup(this.table, menuEl, menuContainer);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Alert Management ////////\r\n\t///////////////////////////////////\r\n\r\n\talert(content, type){\r\n\t\treturn this.table.alertManager.alert(content, type);\r\n\t}\r\n\r\n\tclearAlert(){\r\n\t\treturn this.table.alertManager.clear();\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Module;","export default {}","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defautlAccessors from './defaults/accessors.js';\r\n\r\nclass Accessor extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"] //list of accessor types\r\n\r\n\t\tthis.registerColumnOption(\"accessor\");\r\n\t\tthis.registerColumnOption(\"accessorParams\");\r\n\t\tthis.registerColumnOption(\"accessorData\");\r\n\t\tthis.registerColumnOption(\"accessorDataParams\");\r\n\t\tthis.registerColumnOption(\"accessorDownload\");\r\n\t\tthis.registerColumnOption(\"accessorDownloadParams\");\r\n\t\tthis.registerColumnOption(\"accessorClipboard\");\r\n\t\tthis.registerColumnOption(\"accessorClipboardParams\");\r\n\t\tthis.registerColumnOption(\"accessorPrint\");\r\n\t\tthis.registerColumnOption(\"accessorPrintParams\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutputParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\r\n\t}\r\n\r\n\t//initialize column accessor\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\taccessor;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\taccessor = this.lookupAccessor(column.definition[key]);\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\taccessor:accessor,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.accessor = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupAccessor(value){\r\n\t\tvar accessor = false;\r\n\r\n\t\t//set column accessor\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Accessor.accessors[value]){\r\n\t\t\t\taccessor = Accessor.accessors[value]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\taccessor = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn accessor;\r\n\t}\r\n\r\n\t//apply accessor to row\r\n\ttransformRow(row, type){\r\n\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\trowComponent = row.getComponent();\r\n\r\n\t\t//clone data object with deep copy to isolate internal data from returned result\r\n\t\tvar data = Helpers.deepClone(row.data || {});\r\n\r\n\t\tthis.table.columnManager.traverse(function(column){\r\n\t\t\tvar value, accessor, params, colCompnent;\r\n\r\n\t\t\tif(column.modules.accessor){\r\n\r\n\t\t\t\taccessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tvalue = column.getFieldValue(data);\r\n\r\n\t\t\t\t\tif(value != \"undefined\"){\r\n\t\t\t\t\t\tcolCompnent = column.getComponent();\r\n\t\t\t\t\t\tparams = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\r\n\t\t\t\t\t\tcolumn.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\n//load defaults\r\nAccessor.moduleName = \"accessor\";\r\nAccessor.accessors = defautlAccessors;\r\n\r\nexport default Accessor;","export default {\r\n\tmethod: \"GET\",\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nfunction serializeParams(params){\r\n\tvar output = generateParamsList(params),\r\n\tencoded = [];\r\n\r\n\toutput.forEach(function(item){\r\n\t\tencoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\r\n\t});\r\n\r\n\treturn encoded.join(\"&\");\r\n}\r\n\r\nexport default function(url, config, params){\r\n\tif(url){\r\n\t\tif(params && Object.keys(params).length){\r\n\t\t\tif(!config.method || config.method.toLowerCase() == \"get\"){\r\n\t\t\t\tconfig.method = \"get\";\r\n\r\n\t\t\t\turl += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn url;\r\n};","export default function(url, config, params){\r\n\tvar contentType;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t//set url\r\n\t\turl = this.urlGenerator.call(this.table, url, config, params);\r\n\r\n\t\t//set body content if not GET request\r\n\t\tif(config.method.toUpperCase() != \"GET\"){\r\n\t\t\tcontentType = typeof this.table.options.ajaxContentType === \"object\" ?  this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\r\n\t\t\tif(contentType){\r\n\r\n\t\t\t\tfor(var key in contentType.headers){\r\n\t\t\t\t\tif(!config.headers){\r\n\t\t\t\t\t\tconfig.headers = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof config.headers[key] === \"undefined\"){\r\n\t\t\t\t\t\tconfig.headers[key] = contentType.headers[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconfig.body = contentType.body.call(this, url, config, params);\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(url){\r\n\t\t\t//configure headers\r\n\t\t\tif(typeof config.headers === \"undefined\"){\r\n\t\t\t\tconfig.headers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers.Accept === \"undefined\"){\r\n\t\t\t\tconfig.headers.Accept = \"application/json\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers[\"X-Requested-With\"] === \"undefined\"){\r\n\t\t\t\tconfig.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.mode === \"undefined\"){\r\n\t\t\t\tconfig.mode = \"cors\";\r\n\t\t\t}\r\n\r\n\t\t\tif(config.mode == \"cors\"){\r\n\t\t\t\tif(typeof config.headers[\"Origin\"] === \"undefined\"){\r\n\t\t\t\t\tconfig.headers[\"Origin\"] = window.location.origin;\r\n\t\t\t\t}\r\n        \r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'same-origin';\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'include';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//send request\r\n\t\t\tfetch(url, config)\r\n\t\t\t.then((response)=>{\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\tresponse.json()\r\n\t\t\t\t\t.then((data)=>{\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t}).catch((error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\tconsole.warn(\"Ajax Load Error - Invalid JSON returned\", error);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\r\n\t\t\t\t\treject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \", error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Ajax Load Error - No URL Set\");\r\n\t\t\tresolve([]);\r\n\t\t}\r\n\t});\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nexport default {\r\n\t\"json\":{\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\t\t\treturn JSON.stringify(params);\r\n\t\t},\r\n\t},\r\n\t\"form\":{\r\n\t\theaders:{\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\r\n\t\t\tvar output = generateParamsList(params),\r\n\t\t\tform = new FormData();\r\n\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tform.append(item.key, item.value);\r\n\t\t\t});\r\n\r\n\t\t\treturn form;\r\n\t\t},\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultConfig from './defaults/config.js';\r\nimport defaultURLGenerator from './defaults/urlGenerator.js';\r\nimport defaultLoaderPromise from './defaults/loaderPromise.js';\r\nimport defaultContentTypeFormatters from './defaults/contentTypeFormatters.js';\r\n\r\nclass Ajax extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.config = {}; //hold config object for ajax request\r\n\t\tthis.url = \"\"; //request URL\r\n\t\tthis.urlGenerator = false;\r\n\t\tthis.params = false; //request parameters\r\n\t\t\r\n\t\tthis.loaderPromise = false;\r\n\t\t\r\n\t\tthis.registerTableOption(\"ajaxURL\", false); //url for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxURLGenerator\", false);\r\n\t\tthis.registerTableOption(\"ajaxParams\", {});  //params for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxRequestFunc\", false); //promise function\r\n\t\t\r\n\t\tthis.registerTableOption(\"ajaxRequesting\", function(){});\r\n\t\tthis.registerTableOption(\"ajaxResponse\", false);\r\n\t\t\r\n\t\tthis.contentTypeFormatters = Ajax.contentTypeFormatters;\r\n\t}\r\n\t\r\n\t//initialize setup options\r\n\tinitialize(){\r\n\t\tthis.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\r\n\t\tthis.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\r\n\t\t\r\n\t\tif(this.table.options.ajaxURL){\r\n\t\t\tthis.setUrl(this.table.options.ajaxURL);\r\n\t\t}\r\n\r\n\r\n\t\tthis.setDefaultConfig(this.table.options.ajaxConfig);\r\n\t\t\r\n\t\tthis.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\r\n\t\t\r\n\t\tthis.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\r\n\t\tthis.subscribe(\"data-params\", this.requestParams.bind(this));\r\n\t\tthis.subscribe(\"data-load\", this.requestData.bind(this));\r\n\t}\r\n\t\r\n\trequestParams(data, config, silent, params){\r\n\t\tvar ajaxParams = this.table.options.ajaxParams;\r\n\t\t\r\n\t\tif(ajaxParams){\r\n\t\t\tif(typeof ajaxParams === \"function\"){\r\n\t\t\t\tajaxParams = ajaxParams.call(this.table);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tparams = Object.assign(params, ajaxParams);\r\n\t\t}\t\t\r\n\t\t\r\n\t\treturn params;\r\n\t}\r\n\t\r\n\trequestDataCheck(data, params, config, silent){\r\n\t\treturn !!((!data && this.url) || typeof data === \"string\");\r\n\t}\r\n\t\r\n\trequestData(url, params, config, silent, previousData){\r\n\t\tvar ajaxConfig;\r\n\t\t\r\n\t\tif(!previousData && this.requestDataCheck(url)){\r\n\t\t\tif(url){\r\n\t\t\t\tthis.setUrl(url);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tajaxConfig = this.generateConfig(config);\r\n\t\t\t\r\n\t\t\treturn this.sendRequest(this.url, params, ajaxConfig);\r\n\t\t}else{\r\n\t\t\treturn previousData;\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetDefaultConfig(config = {}){\r\n\t\tthis.config = Object.assign({}, Ajax.defaultConfig);\r\n\r\n\t\tif(typeof config == \"string\"){\r\n\t\t\tthis.config.method = config;\r\n\t\t}else{\r\n\t\t\tObject.assign(this.config, config);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//load config object\r\n\tgenerateConfig(config = {}){\r\n\t\tvar ajaxConfig = Object.assign({}, this.config)\r\n\t\t\r\n\t\tif(typeof config == \"string\"){\r\n\t\t\tajaxConfig.method = config;\r\n\t\t}else{\r\n\t\t\tObject.assign(ajaxConfig, config);\r\n\t\t}\r\n\t\t\r\n\t\treturn ajaxConfig;\r\n\t}\r\n\t\r\n\t//set request url\r\n\tsetUrl(url){\r\n\t\tthis.url = url;\r\n\t}\r\n\t\r\n\t//get request url\r\n\tgetUrl(){\r\n\t\treturn this.url;\r\n\t}\r\n\t\r\n\t//send ajax request\r\n\tsendRequest(url, params, config){\r\n\t\tif(this.table.options.ajaxRequesting.call(this.table, url, params) !== false){\r\n\t\t\treturn this.loaderPromise(url, config, params)\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tif(this.table.options.ajaxResponse){\r\n\t\t\t\t\tdata = this.table.options.ajaxResponse.call(this.table, url, params, data);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAjax.moduleName = \"ajax\";\r\n\r\n//load defaults\r\nAjax.defaultConfig = defaultConfig;\r\nAjax.defaultURLGenerator = defaultURLGenerator;\r\nAjax.defaultLoaderPromise = defaultLoaderPromise;\r\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\r\n\r\nexport default Ajax;","export default {\r\n\treplace:function(rows){\r\n\t\treturn this.table.setData(rows);\r\n\t},\r\n\tupdate:function(rows){\r\n\t\treturn this.table.updateOrAddData(rows);\r\n\t},\r\n\tinsert:function(rows){\r\n\t\treturn this.table.addData(rows);\r\n\t},\r\n};","export default {\r\n\ttable:function(clipboard){\r\n\t\tvar data = [],\r\n\t\tsuccess = false,\r\n\t\theaderFindSuccess = true,\r\n\t\tcolumns = this.table.columnManager.columns,\r\n\t\tcolumnMap = [],\r\n\t\trows = [];\r\n\r\n\t\t//get data from clipboard into array of columns and rows.\r\n\t\tclipboard = clipboard.split(\"\\n\");\r\n\r\n\t\tclipboard.forEach(function(row){\r\n\t\t\tdata.push(row.split(\"\\t\"));\r\n\t\t});\r\n\r\n\t\tif(data.length && !(data.length === 1 && data[0].length < 2)){\r\n\t\t\tsuccess = true;\r\n\r\n\t\t\t//check if headers are present by title\r\n\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\treturn value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//check if column headers are present by field\r\n\t\t\tif(!headerFindSuccess){\r\n\t\t\t\theaderFindSuccess = true;\r\n\t\t\t\tcolumnMap = [];\r\n\r\n\t\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\t\treturn value && column.field && value.trim() && column.field.trim() === value.trim();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!headerFindSuccess){\r\n\t\t\t\t\tcolumnMap = this.table.columnManager.columnsByIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//remove header row if found\r\n\t\t\tif(headerFindSuccess){\r\n\t\t\t\tdata.shift();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach(function(item){\r\n\t\t\t\tvar row = {};\r\n\r\n\t\t\t\titem.forEach(function(value, i){\r\n\t\t\t\t\tif(columnMap[i]){\r\n\t\t\t\t\t\trow[columnMap[i].field] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\trows.push(row);\r\n\t\t\t});\r\n\r\n\t\t\treturn rows;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultPasteActions from './defaults/pasteActions.js';\r\nimport defaultPasteParsers from './defaults/pasteParsers.js';\r\n\r\nclass Clipboard extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = true;\r\n\t\tthis.pasteParser = function(){};\r\n\t\tthis.pasteAction = function(){};\r\n\t\tthis.customSelection = false;\r\n\t\tthis.rowRange = false;\r\n\t\tthis.blocked = true; //block copy actions not originating from this command\r\n\r\n\t\tthis.registerTableOption(\"clipboard\", false); //enable clipboard\r\n\t\tthis.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\r\n\t\tthis.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\r\n\t\tthis.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\r\n\t\tthis.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\r\n\t\tthis.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\r\n\t\tthis.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\r\n\r\n\t\tthis.registerColumnOption(\"clipboard\");\r\n\t\tthis.registerColumnOption(\"titleClipboard\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.mode = this.table.options.clipboard;\r\n\r\n\t\tthis.rowRange = this.table.options.clipboardCopyRowRange;\r\n\r\n\t\tif(this.mode === true || this.mode === \"copy\"){\r\n\t\t\tthis.table.element.addEventListener(\"copy\", (e) => {\r\n\t\t\t\tvar plain, html, list;\r\n\r\n\t\t\t\tif(!this.blocked){\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tif(this.customSelection){\r\n\t\t\t\t\t\tplain = this.customSelection;\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tvar list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\r\n\r\n\t\t\t\t\t\thtml = this.table.modules.export.genereateHTMLTable(list);\r\n\t\t\t\t\t\tplain = html ? this.generatePlainContent(list) : \"\";\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t\thtml = this.table.options.clipboardCopyFormatter(\"html\", html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (window.clipboardData && window.clipboardData.setData) {\r\n\t\t\t\t\t\twindow.clipboardData.setData('Text', plain);\r\n\t\t\t\t\t} else if (e.clipboardData && e.clipboardData.setData) {\r\n\t\t\t\t\t\te.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\r\n\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchExternal(\"clipboardCopied\", plain, html);\r\n\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.mode === true || this.mode === \"paste\"){\r\n\t\t\tthis.table.element.addEventListener(\"paste\", (e) => {\r\n\t\t\t\tthis.paste(e);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.setPasteParser(this.table.options.clipboardPasteParser);\r\n\t\tthis.setPasteAction(this.table.options.clipboardPasteAction);\r\n\r\n\t\tthis.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.blocked = true;\r\n\t\tthis.customSelection = false;\r\n\t}\r\n\r\n\tgeneratePlainContent (list) {\r\n\t\tvar output = [];\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tvar value = \"\";\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tif(row.type === \"group\"){\r\n\t\t\t\t\t\tcol.value = col.component.getKey();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(col.value === null){\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\t\tvalue = JSON.stringify(col.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tvalue = col.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput.push(rowData.join(\"\\t\"));\r\n\t\t});\r\n\r\n\t\treturn output.join(\"\\n\");\r\n\t}\r\n\r\n\tcopy (range, internal) {\r\n\t\tvar range, sel, textRange;\r\n\t\tthis.blocked = false;\r\n\t\tthis.customSelection = false;\r\n\r\n\t\tif (this.mode === true || this.mode === \"copy\") {\r\n\r\n\t\t\tthis.rowRange = range || this.table.options.clipboardCopyRowRange;\r\n\r\n\t\t\tif (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\r\n\t\t\t\trange = document.createRange();\r\n\t\t\t\trange.selectNodeContents(this.table.element);\r\n\t\t\t\tsel = window.getSelection();\r\n\r\n\t\t\t\tif (sel.toString() && internal) {\r\n\t\t\t\t\tthis.customSelection = sel.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t} else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\r\n\t\t\t\ttextRange = document.body.createTextRange();\r\n\t\t\t\ttextRange.moveToElementText(this.table.element);\r\n\t\t\t\ttextRange.select();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.execCommand('copy');\r\n\r\n\t\t\tif (sel) {\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//PASTE EVENT HANDLING\r\n\tsetPasteAction(action){\r\n\r\n\t\tswitch(typeof action){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteAction = Clipboard.pasteActions[action];\r\n\r\n\t\t\tif(!this.pasteAction){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste action found:\", action);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteAction = action;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tsetPasteParser(parser){\r\n\t\tswitch(typeof parser){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteParser = Clipboard.pasteParsers[parser];\r\n\r\n\t\t\tif(!this.pasteParser){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste parser found:\", parser);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteParser = parser;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpaste(e){\r\n\t\tvar data, rowData, rows;\r\n\r\n\t\tif(this.checkPaseOrigin(e)){\r\n\r\n\t\t\tdata = this.getPasteData(e);\r\n\r\n\t\t\trowData = this.pasteParser.call(this, data);\r\n\r\n\t\t\tif(rowData){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\t\t\trowData = this.mutateData(rowData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trows = this.pasteAction.call(this, rowData);\r\n\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\r\n\t\t\t}else{\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasteError\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmutateData(data){\r\n\t\tvar output = [];\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\toutput.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\toutput = data;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tcheckPaseOrigin(e){\r\n\t\tvar valid = true;\r\n\r\n\t\tif(e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell){\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetPasteData(e){\r\n\t\tvar data;\r\n\r\n\t\tif (window.clipboardData && window.clipboardData.getData) {\r\n\t\t\tdata = window.clipboardData.getData('Text');\r\n\t\t} else if (e.clipboardData && e.clipboardData.getData) {\r\n\t\t\tdata = e.clipboardData.getData('text/plain');\r\n\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\r\n\t\t\tdata = e.originalEvent.clipboardData.getData('text/plain');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nClipboard.moduleName = \"clipboard\";\r\n\r\n//load defaults\r\nClipboard.pasteActions = defaultPasteActions;\r\nClipboard.pasteParsers = defaultPasteParsers;\r\n\r\nexport default Clipboard;","class CalcComponent{\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n}\r\n\r\nexport default CalcComponent;","//public cell object\r\nexport default class CellComponent {\r\n\r\n\tconstructor (cell){\r\n\t\tthis._cell = cell;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this._cell.getValue();\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this._cell.getOldValue();\r\n\t}\r\n\r\n\tgetInitialValue(){\r\n\t\treturn this._cell.initialValue;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._cell.getElement();\r\n\t}\r\n\r\n\tgetRow(){\r\n\t\treturn this._cell.row.getComponent();\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn this._cell.row.getData();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._cell.column.getField();\r\n\t}\r\n\r\n\tgetColumn(){\r\n\t\treturn this._cell.column.getComponent();\r\n\t}\r\n\r\n\tsetValue(value, mutate){\r\n\t\tif(typeof mutate == \"undefined\"){\r\n\t\t\tmutate = true;\r\n\t\t}\r\n\r\n\t\tthis._cell.setValue(value, mutate);\r\n\t}\r\n\r\n\trestoreOldValue(){\r\n\t\tthis._cell.setValueActual(this._cell.getOldValue());\r\n\t}\r\n\r\n\trestoreInitialValue(){\r\n\t\tthis._cell.setValueActual(this._cell.initialValue);\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\tthis._cell.checkHeight();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._cell.table;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._cell;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport CellComponent from './CellComponent.js';\r\n\r\nexport default class Cell extends CoreFeature{\r\n\tconstructor(column, row){\r\n\t\tsuper(column.table);\r\n\r\n\t\tthis.table = column.table;\r\n\t\tthis.column = column;\r\n\t\tthis.row = row;\r\n\t\tthis.element = null;\r\n\t\tthis.value = null;\r\n\t\tthis.initialValue;\r\n\t\tthis.oldValue = null;\r\n\t\tthis.modules = {};\r\n\r\n\t\tthis.height = null;\r\n\t\tthis.width = null;\r\n\t\tthis.minWidth = null;\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.loaded = false; //track if the cell has been added to the DOM yet\r\n\r\n\t\tthis.build();\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\t//generate element\r\n\tbuild(){\r\n\t\tthis.generateElement();\r\n\r\n\t\tthis.setWidth();\r\n\r\n\t\tthis._configureCell();\r\n\r\n\t\tthis.setValueActual(this.column.getFieldValue(this.row.data));\r\n\r\n\t\tthis.initialValue = this.value;\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.element = document.createElement('div');\r\n\t\tthis.element.className = \"tabulator-cell\";\r\n\t\tthis.element.setAttribute(\"role\", \"gridcell\");\r\n\t\tthis.element = this.element;\r\n\t}\r\n\r\n\t_configureCell(){\r\n\t\tvar element = this.element,\r\n\t\tfield = this.column.getField(),\r\n\t\tvertAligns = {\r\n\t\t\ttop:\"flex-start\",\r\n\t\t\tbottom:\"flex-end\",\r\n\t\t\tmiddle:\"center\",\r\n\t\t},\r\n\t\thozAligns = {\r\n\t\t\tleft:\"flex-start\",\r\n\t\t\tright:\"flex-end\",\r\n\t\t\tcenter:\"center\",\r\n\t\t};\r\n\r\n\t\t//set text alignment\r\n\t\telement.style.textAlign = this.column.hozAlign;\r\n\r\n\t\tif(this.column.vertAlign){\r\n\t\t\telement.style.display = \"inline-flex\";\r\n\r\n\t\t\telement.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\r\n\r\n\t\t\tif(this.column.hozAlign){\r\n\t\t\t\telement.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\t\t\telement.setAttribute(\"tabulator-field\", field);\r\n\t\t}\r\n\r\n\t\t//add class to cell if needed\r\n\t\tif(this.column.definition.cssClass){\r\n\t\t\tvar classNames = this.column.definition.cssClass.split(\" \")\r\n\t\t\tclassNames.forEach((className) => {\r\n\t\t\t\telement.classList.add(className)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"cell-init\", this);\r\n\r\n\t\t//hide cell if not visible\r\n\t\tif(!this.column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//generate cell contents\r\n\t_generateContents(){\r\n\t\tvar val;\r\n\r\n\t\tval = this.chain(\"cell-format\", this, null, () => {\r\n\t\t\treturn this.element.innerHTML = this.value;\r\n\t\t});\r\n\r\n\t\tswitch(typeof val){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(val instanceof Node){\r\n\r\n\t\t\t\t//clear previous cell contents\r\n\t\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\t\tthis.element.appendChild(val);\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.innerHTML = \"\";\r\n\r\n\t\t\t\tif(val != null){\r\n\t\t\t\t\tconsole.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tthis.element.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tthis.element.innerHTML = val;\r\n\t\t}\r\n\t}\r\n\r\n\tcellRendered(){\r\n\t\tthis.dispatch(\"cell-rendered\", this);\r\n\t}\r\n\r\n\t//////////////////// Getters ////////////////////\r\n\tgetElement(containerOnly){\r\n\t\tif(!this.loaded){\r\n\t\t\tthis.loaded = true;\r\n\t\t\tif(!containerOnly){\r\n\t\t\t\tthis.layoutElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this.oldValue;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tsetValue(value, mutate, force){\r\n\t\tvar changed = this.setValueProcessData(value, mutate, force);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-updated\", this);\r\n\r\n\t\t\tthis.cellRendered();\r\n\r\n\t\t\tif(this.column.definition.cellEdited){\r\n\t\t\t\tthis.column.definition.cellEdited.call(this.table, this.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"cellEdited\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetValueProcessData(value, mutate, force){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.value !== value || force){\r\n\r\n\t\t\tchanged = true;\r\n\r\n\t\t\tif(mutate){\r\n\t\t\t\tvalue = this.chain(\"cell-value-changing\", [this, value], null, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setValueActual(value);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-changed\", this);\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\tsetValueActual(value){\r\n\t\tthis.oldValue = this.value;\r\n\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.dispatch(\"cell-value-save-before\", this);\r\n\r\n\t\tthis.column.setFieldValue(this.row.data, value);\r\n\r\n\t\tthis.dispatch(\"cell-value-save-after\", this);\r\n\r\n\t\tif(this.loaded){\r\n\t\t\tthis.layoutElement();\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutElement(){\r\n\t\tthis._generateContents();\r\n\r\n\t\tthis.dispatch(\"cell-layout\", this);\r\n\t}\r\n\r\n\tsetWidth(){\r\n\t\tthis.width = this.column.width;\r\n\t\tthis.element.style.width = this.column.widthStyled;\r\n\t}\r\n\r\n\tclearWidth(){\r\n\t\tthis.width = \"\";\r\n\t\tthis.element.style.width = \"\";\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this.width || this.element.offsetWidth;\r\n\t}\r\n\r\n\tsetMinWidth(){\r\n\t\tthis.minWidth = this.column.minWidth;\r\n\t\tthis.element.style.minWidth = this.column.minWidthStyled;\r\n\t}\r\n\r\n\tsetMaxWidth(){\r\n\t\tthis.maxWidth = this.column.maxWidth;\r\n\t\tthis.element.style.maxWidth = this.column.maxWidthStyled;\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\t// var height = this.element.css(\"height\");\r\n\t\tthis.row.reinitializeHeight();\r\n\t}\r\n\r\n\tclearHeight(){\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.height = null;\r\n\r\n\t\tthis.dispatch(\"cell-height\", this, \"\");\r\n\t}\r\n\r\n\tsetHeight(){\r\n\t\tthis.height = this.row.height;\r\n\t\tthis.element.style.height = this.row.heightStyled;\r\n\r\n\t\tthis.dispatch(\"cell-height\", this, this.row.heightStyled);\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.height || this.element.offsetHeight;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.element.style.display = \"none\";\r\n\t}\r\n\r\n\tdelete(){\r\n\t\tthis.dispatch(\"cell-delete\", this);\r\n\r\n\t\tif(!this.table.rowManager.redrawBlock && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.column.deleteCell(this);\r\n\t\tthis.row.deleteCell(this);\r\n\t\tthis.calcs = {};\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this.row.getCellIndex(this);\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new CellComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","import Column from './Column.js';\r\n\r\n//public column object\r\nexport default class ColumnComponent {\r\n\tconstructor (column){\r\n\t\tthis._column = column;\r\n\t\tthis.type = \"ColumnComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._column.table.componentFunctionBinder.handle(\"column\", target._column, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._column.getElement();\r\n\t}\r\n\r\n\tgetDefinition(){\r\n\t\treturn this._column.getDefinition();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._column.getField();\r\n\t}\r\n\r\n\tgetTitleDownload() {\r\n\t\treturn this._column.getTitleDownload();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._column.cells.forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._column.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.show();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.hide();\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tif(this._column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._column.delete();\r\n\t}\r\n\r\n\tgetSubColumns(){\r\n\t\tvar output = [];\r\n\r\n\t\tif(this._column.columns.length){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\toutput.push(column.getComponent());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetParentColumn(){\r\n\t\treturn this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._column.table.columnManager.scrollToColumn(this._column);\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._column.table;\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tvar toColumn = this._column.table.columnManager.findColumn(to);\r\n\r\n\t\tif(toColumn){\r\n\t\t\tthis._column.table.columnManager.moveColumn(this._column, toColumn, after)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t}\r\n\t}\r\n\r\n\tgetNextColumn(){\r\n\t\tvar nextCol = this._column.nextColumn();\r\n\r\n\t\treturn nextCol ? nextCol.getComponent() : false;\r\n\t}\r\n\r\n\tgetPrevColumn(){\r\n\t\tvar prevCol = this._column.prevColumn();\r\n\r\n\t\treturn prevCol ? prevCol.getComponent() : false;\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\treturn this._column.updateDefinition(updates);\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this._column.getWidth();\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tvar result;\r\n\r\n\t\tif(width === true){\r\n\t\t\tresult =  this._column.reinitializeWidth(true);\r\n\t\t}else{\r\n\t\t\tresult =  this._column.setWidth(width);\r\n\t\t}\r\n\r\n\t\tthis._column.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\treturn result;\r\n\t}\r\n}","export default {\r\n\t\"title\": undefined,\r\n\t\"field\": undefined,\r\n\t\"columns\": undefined,\r\n\t\"visible\": undefined,\r\n\t\"hozAlign\": undefined,\r\n\t\"vertAlign\": undefined,\r\n\t\"width\": undefined,\r\n\t\"minWidth\": 40,\r\n\t\"maxWidth\": undefined,\r\n\t\"maxInitialWidth\": undefined,\r\n\t\"cssClass\": undefined,\r\n\t\"variableHeight\": undefined,\r\n\t\"headerVertical\": undefined,\r\n\t\"headerHozAlign\": undefined,\r\n\t\"editableTitle\": undefined,\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport ColumnComponent from './ColumnComponent.js';\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport Cell from '../cell/Cell.js';\r\n\r\nclass Column extends CoreFeature{\r\n\r\n\tconstructor(def, parent){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.definition = def; //column definition\r\n\t\tthis.parent = parent; //hold parent object\r\n\t\tthis.type = \"column\"; //type of element\r\n\t\tthis.columns = []; //child columns\r\n\t\tthis.cells = []; //cells bound to this column\r\n\t\tthis.element = this.createElement(); //column header element\r\n\t\tthis.contentElement = false;\r\n\t\tthis.titleHolderElement = false;\r\n\t\tthis.titleElement = false;\r\n\t\tthis.groupElement = this.createGroupElement(); //column group holder element\r\n\t\tthis.isGroup = false;\r\n\t\tthis.hozAlign = \"\"; //horizontal text alignment\r\n\t\tthis.vertAlign = \"\"; //vert text alignment\r\n\r\n\t\t//multi dimensional filed handling\r\n\t\tthis.field =\"\";\r\n\t\tthis.fieldStructure = \"\";\r\n\t\tthis.getFieldValue = \"\";\r\n\t\tthis.setFieldValue = \"\";\r\n\r\n\t\tthis.titleDownload = null;\r\n\t\tthis.titleFormatterRendered = false;\r\n\r\n\t\tthis.mapDefinitions();\r\n\r\n\t\tthis.setField(this.definition.field);\r\n\r\n\t\tthis.modules = {}; //hold module variables;\r\n\r\n\t\tthis.width = null; //column width\r\n\t\tthis.widthStyled = \"\"; //column width prestyled to improve render efficiency\r\n\t\tthis.maxWidth = null; //column maximum width\r\n\t\tthis.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\r\n\t\tthis.maxInitialWidth = null;\r\n\t\tthis.minWidth = null; //column minimum width\r\n\t\tthis.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\r\n\t\tthis.widthFixed = false; //user has specified a width for this column\r\n\r\n\t\tthis.visible = true; //default visible state\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\t//initialize column\r\n\t\tif(this.definition.columns){\r\n\r\n\t\t\tthis.isGroup = true;\r\n\r\n\t\t\tthis.definition.columns.forEach((def, i) => {\r\n\t\t\t\tvar newCol = new Column(def, this);\r\n\t\t\t\tthis.attachColumn(newCol);\r\n\t\t\t});\r\n\r\n\t\t\tthis.checkColumnVisibility();\r\n\t\t}else{\r\n\t\t\tparent.registerColumnField(this);\r\n\t\t}\r\n\r\n\t\tthis._initialize();\r\n\r\n\t\tthis.bindModuleColumns();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.setAttribute(\"role\", \"columnheader\");\r\n\t\tel.setAttribute(\"aria-sort\", \"none\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateGroupElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col-group-cols\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tmapDefinitions(){\r\n\t\tvar defaults = this.table.options.columnDefaults;\r\n\r\n\t\t//map columnDefaults onto column definitions\r\n\t\tif(defaults){\r\n\t\t\tfor(let key in defaults){\r\n\t\t\t\tif(typeof this.definition[key] === \"undefined\"){\r\n\t\t\t\t\tthis.definition[key] = defaults[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.definition = this.table.columnManager.optionsList.generate(Column.defaultOptionList, this.definition)\r\n\t}\r\n\r\n\tcheckDefinition(){\r\n\t\tObject.keys(this.definition).forEach((key) => {\r\n\t\t\tif(Column.defaultOptionList.indexOf(key) === -1){\r\n\t\t\t\tconsole.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetField(field){\r\n\t\tthis.field = field;\r\n\t\tthis.fieldStructure = field ? (this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field]) : [];\r\n\t\tthis.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\r\n\t\tthis.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnPosition(column){\r\n\t\tthis.parent.registerColumnPosition(column);\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnField(column){\r\n\t\tthis.parent.registerColumnField(column);\r\n\t}\r\n\r\n\t//trigger position registration\r\n\treRegisterPosition(){\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolumn.reRegisterPosition();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.registerColumnPosition(this);\r\n\t\t}\r\n\t}\r\n\r\n\t_mapDepricatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\t//build header element\r\n\t_initialize(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(def.headerVertical){\r\n\t\t\tthis.element.classList.add(\"tabulator-col-vertical\");\r\n\r\n\t\t\tif(def.headerVertical === \"flip\"){\r\n\t\t\t\tthis.element.classList.add(\"tabulator-col-vertical-flip\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.contentElement = this._bindEvents();\r\n\r\n\t\tthis.contentElement = this._buildColumnHeaderContent();\r\n\r\n\t\tthis.element.appendChild(this.contentElement);\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis._buildGroupHeader();\r\n\t\t}else{\r\n\t\t\tthis._buildColumnHeader();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-init\", this);\r\n\t}\r\n\r\n\t_bindEvents(){\r\n\t\tvar def = this.definition,\r\n\t\tdblTap,\ttapHold, tap;\r\n\r\n\t\t//setup header click event bindings\r\n\t\tif(typeof(def.headerClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"click\", (e) => {def.headerClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"dblclick\", (e) => {def.headerDblClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerContext) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"contextmenu\", (e) => {def.headerContext(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\t//setup header tap event bindings\r\n\t\tif(typeof(def.headerTap) == \"function\"){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tdef.headerTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblTap) == \"function\"){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tdef.headerDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerTapHold) == \"function\"){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(function(){\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tdef.headerTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for header\r\n\t_buildColumnHeader(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tthis.dispatch(\"column-layout\", this);\r\n\r\n\t\t//set column visibility\r\n\t\tif(typeof def.visible != \"undefined\"){\r\n\t\t\tif(def.visible){\r\n\t\t\t\tthis.show(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.hide(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(def.cssClass){\r\n\t\t\tvar classeNames = def.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(def.field){\r\n\t\t\tthis.element.setAttribute(\"tabulator-field\", def.field);\r\n\t\t}\r\n\r\n\t\t//set min width if present\r\n\t\tthis.setMinWidth(parseInt(def.minWidth));\r\n\r\n\t\tif (def.maxInitialWidth) {\r\n\t\t\tthis.maxInitialWidth = parseInt(def.maxInitialWidth);\r\n\t\t}\r\n\t\t\r\n\t\tif(def.maxWidth){\r\n\t\t\tthis.setMaxWidth(parseInt(def.maxWidth));\r\n\t\t}\r\n\r\n\t\tthis.reinitializeWidth();\r\n\r\n\t\t//set orizontal text alignment\r\n\t\tthis.hozAlign = this.definition.hozAlign;\r\n\t\tthis.vertAlign = this.definition.vertAlign;\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\t}\r\n\r\n\t_buildColumnHeaderContent(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tvar contentElement = document.createElement(\"div\");\r\n\t\tcontentElement.classList.add(\"tabulator-col-content\");\r\n\r\n\t\tthis.titleHolderElement = document.createElement(\"div\");\r\n\t\tthis.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\r\n\r\n\t\tcontentElement.appendChild(this.titleHolderElement);\r\n\r\n\t\tthis.titleElement = this._buildColumnHeaderTitle();\r\n\r\n\t\tthis.titleHolderElement.appendChild(this.titleElement);\r\n\r\n\t\treturn contentElement;\r\n\t}\r\n\r\n\t//build title element of column\r\n\t_buildColumnHeaderTitle(){\r\n\t\tvar def = this.definition,\r\n\t\ttitle;\r\n\r\n\t\tvar titleHolderElement = document.createElement(\"div\");\r\n\t\ttitleHolderElement.classList.add(\"tabulator-col-title\");\r\n\r\n\t\tif(def.editableTitle){\r\n\t\t\tvar titleElement = document.createElement(\"input\");\r\n\t\t\ttitleElement.classList.add(\"tabulator-title-editor\");\r\n\r\n\t\t\ttitleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\ttitleElement.focus();\r\n\t\t\t});\r\n\r\n\t\t\ttitleElement.addEventListener(\"change\", () => {\r\n\t\t\t\tdef.title = titleElement.value;\r\n\t\t\t\tthis.dispatchExternal(\"columnTitleChanged\", this.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\ttitleHolderElement.appendChild(titleElement);\r\n\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\ttitleElement.value = text || (def.title || \"&nbsp;\");\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\ttitleElement.value  = def.title || \"&nbsp;\";\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, text || (def.title || \"&nbsp;\"));\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn titleHolderElement;\r\n\t}\r\n\r\n\t_formatColumnHeaderTitle(el, title){\r\n\t\tvar contents = this.chain(\"column-format\", [this, title, el], null, () => {\r\n\t\t\treturn title;\r\n\t\t});\r\n\r\n\t\tswitch(typeof contents){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(contents instanceof Node){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}else{\r\n\t\t\t\tel.innerHTML = \"\";\r\n\t\t\t\tconsole.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tel.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tel.innerHTML = contents;\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for column group\r\n\t_buildGroupHeader(){\r\n\t\tthis.element.classList.add(\"tabulator-col-group\");\r\n\t\tthis.element.setAttribute(\"role\", \"columngroup\");\r\n\t\tthis.element.setAttribute(\"aria-title\", this.definition.title);\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(this.definition.cssClass){\r\n\t\t\tvar classeNames = this.definition.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\r\n\t\tthis.element.appendChild(this.groupElement);\r\n\t}\r\n\r\n\t//flat field lookup\r\n\t_getFlatData(data){\r\n\t\treturn data[this.field];\r\n\t}\r\n\r\n\t//nested field lookup\r\n\t_getNestedData(data){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length,\r\n\t\toutput;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tdataObj = dataObj[structure[i]];\r\n\r\n\t\t\toutput = dataObj;\r\n\r\n\t\t\tif(!dataObj){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//flat field set\r\n\t_setFlatData(data, value){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t//nested field set\r\n\t_setNestedData(data, value){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tif(i == length -1){\r\n\t\t\t\tdataObj[structure[i]] = value;\r\n\t\t\t}else{\r\n\t\t\t\tif(!dataObj[structure[i]]){\r\n\t\t\t\t\tif(typeof value !== \"undefined\"){\r\n\t\t\t\t\t\tdataObj[structure[i]] = {};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataObj = dataObj[structure[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//attach column to this group\r\n\tattachColumn(column){\r\n\t\tif(this.groupElement){\r\n\t\t\tthis.columns.push(column);\r\n\t\t\tthis.groupElement.appendChild(column.getElement());\r\n\r\n\t\t\tcolumn.columnRendered();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Warning - Column being attached to another column instead of column group\");\r\n\t\t}\r\n\t}\r\n\r\n\t//vertically align header in column\r\n\tverticalAlign(alignment, height){\r\n\r\n\t\t//calculate height of column header and group holder element\r\n\t\tvar parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : (height || this.parent.getHeadersElement().clientHeight);\r\n\t\t// var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\r\n\r\n\t\tthis.element.style.height = parentHeight + \"px\";\r\n\r\n\t\tthis.dispatch(\"column-height\", this, this.element.style.height);\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.groupElement.style.minHeight = (parentHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t}\r\n\r\n\t\t//vertically align cell contents\r\n\t\tif(!this.isGroup && alignment !== \"top\"){\r\n\t\t\tif(alignment === \"bottom\"){\r\n\t\t\t\tthis.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.paddingTop = ((this.element.clientHeight - this.contentElement.offsetHeight) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.verticalAlign(alignment);\r\n\t\t});\r\n\t}\r\n\r\n\t//clear vertical alignmenet\r\n\tclearVerticalAlign(){\r\n\t\tthis.element.style.paddingTop = \"\";\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.element.style.minHeight = \"\";\r\n\t\tthis.groupElement.style.minHeight = \"\";\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\t\t});\r\n\r\n\t\tthis.dispatch(\"column-height\", this, \"\");\r\n\t}\r\n\r\n\tbindModuleColumns (){\r\n\t\t//check if rownum formatter is being used on a column\r\n\t\tif(this.definition.formatter == \"rownum\"){\r\n\t\t\tthis.table.rowManager.rowNumColumn = this;\r\n\t\t}\r\n\t}\r\n\r\n\t//// Retreive Column Information ////\r\n\t//return column header element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return colunm group element\r\n\tgetGroupElement(){\r\n\t\treturn this.groupElement;\r\n\t}\r\n\r\n\t//return field name\r\n\tgetField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\tgetTitleDownload() {\r\n\t\treturn this.titleDownload;\r\n\t}\r\n\r\n\t//return the first column in a group\r\n\tgetFirstColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[0].getFirstColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return the last column in a group\r\n\tgetLastColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[this.columns.length -1].getLastColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetCells(){\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\t//retreive the top column in a group of columns\r\n\tgetTopColumn(){\r\n\t\tif(this.parent.isGroup){\r\n\t\t\treturn this.parent.getTopColumn();\r\n\t\t}else{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\t//return column definition object\r\n\tgetDefinition(updateBranches){\r\n\t\tvar colDefs = [];\r\n\r\n\t\tif(this.isGroup && updateBranches){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolDefs.push(column.getDefinition(true));\r\n\t\t\t});\r\n\r\n\t\t\tthis.definition.columns = colDefs;\r\n\t\t}\r\n\r\n\t\treturn this.definition;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tcheckColumnVisibility(){\r\n\t\tvar visible = false;\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(visible){\r\n\t\t\tthis.show();\r\n\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t}else{\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//show column\r\n\tshow(silent, responsiveToggle){\r\n\t\tif(!this.visible){\r\n\t\t\tthis.visible = true;\r\n\r\n\t\t\tthis.element.style.display = \"\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.show();\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isGroup && this.width === null){\r\n\t\t\t\tthis.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tthis.dispatch(\"column-show\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//hide column\r\n\thide(silent, responsiveToggle){\r\n\t\tif(this.visible){\r\n\t\t\tthis.visible = false;\r\n\r\n\t\t\tthis.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.hide();\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatch(\"column-hide\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmatchChildWidths(){\r\n\t\tvar childWidth = 0;\r\n\r\n\t\tif(this.contentElement && this.columns.length){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\tchildWidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.contentElement.style.maxWidth = (childWidth - 1) + \"px\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveChild(child){\r\n\t\tvar index = this.columns.indexOf(child);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.columns.length){\r\n\t\t\tthis.delete();\r\n\t\t}\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tthis.widthFixed = true;\r\n\t\tthis.setWidthActual(width);\r\n\t}\r\n\r\n\tsetWidthActual(width){\r\n\t\tif(isNaN(width)){\r\n\t\t\twidth = Math.floor((this.table.element.clientWidth/100) * parseInt(width));\r\n\t\t}\r\n\r\n\t\twidth = Math.max(this.minWidth, width);\r\n\r\n\t\tif(this.maxWidth){\r\n\t\t\twidth = Math.min(this.maxWidth, width);\r\n\t\t}\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.widthStyled = width ? width + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.width = this.widthStyled;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.setWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.parent.isGroup){\r\n\t\t\tthis.parent.matchChildWidths();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width\", this);\r\n\t}\r\n\r\n\tcheckCellHeights(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tif(cell.row.heightInitialized){\r\n\t\t\t\tif(cell.row.getElement().offsetParent !== null){\r\n\t\t\t\t\trows.push(cell.row);\r\n\t\t\t\t\tcell.row.clearCellHeight();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcell.row.heightInitialized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.calcHeight();\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.setCellHeight();\r\n\t\t});\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\twidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\twidth = this.width;\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn Math.ceil(this.element.getBoundingClientRect().height);\r\n\t}\r\n\r\n\tsetMinWidth(minWidth){\r\n\t\tthis.minWidth = minWidth;\r\n\t\tthis.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.minWidth = this.minWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMinWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tsetMaxWidth(maxWidth){\r\n\t\tthis.maxWidth = maxWidth;\r\n\t\tthis.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.maxWidth = this.maxWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMaxWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar index;\r\n\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\t\tcolumn.delete();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"column-delete\", this);\r\n\r\n\t\t\tvar cellCount = this.cells.length;\r\n\r\n\t\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\t\tthis.cells[0].delete();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element = false;\r\n\t\t\tthis.contentElement = false;\r\n\t\t\tthis.titleElement = false;\r\n\t\t\tthis.groupElement = false;\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.removeChild(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.deregisterColumn(this);\r\n\r\n\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tcolumnRendered(){\r\n\t\tif(this.titleFormatterRendered){\r\n\t\t\tthis.titleFormatterRendered();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-rendered\", this);\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\t//generate cell for this column\r\n\tgenerateCell(row){\r\n\t\tvar cell = new Cell(this, row);\r\n\r\n\t\tthis.cells.push(cell);\r\n\r\n\t\treturn cell;\r\n\t}\r\n\r\n\tnextColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._nextVisibleColumn(index + 1) : false;\r\n\t}\r\n\r\n\t_nextVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._nextVisibleColumn(index + 1);\r\n\t}\r\n\r\n\tprevColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._prevVisibleColumn(index - 1) : false;\r\n\t}\r\n\r\n\t_prevVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._prevVisibleColumn(index - 1);\r\n\t}\r\n\r\n\treinitializeWidth(force){\r\n\t\tthis.widthFixed = false;\r\n\r\n\t\t//set width if present\r\n\t\tif(typeof this.definition.width !== \"undefined\" && !force){\r\n\t\t\t// maxInitialWidth ignored here as width specified\r\n\t\t\tthis.setWidth(this.definition.width);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width-fit-before\", this);\r\n\r\n\t\tthis.fitToData(force);\r\n\r\n\t\tthis.dispatch(\"column-width-fit-after\", this);\r\n\t}\r\n\r\n\t//set column width to maximum cell width for non group columns\r\n\tfitToData(force){\r\n\t\tif(this.isGroup){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.widthFixed){\r\n\t\t\tthis.element.style.width = \"\";\r\n\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tcell.clearWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar maxWidth = this.element.offsetWidth;\r\n\r\n\t\tif(!this.width || !this.widthFixed){\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tvar width = cell.getWidth();\r\n\r\n\t\t\t\tif(width > maxWidth){\r\n\t\t\t\t\tmaxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(maxWidth){\r\n\t\t\t\tvar setTo = maxWidth + 1;\r\n\t\t\t\tif (this.maxInitialWidth && !force) {\r\n\t\t\t\t\tsetTo = Math.min(setTo, this.maxInitialWidth);\r\n\t\t\t\t}\r\n\t\t\t\tthis.setWidthActual(setTo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\tvar definition;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tif(!this.parent.isGroup){\r\n\t\t\t\tdefinition = Object.assign({}, this.getDefinition());\r\n\t\t\t\tdefinition = Object.assign(definition, updates);\r\n\r\n\t\t\t\treturn this.table.columnManager.addColumn(definition, false, this)\r\n\t\t\t\t.then((column) => {\r\n\r\n\t\t\t\t\tif(definition.field == this.field){\r\n\t\t\t\t\t\tthis.field = false; //cleair field name to prevent deletion of duplicate column from arrays\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new ColumnComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nColumn.defaultOptionList = defaultOptions;\r\n\r\nexport default Column;","//public row object\r\nexport default class RowComponent {\r\n\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this._row.getData(\"data\")[this._row.table.options.index];\r\n\t}\r\n\r\n\tgetPosition(active){\r\n\t\treturn this._row.table.rowManager.getRowPosition(this._row, active);\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._row.delete();\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._row.table.rowManager.scrollToRow(this._row);\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tthis._row.moveToRow(to, after);\r\n\t}\r\n\r\n\tupdate(data){\r\n\t\treturn this._row.updateData(data);\r\n\t}\r\n\r\n\tnormalizeHeight(){\r\n\t\tthis._row.normalizeHeight(true);\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n\r\n\treformat(){\r\n\t\treturn this._row.reinitialize();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetNextRow(){\r\n\t\tvar row = this._row.nextRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n\r\n\tgetPrevRow(){\r\n\t\tvar row = this._row.prevRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport RowComponent from './RowComponent.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Row extends CoreFeature{\r\n\tconstructor (data, parent, type = \"row\"){\r\n\t\tsuper(parent.table);\r\n\t\t\r\n\t\tthis.parent = parent;\r\n\t\tthis.data = {};\r\n\t\tthis.type = type; //type of element\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {}; //hold module variables;\r\n\t\tthis.cells = [];\r\n\t\tthis.height = 0; //hold element height\r\n\t\tthis.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\r\n\t\tthis.manualHeight = false; //user has manually set row height\r\n\t\tthis.outerHeight = 0; //hold elements outer height\r\n\t\tthis.initialized = false; //element has been rendered\r\n\t\tthis.heightInitialized = false; //element has resized cells to fit\r\n\t\t\r\n\t\tthis.component = null;\r\n\t\t\r\n\t\tthis.created = false;\r\n\t\t\r\n\t\tthis.setData(data);\r\n\t}\r\n\t\r\n\tcreate(){\r\n\t\tif(!this.created){\r\n\t\t\tthis.created = true;\r\n\t\t\tthis.generateElement();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\t\t\r\n\t\tthis.element = el;\r\n\t}\r\n\t\r\n\tgetElement(){\r\n\t\tthis.create();\r\n\t\treturn this.element;\r\n\t}\r\n\t\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgenerateElement(){\r\n\t\tthis.createElement();\r\n\t\tthis.dispatch(\"row-init\", this);\r\n\t}\r\n\t\r\n\tgenerateCells(){\r\n\t\tthis.cells = this.table.columnManager.generateCells(this);\r\n\t}\r\n\t\r\n\t//functions to setup on first render\r\n\tinitialize(force){\r\n\t\tthis.create();\r\n\t\t\r\n\t\tif(!this.initialized || force){\r\n\t\t\t\r\n\t\t\tthis.deleteCells();\r\n\t\t\t\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-layout-before\", this);\r\n\t\t\t\r\n\t\t\tthis.generateCells();\r\n\t\t\t\r\n\t\t\tthis.initialized = true;\r\n\t\t\t\r\n\t\t\tthis.table.columnManager.renderer.renderRowCells(this);\r\n\t\t\t\r\n\t\t\tif(force){\r\n\t\t\t\tthis.normalizeHeight();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-layout\", this);\r\n\t\t\t\r\n\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-layout-after\", this);\r\n\t\t}else{\r\n\t\t\tthis.table.columnManager.renderer.rerenderRowCells(this);\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\t\t\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\tdeinitialize(){\r\n\t\tthis.initialized = false;\r\n\t}\r\n\t\r\n\tdeinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\t}\r\n\t\r\n\treinitialize(children){\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\t\t\r\n\t\tif(!this.manualHeight){\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.heightStyled = \"\";\r\n\t\t}\r\n\t\t\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatch(\"row-relayout\", this);\r\n\t}\r\n\t\r\n\t//get heights when doing bulk row style calcs in virtual DOM\r\n\tcalcHeight(force){\r\n\t\tvar maxHeight = 0,\r\n\t\tminHeight;\r\n\t\t\r\n\t\tif(this.table.options.rowHeight){\r\n\t\t\tthis.height = this.table.options.rowHeight;\r\n\t\t}else{\r\n\t\t\tminHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\r\n\t\t\t\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tvar height = cell.getHeight();\r\n\t\t\t\tif(height > maxHeight){\r\n\t\t\t\t\tmaxHeight = height;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(force){\r\n\t\t\t\tthis.height = Math.max(maxHeight, minHeight);\r\n\t\t\t}else{\r\n\t\t\t\tthis.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.heightStyled = this.height ? this.height + \"px\" : \"\";\r\n\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t}\r\n\t\r\n\t//set of cells\r\n\tsetCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setHeight();\r\n\t\t});\r\n\t\t\r\n\t\tthis.heightInitialized = true;\r\n\t}\r\n\t\r\n\tclearCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.clearHeight();\r\n\t\t});\r\n\t}\r\n\t\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(force){\r\n\t\tif(force && !this.table.options.rowHeight){\r\n\t\t\tthis.clearCellHeight();\r\n\t\t}\r\n\t\t\r\n\t\tthis.calcHeight(force);\r\n\t\t\r\n\t\tthis.setCellHeight();\r\n\t}\r\n\t\r\n\t//set height of rows\r\n\tsetHeight(height, force){\r\n\t\tif(this.height != height || force){\r\n\t\t\t\r\n\t\t\tthis.manualHeight = true;\r\n\t\t\t\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.heightStyled = height ? height + \"px\" : \"\";\r\n\t\t\t\r\n\t\t\tthis.setCellHeight();\r\n\t\t\t\r\n\t\t\t// this.outerHeight = this.element.outerHeight();\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\t\r\n\t//return rows outer Width\r\n\tgetWidth(){\r\n\t\treturn this.element.offsetWidth;\r\n\t}\r\n\t\r\n\t//////////////// Cell Management /////////////////\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\t\t\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//////////////// Data Management /////////////////\r\n\tsetData(data){\r\n\t\tthis.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\r\n\t\t\r\n\t\tthis.dispatch(\"row-data-init-after\", this);\r\n\t}\r\n\t\r\n\t//update the rows data\r\n\tupdateData(updatedData){\r\n\t\tvar visible = this.element && Helpers.elVisible(this.element),\r\n\t\ttempData = {},\r\n\t\tnewRowData;\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\r\n\t\t\tif(typeof updatedData === \"string\"){\r\n\t\t\t\tupdatedData = JSON.parse(updatedData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-data-save-before\", this);\r\n\t\t\t\r\n\t\t\tif(this.subscribed(\"row-data-changing\")){\r\n\t\t\t\ttempData = Object.assign(tempData, this.data);\r\n\t\t\t\ttempData = Object.assign(tempData, updatedData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tnewRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\r\n\t\t\t\r\n\t\t\t//set data\r\n\t\t\tfor (var attrname in newRowData) {\r\n\t\t\t\tthis.data[attrname] = newRowData[attrname];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-data-save-after\", this);\r\n\t\t\t\r\n\t\t\t//update affected cells only\r\n\t\t\tfor (var attrname in updatedData) {\r\n\t\t\t\t\r\n\t\t\t\tlet columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\r\n\t\t\t\t\r\n\t\t\t\tcolumns.forEach((column) => {\r\n\t\t\t\t\tlet cell = this.getCell(column.getField());\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tlet value = column.getFieldValue(newRowData);\r\n\t\t\t\t\t\tif(cell.getValue() != value){\r\n\t\t\t\t\t\t\tcell.setValueProcessData(value);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(visible){\r\n\t\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Partial reinitialization if visible\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.normalizeHeight(true);\r\n\t\t\t\t\r\n\t\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.initialized = false;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t\tthis.heightStyled = \"\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"row-data-changed\", this, visible, updatedData);\r\n\t\t\t\r\n\t\t\t//this.reinitialize();\r\n\t\t\t\r\n\t\t\tthis.dispatchExternal(\"rowUpdated\", this.getComponent());\r\n\t\t\t\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetData(transform){\r\n\t\tif(transform){\r\n\t\t\treturn this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.data;\r\n\t}\r\n\t\r\n\tgetCell(column){\r\n\t\tvar match = false;\r\n\t\t\r\n\t\tcolumn = this.table.columnManager.findColumn(column);\r\n\t\t\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\t\t\r\n\t\tmatch = this.cells.find(function(cell){\r\n\t\t\treturn cell.column === column;\r\n\t\t});\r\n\t\t\r\n\t\treturn match;\r\n\t}\r\n\t\r\n\tgetCellIndex(findCell){\r\n\t\treturn this.cells.findIndex(function(cell){\r\n\t\t\treturn cell === findCell;\r\n\t\t});\r\n\t}\r\n\t\r\n\tfindCell(subject){\r\n\t\treturn this.cells.find((cell) => {\r\n\t\t\treturn cell.element === subject;\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetCells(){\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\t\t\r\n\t\treturn this.cells;\r\n\t}\r\n\t\r\n\tnextRow(){\r\n\t\tvar row = this.table.rowManager.nextDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\t\r\n\tprevRow(){\r\n\t\tvar row = this.table.rowManager.prevDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\t\r\n\tmoveToRow(to, before){\r\n\t\tvar toRow = this.table.rowManager.findRow(to);\r\n\t\t\r\n\t\tif(toRow){\r\n\t\t\tthis.table.rowManager.moveRowActual(this, toRow, !before);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"display\", false, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", to);\r\n\t\t}\r\n\t}\r\n\t\r\n\t///////////////////// Actions  /////////////////////\r\n\tdelete(){\r\n\t\tthis.dispatch(\"row-delete\", this);\r\n\t\t\r\n\t\tthis.deleteActual();\r\n\t\t\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\t\r\n\tdeleteActual(blockRedraw){\r\n\t\tvar index = this.table.rowManager.getRowIndex(this);\r\n\t\t\r\n\t\tthis.detatchModules();\r\n\t\t\r\n\t\tthis.table.rowManager.deleteRow(this, blockRedraw);\r\n\t\t\r\n\t\tthis.deleteCells();\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\t\tthis.element = false;\r\n\t\t\r\n\t\tthis.dispatch(\"row-deleted\", this);\r\n\t}\r\n\t\r\n\tdetatchModules(){\r\n\t\tthis.dispatch(\"row-deleting\", this);\r\n\t}\r\n\t\r\n\tdeleteCells(){\r\n\t\tvar cellCount = this.cells.length;\r\n\t\t\r\n\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\tthis.cells[0].delete();\r\n\t\t}\r\n\t}\r\n\t\r\n\twipe(){\r\n\t\tthis.detatchModules();\r\n\t\tthis.deleteCells();\r\n\t\t\r\n\t\tif(this.element){\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\t\t\t\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {};\r\n\t}\r\n\t\r\n\tgetGroup(){\r\n\t\treturn this.modules.group || false;\r\n\t}\r\n\t\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new RowComponent(this);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.component;\r\n\t}\r\n}","export default {\r\n\t\"avg\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn Number(sum) + Number(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput = output / values.length;\r\n\r\n\t\t\toutput = precision !== false ? output.toFixed(precision) : output;\r\n\t\t}\r\n\r\n\t\treturn parseFloat(output).toString();\r\n\t},\r\n\t\"max\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value > output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"min\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value < output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"sum\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tvalue = Number(value);\r\n\r\n\t\t\t\toutput += !isNaN(value) ? Number(value) : 0;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn precision !== false ? output.toFixed(precision) : output;\r\n\t},\r\n\t\"concat\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn String(sum) + String(value);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n\t\"count\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\toutput ++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport CalcComponent from './CalcComponent.js';\r\n\r\nimport Cell from '../../core/cell/Cell.js';\r\nimport Column from '../../core/column/Column.js';\r\nimport Row from '../../core/row/Row.js';\r\n\r\nimport defaultCalculations from './defaults/calculations.js';\r\n\r\nclass ColumnCalcs extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topCalcs = [];\r\n\t\tthis.botCalcs = [];\r\n\t\tthis.genColumn = false;\r\n\t\tthis.topElement = this.createElement();\r\n\t\tthis.botElement = this.createElement();\r\n\t\tthis.topRow = false;\r\n\t\tthis.botRow = false;\r\n\t\tthis.topInitialized = false;\r\n\t\tthis.botInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"columnCalcs\", true);\r\n\r\n\t\tthis.registerColumnOption(\"topCalc\");\r\n\t\tthis.registerColumnOption(\"topCalcParams\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatterParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalc\");\r\n\t\tthis.registerColumnOption(\"bottomCalcParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatterParams\");\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-calcs-holder\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.genColumn = new Column({field:\"value\"}, this);\r\n\r\n\t\tthis.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"data-refreshed\", this.recalcActiveRowsRefresh.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\t\tthis.subscribe(\"rows-visible\", this.visibleRows.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\r\n\t\tthis.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\r\n\t\tif(force){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tuserRecalc(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tvisibleRows(viewable, rows){\r\n\t\tif(this.topRow){\r\n\t\t\trows.unshift(this.topRow);\r\n\t\t}\r\n\r\n\t\tif(this.botRow){\r\n\t\t\trows.push(this.botRow);\r\n\t\t}\r\n\t\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(row){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.recalcRowGroup(this);\r\n\t\t}else{\r\n\t\t\tthis.recalcActiveRows();\r\n\t\t}\r\n\t}\r\n\r\n\trecalcActiveRowsRefresh(){\r\n\t\tif(this.table.options.groupBy && this.table.options.dataTreeStartExpanded && this.table.options.dataTree){\r\n\t\t\tthis.recalcAll();\r\n\t\t}else{\r\n\t\t\tthis.recalcActiveRows();\r\n\t\t}\r\n\t}\r\n\r\n\trecalcActiveRows(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tif(cell.column.definition.topCalc || cell.column.definition.bottomCalc){\r\n\t\t\tif(this.table.options.groupBy){\r\n\t\t\t\tif(this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\"){\r\n\t\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"table\"){\r\n\t\t\t\t\tthis.recalcRowGroup(cell.row);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(column.definition.topCalc || column.definition.bottomCalc){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column calcs\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition\r\n\r\n\t\tvar config = {\r\n\t\t\ttopCalcParams:def.topCalcParams || {},\r\n\t\t\tbotCalcParams:def.bottomCalcParams || {},\r\n\t\t};\r\n\r\n\t\tif(def.topCalc){\r\n\r\n\t\t\tswitch(typeof def.topCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.topCalc]){\r\n\t\t\t\t\tconfig.topCalc = ColumnCalcs.calculations[def.topCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.topCalc = def.topCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.topCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.topCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeTopRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(def.bottomCalc){\r\n\t\t\tswitch(typeof def.bottomCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.bottomCalc]){\r\n\t\t\t\t\tconfig.botCalc = ColumnCalcs.calculations[def.bottomCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.botCalc = def.bottomCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.botCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.botCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeBottomRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//dummy functions to handle being mock column manager\r\n\tregisterColumnField(){};\r\n\r\n\tremoveCalcs(){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.topInitialized){\r\n\t\t\tthis.topInitialized = false;\r\n\t\t\tthis.topElement.parentNode.removeChild(this.topElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(this.botInitialized){\r\n\t\t\tthis.botInitialized = false;\r\n\t\t\tthis.footerRemove(this.botElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTopRow(){\r\n\t\tif(!this.topInitialized){\r\n\t\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\t\t\tthis.topInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeBottomRow(){\r\n\t\tif(!this.botInitialized){\r\n\t\t\tthis.footerPrepend(this.botElement);\r\n\t\t\tthis.botInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tif(this.botInitialized && this.botRow){\r\n\t\t\tthis.botRow.getElement().style.marginLeft = (-left) + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\trecalc(rows){\r\n\t\tvar data, row;\r\n\r\n\t\tif(this.topInitialized || this.botInitialized){\r\n\t\t\tdata = this.rowsToData(rows);\r\n\r\n\t\t\tif(this.topInitialized){\r\n\t\t\t\tif(this.topRow){\r\n\t\t\t\t\tthis.topRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"top\", this.rowsToData(rows))\r\n\t\t\t\tthis.topRow = row;\r\n\t\t\t\twhile(this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\r\n\t\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.botInitialized){\r\n\t\t\t\tif(this.botRow){\r\n\t\t\t\t\tthis.botRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"bottom\", this.rowsToData(rows))\r\n\t\t\t\tthis.botRow = row;\r\n\t\t\t\twhile(this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\r\n\t\t\t\tthis.botElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\t//set resizable handles\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tthis.table.modules.frozenColumns.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcRowGroup(row){\r\n\t\tthis.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\r\n\t}\r\n\r\n\trecalcAll(){\r\n\t\tif(this.topCalcs.length || this.botCalcs.length){\r\n\t\t\tif(this.table.options.columnCalcs !== \"group\"){\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.groupBy && this.table.options.columnCalcs !== \"table\"){\r\n\r\n\t\t\t\tvar groups = this.table.modules.groupRows.getChildGroups();\r\n\r\n\t\t\t\tgroups.forEach((group) => {\r\n\t\t\t\t\tthis.recalcGroup(group);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcGroup(group){\r\n\t\tvar data, rowData;\r\n\r\n\t\tif(group){\r\n\t\t\tif(group.calcs){\r\n\t\t\t\tif(group.calcs.bottom){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"bottom\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.bottom.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.bottom.reinitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(group.calcs.top){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"top\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.top.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.top.reinitialize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//generate top stats row\r\n\tgenerateTopRow(rows){\r\n\t\treturn this.generateRow(\"top\", this.rowsToData(rows));\r\n\t}\r\n\t//generate bottom stats row\r\n\tgenerateBottomRow(rows){\r\n\t\treturn this.generateRow(\"bottom\", this.rowsToData(rows));\r\n\t}\r\n\r\n\trowsToData(rows){\r\n\t\tvar data = [];\r\n\t\t\r\n\t\trows.forEach((row) => {\r\n\t\t\tdata.push(row.getData());\r\n\r\n\t\t\tif(this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs){\r\n\t\t\t\tif(row.modules.dataTree && row.modules.dataTree.open){\r\n\t\t\t\t\tvar children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\r\n\t\t\t\t\tdata = data.concat(children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRow(pos, data){\r\n\t\tvar rowData = this.generateRowData(pos, data),\r\n\t\trow;\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.disable();\r\n\t\t}\r\n\r\n\t\trow = new Row(rowData, this, \"calc\");\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.enable();\r\n\t\t}\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\r\n\r\n\t\trow.component = false;\r\n\r\n\t\trow.getComponent = () => {\r\n\t\t\tif(!row.component){\r\n\t\t\t\trow.component = new CalcComponent(row);\r\n\t\t\t}\r\n\r\n\t\t\treturn row.component;\r\n\t\t};\r\n\r\n\t\trow.generateCells = () => {\r\n\r\n\t\t\tvar cells = [];\r\n\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\r\n\t\t\t\t\t//set field name of mock column\r\n\t\t\t\t\tthis.genColumn.setField(column.getField());\r\n\t\t\t\t\tthis.genColumn.hozAlign = column.hozAlign;\r\n\r\n\t\t\t\t\tif(column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")){\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\r\n\t\t\t\t\t\t\tparams: column.definition[pos + \"CalcFormatterParams\"] || {},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(\"plaintext\"),\r\n\t\t\t\t\t\t\tparams:{}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//ensure css class defintion is replicated to calculation cell\r\n\t\t\t\t\tthis.genColumn.definition.cssClass = column.definition.cssClass;\r\n\r\n\t\t\t\t\t//generate cell and assign to correct column\r\n\t\t\t\t\tvar cell = new Cell(this.genColumn, row);\r\n\t\t\t\t\tcell.getElement();\r\n\t\t\t\t\tcell.column = column;\r\n\t\t\t\t\tcell.setWidth();\r\n\r\n\t\t\t\t\tcolumn.cells.push(cell);\r\n\t\t\t\t\tcells.push(cell);\r\n\r\n\t\t\t\t\tif(!column.visible){\r\n\t\t\t\t\t\tcell.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\trow.cells = cells;\r\n\t\t};\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRowData(pos, data){\r\n\t\tvar rowData = {},\r\n\t\tcalcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\r\n\t\ttype = pos == \"top\" ? \"topCalc\" : \"botCalc\",\r\n\t\tparams, paramKey;\r\n\r\n\t\tcalcs.forEach(function(column){\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tif(column.modules.columnCalcs && column.modules.columnCalcs[type]){\r\n\t\t\t\tdata.forEach(function(item){\r\n\t\t\t\t\tvalues.push(column.getFieldValue(item));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparamKey = type + \"Params\";\r\n\t\t\t\tparams = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\r\n\r\n\t\t\t\tcolumn.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\thasTopCalcs(){\r\n\t\treturn\t!!(this.topCalcs.length);\r\n\t}\r\n\r\n\thasBottomCalcs(){\r\n\t\treturn\t!!(this.botCalcs.length);\r\n\t}\r\n\r\n\t//handle table redraw\r\n\tredraw(){\r\n\t\tif(this.topRow){\r\n\t\t\tthis.topRow.normalizeHeight(true);\r\n\t\t}\r\n\t\tif(this.botRow){\r\n\t\t\tthis.botRow.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\t//return the calculated\r\n\tgetResults(){\r\n\t\tvar results = {},\r\n\t\tgroups;\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tgroups = this.table.modules.groupRows.getGroups(true);\r\n\r\n\t\t\tgroups.forEach((group) => {\r\n\t\t\t\tresults[group.getKey()] = this.getGroupResults(group);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tresults = {\r\n\t\t\t\ttop: this.topRow ? this.topRow.getData() : {},\r\n\t\t\t\tbottom: this.botRow ? this.botRow.getData() : {},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t//get results from a group\r\n\tgetGroupResults(group){\r\n\t\tvar groupObj = group._getSelf(),\r\n\t\tsubGroups = group.getSubGroups(),\r\n\t\tsubGroupResults = {},\r\n\t\tresults = {};\r\n\r\n\t\tsubGroups.forEach((subgroup) => {\r\n\t\t\tsubGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\r\n\t\t});\r\n\r\n\t\tresults = {\r\n\t\t\ttop: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\r\n\t\t\tbottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\r\n\t\t\tgroups: subGroupResults,\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n}\r\n\r\nColumnCalcs.moduleName = \"columnCalcs\";\r\n\r\n//load defaults\r\nColumnCalcs.calculations = defaultCalculations;\r\n\r\nexport default ColumnCalcs;","import Module from '../../core/Module.js';\r\n\r\nimport Row from '../../core/row/Row.js';\r\n\r\nclass DataTree extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.indent = 10;\r\n\t\tthis.field = \"\";\r\n\t\tthis.collapseEl = null;\r\n\t\tthis.expandEl = null;\r\n\t\tthis.branchEl = null;\r\n\t\tthis.elementField = false;\r\n\r\n\t\tthis.startOpen = function(){};\r\n\r\n\t\tthis.displayIndex = 0;\r\n\r\n\t\tthis.registerTableOption(\"dataTree\", false); //enable data tree\r\n\t\tthis.registerTableOption(\"dataTreeFilter\", true); //filter child rows\r\n\t\tthis.registerTableOption(\"dataTreeSort\", true); //sort child rows\r\n\t\tthis.registerTableOption(\"dataTreeElementColumn\", false);\r\n\t\tthis.registerTableOption(\"dataTreeBranchElement\", true);//show data tree branch element\r\n\t\tthis.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\r\n\t\tthis.registerTableOption(\"dataTreeChildField\", \"_children\");//data tre column field to look for child rows\r\n\t\tthis.registerTableOption(\"dataTreeCollapseElement\", false);//data tree row collapse element\r\n\t\tthis.registerTableOption(\"dataTreeExpandElement\", false);//data tree row expand element\r\n\t\tthis.registerTableOption(\"dataTreeStartExpanded\", false);\r\n\t\tthis.registerTableOption(\"dataTreeChildColumnCalcs\", false);//include visible data tree rows in column calculations\r\n\t\tthis.registerTableOption(\"dataTreeSelectPropagate\", false);//seleccting a parent row selects its children\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isTreeExpanded\", this.isRowExpanded.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tvar dummyEl = null,\r\n\t\t\toptions = this.table.options;\r\n\r\n\t\t\tthis.field = options.dataTreeChildField;\r\n\t\t\tthis.indent = options.dataTreeChildIndent;\r\n\r\n\t\t\tif(options.dataTreeBranchElement){\r\n\r\n\t\t\t\tif(options.dataTreeBranchElement === true){\r\n\t\t\t\t\tthis.branchEl = document.createElement(\"div\");\r\n\t\t\t\t\tthis.branchEl.classList.add(\"tabulator-data-tree-branch\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(typeof options.dataTreeBranchElement === \"string\"){\r\n\t\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\t\tdummyEl.innerHTML = options.dataTreeBranchElement;\r\n\t\t\t\t\t\tthis.branchEl = dummyEl.firstChild;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.branchEl = options.dataTreeBranchElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeCollapseElement){\r\n\t\t\t\tif(typeof options.dataTreeCollapseElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeCollapseElement;\r\n\t\t\t\t\tthis.collapseEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.collapseEl = options.dataTreeCollapseElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseEl = document.createElement(\"div\");\r\n\t\t\t\tthis.collapseEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.collapseEl.tabIndex = 0;\r\n\t\t\t\tthis.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeExpandElement){\r\n\t\t\t\tif(typeof options.dataTreeExpandElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeExpandElement;\r\n\t\t\t\t\tthis.expandEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.expandEl = options.dataTreeExpandElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandEl = document.createElement(\"div\");\r\n\t\t\t\tthis.expandEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.expandEl.tabIndex = 0;\r\n\t\t\t\tthis.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\r\n\t\t\t}\r\n\r\n\r\n\t\t\tswitch(typeof options.dataTreeStartExpanded){\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tthis.startOpen = options.dataTreeStartExpanded;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded[index];\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowDelete.bind(this),0);\r\n\t\t\tthis.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.initializeElementField.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 30);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeElementField(){\r\n\t\tvar firstCol = this.table.columnManager.getFirstVisibleColumn();\r\n\r\n\t\tthis.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\r\n\t}\r\n\t\r\n\tgetRowChildren(row){\r\n\t\treturn this.getTreeChildren(row, true);\r\n\t}\r\n\r\n\tcolumnMoving(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\trows = rows.concat(this.getTreeChildren(row, false, true));\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowDataChanged(row, visible, updatedData){\r\n\t\tif(this.redrawNeeded(updatedData)){\r\n\t\t\tthis.initializeRow(row);\r\n\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tvar field = cell.column.getField();\r\n\r\n\t\tif(field === this.elementField){\r\n\t\t\tthis.layoutRow(cell.row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar childArray = row.getData()[this.field];\r\n\t\tvar isArray = Array.isArray(childArray);\r\n\r\n\t\tvar children = isArray || (!isArray && typeof childArray === \"object\" && childArray !== null);\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.branchEl){\r\n\t\t\trow.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\r\n\t\t}\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.controlEl){\r\n\t\t\trow.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\r\n\t\t}\r\n\r\n\t\trow.modules.dataTree = {\r\n\t\t\tindex: row.modules.dataTree ? row.modules.dataTree.index : 0,\r\n\t\t\topen: children ? (row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0)) : false,\r\n\t\t\tcontrolEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\r\n\t\t\tbranchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\r\n\t\t\tparent: row.modules.dataTree ? row.modules.dataTree.parent : false,\r\n\t\t\tchildren:children,\r\n\t\t};\r\n\t}\r\n\r\n\treinitializeRowChildren(row){\r\n\t\tvar children = this.getTreeChildren(row, false, true);\r\n\r\n\t\tchildren.forEach(function(child){\r\n\t\t\tchild.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\r\n\t\tel = cell.getElement(),\r\n\t\tconfig = row.modules.dataTree;\r\n\r\n\t\tif(config.branchEl){\r\n\t\t\tif(config.branchEl.parentNode){\r\n\t\t\t\tconfig.branchEl.parentNode.removeChild(config.branchEl);\r\n\t\t\t}\r\n\t\t\tconfig.branchEl = false;\r\n\t\t}\r\n\r\n\t\tif(config.controlEl){\r\n\t\t\tif(config.controlEl.parentNode){\r\n\t\t\t\tconfig.controlEl.parentNode.removeChild(config.controlEl);\r\n\t\t\t}\r\n\t\t\tconfig.controlEl = false;\r\n\t\t}\r\n\r\n\t\tthis.generateControlElement(row, el);\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\r\n\r\n\t\tif(config.index){\r\n\t\t\tif(this.branchEl){\r\n\t\t\t\tconfig.branchEl = this.branchEl.cloneNode(true);\r\n\t\t\t\tel.insertBefore(config.branchEl, el.firstChild);\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tconfig.branchEl.style.marginRight = (((config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconfig.branchEl.style.marginLeft = (((config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tel.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateControlElement(row, el){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tel = el || row.getCells()[0].getElement(),\r\n\t\toldControl = config.controlEl;\r\n\r\n\t\tif(config.children !== false){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tconfig.controlEl = this.collapseEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.collapseRow(row);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconfig.controlEl = this.expandEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.expandRow(row);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconfig.controlEl.addEventListener(\"mousedown\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tif(oldControl && oldControl.parentNode === el){\r\n\t\t\t\toldControl.parentNode.replaceChild(config.controlEl,oldControl);\r\n\t\t\t}else{\r\n\t\t\t\tel.insertBefore(config.controlEl, el.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetDisplayIndex (index) {\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex () {\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\tgetRows(rows){\r\n\t\tvar output = [];\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar config, children;\r\n\r\n\t\t\toutput.push(row);\r\n\r\n\t\t\tif(row instanceof Row){\r\n\r\n\t\t\t\trow.create();\r\n\r\n\t\t\t\tconfig = row.modules.dataTree.children;\r\n\r\n\t\t\t\tif(!config.index && config.children !== false){\r\n\t\t\t\t\tchildren = this.getChildren(row);\r\n\r\n\t\t\t\t\tchildren.forEach((child) => {\r\n\t\t\t\t\t\tchild.create();\r\n\t\t\t\t\t\toutput.push(child);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildren(row, allChildren){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tchildren = [],\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children !== false && (config.open || allChildren)){\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"sort\") && this.table.options.dataTreeSort){\r\n\t\t\t\tthis.table.modules.sort.sort(children);\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((child) => {\r\n\t\t\t\toutput.push(child);\r\n\r\n\t\t\t\tvar subChildren = this.getChildren(child);\r\n\r\n\t\t\t\tsubChildren.forEach((sub) => {\r\n\t\t\t\t\toutput.push(sub);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateChildren(row){\r\n\t\tvar children = [];\r\n\r\n\t\tvar childArray = row.getData()[this.field];\r\n\r\n\t\tif(!Array.isArray(childArray)){\r\n\t\t\tchildArray = [childArray];\r\n\t\t}\r\n\r\n\t\tchildArray.forEach((childData) => {\r\n\t\t\tvar childRow = new Row(childData || {}, this.table.rowManager);\r\n\r\n\t\t\tchildRow.create();\r\n\r\n\t\t\tchildRow.modules.dataTree.index = row.modules.dataTree.index + 1;\r\n\t\t\tchildRow.modules.dataTree.parent = row;\r\n\r\n\t\t\tif(childRow.modules.dataTree.children){\r\n\t\t\t\tchildRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\r\n\t\t\t}\r\n\t\t\tchildren.push(childRow);\r\n\t\t});\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\texpandRow(row, silent){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = true;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\tcollapseRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = false;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tif(config.open){\r\n\t\t\t\tthis.collapseRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisRowExpanded(row){\r\n\t\treturn row.modules.dataTree.open;\r\n\t}\r\n\r\n\tgetTreeParent(row){\r\n\t\treturn row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\r\n\t}\r\n\r\n\tgetFilteredTreeChildren(row){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [], children;\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(childRow);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\trowDelete(row){\r\n\t\tvar parent = row.modules.dataTree.parent,\r\n\t\tchildIndex;\r\n\r\n\t\tif(parent){\r\n\t\t\tchildIndex = this.findChildIndex(row, parent);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\tparent.data[this.field].splice(childIndex, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!parent.data[this.field].length){\r\n\t\t\t\tdelete parent.data[this.field];\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeRow(parent);\r\n\t\t\tthis.layoutRow(parent);\r\n\t\t}\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\taddTreeChildRow(row, data, top, index){\r\n\t\tvar childIndex = false;\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(row.data[this.field])){\r\n\t\t\trow.data[this.field] = [];\r\n\r\n\t\t\trow.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tchildIndex = this.findChildIndex(index, row);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\trow.data[this.field].splice((top ? childIndex : childIndex + 1), 0, data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndex === false){\r\n\t\t\tif(top){\r\n\t\t\t\trow.data[this.field].unshift(data);\r\n\t\t\t}else{\r\n\t\t\t\trow.data[this.field].push(data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.initializeRow(row);\r\n\t\tthis.layoutRow(row);\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\tfindChildIndex(subject, parent){\r\n\t\tvar match = false;\r\n\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\tmatch = subject.data;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\tmatch = subject._getSelf().data;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\tif(parent.modules.dataTree){\r\n\t\t\t\t\tmatch = parent.modules.dataTree.children.find((childRow) => {\r\n\t\t\t\t\t\treturn childRow instanceof Row ? childRow.element === subject : false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tmatch = match.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\tmatch = false\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tmatch = parent.data[this.field].find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(match){\r\n\r\n\t\t\tif(Array.isArray(parent.data[this.field])){\r\n\t\t\t\tmatch = parent.data[this.field].indexOf(match);\r\n\t\t\t}\r\n\r\n\t\t\tif(match == -1){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetTreeChildren(row, component, recurse){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tconfig.children.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(component ? childRow.getComponent() : childRow);\r\n\r\n\t\t\t\t\tif(recurse){\r\n\t\t\t\t\t\toutput = output.concat(this.getTreeChildren(childRow, component, recurse));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\tredrawNeeded(data){\r\n\t\treturn (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\r\n\t}\r\n}\r\n\r\nDataTree.moduleName = \"dataTree\";\r\n\r\nexport default DataTree;","export default function(list, options, setFileContents){\r\n\tvar delimiter = options && options.delimiter ? options.delimiter : \",\",\r\n\tfileContents = [],\r\n\theaders = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = [];\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"header\":\r\n\t\t\trow.columns.forEach((col, i) => {\r\n\t\t\t\tif(col && col.depth === 1){\r\n\t\t\t\t\theaders[i] = typeof col.value == \"undefined\"  || col.value === null ? \"\" : ('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item.join(delimiter));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(headers.length){\r\n\t\tfileContents.unshift(headers.join(delimiter));\r\n\t}\r\n\r\n\tfileContents = fileContents.join(\"\\n\");\r\n\r\n\tif(options.bom){\r\n\t\tfileContents = \"\\ufeff\" + fileContents;\r\n\t}\r\n\r\n\tsetFileContents(fileContents, \"text/csv\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar fileContents = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\titem[col.component.getTitleDownload() || col.component.getField()] = col.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfileContents = JSON.stringify(fileContents, null, '\\t');\r\n\r\n\tsetFileContents(fileContents, \"application/json\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar header = [],\r\n\tbody = [],\r\n\tautoTableParams = {},\r\n\trowGroupStyles = options.rowGroupStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 12,\r\n\t\tcellPadding: 6,\r\n\t\tfillColor: 220,\r\n\t},\r\n\trowCalcStyles = options.rowCalcStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 10,\r\n\t\tcellPadding: 4,\r\n\t\tfillColor: 232,\r\n\t},\r\n\tjsPDFParams = options.jsPDF || {},\r\n\ttitle = options && options.title ? options.title : \"\";\r\n\r\n\tif(!jsPDFParams.orientation){\r\n\t\tjsPDFParams.orientation = options.orientation || \"landscape\";\r\n\t}\r\n\r\n\tif(!jsPDFParams.unit){\r\n\t\tjsPDFParams.unit = \"pt\";\r\n\t}\r\n\r\n\t//parse row list\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\theader.push(parseRow(row));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tbody.push(parseRow(row, rowGroupStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tbody.push(parseRow(row, rowCalcStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\tbody.push(parseRow(row));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction parseRow(row, styles){\r\n\t\tvar rowData = [];\r\n\r\n\t\trow.columns.forEach((col) =>{\r\n\t\t\tvar cell;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell = {\r\n\t\t\t\t\tcontent:col.value,\r\n\t\t\t\t\tcolSpan:col.width,\r\n\t\t\t\t\trowSpan:col.height,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(styles){\r\n\t\t\t\t\tcell.styles = styles;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(cell);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\r\n\t//configure PDF\r\n\tvar doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\r\n\r\n\tif(options && options.autoTable){\r\n\t\tif(typeof options.autoTable === \"function\"){\r\n\t\t\tautoTableParams = options.autoTable(doc) || {};\r\n\t\t}else{\r\n\t\t\tautoTableParams = options.autoTable;\r\n\t\t}\r\n\t}\r\n\r\n\tif(title){\r\n\t\tautoTableParams.didDrawPage = function(data) {\r\n\t\t\tdoc.text(title, 40, 30);\r\n\t\t};\r\n\t}\r\n\r\n\tautoTableParams.head = header;\r\n\tautoTableParams.body = body;\r\n\r\n\tdoc.autoTable(autoTableParams);\r\n\r\n\tif(options && options.documentProcessing){\r\n\t\toptions.documentProcessing(doc);\r\n\t}\r\n\r\n\tsetFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\r\n};","import CoreFeature from '../../../../core/CoreFeature.js';\r\n\r\nexport default function(list, options, setFileContents){\r\n\tvar self = this,\r\n\tsheetName = options.sheetName || \"Sheet1\",\r\n\tworkbook = XLSX.utils.book_new(),\r\n\ttableFeatures = new CoreFeature(this),\r\n\toutput;\r\n\r\n\tworkbook.SheetNames = [];\r\n\tworkbook.Sheets = {};\r\n\r\n\tfunction generateSheet(){\r\n\t\tvar rows = [],\r\n\t\tmerges = [],\r\n\t\tworksheet = {},\r\n\t\trange = {s: {c:0, r:0}, e: {c:(list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0), r:list.length }};\r\n\r\n\t\t//parse row list\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach(function(col, j){\r\n\r\n\t\t\t\tif(col){\r\n\t\t\t\t\trowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\r\n\r\n\t\t\t\t\tif(col.width > 1 || col.height > -1){\r\n\t\t\t\t\t\tif(col.height > 1 || col.width > 1){\r\n\t\t\t\t\t\t\tmerges.push({s:{r:i,c:j},e:{r:i + col.height - 1,c:j + col.width - 1}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowData.push(\"\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trows.push(rowData);\r\n\t\t});\r\n\r\n\t\t//convert rows to worksheet\r\n\t\tXLSX.utils.sheet_add_aoa(worksheet, rows);\r\n\r\n\t\tworksheet['!ref'] = XLSX.utils.encode_range(range);\r\n\r\n\t\tif(merges.length){\r\n\t\t\tworksheet[\"!merges\"] = merges;\r\n\t\t}\r\n\r\n\t\treturn worksheet;\r\n\t}\r\n\r\n\tif(options.sheetOnly){\r\n\t\tsetFileContents(generateSheet());\r\n\t\treturn;\r\n\t}\r\n\r\n\tif(options.sheets){\r\n\t\tfor(var sheet in options.sheets){\r\n\r\n\t\t\tif(options.sheets[sheet] === true){\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\t\t\t\tworkbook.Sheets[sheet] = generateSheet();\r\n\t\t\t}else{\r\n\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\r\n\t\t\t\ttableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\",{\r\n\t\t\t\t\ttype:\"xlsx\",\r\n\t\t\t\t\toptions:{sheetOnly:true},\r\n\t\t\t\t\tactive:self.active,\r\n\t\t\t\t\tintercept:function(data){\r\n\t\t\t\t\t\tworkbook.Sheets[sheet] = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tworkbook.SheetNames.push(sheetName);\r\n\t\tworkbook.Sheets[sheetName] = generateSheet();\r\n\t}\r\n\r\n\tif(options.documentProcessing){\r\n\t\tworkbook = options.documentProcessing(workbook);\r\n\t}\r\n\r\n\t//convert workbook to binary array\r\n\tfunction s2ab(s) {\r\n\t\tvar buf = new ArrayBuffer(s.length);\r\n\t\tvar view = new Uint8Array(buf);\r\n\t\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n\t\t\treturn buf;\r\n\t}\r\n\r\n\toutput = XLSX.write(workbook, {bookType:'xlsx', bookSST:true, type: 'binary'});\r\n\r\n\tsetFileContents(s2ab(output), \"application/octet-stream\");\r\n};","export default function(list, options, setFileContents){\r\n\tif(this.modExists(\"export\", true)){\r\n\t\tsetFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\r\n\t}\r\n};","export default function (list, options, setFileContents) {\r\n\tconst fileContents = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tconst item = {};\r\n\r\n\t\tswitch (row.type) {\r\n\t\t\tcase \"header\":\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process row groups\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process column calculations\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\t\tif (col) {\r\n\t\t\t\t\t\titem[col.component.getTitleDownload() || col.component.getField()] = col.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfileContents.push(JSON.stringify(item));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tsetFileContents(fileContents.join(\"\\n\"), \"application/x-ndjson\");\r\n};","import csv from './downloaders/csv.js';\r\nimport json from './downloaders/json.js';\r\nimport pdf from './downloaders/pdf.js';\r\nimport xlsx from './downloaders/xlsx.js';\r\nimport html from './downloaders/html.js';\r\nimport jsonLines from './downloaders/jsonLines.js';\r\n\r\nexport default {\r\n\tcsv:csv,\r\n\tjson:json,\r\n\tjsonLines:jsonLines,\r\n\tpdf:pdf,\r\n\txlsx:xlsx,\r\n\thtml:html,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultDownloaders from './defaults/downloaders.js';\r\n\r\nclass Download extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerTableOption(\"downloadReady\", function(data, blob){return blob;}); //function to manipulate download data\r\n\t\tthis.registerTableOption(\"downloadConfig\", {}); //download config\r\n\t\tthis.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\r\n\r\n\t\tthis.registerColumnOption(\"download\");\r\n\t\tthis.registerColumnOption(\"titleDownload\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"download\", this.download.bind(this));\r\n\t\tthis.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tdownloadToTab(type, filename, options, active){\r\n\t\tthis.download(type, filename, options, active, true);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//trigger file download\r\n\tdownload(type, filename, options, range, interceptCallback){\r\n\t\tvar downloadFunc = false;\r\n\r\n\t\tfunction buildLink(data, mime){\r\n\t\t\tif(interceptCallback){\r\n\t\t\t\tif(interceptCallback === true){\r\n\t\t\t\t\tthis.triggerDownload(data, mime, type, filename, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinterceptCallback(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.triggerDownload(data, mime, type, filename);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(typeof type == \"function\"){\r\n\t\t\tdownloadFunc = type;\r\n\t\t}else{\r\n\t\t\tif(Download.downloaders[type]){\r\n\t\t\t\tdownloadFunc = Download.downloaders[type];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Download Error - No such download type found: \", type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(downloadFunc){\r\n\t\t\tvar list = this.generateExportList(range);\r\n\r\n\t\t\tdownloadFunc.call(this.table, list , options || {}, buildLink.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateExportList(range){\r\n\t\tvar list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\r\n\r\n\t\t//assign group header formatter\r\n\t\tvar groupHeader = this.table.options.groupHeaderDownload;\r\n\r\n\t\tif(groupHeader && !Array.isArray(groupHeader)){\r\n\t\t\tgroupHeader = [groupHeader];\r\n\t\t}\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar group;\r\n\r\n\t\t\tif(row.type === \"group\"){\r\n\t\t\t\tgroup = row.columns[0];\r\n\r\n\t\t\t\tif(groupHeader && groupHeader[row.indent]){\r\n\t\t\t\t\tgroup.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn list;\r\n\t}\r\n\r\n\ttriggerDownload(data, mime, type, filename, newTab){\r\n\t\tvar element = document.createElement('a'),\r\n\t\tblob = new Blob([data],{type:mime}),\r\n\t\tfilename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\r\n\r\n\t\tblob = this.table.options.downloadReady(data, blob);\r\n\r\n\t\tif(blob){\r\n\r\n\t\t\tif(newTab){\r\n\t\t\t\twindow.open(window.URL.createObjectURL(blob));\r\n\t\t\t}else{\r\n\t\t\t\tif(navigator.msSaveOrOpenBlob){\r\n\t\t\t\t\tnavigator.msSaveOrOpenBlob(blob, filename);\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.setAttribute('href', window.URL.createObjectURL(blob));\r\n\r\n\t\t\t\t\t//set file title\r\n\t\t\t\t\telement.setAttribute('download', filename);\r\n\r\n\t\t\t\t\t//trigger download\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\r\n\t\t\t\t\t//remove temporary link element\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"downloadComplete\");\r\n\t\t}\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"intercept\":\r\n\t\t\tthis.download(data.type, \"\", data.options, data.active, data.intercept);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nDownload.moduleName = \"download\";\r\n\r\n//load defaults\r\nDownload.downloaders = defaultDownloaders;\r\n\r\nexport default Download;","export default function maskInput(el, options){\r\n\tvar mask = options.mask,\r\n\tmaskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\r\n\tmaskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\r\n\tmaskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\",\r\n\tsuccess = false;\r\n\r\n\tfunction fillSymbols(index){\r\n\t\tvar symbol = mask[index];\r\n\t\tif(typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber){\r\n\t\t\tel.value = el.value + \"\" + symbol;\r\n\t\t\tfillSymbols(index+1);\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"keydown\", (e) => {\r\n\t\tvar index = el.value.length,\r\n\t\tchar = e.key;\r\n\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(index >= mask.length){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tsuccess = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(mask[index]){\r\n\t\t\t\t\tcase maskLetter:\r\n\t\t\t\t\tif(char.toUpperCase() == char.toLowerCase()){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskNumber:\r\n\t\t\t\t\tif(isNaN(char)){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskWildcard:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(char !== mask[index]){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t});\r\n\r\n\tel.addEventListener(\"keyup\", (e) => {\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(options.maskAutoFill){\r\n\t\t\t\tfillSymbols(el.value.length);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tif(!el.placeholder){\r\n\t\tel.placeholder = mask;\r\n\t}\r\n\r\n\tif(options.maskAutoFill){\r\n\t\tfillSymbols(el.value.length);\r\n\t}\r\n}","import maskInput from '../../inputMask.js';\r\n\r\n//input element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\t//create and style input\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\r\n\t\tif(editorParams.selectContents){\r\n\t\t\tinput.select();\r\n\t\t}\r\n\t});\r\n\r\n\tfunction onChange(e){\r\n\t\tif(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\t\t\tif(success(input.value)){\r\n\t\t\t\tcellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur or change\r\n\tinput.addEventListener(\"change\", onChange);\r\n\tinput.addEventListener(\"blur\", onChange);\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\t// case 9:\r\n\t\t\tcase 13:\r\n\t\t\tonChange(e);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//resizable text area element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n    var self = this,\r\n    cellValue = cell.getValue(),\r\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\r\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\"  ? cellValue : \"\"),\r\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\r\n    input = document.createElement(\"textarea\"),\r\n    scrollHeight = 0;\r\n\r\n    //create and style input\r\n    input.style.display = \"block\";\r\n    input.style.padding = \"2px\";\r\n    input.style.height = \"100%\";\r\n    input.style.width = \"100%\";\r\n    input.style.boxSizing = \"border-box\";\r\n    input.style.whiteSpace = \"pre-wrap\";\r\n    input.style.resize = \"none\";\r\n\r\n    if(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n        for (let key in editorParams.elementAttributes){\r\n            if(key.charAt(0) == \"+\"){\r\n                key = key.slice(1);\r\n                input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n            }else{\r\n                input.setAttribute(key, editorParams.elementAttributes[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    input.value = value;\r\n\r\n    onRendered(function(){\r\n        input.focus({preventScroll: true});\r\n        input.style.height = \"100%\";\r\n\r\n        input.scrollHeight;\r\n        input.style.height = input.scrollHeight + \"px\";\r\n        cell.getRow().normalizeHeight();\r\n\r\n        if(editorParams.selectContents){\r\n\t\t\tinput.select();\r\n\t\t}\r\n    });\r\n\r\n    function onChange(e){\r\n\r\n        if(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\r\n            if(success(input.value)){\r\n                cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cell.getRow().normalizeHeight();\r\n            },300)\r\n        }else{\r\n            cancel();\r\n        }\r\n    }\r\n\r\n    //submit new value on blur or change\r\n    input.addEventListener(\"change\", onChange);\r\n    input.addEventListener(\"blur\", onChange);\r\n\r\n    input.addEventListener(\"keyup\", function(){\r\n\r\n        input.style.height = \"\";\r\n\r\n        var heightNow = input.scrollHeight;\r\n\r\n        input.style.height = heightNow + \"px\";\r\n\r\n        if(heightNow != scrollHeight){\r\n            scrollHeight = heightNow;\r\n            cell.getRow().normalizeHeight();\r\n        }\r\n    });\r\n\r\n    input.addEventListener(\"keydown\", function(e){\r\n\r\n        switch(e.keyCode){\r\n            case 27:\r\n            cancel();\r\n            break;\r\n\r\n            case 38: //up arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n\r\n            break;\r\n\r\n            case 40: //down arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart !== input.value.length)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n            break;\r\n\r\n            case 35:\r\n            case 36:\r\n            e.stopPropagation();\r\n            break;\r\n        }\r\n    });\r\n\r\n    if(editorParams.mask){\r\n        maskInput(input, editorParams);\r\n    }\r\n\r\n    return input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"number\");\r\n\r\n\tif(typeof editorParams.max != \"undefined\"){\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif(typeof editorParams.min != \"undefined\"){\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif(typeof editorParams.step != \"undefined\"){\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tvar blurFunc = function(e){\r\n\t\tonChange();\r\n\t};\r\n\r\n\tonRendered(function () {\r\n\t\t//submit new value on blur\r\n\t\tinput.removeEventListener(\"blur\", blurFunc);\r\n\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\r\n\t\t//submit new value on blur\r\n\t\tinput.addEventListener(\"blur\", blurFunc);\r\n\r\n\t\tif(editorParams.selectContents){\r\n\t\t\tinput.select();\r\n\t\t}\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value !== cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tif(vertNav == \"editor\"){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"range\");\r\n\r\n\tif (typeof editorParams.max != \"undefined\") {\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif (typeof editorParams.min != \"undefined\") {\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif (typeof editorParams.step != \"undefined\") {\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tonRendered(function () {\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value != cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tonChange();\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import maskInput from './inputMask.js';\r\nimport urlBuilder from '../Ajax/defaults/urlGenerator.js';\r\n\r\nexport default class Edit{\r\n    constructor(editor, cell, onRendered, success, cancel, editorParams){\r\n        this.edit = editor;\r\n        this.table = editor.table;\r\n        this.cell = cell;\r\n        this.params = this._initializeParams(editorParams);\r\n        \r\n        this.data = [];\r\n        this.displayItems = [];\r\n        this.currentItems = [];\r\n        this.focusedItem = null;\r\n        \r\n        this.input = this._createInputElement();\r\n        this.listEl = this._createListElement();\r\n        \r\n        this.initialValues = null; \r\n        \r\n        this.isFilter = !cell._getSelf;\r\n        \r\n        this.filterTimeout = null;\r\n        this.filtered = false;\r\n        this.typing = false;\r\n        \r\n        this.values = []; \r\n        this.popup = null;  \r\n        \r\n        this.listIteration = 0;\r\n        \r\n        this.blurable = true;\r\n        \r\n        this.actions = {\r\n            success:success,\r\n            cancel:cancel\r\n        }\r\n        \r\n        this._deprecationCheck();\r\n        this._initializeValue();\r\n        \r\n        onRendered(this._onRendered.bind(this));\r\n    }\r\n    \r\n    _deprecationCheck(){\r\n        if(this.params.listItemFormatter){\r\n            console.warn(\"The listItemFormatter editor param has been deprecated, please see the latest editor documentation for updated options\");\r\n        }\r\n        \r\n        if(this.params.sortValuesList){\r\n            console.warn(\"The sortValuesList editor param has been deprecated, please see the latest editor documentation for updated options\");\r\n        }\r\n        \r\n        if(this.params.searchFunc){\r\n            console.warn(\"The searchFunc editor param has been deprecated, please see the latest editor documentation for updated options\");\r\n        }\r\n        \r\n        if(this.params.searchingPlaceholder){\r\n            console.warn(\"The searchingPlaceholder editor param has been deprecated, please see the latest editor documentation for updated options\");\r\n        }\r\n    }\r\n    \r\n    _initializeValue(){\r\n        var initialValue = this.cell.getValue();\r\n        \r\n        if(typeof initialValue === \"undefined\" && typeof this.params.defaultValue !== \"undefined\"){\r\n            initialValue = this.params.defaultValue;\r\n        }\r\n        \r\n        this.initialValues = this.params.multiselect ? initialValue : [initialValue];\r\n        \r\n        if(this.isFilter){\r\n            this.input.value = this.initialValues.join(\",\");\r\n            this.headerFilterInitialListGen();            \r\n        }\r\n    }\r\n    \r\n    _onRendered(){\r\n        var cellEl = this.cell.getElement();\r\n        \r\n        function clickStop(e){\r\n            e.stopPropagation();\r\n        }\r\n        \r\n        this.input.style.height = \"100%\";\r\n        this.input.focus({preventScroll: true});\r\n        \r\n        \r\n        cellEl.addEventListener(\"click\", clickStop);\r\n        \r\n        setTimeout(() => {\r\n            cellEl.removeEventListener(\"click\", clickStop);\r\n        }, 1000)\r\n    }\r\n    \r\n    _createListElement(){\r\n        var listEl = document.createElement(\"div\");\r\n        listEl.classList.add(\"tabulator-edit-list\");\r\n        \r\n        listEl.addEventListener(\"mousedown\", this._preventBlur.bind(this));\r\n        listEl.addEventListener(\"keydown\", this._inputKeyDown.bind(this))\r\n        \r\n        return listEl;\r\n    }\r\n    \r\n    _setListWidth(){\r\n        var element = this.isFilter ? this.input : this.cell.getElement();\r\n        \r\n        this.listEl.style.minWidth = element.offsetWidth + \"px\";\r\n        \r\n        if(this.params.maxWidth){\r\n            if(this.params.maxWidth === true){\r\n                this.listEl.style.maxWidth = element.offsetWidth + \"px\";\r\n            }else if(typeof this.params.maxWidth === \"number\"){\r\n                this.listEl.style.maxWidth = this.params.maxWidth + \"px\";\r\n            }else{\r\n                this.listEl.style.maxWidth = this.params.maxWidth;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    _createInputElement(){\r\n        var attribs = this.params.elementAttributes;\r\n        var input = document.createElement(\"input\");\r\n        \r\n        input.setAttribute(\"type\", this.params.clearable ? \"search\" : \"text\");\r\n        \r\n        input.style.padding = \"4px\";\r\n        input.style.width = \"100%\";\r\n        input.style.boxSizing = \"border-box\";\r\n        \r\n        if(!this.params.autocomplete){\r\n            input.style.cursor = \"default\";\r\n            input.style.caretColor = \"transparent\";\r\n            // input.readOnly = (this.edit.currentCell != false);\r\n        }\r\n        \r\n        if(attribs && typeof attribs == \"object\"){\r\n            for (let key in attribs){\r\n                if(key.charAt(0) == \"+\"){\r\n                    key = key.slice(1);\r\n                    input.setAttribute(key, input.getAttribute(key) + attribs[\"+\" + key]);\r\n                }else{\r\n                    input.setAttribute(key, attribs[key]);\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(this.params.mask){\r\n            maskInput(input, this.params);\r\n        }\r\n        \r\n        this._bindInputEvents(input);\r\n        \r\n        return input;\r\n    }\r\n    \r\n    _initializeParams(params){\r\n        var valueKeys = [\"values\", \"valuesURL\", \"valuesLookup\"],\r\n        valueCheck;\r\n\r\n        params = Object.assign({}, params);\r\n        \r\n        params.verticalNavigation = params.verticalNavigation || \"editor\";\r\n        params.placeholderLoading = typeof params.placeholderLoading === \"undefined\" ? \"Searching ...\" : params.placeholderLoading;\r\n        params.placeholderEmpty = typeof params.placeholderEmpty === \"undefined\" ? \"No Results Found\" : params.placeholderEmpty;\r\n        params.filterDelay = typeof params.filterDelay === \"undefined\" ? 300 : params.filterDelay;\r\n        \r\n        params.emptyValue = Object.keys(params).includes(\"emptyValue\") ? params.emptyValue : \"\";\r\n\r\n        valueCheck = Object.keys(params).filter(key => valueKeys.includes(key)).length;\r\n\r\n        if(!valueCheck){\r\n            console.warn(\"list editor config error - either the values, valuesURL, or valuesLookup option must be set\")\r\n        }else if(valueCheck > 1){\r\n            console.warn(\"list editor config error - only one of the values, valuesURL, or valuesLookup options can be set on the same editor\")\r\n        }\r\n        \r\n        if(params.autocomplete){\r\n            if(params.multiselect){\r\n                params.multiselect = false;\r\n                console.warn(\"list editor config error - multiselect option is not available when autocomplete is enabled\")\r\n            }\r\n        }else{\r\n            if(params.freetext){\r\n                params.freetext = false;\r\n                console.warn(\"list editor config error - freetext option is only available when autocomplete is enabled\");\r\n            }\r\n            \r\n            if(params.filterFunc){\r\n                params.filterFunc = false;\r\n                console.warn(\"list editor config error - filterFunc option is only available when autocomplete is enabled\");\r\n            }\r\n            \r\n            if(params.filterRemote){\r\n                params.filterRemote = false;\r\n                console.warn(\"list editor config error - filterRemote option is only available when autocomplete is enabled\");\r\n            }\r\n            \r\n            if(params.mask){\r\n                params.mask = false;\r\n                console.warn(\"list editor config error - mask option is only available when autocomplete is enabled\");\r\n            }\r\n            \r\n            if(params.allowEmpty){\r\n                params.allowEmpty = false;\r\n                console.warn(\"list editor config error - allowEmpty option is only available when autocomplete is enabled\");\r\n            }\r\n            \r\n            if(params.listOnEmpty){\r\n                params.listOnEmpty = false;\r\n                console.warn(\"list editor config error - listOnEmpty option is only available when autocomplete is enabled\");\r\n            }\r\n        }\r\n        \r\n        if(params.filterRemote && !(typeof params.valuesLookup === \"function\" || typeof params.valuesURL)){\r\n            params.filterRemote = false;\r\n            console.warn(\"list editor config error - filterRemote option should only be used when values list is populated from a remote source\");\r\n        }\r\n        return params;\r\n    }\r\n    //////////////////////////////////////\r\n    ////////// Event Handling ////////////\r\n    //////////////////////////////////////\r\n    \r\n    _bindInputEvents(input){\r\n        input.addEventListener(\"focus\", this._inputFocus.bind(this))\r\n        input.addEventListener(\"click\", this._inputClick.bind(this))\r\n        input.addEventListener(\"blur\", this._inputBlur.bind(this))\r\n        input.addEventListener(\"keydown\", this._inputKeyDown.bind(this))\r\n        input.addEventListener(\"search\", this._inputSearch.bind(this))\r\n        \r\n        if(this.params.autocomplete){\r\n            input.addEventListener(\"keyup\", this._inputKeyUp.bind(this))\r\n        }\r\n    }\r\n    \r\n    \r\n    _inputFocus(e){\r\n        this.rebuildOptionsList();\r\n    }\r\n    \r\n    _filter(){\r\n        if(this.params.filterRemote){\r\n            clearTimeout(this.filterTimeout);\r\n            \r\n            this.filterTimeout = setTimeout(() => {\r\n                this.rebuildOptionsList();\r\n            }, this.params.filterDelay);\r\n        }else{\r\n            this._filterList();\r\n        }\r\n    }\r\n    \r\n    _inputClick(e){\r\n        e.stopPropagation();\r\n    }\r\n    \r\n    _inputBlur(e){\r\n        if(this.blurable && this.popup){\r\n            this.popup.hide();\r\n        }\r\n    }\r\n    \r\n    _inputSearch(){\r\n        this._clearChoices();\r\n    }\r\n    \r\n    _inputKeyDown(e){\r\n        switch(e.keyCode){\r\n            \r\n            case 38: //up arrow\r\n            this._keyUp(e);\r\n            break\r\n            \r\n            case 40: //down arrow\r\n            this._keyDown(e);\r\n            break;\r\n            \r\n            case 37: //left arrow\r\n            case 39: //right arrow\r\n            this._keySide(e);\r\n            break;\r\n            \r\n            case 13: //enter\r\n            this._keyEnter();\r\n            break;\r\n            \r\n            case 27: //escape\r\n            this._keyEsc();\r\n            break;\r\n            \r\n            case 36: //home\r\n            case 35: //end\r\n            this._keyHomeEnd(e);\r\n            break;\r\n            \r\n            case 9: //tab\r\n            break;\r\n            \r\n            default:\r\n            this._keySelectLetter(e);\r\n        }\r\n    }\r\n    \r\n    _inputKeyUp(e){\r\n        switch(e.keyCode){\r\n            case 38: //up arrow\r\n            case 37: //left arrow\r\n            case 39: //up arrow\r\n            case 40: //right arrow\r\n            case 13: //enter\r\n            case 27: //escape\r\n            break;\r\n            \r\n            default:\r\n            this._keyAutoCompLetter(e);\r\n        }\r\n    }\r\n    \r\n    _preventBlur(){\r\n        this.blurable = false;\r\n        \r\n        setTimeout(function(){\r\n            this.blurable = true;\r\n        }, 10);\r\n    }\r\n    \r\n    //////////////////////////////////////\r\n    //////// Keyboard Navigation /////////\r\n    //////////////////////////////////////\r\n    \r\n    _keyUp(e){\r\n        var index = this.displayItems.indexOf(this.focusedItem);\r\n        \r\n        if(this.params.verticalNavigation == \"editor\" || (this.params.verticalNavigation == \"hybrid\" && index)){\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            \r\n            if(index > 0){\r\n                this._focusItem(this.displayItems[index - 1]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    _keyDown(e){\r\n        var index = this.displayItems.indexOf(this.focusedItem);\r\n        \r\n        if(this.params.verticalNavigation == \"editor\" || (this.params.verticalNavigation == \"hybrid\" && index < this.displayItems.length - 1)){\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            \r\n            if(index < this.displayItems.length - 1){\r\n                if(index == -1){\r\n                    this._focusItem(this.displayItems[0]);\r\n                }else{\r\n                    this._focusItem(this.displayItems[index + 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    _keySide(e){\r\n        e.stopImmediatePropagation();\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n    \r\n    _keyEnter(e){\r\n        if(this.focusedItem){\r\n            this._chooseItem(this.focusedItem);\r\n        }else{\r\n            this._cancel();\r\n        }\r\n    }\r\n    \r\n    _keyEsc(e){\r\n        this._cancel();\r\n    }\r\n    \r\n    _keyHomeEnd(e){\r\n        if(this.params.autocomplete){\r\n            //prevent table navigation while using input element\r\n            e.stopImmediatePropagation();\r\n        }\r\n    }\r\n    \r\n    _keySelectLetter(e){\r\n        if(!this.params.autocomplete){\r\n            // if(this.edit.currentCell === false){\r\n            e.preventDefault();\r\n            // }\r\n            \r\n            if(e.keyCode >= 38 && e.keyCode <= 90){\r\n                this._scrollToValue(e.keyCode);\r\n            }\r\n        }\r\n    }\r\n    \r\n    _keyAutoCompLetter(e){\r\n        this._filter();\r\n        this.typing = true;\r\n    }\r\n    \r\n    \r\n    _scrollToValue(char){\r\n        clearTimeout(this.filterTimeout);\r\n        \r\n        var character = String.fromCharCode(char).toLowerCase();\r\n        this.filterTerm += character.toLowerCase();\r\n        \r\n        var match = this.displayItems.find((item) => {\r\n            return typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(this.filterTerm);\r\n        });\r\n        \r\n        if(match){\r\n            this._focusItem(match);\r\n        }\r\n        \r\n        this.filterTimeout = setTimeout(() => {\r\n            this.filterTerm = \"\";\r\n        }, 800)\r\n    }\r\n    \r\n    _focusItem(item){\r\n        if(this.focusedItem && this.focusedItem.element){\r\n            this.focusedItem.element.classList.remove(\"focused\");\r\n        }\r\n        \r\n        this.focusedItem = item;\r\n        \r\n        if(item && item.element){\r\n            item.element.classList.add(\"focused\");\r\n            item.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n        }\r\n    }\r\n    \r\n    \r\n    //////////////////////////////////////\r\n    /////// Data List Generation /////////\r\n    //////////////////////////////////////\r\n    headerFilterInitialListGen(){\r\n        this._generateOptions(true);\r\n    }\r\n    \r\n    rebuildOptionsList(){\r\n        this._generateOptions()\r\n        .then(this._sortOptions.bind(this))\r\n        .then(this._buildList.bind(this))\r\n        .then(this._showList.bind(this))\r\n        .catch((e) => {\r\n            if(!Number.isInteger(e)){\r\n                console.error(\"List generation error\", e);\r\n            }\r\n        })\r\n    }\r\n    \r\n    _filterList(){\r\n        this._buildList(this._filterOptions());\r\n        this._showList();\r\n    }\r\n    \r\n    _generateOptions(silent){\r\n        var values = [];\r\n        var itteration = ++ this.listIteration;\r\n        \r\n        this.filtered = false;\r\n        \r\n        if(this.params.values){\r\n            values = this.params.values;\r\n        }else if (this.params.valuesURL){\r\n            values = this._ajaxRequest(this.params.valuesURL, this.input.value);\r\n        }else{\r\n            if(typeof this.params.valuesLookup === \"function\"){\r\n                values = this.params.valuesLookup(cell, this.input.value);\r\n            }else if(this.params.valuesLookup){\r\n                values = this._uniqueColumnValues(this.params.valuesLookupField);\r\n            }\r\n        }\r\n        \r\n        if(values instanceof Promise){\r\n            if(!silent){\r\n                this._addPlaceholder(this.params.placeholderLoading);\r\n            }\r\n            \r\n            return values.then()\r\n            .then((responseValues) => {\r\n                if(this.listIteration === itteration){\r\n                    return this._parseList(responseValues);\r\n                }else{\r\n                    return Promise.reject(itteration);\r\n                }\r\n            });\r\n        }else{\r\n            return Promise.resolve(this._parseList(values))\r\n        }\r\n    }\r\n    \r\n    _addPlaceholder(contents){\r\n        var placeholder = document.createElement(\"div\");\r\n        \r\n        if(typeof contents === \"function\"){\r\n            contents = contents(cell.getComponent(), this.listEl);\r\n        }\r\n        \r\n        if(contents){\r\n            this._clearList();\r\n            \r\n            if(contents instanceof HTMLElement){\r\n                placeholder = contents;\r\n            }else{\r\n                placeholder.classList.add(\"tabulator-edit-list-placeholder\")\r\n                placeholder.innerHTML = contents;\r\n            }\r\n            \r\n            this.listEl.appendChild(placeholder);\r\n            \r\n            this._showList();\r\n        }\r\n    }\r\n    \r\n    _ajaxRequest(url, term){\r\n        var params = this.params.filterRemote ? {term:term} : {};\r\n        url = urlBuilder(url, {}, params);\r\n        \r\n        return fetch(url)\r\n        .then((response)=>{\r\n            if(response.ok) {\r\n                return response.json()\r\n                .catch((error)=>{\r\n                    console.warn(\"List Ajax Load Error - Invalid JSON returned\", error);\r\n                    return Promise.reject(error);\r\n                });\r\n            }else{\r\n                console.error(\"List Ajax Load Error - Connection Error: \" + response.status, response.statusText);\r\n                return Promise.reject(response);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.error(\"List Ajax Load Error - Connection Error: \", error);\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    \r\n    _uniqueColumnValues(field){\r\n        var output = {},\r\n        data = this.table.getData(this.params.valuesLookup),\r\n        column;\r\n        \r\n        if(field){\r\n            column = this.table.columnManager.getColumnByField(field);\r\n        }else{\r\n            column = this.cell.getColumn()._getSelf();\r\n        }\r\n        \r\n        if(column){\r\n            data.forEach((row) => {\r\n                var val = column.getFieldValue(row);\r\n                \r\n                if(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n                    output[val] = true;\r\n                }\r\n            });\r\n        }else{\r\n            console.warn(\"unable to find matching column to create select lookup list:\", field);\r\n            output = [];\r\n        }\r\n        \r\n        return Object.keys(output);\r\n    }\r\n    \r\n    \r\n    _parseList(inputValues){\r\n        var data = [];\r\n        \r\n        if(!Array.isArray(inputValues)){\r\n            inputValues = Object.entries(inputValues).map(([key, value]) => {\r\n                return {\r\n                    label:value,\r\n                    value:key,\r\n                };\r\n            });\r\n        }\r\n        \r\n        inputValues.forEach((value) => {\r\n            if(typeof value !== \"object\"){\r\n                value = {\r\n                    label:value,\r\n                    value:value,\r\n                };\r\n            }\r\n            \r\n            this._parseListItem(value, data, 0);\r\n        });\r\n        \r\n        this.data = data;\r\n        \r\n        return data;    \r\n    }\r\n    \r\n    _parseListItem(option, data, level){\r\n        var item = {};\r\n        \r\n        if(option.options){\r\n            item = this._parseListGroup(option, level + 1);\r\n        }else{\r\n            item = {\r\n                label:option.label,\r\n                value:option.value,\r\n                itemParams:option.itemParams,\r\n                elementAttributes: option.elementAttributes,\r\n                element:false,\r\n                selected:false,\r\n                visible:true,\r\n                level:level,\r\n                original:option,\r\n            };\r\n            \r\n            if(this.initialValues && this.initialValues.indexOf(option.value) > -1){\r\n                this._chooseItem(item, true);\r\n            }\r\n        }\r\n        \r\n        data.push(item);\r\n    }\r\n    \r\n    _parseListGroup(option, level){\r\n        var item = {\r\n            label:option.label,\r\n            group:true,\r\n            itemParams:option.itemParams,\r\n            elementAttributes:option.elementAttributes,\r\n            element:false,\r\n            visible:true,\r\n            level:level,\r\n            options:[],\r\n            original:option,\r\n        };\r\n        \r\n        option.options.forEach((child) => {\r\n            this._parseListItem(child, item.options, level);\r\n        });\r\n        \r\n        return item;\r\n    }\r\n    \r\n    _sortOptions(options){\r\n        var sorter;\r\n        \r\n        if(this.params.sort){\r\n            sorter = typeof this.params.sort === \"function\" ? this.params.sort : this._defaultSortFunction.bind(this);\r\n            \r\n            this._sortGroup(sorter, options);\r\n        }\r\n        \r\n        return options;\r\n    }\r\n    \r\n    _sortGroup(sorter, options){\r\n        options.sort((a,b) => {\r\n            return sorter(a.label, b.label, a.value, b.value, a.original, b.original);\r\n        });\r\n        \r\n        options.forEach((option) => {\r\n            if(option.group){\r\n                this._sortGroup(sorter, option.options);\r\n            }\r\n        })\r\n    }\r\n    \r\n    _defaultSortFunction(as, bs){\r\n        var a, b, a1, b1, i= 0, L, rx = /(\\d+)|(\\D+)/g, rd = /\\d/;\r\n        var emptyAlign = 0;\r\n        \r\n        if(this.params.sort === \"desc\"){\r\n            [as, bs] = [bs, as];\r\n        }\r\n        \r\n        //handle empty values\r\n        if(!as && as!== 0){\r\n            emptyAlign =  !bs && bs!== 0 ? 0 : -1;\r\n        }else if(!bs && bs!== 0){\r\n            emptyAlign =  1;\r\n        }else{\r\n            if(isFinite(as) && isFinite(bs)) return as - bs;\r\n            a = String(as).toLowerCase();\r\n            b = String(bs).toLowerCase();\r\n            if(a === b) return 0;\r\n            if(!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\r\n            a = a.match(rx);\r\n            b = b.match(rx);\r\n            L = a.length > b.length ? b.length : a.length;\r\n            while(i < L){\r\n                a1= a[i];\r\n                b1= b[i++];\r\n                if(a1 !== b1){\r\n                    if(isFinite(a1) && isFinite(b1)){\r\n                        if(a1.charAt(0) === \"0\") a1 = \".\" + a1;\r\n                        if(b1.charAt(0) === \"0\") b1 = \".\" + b1;\r\n                        return a1 - b1;\r\n                    }\r\n                    else return a1 > b1 ? 1 : -1;\r\n                }\r\n            }\r\n            \r\n            return a.length > b.length;\r\n        }\r\n        \r\n        return emptyAlign;\r\n    }\r\n    \r\n    _filterOptions(){\r\n        var filterFunc = this.params.filterFunc || this._defaultFilterFunc;\r\n        var term = this.input.value;\r\n        var results = [];\r\n        \r\n        if(term){\r\n            this.filtered = true;\r\n            \r\n            this.data.forEach((item) => {\r\n                this._filterItem(filterFunc, term, item);\r\n            });\r\n        }else{\r\n            this.filtered = false;\r\n        }\r\n        \r\n        return this.data;\r\n    }\r\n    \r\n    _filterItem(func, term, item){\r\n        var matches = false;\r\n        \r\n        if(!item.group){\r\n            item.visible = func(term, item.label, item.value, item.original);\r\n        }else{\r\n            item.options.forEach((option) => {\r\n                if(this._filterItem(func, term, option)){\r\n                    matches = true;\r\n                }\r\n            });\r\n            \r\n            item.visible = matches;\r\n        }\r\n        \r\n        return item.visible;\r\n    }\r\n    \r\n    _defaultFilterFunc(term, label, value, item){\r\n        var term = String(term).toLowerCase();\r\n        \r\n        if(label !== null || typeof label !== \"undefined\"){\r\n            if(String(label).toLowerCase().indexOf(term) > -1 || String(value).toLowerCase(term).indexOf() > -1){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    //////////////////////////////////////\r\n    /////////// Display List /////////////\r\n    //////////////////////////////////////\r\n    \r\n    _clearList(){\r\n        while(this.listEl.firstChild) this.listEl.removeChild(this.listEl.firstChild);\r\n        \r\n        this.displayItems = [];\r\n    }\r\n    \r\n    _buildList(data){\r\n        this._clearList();\r\n        \r\n        data.forEach((option) => {\r\n            this._buildItem(option);\r\n        });\r\n        \r\n        if(!this.displayItems.length){\r\n            this._addPlaceholder(this.params.placeholderEmpty);\r\n        }  \r\n    }\r\n    \r\n    _buildItem(item){\r\n        var el = item.element,\r\n        contents;\r\n        \r\n        if(!this.filtered || item.visible){\r\n            \r\n            if(!el){\r\n                el = document.createElement(\"div\");\r\n                el.tabIndex = 0;\r\n                \r\n                contents = this.params.itemFormatter ? this.params.itemFormatter(item.label, item.value, item.original, el) : item.label;\r\n                \r\n                if(contents instanceof HTMLElement){\r\n                    el.appendChild(contents)\r\n                }else{\r\n                    el.innerHTML = contents;\r\n                }\r\n                \r\n                if(item.group){\r\n                    el.classList.add(\"tabulator-edit-list-group\");\r\n                }else{\r\n                    el.classList.add(\"tabulator-edit-list-item\");\r\n                }\r\n                \r\n                el.classList.add(\"tabulator-edit-list-group-level-\" + item.level);\r\n                \r\n                if(item.elementAttributes && typeof item.elementAttributes == \"object\"){\r\n                    for (let key in item.elementAttributes){\r\n                        if(key.charAt(0) == \"+\"){\r\n                            key = key.slice(1);\r\n                            el.setAttribute(key, this.input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\r\n                        }else{\r\n                            el.setAttribute(key, item.elementAttributes[key]);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if(item.group){\r\n                    el.addEventListener(\"click\", this._groupClick.bind(this, item));\r\n                }else{\r\n                    el.addEventListener(\"click\", this._itemClick.bind(this, item));\r\n                }\r\n                \r\n                el.addEventListener(\"mousedown\", this._preventBlur.bind(this));\r\n                \r\n                item.element = el;\r\n            }\r\n            \r\n            this._styleItem(item);\r\n            \r\n            this.listEl.appendChild(el);\r\n            \r\n            if(item.group){\r\n                item.options.forEach((option) => {\r\n                    this._buildItem(option);\r\n                });\r\n            }else{\r\n                this.displayItems.push(item);\r\n            }\r\n        }\r\n    }\r\n    \r\n    _showList(){\r\n        var startVis = this.popup && this.popup.isVisible();\r\n        \r\n        if(this.input.parentNode){\r\n            if(this.params.autocomplete && this.input.value === \"\" && !this.params.listOnEmpty){\r\n                if(this.popup){\r\n                    this.popup.hide(true);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            this._setListWidth();\r\n            \r\n            if(!this.popup){\r\n                this.popup = this.edit.popup(this.listEl);\r\n            }\r\n            \r\n            this.popup.show(this.cell.getElement(), \"bottom\")\r\n            \r\n            if(!startVis){\r\n                this.popup.hideOnBlur(this._resolveValue.bind(this, true));\r\n            }\r\n        }\r\n    }\r\n    \r\n    _styleItem(item){\r\n        if(item && item.element){\r\n            if(item.selected){\r\n                item.element.classList.add(\"active\");\r\n            }else{\r\n                item.element.classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    //////////////////////////////////////\r\n    ///////// User Interaction ///////////\r\n    //////////////////////////////////////\r\n    \r\n    _itemClick(item, e){\r\n        e.stopPropagation();\r\n        \r\n        this._chooseItem(item);\r\n    }\r\n    \r\n    _groupClick(item, e){\r\n        e.stopPropagation();\r\n    }\r\n    \r\n    \r\n    //////////////////////////////////////\r\n    ////// Current Item Management ///////\r\n    //////////////////////////////////////\r\n    \r\n    _cancel(){\r\n        this.popup.hide(true);\r\n        this.actions.cancel();\r\n    }\r\n    \r\n    _clearChoices(){\r\n        this.typing = true;\r\n        \r\n        this.currentItems.forEach((item) => {\r\n            item.selected = false;\r\n            this._styleItem(item);\r\n        });\r\n        \r\n        this.currentItems = [];\r\n        \r\n        this.focusedItem = null;\r\n    }\r\n    \r\n    _chooseItem(item, silent){\r\n        var index;\r\n        \r\n        this.typing = false;\r\n        \r\n        if(this.params.multiselect){\r\n            index = this.currentItems.indexOf(item);\r\n            \r\n            if(index > -1){\r\n                this.currentItems.splice(index, 1);\r\n                item.selected = false;\r\n            }else{\r\n                this.currentItems.push(item);\r\n                item.selected = true;\r\n            }\r\n            \r\n            this.input.value = this.currentItems.map(item => item.label).join(\",\");\r\n            \r\n            this._styleItem(item);\r\n            \r\n        }else{\r\n            this.currentItems = [item];\r\n            item.selected = true;\r\n            \r\n            this.input.value = item.label;\r\n            \r\n            this._styleItem(item);\r\n            \r\n            if(!silent){\r\n                this._resolveValue();\r\n            }\r\n        }\r\n        \r\n        this._focusItem(item);\r\n    }\r\n    \r\n    _resolveValue(blur){\r\n        var output, initialValue;\r\n        \r\n        this.popup.hide(true);\r\n        \r\n        if(this.params.multiselect){\r\n            output = this.currentItems.map(item => item.value);\r\n        }else{\r\n            if(blur && this.params.autocomplete && this.typing){\r\n                if(this.params.freetext || (this.params.allowEmpty && this.input.value === \"\")){\r\n                    output = this.input.value;\r\n                }else{\r\n                    this.actions.cancel();\r\n                    return;\r\n                }\r\n            }else{\r\n                if(this.currentItems[0]){\r\n                    output = this.currentItems[0].value;\r\n                }else{\r\n                    initialValue = this.initialValues[0];\r\n                    \r\n                    if(initialValue === null || typeof initialValue === \"undefined\" || initialValue === \"\"){\r\n                        output = initialValue;\r\n                    }else{\r\n                        output = this.params.emptyValue;\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        \r\n        if(output === \"\"){\r\n            output = this.params.emptyValue;\r\n        }\r\n        \r\n        this.actions.success(output);\r\n        \r\n        if(this.isFilter){\r\n            this.initialValues = output;\r\n        }\r\n    }\r\n    \r\n}","import List from '../../List.js';\r\n\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\r\n\t console.warn(\"The select editor has been deprecated, please use the new list editor\");\r\n\r\n    var list = new List(this, cell, onRendered, success, cancel, editorParams);\r\n\r\n    return list.input;\r\n}","import List from '../../List.js';\r\n\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n    var list = new List(this, cell, onRendered, success, cancel, editorParams);\r\n\r\n    return list.input;\r\n}","import List from '../../List.js';\r\n\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\r\n\tconsole.warn(\"The autocomplete editor has been deprecated, please use the new list editor with the 'autocomplete' editorParam\");\r\n\r\n\teditorParams.autocomplete = true;\r\n\r\n    var list = new List(this, cell, onRendered, success, cancel, editorParams);\r\n\r\n    return list.input;\r\n}","//star rating\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\telement = cell.getElement(),\r\n\tvalue = cell.getValue(),\r\n\tmaxStars = element.getElementsByTagName(\"svg\").length || 5,\r\n\tsize = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\r\n\tstars = [],\r\n\tstarsHolder = document.createElement(\"div\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n\r\n\r\n\t//change star type\r\n\tfunction starChange(val){\r\n\t\tstars.forEach(function(star, i){\r\n\t\t\tif(i < val){\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-active\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}else{\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-inactive\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//build stars\r\n\tfunction buildStar(i){\r\n\r\n\t\tvar starHolder =  document.createElement(\"span\");\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\r\n\t\tstars.push(nextStar);\r\n\r\n\t\tstarHolder.addEventListener(\"mouseenter\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tstarChange(i);\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"mousemove\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tsuccess(i);\r\n\t\t\telement.blur();\r\n\t\t});\r\n\r\n\t\tstarHolder.appendChild(nextStar);\r\n\t\tstarsHolder.appendChild(starHolder);\r\n\r\n\t}\r\n\r\n\t//handle keyboard navigation value change\r\n\tfunction changeValue(val){\r\n\t\tvalue = val;\r\n\t\tstarChange(val);\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\t//style holding element\r\n\tstarsHolder.style.verticalAlign = \"middle\";\r\n\tstarsHolder.style.display = \"inline-block\";\r\n\tstarsHolder.style.padding = \"4px\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", size);\r\n\tstar.setAttribute(\"height\", size);\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tstarsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tstarsHolder.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create correct number of stars\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tbuildStar(i);\r\n\t}\r\n\r\n\t//ensure value does not exceed number of stars\r\n\tvalue = Math.min(parseInt(value), maxStars);\r\n\r\n\t// set initial styling of stars\r\n\tstarChange(value);\r\n\r\n\tstarsHolder.addEventListener(\"mousemove\", function(e){\r\n\t\tstarChange(0);\r\n\t});\r\n\r\n\tstarsHolder.addEventListener(\"click\", function(e){\r\n\t\tsuccess(0);\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(e){\r\n\t\tcancel();\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\tchangeValue(value + 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tchangeValue(value - 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tsuccess(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn starsHolder;\r\n};","//draggable progress bar\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar element = cell.getElement(),\r\n\tmax = typeof editorParams.max === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\")) || 100) : editorParams.max,\r\n\tmin = typeof editorParams.min === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\")) || 0) : editorParams.min,\r\n\tpercent = (max - min) / 100,\r\n\tvalue = cell.getValue() || 0,\r\n\thandle = document.createElement(\"div\"),\r\n\tbar = document.createElement(\"div\"),\r\n\tmouseDrag, mouseDragWidth;\r\n\r\n\t//set new value\r\n\tfunction updateValue(){\r\n\t\tvar style = window.getComputedStyle(element, null);\r\n\r\n\t\tvar calcVal = (percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\")))/100))) + min;\r\n\t\tsuccess(calcVal);\r\n\t\telement.setAttribute(\"aria-valuenow\", calcVal);\r\n\t\telement.setAttribute(\"aria-label\", value);\r\n\t}\r\n\r\n\t//style handle\r\n\thandle.style.position = \"absolute\";\r\n\thandle.style.right = \"0\";\r\n\thandle.style.top = \"0\";\r\n\thandle.style.bottom = \"0\";\r\n\thandle.style.width = \"5px\";\r\n\thandle.classList.add(\"tabulator-progress-handle\");\r\n\r\n\t//style bar\r\n\tbar.style.display = \"inline-block\";\r\n\tbar.style.position = \"relative\";\r\n\t// bar.style.top = \"8px\";\r\n\t// bar.style.bottom = \"8px\";\r\n\t// bar.style.left = \"4px\";\r\n\t// bar.style.marginRight = \"4px\";\r\n\tbar.style.height = \"100%\";\r\n\tbar.style.backgroundColor = \"#488CE9\";\r\n\tbar.style.maxWidth = \"100%\";\r\n\tbar.style.minWidth = \"0%\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tbar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tbar.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.padding = \"4px 4px\";\r\n\r\n\t//make sure value is in range\r\n\tvalue = Math.min(parseFloat(value), max);\r\n\tvalue = Math.max(parseFloat(value), min);\r\n\r\n\t//workout percentage\r\n\tvalue = Math.round((value - min) / percent);\r\n\t// bar.style.right = value + \"%\";\r\n\tbar.style.width = value + \"%\";\r\n\r\n\telement.setAttribute(\"aria-valuemin\", min);\r\n\telement.setAttribute(\"aria-valuemax\", max);\r\n\r\n\tbar.appendChild(handle);\r\n\r\n\thandle.addEventListener(\"mousedown\", function(e){\r\n\t\tmouseDrag = e.screenX;\r\n\t\tmouseDragWidth = bar.offsetWidth;\r\n\t});\r\n\r\n\thandle.addEventListener(\"mouseover\", function(){\r\n\t\thandle.style.cursor = \"ew-resize\";\r\n\t});\r\n\r\n\telement.addEventListener(\"mousemove\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\tbar.style.width = (mouseDragWidth + e.screenX - mouseDrag) + \"px\";\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"mouseup\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\tmouseDrag = false;\r\n\t\t\tmouseDragWidth = false;\r\n\r\n\t\t\tupdateValue();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth + element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth - element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tcase 13: //enter\r\n\t\t\tupdateValue();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(){\r\n\t\tcancel();\r\n\t});\r\n\r\n\treturn bar;\r\n};","//checkbox\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar value = cell.getValue(),\r\n\tinput = document.createElement(\"input\"),\r\n\ttristate = editorParams.tristate,\r\n\tindetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\r\n\tindetermState = false,\r\n\ttrueValueSet = Object.keys(editorParams).includes(\"trueValue\"),\r\n\tfalseValueSet = Object.keys(editorParams).includes(\"falseValue\");\r\n\r\n\tinput.setAttribute(\"type\", \"checkbox\");\r\n\tinput.style.marginTop = \"5px\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = value;\r\n\r\n\tif(tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")){\r\n\t\tindetermState = true;\r\n\t\tinput.indeterminate = true;\r\n\t}\r\n\r\n\tif(this.table.browser != \"firefox\"){ //prevent blur issue on mac firefox\r\n\t\tonRendered(function(){\r\n\t\t\tinput.focus({preventScroll: true});\r\n\t\t});\r\n\t}\r\n\r\n\tinput.checked = trueValueSet ? value === editorParams.trueValue : (value === true || value === \"true\" || value === \"True\" || value === 1);\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus();\r\n\t});\r\n\r\n\tfunction setValue(blur){\r\n\t\tvar checkedValue = input.checked;\r\n\r\n\t\tif(trueValueSet && checkedValue){\r\n\t\t\tcheckedValue = editorParams.trueValue;\r\n\t\t}else if(falseValueSet && !checkedValue){\r\n\t\t\tcheckedValue = editorParams.falseValue;\r\n\t\t}else{\r\n\t\t\tcheckedValue = checkedValue;\r\n\t\t}\r\n\r\n\t\tif(tristate){\r\n\t\t\tif(!blur){\r\n\t\t\t\tif(input.checked && !indetermState){\r\n\t\t\t\t\tinput.checked = false;\r\n\t\t\t\t\tinput.indeterminate = true;\r\n\t\t\t\t\tindetermState = true;\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tindetermState = false;\r\n\t\t\t\t\treturn checkedValue;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(indetermState){\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn checkedValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn checkedValue;\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"change\", function(e){\r\n\t\tsuccess(setValue());\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tsuccess(setValue(true));\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tif(e.keyCode == 13){\r\n\t\t\tsuccess(setValue());\r\n\t\t}\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tcancel();\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import input from './editors/input.js';\r\nimport textarea from './editors/textarea.js';\r\nimport number from './editors/number.js';\r\nimport range from './editors/range.js';\r\nimport select from './editors/select.js';\r\nimport list from './editors/list.js';\r\nimport autocomplete from './editors/autocomplete.js';\r\nimport star from './editors/star.js';\r\nimport progress from './editors/progress.js';\r\nimport tickCross from './editors/tickCross.js';\r\n\r\nexport default {\r\n\tinput:input,\r\n\ttextarea:textarea,\r\n    number:number,\r\n    range:range,\r\n\tselect:select,\r\n\tlist:list,\r\n\tautocomplete:autocomplete,\r\n\tstar:star,\r\n\tprogress:progress,\r\n\ttickCross:tickCross,\r\n};","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultEditors from './defaults/editors.js';\r\n\r\nclass Edit extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.currentCell = false; //hold currently editing cell\r\n\t\tthis.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\r\n\t\tthis.recursionBlock = false; //prevent focus recursion\r\n\t\tthis.invalidEdit = false;\r\n\t\tthis.editedCells = [];\r\n\r\n\t\tthis.editors = Edit.editors;\r\n\r\n\t\tthis.registerColumnOption(\"editable\");\r\n\t\tthis.registerColumnOption(\"editor\");\r\n\t\tthis.registerColumnOption(\"editorParams\");\r\n\r\n\t\tthis.registerColumnOption(\"cellEditing\");\r\n\t\tthis.registerColumnOption(\"cellEdited\");\r\n\t\tthis.registerColumnOption(\"cellEditCancelled\");\r\n\r\n\t\tthis.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\r\n\t\tthis.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-init\", this.bindEditor.bind(this));\r\n\t\tthis.subscribe(\"cell-delete\", this.clearEdited.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"data-refreshing\", this.cancelEdit.bind(this));\r\n\r\n\t\tthis.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this, undefined));\r\n\t\tthis.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this, undefined));\r\n\t\tthis.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this, undefined));\r\n\t\tthis.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this, undefined));\r\n\t\tthis.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this, undefined));\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Keybinding Functions ///////\r\n\t///////////////////////////////////\r\n\r\n\tkeybindingNavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnewRow = this.options(\"tabEndNewRow\");\r\n\r\n\t\tif(cell){\r\n\t\t\tif(!this.navigateNext(cell, e)){\r\n\t\t\t\tif(newRow){\r\n\t\t\t\t\tcell.getElement().firstChild.blur();\r\n\r\n\t\t\t\t\tif(newRow === true){\r\n\t\t\t\t\t\tnewRow = this.table.addRow({})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(typeof newRow == \"function\"){\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(newRow(cell.row.getComponent()))\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(Object.assign({}, newRow));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewRow.then(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tcell.getComponent().navigateNext();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Cell Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\tcellisEdited(cell){\r\n\t\treturn !! cell.modules.edit && cell.modules.edit.edited;\r\n\t}\r\n\r\n\tcellCancelEdit(cell){\r\n\t\tif(cell === this.currentCell){\r\n\t\t\tthis.table.modules.edit.cancelEdit();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cancel Editor Error - This cell is not currently being edited \");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tclearCellEdited(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.table.modules.edit.getEditedCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.table.modules.edit.clearEdited(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tnavigatePrev(cell = this.currentCell, e){\r\n\t\tvar nextCell, prevRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateLeft();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tprevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(prevRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateNext(cell = this.currentCell, e){\r\n\t\tvar nextCell, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateRight();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(nextRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(nextRow, -1);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateLeft(cell = this.currentCell, e){\r\n\t\tvar index, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findPrevEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateRight(cell = this.currentCell, e){\r\n\t\tvar index, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findNextEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateUp(cell = this.currentCell, e){\r\n\t\tvar index, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateDown(cell = this.currentCell, e){\r\n\t\tvar index, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfindNextEditableCell(row, index){\r\n\t\tvar nextCell = false;\r\n\r\n\t\tif(index < row.cells.length-1){\r\n\t\t\tfor(var i = index+1; i < row.cells.length; i++){\r\n\t\t\t\tlet cell = row.cells[i];\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tlet allowEdit = true;\r\n\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tnextCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nextCell;\r\n\t}\r\n\r\n\tfindPrevEditableCell(row, index){\r\n\t\tvar prevCell = false;\r\n\r\n\t\tif(index > 0){\r\n\t\t\tfor(var i = index-1; i >= 0; i--){\r\n\t\t\t\tlet cell = row.cells[i],\r\n\t\t\t\tallowEdit = true;\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tprevCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn prevCell;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.editor !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\tcolumnDeleteCheck(column){\r\n\t\tif(this.currentCell && this.currentCell.column === column){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\trowDeleteCheck(row){\r\n\t\tif(this.currentCell && this.currentCell.row === row){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column editor\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {\r\n\t\t\teditor:false,\r\n\t\t\tblocked:false,\r\n\t\t\tcheck:column.definition.editable,\r\n\t\t\tparams:column.definition.editorParams || {}\r\n\t\t};\r\n\r\n\t\t//set column editor\r\n\t\tswitch(typeof column.definition.editor){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(this.editors[column.definition.editor]){\r\n\t\t\t\tconfig.editor = this.editors[column.definition.editor];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Editor Error - No such editor found: \", column.definition.editor);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.editor = column.definition.editor;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(column.definition.editor === true){\r\n\t\t\t\tif(typeof column.definition.formatter !== \"function\"){\r\n\t\t\t\t\tif(this.editors[column.definition.formatter]){\r\n\t\t\t\t\t\tconfig.editor = this.editors[column.definition.formatter];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconfig.editor = this.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(config.editor){\r\n\t\t\tcolumn.modules.edit = config;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentCell(){\r\n\t\treturn this.currentCell ? this.currentCell.getComponent() : false;\r\n\t}\r\n\r\n\tclearEditor(cancel){\r\n\t\tvar cell = this.currentCell,\r\n\t\tcellEl;\r\n\r\n\t\tthis.invalidEdit = false;\r\n\r\n\t\tif(cell){\r\n\t\t\tthis.currentCell = false;\r\n\r\n\t\t\tcellEl = cell.getElement();\r\n\r\n\t\t\tthis.dispatch(\"edit-editor-clear\", cell, cancel);\r\n\r\n\t\t\tcellEl.classList.remove(\"tabulator-editing\");\r\n\r\n\t\t\twhile(cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\r\n\r\n\t\t\tcell.row.getElement().classList.remove(\"tabulator-row-editing\");\r\n\t\t}\r\n\t}\r\n\r\n\tcancelEdit(){\r\n\t\tif(this.currentCell){\r\n\t\t\tvar cell = this.currentCell;\r\n\t\t\tvar component = this.currentCell.getComponent();\r\n\r\n\t\t\tthis.clearEditor(true);\r\n\t\t\tcell.setValueActual(cell.getValue());\r\n\t\t\tcell.cellRendered();\r\n\r\n\t\t\tif(cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight){\r\n\t\t\t\tcell.row.normalizeHeight(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(cell.column.definition.cellEditCancelled){\r\n\t\t\t\tcell.column.definition.cellEditCancelled.call(this.table, component);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"edit-cancelled\", cell);\r\n\t\t\tthis.dispatchExternal(\"cellEditCancelled\", component);\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a cell\r\n\tbindEditor(cell){\r\n\t\tif(cell.column.modules.edit){\r\n\t\t\tvar self = this,\r\n\t\t\telement = cell.getElement(true);\r\n\r\n\t\t\telement.setAttribute(\"tabindex\", 0);\r\n\r\n\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\tif(!element.classList.contains(\"tabulator-editing\")){\r\n\t\t\t\t\telement.focus({preventScroll: true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif (e.button === 2) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.mouseClick = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"focus\", function(e){\r\n\t\t\t\tif(!self.recursionBlock){\r\n\t\t\t\t\tself.edit(cell, e, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfocusCellNoEvent(cell, block){\r\n\t\tthis.recursionBlock = true;\r\n\r\n\t\tif(!(block && this.table.browser === \"ie\")){\r\n\t\t\tcell.getElement().focus({preventScroll: true});\r\n\t\t}\r\n\r\n\t\tthis.recursionBlock = false;\r\n\t}\r\n\r\n\teditCell(cell, forceEdit){\r\n\t\tthis.focusCellNoEvent(cell);\r\n\t\tthis.edit(cell, false, forceEdit);\r\n\t}\r\n\r\n\tfocusScrollAdjust(cell){\r\n\t\tif(this.table.rowManager.getRenderMode() == \"virtual\"){\r\n\t\t\tvar topEdge = this.table.rowManager.element.scrollTop,\r\n\t\t\tbottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\r\n\t\t\trowEl = cell.row.getElement(),\r\n\t\t\toffset = rowEl.offsetTop;\r\n\r\n\t\t\tif(rowEl.offsetTop < topEdge){\r\n\t\t\t\tthis.table.rowManager.element.scrollTop -= (topEdge - rowEl.offsetTop);\r\n\t\t\t}else{\r\n\t\t\t\tif(rowEl.offsetTop + rowEl.offsetHeight  > bottomEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollTop += (rowEl.offsetTop + rowEl.offsetHeight - bottomEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar leftEdge = this.table.rowManager.element.scrollLeft,\r\n\t\t\trightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\r\n\t\t\tcellEl = cell.getElement(),\r\n\t\t\toffset = cellEl.offsetLeft;\r\n\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tleftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\r\n\t\t\t\trightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\t\tleftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t\trightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t}\r\n\r\n\t\t\tif(cellEl.offsetLeft < leftEdge){\r\n\r\n\t\t\t\tthis.table.rowManager.element.scrollLeft -= (leftEdge - cellEl.offsetLeft);\r\n\t\t\t}else{\r\n\t\t\t\tif(cellEl.offsetLeft + cellEl.offsetWidth  > rightEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollLeft += (cellEl.offsetLeft + cellEl.offsetWidth - rightEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tedit(cell, e, forceEdit){\r\n\t\tvar self = this,\r\n\t\tallowEdit = true,\r\n\t\trendered = function(){},\r\n\t\telement = cell.getElement(),\r\n\t\tcellEditor, component, params;\r\n\r\n\t\t//prevent editing if another cell is refusing to leave focus (eg. validation fail)\r\n\t\tif(this.currentCell){\r\n\t\t\tif(!this.invalidEdit){\r\n\t\t\t\tthis.cancelEdit();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//handle successful value change\r\n\t\tfunction success(value){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tvar valid = self.chain(\"edit-success\", [cell, value], true, true);\r\n\r\n\t\t\t\tif(valid === true || self.table.options.validationMode === \"highlight\"){\r\n\t\t\t\t\tself.clearEditor();\r\n\r\n\r\n\t\t\t\t\tif(!cell.modules.edit){\r\n\t\t\t\t\t\tcell.modules.edit = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.modules.edit.edited = true;\r\n\r\n\t\t\t\t\tif(self.editedCells.indexOf(cell) == -1){\r\n\t\t\t\t\t\tself.editedCells.push(cell);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.setValue(value, true);\r\n\r\n\t\t\t\t\treturn valid === true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.invalidEdit = true;\r\n\t\t\t\t\tself.focusCellNoEvent(cell, true);\r\n\t\t\t\t\trendered();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call success on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tself.cancelEdit();\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call cancel on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trendered = callback;\r\n\t\t}\r\n\r\n\t\tif(!cell.column.modules.edit.blocked){\r\n\t\t\tif(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\r\n\t\t\tswitch(typeof cell.column.modules.edit.check){\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(allowEdit || forceEdit){\r\n\r\n\t\t\t\tself.cancelEdit();\r\n\r\n\t\t\t\tself.currentCell = cell;\r\n\r\n\t\t\t\tthis.focusScrollAdjust(cell);\r\n\r\n\t\t\t\tcomponent = cell.getComponent();\r\n\r\n\t\t\t\tif(this.mouseClick){\r\n\t\t\t\t\tthis.mouseClick = false;\r\n\r\n\t\t\t\t\tif(cell.column.definition.cellClick){\r\n\t\t\t\t\t\tcell.column.definition.cellClick.call(this.table, e, component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(cell.column.definition.cellEditing){\r\n\t\t\t\t\tcell.column.definition.cellEditing.call(this.table, component);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatch(\"cell-editing\", cell);\r\n\t\t\t\tthis.dispatchExternal(\"cellEditing\", component);\r\n\r\n\t\t\t\tparams = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\r\n\r\n\t\t\t\tcellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\r\n\r\n\t\t\t\t//if editor returned, add to DOM, if false, abort edit\r\n\t\t\t\tif(cellEditor !== false){\r\n\r\n\t\t\t\t\tif(cellEditor instanceof Node){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-editing\");\r\n\t\t\t\t\t\tcell.row.getElement().classList.add(\"tabulator-row-editing\");\r\n\t\t\t\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\t\t\t\t\telement.appendChild(cellEditor);\r\n\r\n\t\t\t\t\t\t//trigger onRendered Callback\r\n\t\t\t\t\t\trendered();\r\n\r\n\t\t\t\t\t\t//prevent editing from triggering rowClick event\r\n\t\t\t\t\t\tvar children = element.children;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\t\tchildren[i].addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\r\n\t\t\t\t\t\telement.blur();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.mouseClick = false;\r\n\t\t\t\telement.blur();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.mouseClick = false;\r\n\t\t\telement.blur();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetEditedCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.editedCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearEdited(cell){\r\n\t\tvar editIndex;\r\n\r\n\t\tif(cell.modules.edit && cell.modules.edit.edited){\r\n\t\t\tcell.modules.edit.edited = false;\r\n\r\n\t\t\tthis.dispatch(\"edit-edited-clear\", cell);\r\n\t\t}\r\n\r\n\t\teditIndex = this.editedCells.indexOf(cell);\r\n\r\n\t\tif(editIndex > -1){\r\n\t\t\tthis.editedCells.splice(editIndex, 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nEdit.moduleName = \"edit\";\r\n\r\n//load defaults\r\nEdit.editors = defaultEditors;\r\n\r\n\r\nexport default Edit;\r\n","class ExportRow{\r\n\tconstructor(type, columns, component, indent){\r\n\t\tthis.type = type;\r\n\t\tthis.columns = columns;\r\n\t\tthis.component = component || false;\r\n\t\tthis.indent = indent || 0;\r\n\t}\r\n}\r\n\r\nexport default ExportRow;","class ExportColumn{\r\n\tconstructor(value, component, width, height, depth){\r\n\t\tthis.value = value;\r\n\t\tthis.component = component || false;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n}\r\n\r\nexport default ExportColumn;","import Module from '../../core/Module.js';\r\n\r\nimport ExportRow from './ExportRow.js';\r\nimport ExportColumn from './ExportColumn.js';\r\n\r\nclass Export extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = {};\r\n\t\tthis.cloneTableStyle = true;\r\n\t\tthis.colVisProp = \"\";\r\n\r\n\t\tthis.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\r\n\r\n\t\tthis.registerColumnOption(\"htmlOutput\");\r\n\t\tthis.registerColumnOption(\"titleHtmlOutput\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tgenerateExportList(config, style, range, colVisProp){\r\n\t\tthis.cloneTableStyle = style;\r\n\t\tthis.config = config || {};\r\n\t\tthis.colVisProp = colVisProp;\r\n\r\n\t\tvar headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\r\n\t\tvar body = this.bodyToExportRows(this.rowLookup(range));\r\n\r\n\t\treturn headers.concat(body);\r\n\t}\r\n\r\n\tgenereateTable(config, style, range, colVisProp){\r\n\t\tvar list = this.generateExportList(config, style, range, colVisProp);\r\n\r\n\t\treturn this.genereateTableElement(list);\r\n\t}\r\n\r\n\trowLookup(range){\r\n\t\tvar rows = [];\r\n\r\n\t\tif(typeof range == \"function\"){\r\n\t\t\trange.call(this.table).forEach((row) =>{\r\n\t\t\t\trow = this.table.rowManager.findRow(row);\r\n\r\n\t\t\t\tif(row){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tswitch(range){\r\n\t\t\t\tcase true:\r\n\t\t\t\tcase \"visible\":\r\n\t\t\t\trows = this.table.rowManager.getVisibleRows(false, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\trows = this.table.rowManager.rows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selected\":\r\n\t\t\t\trows = this.table.modules.selectRow.selectedRows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"active\":\r\n\t\t\t\tdefault:\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Object.assign([], rows);\r\n\t}\r\n\r\n\tgenerateColumnGroupHeaders(){\r\n\t\tvar output = [];\r\n\r\n\t\tvar columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar colData = this.processColumnGroup(column);\r\n\r\n\t\t\tif(colData){\r\n\t\t\t\toutput.push(colData);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tprocessColumnGroup(column){\r\n\t\tvar subGroups = column.columns,\r\n\t\tmaxDepth = 0,\r\n\t\ttitle = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\r\n\r\n\t\tvar groupData = {\r\n\t\t\ttitle:title,\r\n\t\t\tcolumn:column,\r\n\t\t\tdepth:1,\r\n\t\t};\r\n\r\n\t\tif(subGroups.length){\r\n\t\t\tgroupData.subGroups = [];\r\n\t\t\tgroupData.width = 0;\r\n\r\n\t\t\tsubGroups.forEach((subGroup) => {\r\n\t\t\t\tvar subGroupData = this.processColumnGroup(subGroup);\r\n\r\n\t\t\t\tif(subGroupData){\r\n\t\t\t\t\tgroupData.width += subGroupData.width;\r\n\t\t\t\t\tgroupData.subGroups.push(subGroupData);\r\n\r\n\t\t\t\t\tif(subGroupData.depth > maxDepth){\r\n\t\t\t\t\t\tmaxDepth = subGroupData.depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgroupData.depth += maxDepth;\r\n\r\n\t\t\tif(!groupData.width){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.columnVisCheck(column)){\r\n\t\t\t\tgroupData.width = 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn groupData;\r\n\t}\r\n\r\n\tcolumnVisCheck(column){\r\n\t\treturn column.definition[this.colVisProp] !== false && (column.visible || (!column.visible && column.definition[this.colVisProp]));\r\n\t}\r\n\r\n\theadersToExportRows(columns){\r\n\t\tvar headers = [],\r\n\t\theaderDepth = 0,\r\n\t\texportRows = [];\r\n\r\n\t\tfunction parseColumnGroup(column, level){\r\n\r\n\t\t\tvar depth = headerDepth - level;\r\n\r\n\t\t\tif(typeof headers[level] === \"undefined\"){\r\n\t\t\t\theaders[level] = [];\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.height = column.subGroups ? 1 : (depth - column.depth) + 1;\r\n\r\n\t\t\theaders[level].push(column);\r\n\r\n\t\t\tif(column.height > 1){\r\n\t\t\t\tfor(let i = 1; i < column.height; i ++){\r\n\r\n\t\t\t\t\tif(typeof headers[level + i] === \"undefined\"){\r\n\t\t\t\t\t\theaders[level + i] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\theaders[level + i].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.width > 1){\r\n\t\t\t\tfor(let i = 1; i < column.width; i ++){\r\n\t\t\t\t\theaders[level].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.subGroups){\r\n\t\t\t\tcolumn.subGroups.forEach(function(subGroup){\r\n\t\t\t\t\tparseColumnGroup(subGroup, level+1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//calculate maximum header debth\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tif(column.depth > headerDepth){\r\n\t\t\t\theaderDepth = column.depth;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tparseColumnGroup(column,0);\r\n\t\t});\r\n\r\n\t\theaders.forEach((header) => {\r\n\t\t\tvar columns = [];\r\n\r\n\t\t\theader.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\tlet title = typeof col.title === \"undefined\" ? \"\" : col.title;\r\n\t\t\t\t\tcolumns.push(new ExportColumn(title, col.column.getComponent(), col.width, col.height, col.depth));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumns.push(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\texportRows.push(new ExportRow(\"header\", columns));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tbodyToExportRows(rows){\r\n\r\n\t\tvar columns = [];\r\n\t\tvar exportRows = [];\r\n\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tif (this.columnVisCheck(column)) {\r\n\t\t\t\tcolumns.push(column.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized){\r\n\t\t\t\trows.unshift(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized){\r\n\t\t\t\trows.push(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn this.config.rowGroups !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\treturn this.config.columnCalcs !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\treturn !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar rowData = row.getData(this.colVisProp);\r\n\t\t\tvar exportCols = [];\r\n\t\t\tvar indent = 0;\r\n\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tindent = row.level;\r\n\t\t\t\texportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\" :\r\n\t\t\t\tcase \"row\" :\r\n\t\t\t\tcolumns.forEach((col) => {\r\n\t\t\t\t\texportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tindent = row.modules.dataTree.index;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\texportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tgenereateTableElement(list){\r\n\t\tvar table = document.createElement(\"table\"),\r\n\t\theaderEl = document.createElement(\"thead\"),\r\n\t\tbodyEl = document.createElement(\"tbody\"),\r\n\t\tstyles = this.lookupTableStyles(),\r\n\t\trowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\r\n\t\tsetup = {};\r\n\r\n\t\tsetup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\r\n\r\n\t\tif(this.table.options.dataTree &&this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tsetup.treeElementField = this.table.modules.dataTree.elementField;\r\n\t\t}\r\n\r\n\t\t//assign group header formatter\r\n\t\tsetup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\r\n\r\n\t\tif(setup.groupHeader && !Array.isArray(setup.groupHeader)){\r\n\t\t\tsetup.groupHeader = [setup.groupHeader];\r\n\t\t}\r\n\r\n\t\ttable.classList.add(\"tabulator-print-table\");\r\n\r\n\t\tthis.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\r\n\t\tif(list.length > 1000){\r\n\t\t\tconsole.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\r\n\t\t}\r\n\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"header\":\r\n\t\t\t\theaderEl.appendChild(this.genereateHeaderElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\tlet rowEl = this.genereateRowElement(row, setup, styles);\r\n\t\t\t\tthis.mapElementStyles(((i % 2) && styles.evenRow) ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\t\t\tbodyEl.appendChild(rowEl);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(headerEl.innerHTML){\r\n\t\t\ttable.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\ttable.appendChild(bodyEl);\r\n\r\n\r\n\t\tthis.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\r\n\t\treturn table;\r\n\t}\r\n\r\n\tlookupTableStyles(){\r\n\t\tvar styles = {};\r\n\r\n\t\t//lookup row styles\r\n\t\tif(this.cloneTableStyle && window.getComputedStyle){\r\n\t\t\tstyles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\r\n\t\t\tstyles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\r\n\r\n\t\t\tif(styles.firstRow){\r\n\t\t\t\tstyles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\r\n\t\t\t\tstyles.firstCell = styles.styleCells[0];\r\n\t\t\t\tstyles.lastCell = styles.styleCells[styles.styleCells.length - 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tgenereateHeaderElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trow.columns.forEach((column) => {\r\n\t\t\tif(column){\r\n\t\t\t\tvar cellEl = document.createElement(\"th\");\r\n\t\t\t\tvar classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tcellEl.colSpan = column.width;\r\n\t\t\t\tcellEl.rowSpan = column.height;\r\n\r\n\t\t\t\tcellEl.innerHTML = column.value;\r\n\r\n\t\t\t\tif(this.cloneTableStyle){\r\n\t\t\t\t\tcellEl.style.boxSizing = \"border-box\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\t\t\t\tthis.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\t\t\tif(column.component._column.visible){\r\n\t\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.component._column.definition.width){\r\n\t\t\t\t\t\tcellEl.style.width = column.component._column.definition.width + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.component._column.parent){\r\n\t\t\t\t\tthis.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateGroupElement(row, setup, styles){\r\n\r\n\t\tvar rowEl = document.createElement(\"tr\"),\r\n\t\tcellEl = document.createElement(\"td\"),\r\n\t\tgroup = row.columns[0];\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\tif(setup.groupHeader && setup.groupHeader[row.indent]){\r\n\t\t\tgroup.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t}else{\r\n\t\t\tif(setup.groupHeader === false){\r\n\t\t\t\tgroup.value = group.value;\r\n\t\t\t}else{\r\n\t\t\t\tgroup.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcellEl.colSpan = group.width;\r\n\t\tcellEl.innerHTML = group.value;\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-group\");\r\n\t\trowEl.classList.add(\"tabulator-group-level-\" + row.indent);\r\n\r\n\t\tif(group.component.isVisible()){\r\n\t\t\trowEl.classList.add(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tthis.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\tthis.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\trowEl.appendChild(cellEl);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateCalcElement(row, setup, styles){\r\n\t\tvar rowEl = this.genereateRowElement(row, setup, styles);\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-calcs\");\r\n\t\tthis.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateRowElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\trow.columns.forEach((col) => {\r\n\t\t\tif(col){\r\n\t\t\t\tvar cellEl = document.createElement(\"td\"),\r\n\t\t\t\tcolumn = col.component._column,\r\n\t\t\t\tindex = this.table.columnManager.findColumnIndex(column),\r\n\t\t\t\tvalue = col.value;\r\n\r\n\t\t\t\tvar cellWrapper = {\r\n\t\t\t\t\tmodules:{},\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn cellEl;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\treturn row.component.getData();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn row.component;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetComponent:function(){\r\n\t\t\t\t\t\treturn cellWrapper;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.modExists(\"format\") && this.config.formatCells !== false){\r\n\t\t\t\t\tvalue = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tvalue = JSON.stringify(value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvalue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(value instanceof Node){\r\n\t\t\t\t\tcellEl.appendChild(value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcellEl.innerHTML = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(styles.styleCells[index] || styles.firstCell){\r\n\t\t\t\t\tthis.mapElementStyles(styles.styleCells[index] || styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"text-align\"]);\r\n\r\n\t\t\t\t\tif(column.definition.align){\r\n\t\t\t\t\t\tcellEl.style.textAlign = column.definition.align;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tif((setup.treeElementField && setup.treeElementField == column.field) || (!setup.treeElementField && i == 0)){\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.controlEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.branchEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\r\n\t\t\t\tif(cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback){\r\n\t\t\t\t\tcellWrapper.modules.format.renderedCallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(setup.rowFormatter && this.config.formatCells !== false){\r\n\t\t\t\t\tsetup.rowFormatter(row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateHTMLTable(list){\r\n\t\tvar holder = document.createElement(\"div\");\r\n\r\n\t\tholder.appendChild(this.genereateTableElement(list));\r\n\r\n\t\treturn holder.innerHTML;\r\n\t}\r\n\r\n\tgetHtml(visible, style, config, colVisProp){\r\n\t\tvar list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\r\n\r\n\t\treturn this.genereateHTMLTable(list);\r\n\t}\r\n\r\n\tmapElementStyles(from, to, props){\r\n\t\tif(this.cloneTableStyle && from && to){\r\n\r\n\t\t\tvar lookup = {\r\n\t\t\t\t\"background-color\" : \"backgroundColor\",\r\n\t\t\t\t\"color\" : \"fontColor\",\r\n\t\t\t\t\"width\" : \"width\",\r\n\t\t\t\t\"font-weight\" : \"fontWeight\",\r\n\t\t\t\t\"font-family\" : \"fontFamily\",\r\n\t\t\t\t\"font-size\" : \"fontSize\",\r\n\t\t\t\t\"text-align\" : \"textAlign\",\r\n\t\t\t\t\"border-top\" : \"borderTop\",\r\n\t\t\t\t\"border-left\" : \"borderLeft\",\r\n\t\t\t\t\"border-right\" : \"borderRight\",\r\n\t\t\t\t\"border-bottom\" : \"borderBottom\",\r\n\t\t\t\t\"padding-top\" : \"paddingTop\",\r\n\t\t\t\t\"padding-left\" : \"paddingLeft\",\r\n\t\t\t\t\"padding-right\" : \"paddingRight\",\r\n\t\t\t\t\"padding-bottom\" : \"paddingBottom\",\r\n\t\t\t};\r\n\r\n\t\t\tif(window.getComputedStyle){\r\n\t\t\t\tvar fromStyle = window.getComputedStyle(from);\r\n\r\n\t\t\t\tprops.forEach(function(prop){\r\n\t\t\t\t\tto.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nExport.moduleName = \"export\";\r\n\r\nexport default Export;\r\n","export default {\r\n\r\n\t//equal to\r\n\t\"=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal == filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than\r\n\t\"<\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal < filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than or equal to\r\n\t\"<=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal <= filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than\r\n\t\">\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal > filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than or equal to\r\n\t\">=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal >= filterVal ? true : false;\r\n\t},\r\n\r\n\t//not equal to\r\n\t\"!=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal != filterVal ? true : false;\r\n\t},\r\n\r\n\t\"regex\":function(filterVal, rowVal, rowData, filterParams){\r\n\r\n\t\tif(typeof filterVal == \"string\"){\r\n\t\t\tfilterVal = new RegExp(filterVal);\r\n\t\t}\r\n\r\n\t\treturn filterVal.test(rowVal);\r\n\t},\r\n\r\n\t//contains the string\r\n\t\"like\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//contains the keywords\r\n\t\"keywords\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tvar keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\r\n\t\tvalue = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\r\n\t\tmatches = [];\r\n\r\n\t\tkeywords.forEach((keyword) =>{\r\n\t\t\tif(value.includes(keyword)){\r\n\t\t\t\tmatches.push(true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\r\n\t},\r\n\r\n\t//starts with the string\r\n\t\"starts\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//ends with the string\r\n\t\"ends\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//in array\r\n\t\"in\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(Array.isArray(filterVal)){\r\n\t\t\treturn filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - filter value is not an array:\", filterVal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFilters from './defaults/filters.js';\r\n\r\nclass Filter extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.filterList = []; //hold filter list\r\n\t\tthis.headerFilters = {}; //hold column filters\r\n\t\tthis.headerFilterColumns = []; //hold columns that use header filters\r\n\r\n\t\tthis.prevHeaderFilterChangeCheck = \"\";\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.changed = false; //has filtering changed since last render\r\n\t\tthis.tableInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\r\n\r\n\t\tthis.registerTableOption(\"initialFilter\", false); //initial filtering criteria\r\n\t\tthis.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\r\n\t\tthis.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\r\n\r\n\t\tthis.registerColumnOption(\"headerFilter\");\r\n\t\tthis.registerColumnOption(\"headerFilterPlaceholder\");\r\n\t\tthis.registerColumnOption(\"headerFilterParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterEmptyCheck\");\r\n\t\tthis.registerColumnOption(\"headerFilterFunc\");\r\n\t\tthis.registerColumnOption(\"headerFilterFuncParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterLiveFilter\");\r\n\r\n\t\tthis.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\r\n\t\tthis.registerTableFunction(\"searchData\", this.searchData.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\r\n\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\tthis.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerDataHandler(this.filter.bind(this), 10);\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tif(this.table.options.initialFilter){\r\n\t\t\tthis.setFilter(this.table.options.initialFilter);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.initialHeaderFilter){\r\n\t\t\tthis.table.options.initialHeaderFilter.forEach((item) => {\r\n\r\n\t\t\t\tvar column = this.table.columnManager.findColumn(item.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tthis.setHeaderFilterValue(column, item.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", item.field);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.tableInitialized = true;\r\n\t}\r\n\r\n\tremoteFilterParams(data, config, silent, params){\r\n\t\tparams.filter = this.getFilters(true, true);\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t//set standard filters\r\n\tuserSetFilter(field, type, value, params){\r\n\t\tthis.setFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//set standard filters\r\n\tuserRefreshFilter(){\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//add filter to array\r\n\tuserAddFilter(field, type, value, params){\r\n\t\tthis.addFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\tuserSetHeaderFilterFocus(field){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterFocus(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetHeaderFilterValue(field) {\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn this.getHeaderFilterValue(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t}\r\n\t}\r\n\r\n\tuserSetHeaderFilterValue(field, value){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterValue(column, value);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tuserRemoveFilter(field, type, value){\r\n\t\tthis.removeFilter(field, type, value);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear filters\r\n\tuserClearFilter(all){\r\n\t\tthis.clearFilter(all);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tuserClearHeaderFilter(){\r\n\t\tthis.clearHeaderFilter();\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\r\n\t//search for specific row components\r\n\tsearchRows(field, type, value){\r\n\t\treturn this.search(\"rows\", field, type, value);\r\n\t}\r\n\r\n\t//search for specific data\r\n\tsearchData(field, type, value){\r\n\t\treturn this.search(\"data\", field, type, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnHeaderFilter(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerFilter){\r\n\r\n\t\t\tif(typeof def.headerFilterPlaceholder !== \"undefined\" && def.field){\r\n\t\t\t\tthis.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column header filter\r\n\tinitializeColumn(column, value){\r\n\t\tvar self = this,\r\n\t\tfield = column.getField(),\r\n\t\tparams;\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tvar filterType = (column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\") || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\r\n\t\t\ttype = \"\",\r\n\t\t\tfilterChangeCheck = \"\",\r\n\t\t\tfilterFunc;\r\n\r\n\t\t\tif(typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value){\r\n\r\n\t\t\t\tcolumn.modules.filter.prevSuccess = value;\r\n\r\n\t\t\t\tif(!column.modules.filter.emptyFunc(value)){\r\n\t\t\t\t\tcolumn.modules.filter.value = value;\r\n\r\n\t\t\t\t\tswitch(typeof column.definition.headerFilterFunc){\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\tif(Filter.filters[column.definition.headerFilterFunc]){\r\n\t\t\t\t\t\t\ttype = column.definition.headerFilterFunc;\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\t\treturn Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\treturn column.definition.headerFilterFunc(value, fieldVal, data, params);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\ttype = filterFunc;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!filterFunc){\r\n\t\t\t\t\t\tswitch(filterType){\r\n\t\t\t\t\t\t\tcase \"partial\":\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar colVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tif(typeof colVal !== 'undefined' && colVal !== null){\r\n\t\t\t\t\t\t\t\t\treturn String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"like\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\treturn column.getFieldValue(data) == value;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"=\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.headerFilters[field] = {value:value, func:filterFunc, type:type, params:params || {}};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete self.headerFilters[field];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumn.modules.filter.value = value;\r\n\r\n\t\t\t\tfilterChangeCheck = JSON.stringify(self.headerFilters);\r\n\r\n\t\t\t\tif(self.prevHeaderFilterChangeCheck !== filterChangeCheck){\r\n\t\t\t\t\tself.prevHeaderFilterChangeCheck = filterChangeCheck;\r\n\r\n\t\t\t\t\tself.trackChanges();\r\n\t\t\t\t\tself.refreshFilter();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.filter = {\r\n\t\t\tsuccess:success,\r\n\t\t\tattrType:false,\r\n\t\t\ttagType:false,\r\n\t\t\temptyFunc:false,\r\n\t\t};\r\n\r\n\t\tthis.generateHeaderFilterElement(column);\r\n\t}\r\n\r\n\tgenerateHeaderFilterElement(column, initialValue, reinitialize){\r\n\t\tvar self = this,\r\n\t\tsuccess = column.modules.filter.success,\r\n\t\tfield = column.getField(),\r\n\t\tfilterElement, editor, editorElement, cellWrapper, typingTimer, searchTrigger, params;\r\n\r\n\t\tcolumn.modules.filter.value = initialValue;\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){}\r\n\r\n\t\tif(column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode){\r\n\t\t\tcolumn.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\r\n\t\t\t//set empty value function\r\n\t\t\tcolumn.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function(value){\r\n\t\t\t\treturn !value && value !== \"0\" && value !== 0;\r\n\t\t\t};\r\n\r\n\t\t\tfilterElement = document.createElement(\"div\");\r\n\t\t\tfilterElement.classList.add(\"tabulator-header-filter\");\r\n\r\n\t\t\t//set column editor\r\n\t\t\tswitch(typeof column.definition.headerFilter){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(self.table.modules.edit.editors[column.definition.headerFilter]){\r\n\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.headerFilter];\r\n\r\n\t\t\t\t\tif((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\teditor = column.definition.headerFilter;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tif(column.modules.edit && column.modules.edit.editor){\r\n\t\t\t\t\teditor = column.modules.edit.editor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]){\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.formatter];\r\n\r\n\t\t\t\t\t\tif((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(editor){\r\n\r\n\t\t\t\tcellWrapper = {\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn typeof initialValue !== \"undefined\" ? initialValue : \"\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn filterElement;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tnormalizeHeight:function(){\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tparams = column.definition.headerFilterParams || {};\r\n\r\n\t\t\t\tparams = typeof params === \"function\" ? params.call(self.table, cellWrapper) : params;\r\n\r\n\t\t\t\teditorElement = editor.call(this.table.modules.edit, cellWrapper, function(){}, success, cancel, params);\r\n\r\n\t\t\t\tif(!editorElement){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!(editorElement instanceof Node)){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set Placeholder Text\r\n\t\t\t\tif(field){\r\n\t\t\t\t\tself.langBind(\"headerFilters|columns|\" + column.definition.field, function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.langBind(\"headerFilters|default\", function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", value);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//focus on element on click\r\n\t\t\t\teditorElement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\teditorElement.focus();\r\n\t\t\t\t});\r\n\r\n\t\t\t\teditorElement.addEventListener(\"focus\", (e) => {\r\n\t\t\t\t\tvar left = this.table.columnManager.element.scrollLeft;\r\n\r\n\t\t\t\t\tvar headerPos = this.table.rowManager.element.scrollLeft + parseInt(this.table.columnManager.element.style.marginLeft);\r\n\r\n\t\t\t\t\tif(left !== headerPos){\r\n\t\t\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t\t\tthis.table.columnManager.scrollHorizontal(left);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//live update filters as user types\r\n\t\t\t\ttypingTimer = false;\r\n\r\n\t\t\t\tsearchTrigger = function(e){\r\n\t\t\t\t\tif(typingTimer){\r\n\t\t\t\t\t\tclearTimeout(typingTimer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttypingTimer = setTimeout(function(){\r\n\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t},self.table.options.headerFilterLiveFilterDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcolumn.modules.filter.headerElement = editorElement;\r\n\t\t\t\tcolumn.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\" ;\r\n\t\t\t\tcolumn.modules.filter.tagType = editorElement.tagName.toLowerCase();\r\n\r\n\t\t\t\tif(column.definition.headerFilterLiveFilter !== false){\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'autocomplete' ||\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'tickCross' ||\r\n\t\t\t\t\t\t\t((column.definition.editor === 'autocomplete' ||\r\n\t\t\t\t\t\t\t\tcolumn.definition.editor === 'tickCross') &&\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === true)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\teditorElement.addEventListener(\"keyup\", searchTrigger);\r\n\t\t\t\t\teditorElement.addEventListener(\"search\", searchTrigger);\r\n\r\n\r\n\t\t\t\t\t//update number filtered columns on change\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"number\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"change\", function(e){\r\n\t\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//change text inputs to search inputs to allow for clearing of field\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\"){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"type\", \"search\");\r\n\t\t\t\t\t\t// editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t//prevent input and select elements from propegating click to column sorters etc\r\n\t\t\t\t\tif(column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"mousedown\",function(e){\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterElement.appendChild(editorElement);\r\n\r\n\t\t\t\tcolumn.contentElement.appendChild(filterElement);\r\n\r\n\t\t\t\tif(!reinitialize){\r\n\t\t\t\t\tself.headerFilterColumns.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\r\n\t\t}\r\n\t}\r\n\r\n\t//hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\thideHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\tshowHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//programatically set focus of header filter\r\n\tsetHeaderFilterFocus(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\tcolumn.modules.filter.headerElement.focus();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programmatically get value of header filter\r\n\tgetHeaderFilterValue(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\treturn column.modules.filter.value;\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programatically set value of header filter\r\n\tsetHeaderFilterValue(column, value){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, value, true);\r\n\t\t\t\tcolumn.modules.filter.success(value);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treloadHeaderFilter(column){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, column.modules.filter.value, true);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trefreshFilter(){\r\n\t\tif(this.tableInitialized){\r\n\t\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\t\tthis.reloadData();\r\n\t\t\t}else{\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\ttrackChanges(){\r\n\t\tthis.changed = true;\r\n\t\tthis.dispatch(\"filter-changed\");\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//set standard filters\r\n\tsetFilter(field, type, value, params){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tthis.addFilter(field);\r\n\t}\r\n\r\n\t//add filter to array\r\n\taddFilter(field, type, value, params){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tthis.filterList.push(filter);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.trackChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tfindFilter(filter){\r\n\t\tvar column;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\treturn this.findSubFilters(filter);\r\n\t\t}\r\n\r\n\t\tvar filterFunc = false;\r\n\r\n\t\tif(typeof filter.field == \"function\"){\r\n\t\t\tfilterFunc = function(data){\r\n\t\t\t\treturn filter.field(data, filter.type || {})// pass params to custom filter function\r\n\t\t\t};\r\n\t\t}else{\r\n\r\n\t\t\tif(Filter.filters[filter.type]){\r\n\r\n\t\t\t\tcolumn = this.table.columnManager.getColumnByField(filter.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfilter.func = filterFunc;\r\n\r\n\t\treturn filter.func ? filter : false;\r\n\t}\r\n\r\n\tfindSubFilters(filters){\r\n\t\tvar output = [];\r\n\r\n\t\tfilters.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\toutput.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : false;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetFilters(all, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tif(all){\r\n\t\t\toutput = this.getHeaderFilters();\r\n\t\t}\r\n\r\n\t\tif(ajax){\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\toutput = output.concat(this.filtersToArray(this.filterList, ajax));\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//filter to Object\r\n\tfiltersToArray(filterList, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tfilterList.forEach((filter) => {\r\n\t\t\tvar item;\r\n\r\n\t\t\tif(Array.isArray(filter)){\r\n\t\t\t\toutput.push(this.filtersToArray(filter, ajax));\r\n\t\t\t}else{\r\n\t\t\t\titem = {field:filter.field, type:filter.type, value:filter.value}\r\n\r\n\t\t\t\tif(ajax){\r\n\t\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetHeaderFilters(){\r\n\t\tvar output = [];\r\n\r\n\t\tfor(var key in this.headerFilters){\r\n\t\t\toutput.push({field:key, type:this.headerFilters[key].type, value:this.headerFilters[key].value});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tremoveFilter(field, type, value){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tvar index = -1;\r\n\r\n\t\t\tif(typeof filter.field == \"object\"){\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter === element;\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter.field === element.field && filter.type === element.type  && filter.value === element.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.filterList.splice(index, 1);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear filters\r\n\tclearFilter(all){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(all){\r\n\t\t\tthis.clearHeaderFilter();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tclearHeaderFilter(){\r\n\t\tthis.headerFilters = {};\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.headerFilterColumns.forEach((column) => {\r\n\t\t\tif(typeof column.modules.filter.value !== \"undefined\"){\r\n\t\t\t\tdelete column.modules.filter.value;\r\n\t\t\t}\r\n\t\t\tcolumn.modules.filter.prevSuccess = undefined;\r\n\t\t\tthis.reloadHeaderFilter(column);\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//search data and return matching rows\r\n\tsearch (searchType, field, type, value){\r\n\t\tvar activeRows = [],\r\n\t\tfilterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tfilterList.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\tvar match = true;\r\n\r\n\t\t\tfilterList.forEach((filter) => {\r\n\t\t\t\tif(!this.filterRecurse(filter, row.getData())){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tactiveRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter row array\r\n\tfilter(rowList, filters){\r\n\t\tvar activeRows = [],\r\n\t\tactiveRowComponents = [];\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltering\")){\r\n\t\t\tthis.dispatchExternal(\"dataFiltering\", this.getFilters(true));\r\n\t\t}\r\n\r\n\t\tif(this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)){\r\n\r\n\t\t\trowList.forEach((row) => {\r\n\t\t\t\tif(this.filterRow(row)){\r\n\t\t\t\t\tactiveRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\tactiveRows = rowList.slice(0);\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltered\")){\r\n\r\n\t\t\tactiveRows.forEach((row) => {\r\n\t\t\t\tactiveRowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataFiltered\", this.getFilters(true), activeRowComponents);\r\n\t\t}\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter individual row\r\n\tfilterRow(row, filters){\r\n\t\tvar match = true,\r\n\t\tdata = row.getData();\r\n\r\n\t\tthis.filterList.forEach((filter) => {\r\n\t\t\tif(!this.filterRecurse(filter, data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tfor(var field in this.headerFilters){\r\n\t\t\tif(!this.headerFilters[field].func(data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tfilterRecurse(filter, data){\r\n\t\tvar match = false;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\tfilter.forEach((subFilter) => {\r\n\t\t\t\tif(this.filterRecurse(subFilter, data)){\r\n\t\t\t\t\tmatch = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tmatch = filter.func(data);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n}\r\n\r\nFilter.moduleName = \"filter\";\r\n\r\n//load defaults\r\nFilter.filters = defaultFilters;\r\n\r\nexport default Filter;","export default function(cell, formatterParams, onRendered){\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn cell.getValue();\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.whiteSpace = \"pre-wrap\";\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar floatVal = parseFloat(cell.getValue()),\r\n\tsign = \"\",\r\n\tnumber, integer, decimal, rgx;\r\n\r\n\tvar decimalSym = formatterParams.decimal || \".\";\r\n\tvar thousandSym = formatterParams.thousand || \",\";\r\n\tvar negativeSign = formatterParams.negativeSign || \"-\";\r\n\tvar symbol = formatterParams.symbol || \"\";\r\n\tvar after = !!formatterParams.symbolAfter;\r\n\tvar precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\r\n\r\n\tif(isNaN(floatVal)){\r\n\t\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n\t}\r\n\r\n\tif(floatVal < 0){\r\n\t\tfloatVal = Math.abs(floatVal);\r\n\t\tsign = negativeSign;\r\n\t}\r\n\r\n\tnumber = precision !== false ? floatVal.toFixed(precision) : floatVal;\r\n\tnumber = String(number).split(\".\");\r\n\r\n\tinteger = number[0];\r\n\tdecimal = number.length > 1 ? decimalSym + number[1] : \"\";\r\n\r\n\tif (formatterParams.thousand !== false) {\r\n\t\trgx = /(\\d+)(\\d{3})/;\r\n\r\n\t\twhile (rgx.test(integer)){\r\n\t\t\tinteger = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\turlPrefix = formatterParams.urlPrefix || \"\",\r\n\tdownload = formatterParams.download,\r\n\tlabel = value,\r\n\tel = document.createElement(\"a\"),\r\n\tdata;\r\n\r\n\tfunction labelTraverse(path, data){\r\n\t\tvar item = path.shift(),\r\n\t\tvalue = data[item];\r\n\t\t\r\n\t\tif(path.length && typeof value === \"object\"){\r\n\t\t\treturn labelTraverse(path, value);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tif(formatterParams.labelField){\r\n\t\tdata = cell.getData();\r\n\t\tlabel = labelTraverse(formatterParams.labelField.split(this.table.options.nestedFieldSeparator), data);\r\n\t}\r\n\r\n\tif(formatterParams.label){\r\n\t\tswitch(typeof formatterParams.label){\r\n\t\t\tcase \"string\":\r\n\t\t\tlabel = formatterParams.label;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tlabel = formatterParams.label(cell);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif(label){\r\n\t\tif(formatterParams.urlField){\r\n\t\t\tdata = cell.getData();\r\n\t\t\tvalue = data[formatterParams.urlField];\r\n\t\t}\r\n\r\n\t\tif(formatterParams.url){\r\n\t\t\tswitch(typeof formatterParams.url){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tvalue = formatterParams.url;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tvalue = formatterParams.url(cell);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tel.setAttribute(\"href\", urlPrefix + value);\r\n\r\n\t\tif(formatterParams.target){\r\n\t\t\tel.setAttribute(\"target\", formatterParams.target);\r\n\t\t}\r\n\r\n\t\tif(formatterParams.download){\r\n\r\n\t\t\tif(typeof download == \"function\"){\r\n\t\t\t\tdownload = download(cell);\r\n\t\t\t}else{\r\n\t\t\t\tdownload = download === true ? \"\" : download;\r\n\t\t\t}\r\n\r\n\t\t\tel.setAttribute(\"download\", download);\r\n\t\t}\r\n\r\n\t\tel.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\r\n\r\n\t\treturn el;\r\n\t}else{\r\n\t\treturn \"&nbsp;\";\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar el = document.createElement(\"img\"),\r\n\tsrc = cell.getValue();\r\n\r\n\tif(formatterParams.urlPrefix){\r\n\t\tsrc = formatterParams.urlPrefix + cell.getValue();\r\n\t}\r\n\r\n\tif(formatterParams.urlSuffix){\r\n\t\tsrc = src + formatterParams.urlSuffix;\r\n\t}\r\n\r\n\tel.setAttribute(\"src\", src);\r\n\r\n\tswitch(typeof formatterParams.height){\r\n\t\tcase \"number\":\r\n\t\tel.style.height = formatterParams.height + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.height = formatterParams.height;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tswitch(typeof formatterParams.width){\r\n\t\tcase \"number\":\r\n\t\tel.style.width = formatterParams.width + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.width = formatterParams.width;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tel.addEventListener(\"load\", function(){\r\n\t\tcell.getRow().normalizeHeight();\r\n\t});\r\n\r\n\treturn el;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tempty = formatterParams.allowEmpty,\r\n\ttruthy = formatterParams.allowTruthy,\r\n\ttrueValueSet = Object.keys(formatterParams).includes(\"trueValue\"),\r\n\ttick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\r\n\tcross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n\r\n\tif((trueValueSet && value === formatterParams.trueValue) || (!trueValueSet && ((truthy && value) || (value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\")))){\r\n\t\telement.setAttribute(\"aria-checked\", true);\r\n\t\treturn tick || \"\";\r\n\t}else{\r\n\t\tif(empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")){\r\n\t\t\telement.setAttribute(\"aria-checked\", \"mixed\");\r\n\t\t\treturn \"\";\r\n\t\t}else{\r\n\t\t\telement.setAttribute(\"aria-checked\", false);\r\n\t\t\treturn cross || \"\";\r\n\t\t}\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar\toutputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\r\n\tvar\tinvalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime;\r\n\r\n\t\tif(DT.isDateTime(value)){\r\n\t\t\t newDatetime = value;\r\n\t\t }else if(inputFormat === \"iso\"){\r\n\t\t\t newDatetime = DT.fromISO(String(value));\r\n\t\t }else{\r\n\t\t\t newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\t\t }\r\n\r\n\t\tif(newDatetime.isValid){\r\n\t\t\tif(formatterParams.timezone){\r\n\t\t\t\tnewDatetime = newDatetime.setZone(formatterParams.timezone);\r\n\t\t\t}\r\n\r\n\t\t\treturn newDatetime.toFormat(outputFormat);\r\n\t\t}else{\r\n\t\t\tif(invalid === true || !value){\r\n\t\t\t\treturn value;\r\n\t\t\t}else if(typeof invalid === \"function\"){\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t}else{\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\r\n\tvar unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\r\n\tvar humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\r\n\tvar date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime;\r\n\r\n\t\tif(DT.isDateTime(value)){\r\n\t\t\t newDatetime = value;\r\n\t\t }else if(inputFormat === \"iso\"){\r\n\t\t\t newDatetime = DT.fromISO(String(value));\r\n\t\t }else{\r\n\t\t\t newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\t\t }\r\n\r\n\t\tif (newDatetime.isValid){\r\n\t\t\tif(humanize){\r\n\t\t\t\treturn newDatetime.diff(date, unit).toHuman()  + (suffix ? \" \" + suffix : \"\");\r\n\t\t\t}else{\r\n\t\t\t\treturn parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tif (invalid === true) {\r\n\t\t\t\treturn value;\r\n\t\t\t} else if (typeof invalid === \"function\") {\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t} else {\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar value = cell.getValue();\r\n\r\n\tif (typeof formatterParams[value] === \"undefined\") {\r\n\t\tconsole.warn('Missing display value for ' + value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn formatterParams[value];\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tmaxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\r\n\tstars = document.createElement(\"span\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\r\n\tstarActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\r\n\tstarInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\r\n\t//style stars holder\r\n\tstars.style.verticalAlign = \"middle\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", \"14\");\r\n\tstar.setAttribute(\"height\", \"14\");\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tvalue = value && !isNaN(value) ? parseInt(value) : 0;\r\n\r\n\tvalue = Math.max(0, Math.min(value, maxStars));\r\n\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\t\tnextStar.innerHTML = i <= value ? starActive : starInactive;\r\n\r\n\t\tstars.appendChild(nextStar);\r\n\t}\r\n\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\telement.setAttribute(\"aria-label\", value);\r\n\r\n\treturn stars;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\tel = document.createElement(\"span\"),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tcolors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\r\n\tcolor = \"#666666\",\r\n\tpercent, percentValue;\r\n\r\n\tif(isNaN(value) || typeof cell.getValue() === \"undefined\"){\r\n\t\treturn;\r\n\t}\r\n\r\n\tel.classList.add(\"tabulator-traffic-light\");\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set color\r\n\tswitch(typeof colors){\r\n\t\tcase \"string\":\r\n\t\tcolor = colors;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = colors(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(colors)){\r\n\t\t\tvar unit = 100 / colors.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, colors.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = colors[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tel.style.backgroundColor = color;\r\n\r\n\treturn el;\r\n};","import CellComponent from '../../../../core/cell/CellComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){ //progress bar\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\telement = cell.getElement(),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tlegendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\r\n\tpercent, percentValue, color, legend, legendColor, top, left, right, bottom;\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set bar color\r\n\tswitch(typeof formatterParams.color){\r\n\t\tcase \"string\":\r\n\t\tcolor = formatterParams.color;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = formatterParams.color(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.color)){\r\n\t\t\tvar unit = 100 / formatterParams.color.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.color.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = formatterParams.color[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\tcolor = \"#2DC214\";\r\n\t}\r\n\r\n\t//generate legend\r\n\tswitch(typeof formatterParams.legend){\r\n\t\tcase \"string\":\r\n\t\tlegend = formatterParams.legend;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegend = formatterParams.legend(value);\r\n\t\tbreak;\r\n\t\tcase \"boolean\":\r\n\t\tlegend = value;\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegend = false;\r\n\t}\r\n\r\n\t//set legend color\r\n\tswitch(typeof formatterParams.legendColor){\r\n\t\tcase \"string\":\r\n\t\tlegendColor = formatterParams.legendColor;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegendColor = formatterParams.legendColor(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.legendColor)){\r\n\t\t\tvar unit = 100 / formatterParams.legendColor.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.legendColor.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tlegendColor = formatterParams.legendColor[index];\r\n\t\t}\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegendColor = \"#000\";\r\n\t}\r\n\r\n\telement.style.minWidth = \"30px\";\r\n\telement.style.position = \"relative\";\r\n\r\n\telement.setAttribute(\"aria-label\", percentValue);\r\n\r\n\tvar barEl = document.createElement(\"div\");\r\n\tbarEl.style.display = \"inline-block\";\r\n\tbarEl.style.position = \"absolute\";\r\n\tbarEl.style.width = percentValue + \"%\";\r\n\tbarEl.style.backgroundColor = color;\r\n\tbarEl.style.height = \"100%\";\r\n\r\n\tbarEl.setAttribute('data-max', max);\r\n\tbarEl.setAttribute('data-min', min);\r\n\r\n\tvar barContainer = document.createElement(\"div\");\r\n\tbarContainer.style.position = \"relative\";\r\n\tbarContainer.style.width = \"100%\";\r\n\tbarContainer.style.height = \"100%\";\r\n\r\n\tif(legend){\r\n\t\tvar legendEl = document.createElement(\"div\");\r\n\t\tlegendEl.style.position = \"absolute\";\r\n\t\tlegendEl.style.top = 0;\r\n\t\tlegendEl.style.left = 0;\r\n\t\tlegendEl.style.textAlign = legendAlign;\r\n\t\tlegendEl.style.width = \"100%\";\r\n\t\tlegendEl.style.color = legendColor;\r\n\t\tlegendEl.innerHTML = legend;\r\n\t}\r\n\r\n\tonRendered(function(){\r\n\r\n\t\t//handle custom element needed if formatter is to be included in printed/downloaded output\r\n\t\tif(!(cell instanceof CellComponent)){\r\n\t\t\tvar holderEl = document.createElement(\"div\");\r\n\t\t\tholderEl.style.position = \"absolute\";\r\n\t\t\tholderEl.style.top = \"4px\";\r\n\t\t\tholderEl.style.bottom = \"4px\";\r\n\t\t\tholderEl.style.left = \"4px\";\r\n\t\t\tholderEl.style.right = \"4px\";\r\n\r\n\t\t\telement.appendChild(holderEl);\r\n\r\n\t\t\telement = holderEl;\r\n\t\t}\r\n\r\n\t\telement.appendChild(barContainer);\r\n\t\tbarContainer.appendChild(barEl);\r\n\r\n\t\tif(legend){\r\n\t\t\tbarContainer.appendChild(legendEl);\r\n\t\t}\r\n\t});\r\n\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1 || \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\treturn \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar open = false,\r\n\tel = document.createElement(\"div\"),\r\n\tconfig = cell.getRow()._row.modules.responsiveLayout;\r\n\r\n\tel.classList.add(\"tabulator-responsive-collapse-toggle\");\r\n\tel.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\r\n\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\r\n\tfunction toggleList(isOpen){\r\n\t\tvar collapseEl = config.element;\r\n\r\n\t\tconfig.open = isOpen;\r\n\r\n\t\tif(collapseEl){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tel.classList.add(\"open\");\r\n\t\t\t\tcollapseEl.style.display = '';\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.remove(\"open\");\r\n\t\t\t\tcollapseEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"click\", function(e){\r\n\t\te.stopImmediatePropagation();\r\n\t\ttoggleList(!config.open);\r\n\t});\r\n\r\n\ttoggleList(config.open);\r\n\r\n\treturn el;\r\n};","import RowComponent from '../../../../core/row/RowComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){\r\n\tvar checkbox = document.createElement(\"input\");\r\n\tvar blocked = false;\r\n\r\n\tcheckbox.type = 'checkbox';\r\n\r\n\tcheckbox.setAttribute(\"aria-label\", \"Select Row\");\r\n\t\r\n\tif(this.table.modExists(\"selectRow\", true)){\r\n\r\n\t\tcheckbox.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tif(typeof cell.getRow == 'function'){\r\n\t\t\tvar row = cell.getRow();\r\n\r\n\t\t\tif(row instanceof RowComponent){\r\n\r\n\t\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tif(this.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\t\tif(!blocked){\r\n\t\t\t\t\t\t\trow.toggleSelect();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tblocked = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trow.toggleSelect();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\tcheckbox.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\tblocked = true;\r\n\t\t\t\t\t\tthis.table.modules.selectRow.handleComplexRowClick(row._row, e);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheckbox.checked = row.isSelected && row.isSelected();\r\n\t\t\t\tthis.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\r\n\t\t\t}else{\r\n\t\t\t\tcheckbox = \"\";\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\tif(this.table.modules.selectRow.selectedRows.length){\r\n\t\t\t\t\tthis.table.deselectRow();\r\n\t\t\t\t}else {\r\n\t\t\t\t\tthis.table.selectRow(formatterParams.rowRange);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\r\n\t\t}\r\n\t}\r\n\r\n\treturn checkbox;\r\n};","import plaintext from './formatters/plaintext.js';\r\nimport html from './formatters/html.js';\r\nimport textarea from './formatters/textarea.js';\r\nimport money from './formatters/money.js';\r\nimport link from './formatters/link.js';\r\nimport image from './formatters/image.js';\r\nimport tickCross from './formatters/tickCross.js';\r\nimport datetime from './formatters/datetime.js';\r\nimport datetimediff from './formatters/datetimediff.js';\r\nimport lookup from './formatters/lookup.js';\r\nimport star from './formatters/star.js';\r\nimport traffic from './formatters/traffic.js';\r\nimport progress from './formatters/progress.js';\r\nimport color from './formatters/color.js';\r\nimport buttonTick from './formatters/buttonTick.js';\r\nimport buttonCross from './formatters/buttonCross.js';\r\nimport rownum from './formatters/rownum.js';\r\nimport handle from './formatters/handle.js';\r\nimport responsiveCollapse from './formatters/responsiveCollapse.js';\r\nimport rowSelection from './formatters/rowSelection.js';\r\n\r\nexport default {\r\n\tplaintext:plaintext,\r\n\thtml:html,\r\n\ttextarea:textarea,\r\n\tmoney:money,\r\n\tlink:link,\r\n\timage:image,\r\n\ttickCross:tickCross,\r\n\tdatetime:datetime,\r\n\tdatetimediff:datetimediff,\r\n\tlookup:lookup,\r\n\tstar:star,\r\n\ttraffic:traffic,\r\n\tprogress:progress,\r\n\tcolor:color,\r\n\tbuttonTick:buttonTick,\r\n\tbuttonCross:buttonCross,\r\n\trownum:rownum,\r\n\thandle:handle,\r\n\tresponsiveCollapse:responsiveCollapse,\r\n\trowSelection:rowSelection,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFormatters from './defaults/formatters.js';\r\n\r\nclass Format extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerColumnOption(\"formatter\");\r\n\t\tthis.registerColumnOption(\"formatterParams\");\r\n\r\n\t\tthis.registerColumnOption(\"formatterPrint\");\r\n\t\tthis.registerColumnOption(\"formatterPrintParams\");\r\n\t\tthis.registerColumnOption(\"formatterClipboard\");\r\n\t\tthis.registerColumnOption(\"formatterClipboardParams\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutputParams\");\r\n\t\tthis.registerColumnOption(\"titleFormatter\");\r\n\t\tthis.registerColumnOption(\"titleFormatterParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-format\", this.formatValue.bind(this));\r\n\t\tthis.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-format\", this.formatHeader.bind(this));\r\n\t}\r\n\r\n\t//initialize column formatter\r\n\tinitializeColumn(column){\r\n\t\tcolumn.modules.format = this.lookupFormatter(column, \"\");\r\n\r\n\t\tif(typeof column.definition.formatterPrint !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.print = this.lookupFormatter(column, \"Print\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterClipboard !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterHtmlOutput !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\r\n\t\t}\r\n\t}\r\n\r\n\tlookupFormatter(column, type){\r\n\t\tvar config = {params:column.definition[\"formatter\" + type + \"Params\"] || {}},\r\n\t\tformatter = column.definition[\"formatter\" + type];\r\n\r\n\t\t//set column formatter\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tconfig.formatter = Format.formatters[formatter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.formatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\tcellRendered(cell){\r\n\t\tif(cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered){\r\n\t\t\tcell.modules.format.renderedCallback();\r\n\t\t\tcell.modules.format.rendered = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a column header\r\n\tformatHeader(column, title, el){\r\n\t\tvar formatter, params, onRendered, mockCell;\r\n\r\n\t\tif(column.definition.titleFormatter){\r\n\t\t\tformatter = this.getFormatter(column.definition.titleFormatter);\r\n\r\n\t\t\tonRendered = (callback) => {\r\n\t\t\t\tcolumn.titleFormatterRendered = callback;\r\n\t\t\t};\r\n\r\n\t\t\tmockCell = {\r\n\t\t\t\tgetValue:function(){\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tgetElement:function(){\r\n\t\t\t\t\treturn el;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tparams = column.definition.titleFormatterParams || {};\r\n\r\n\t\t\tparams = typeof params === \"function\" ? params() : params;\r\n\r\n\t\t\treturn formatter.call(this, mockCell, params, onRendered);\r\n\t\t}else{\r\n\t\t\treturn title;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//return a formatted value for a cell\r\n\tformatValue(cell){\r\n\t\tvar component = cell.getComponent(),\r\n\t\tparams = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\tif(!cell.modules.format){\r\n\t\t\t\tcell.modules.format = {};\r\n\t\t\t}\r\n\r\n\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\tcell.modules.format.rendered = false;\r\n\t\t}\r\n\r\n\t\treturn cell.column.modules.format.formatter.call(this, component, params, onRendered);\r\n\t}\r\n\r\n\tformatExportValue(cell, type){\r\n\t\tvar formatter = cell.column.modules.format[type],\r\n\t\tparams;\r\n\r\n\t\tif(formatter){\r\n\t\t\tparams = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\r\n\r\n\t\t\tfunction onRendered(callback){\r\n\t\t\t\tif(!cell.modules.format){\r\n\t\t\t\t\tcell.modules.format = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\t\tcell.modules.format.rendered = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn formatter.formatter.call(this, cell.getComponent(), params, onRendered);\r\n\r\n\t\t}else{\r\n\t\t\treturn this.formatValue(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tsanitizeHTML(value){\r\n\t\tif(value){\r\n\t\t\tvar entityMap = {\r\n\t\t\t\t'&': '&amp;',\r\n\t\t\t\t'<': '&lt;',\r\n\t\t\t\t'>': '&gt;',\r\n\t\t\t\t'\"': '&quot;',\r\n\t\t\t\t\"'\": '&#39;',\r\n\t\t\t\t'/': '&#x2F;',\r\n\t\t\t\t'`': '&#x60;',\r\n\t\t\t\t'=': '&#x3D;'\r\n\t\t\t};\r\n\r\n\t\t\treturn String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\r\n\t\t\t\treturn entityMap[s];\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\temptyToSpace(value){\r\n\t\treturn value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\r\n\t}\r\n\r\n\t//get formatter for cell\r\n\tgetFormatter(formatter){\r\n\t\tvar formatter;\r\n\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tformatter = Format.formatters[formatter]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tformatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn formatter;\r\n\t}\r\n}\r\n\r\nFormat.moduleName = \"format\";\r\n\r\n//load defaults\r\nFormat.formatters = defaultFormatters;\r\n\r\nexport default Format;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightPadding = 0;\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.active = false;\r\n\t\tthis.scrollEndTimer = false;\r\n\t\tthis.blocked = true;\r\n\t\t\r\n\t\tthis.registerColumnOption(\"frozen\");\r\n\t}\r\n\t\r\n\t//reset initial state\r\n\treset(){\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.active = false;\r\n\t\t\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = 0;\r\n\t\tthis.table.columnManager.element.style.paddingRight = 0;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-width\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\tthis.subscribe(\"table-layout\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"columns-loading\", this.reset.bind(this));\r\n\r\n\t\tthis.subscribe(\"column-add\", this.reinitializeColumns.bind(this));\r\n\t\tthis.subscribe(\"column-delete\", this.reinitializeColumns.bind(this));\r\n\r\n\t\tthis.subscribe(\"table-redraw\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"layout-refreshing\", this.blockLayout.bind(this));\r\n\t\tthis.subscribe(\"layout-refreshed\", this.unblockLayout.bind(this));\r\n\t}\r\n\t\r\n\tblockLayout(){\r\n\t\tthis.blocked = true;\r\n\t}\r\n\t\r\n\tunblockLayout(){\r\n\t\tthis.blocked = false;\r\n\t}\r\n\t\r\n\tlayoutCell(cell){\r\n\t\tthis.layoutElement(cell.element, cell.column)\r\n\t}\r\n\r\n\treinitializeColumns(){\r\n\t\tthis.reset();\r\n\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t});\r\n\t}\r\n\t\r\n\t//initialize specific column\r\n\tinitializeColumn(column){\r\n\t\tvar config = {margin:0, edge:false};\r\n\t\t\r\n\t\tif(!column.isGroup){\r\n\t\t\t\r\n\t\t\tif(this.frozenCheck(column)){\r\n\t\t\t\t\r\n\t\t\t\tconfig.position = this.initializationMode;\r\n\t\t\t\t\r\n\t\t\t\tif(this.initializationMode == \"left\"){\r\n\t\t\t\t\tthis.leftColumns.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.rightColumns.unshift(column);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.active = true;\r\n\t\t\t\t\r\n\t\t\t\tcolumn.modules.frozen = config;\r\n\t\t\t}else{\r\n\t\t\t\tthis.initializationMode = \"right\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfrozenCheck(column){\r\n\t\tif(column.parent.isGroup && column.definition.frozen){\r\n\t\t\tconsole.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\r\n\t\t}\r\n\t\t\r\n\t\tif(column.parent.isGroup){\r\n\t\t\treturn this.frozenCheck(column.parent);\r\n\t\t}else{\r\n\t\t\treturn column.definition.frozen;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//quick layout to smooth horizontal scrolling\r\n\tscrollHorizontal(){\r\n\t\tvar rows;\r\n\t\t\r\n\t\tif(this.active){\r\n\t\t\tclearTimeout(this.scrollEndTimer);\r\n\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\tthis.calcMargins(true);\r\n\t\t\t\r\n\t\t\tthis.layoutColumnPosition();\r\n\t\t\t\r\n\t\t\tthis.layoutCalcRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t//calculate margins for rows\r\n\tcalcMargins(scroll){\r\n\t\t\r\n\t\tif(!scroll){\r\n\t\t\tthis.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\t\t\t\r\n\t\t\tthis.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\t\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t\r\n\t\t//calculate right frozen columns\r\n\t\tthis.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\r\n\t}\r\n\t\r\n\t//layout calculation rows\r\n\tlayoutCalcRows(){\r\n\t\tif(this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.table.modExists(\"groupRows\")){\r\n\t\t\t\tthis.layoutGroupCalcs(this.table.modules.groupRows.getGroups())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tlayoutGroupCalcs(groups){\r\n\t\tgroups.forEach((group) => {\r\n\t\t\tif(group.calcs.top){\r\n\t\t\t\tthis.layoutRow(group.calcs.top);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(group.calcs.bottom){\r\n\t\t\t\tthis.layoutRow(group.calcs.bottom);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(group.groupList && group.groupList.length){\r\n\t\t\t\tthis.layoutGroupCalcs(group.groupList && group.groupList);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t//calculate column positions and layout headers\r\n\tlayoutColumnPosition(allCells){\r\n\t\tvar leftParents = [];\r\n\t\t\r\n\t\tvar leftMargin = 0;\r\n\t\tvar rightMargin = 0;\r\n\t\t\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\r\n\t\tthis.table.columnManager.element.style.paddingRight = this.rightMargin;\r\n\r\n\t\tthis.leftColumns.forEach((column, i) => {\t\r\n\t\t\tcolumn.modules.frozen.margin = (leftMargin + this.table.columnManager.scrollLeft) + \"px\";\r\n\r\n\t\t\tif(column.visible){\r\n\t\t\t\tleftMargin += column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(i == this.leftColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tvar parentEl = this.getColGroupParentElement(column);\r\n\t\t\t\tif(!leftParents.includes(parentEl)){\r\n\t\t\t\t\tthis.layoutElement(parentEl, column);\r\n\t\t\t\t\tleftParents.push(parentEl);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\t\tparentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.rightColumns.forEach((column, i) => {\r\n\r\n\t\t\tif(column.visible){\r\n\t\t\t\trightMargin += column.getWidth();\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.modules.frozen.margin = (this.rightPadding - rightMargin) + \"px\";\r\n\t\t\t\r\n\t\t\tif(i == this.rightColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tthis.layoutElement(this.getColGroupParentElement(column), column);\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetColGroupParentElement(column){\r\n\t\treturn column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\r\n\t}\r\n\t\r\n\t//layout columns appropriately\r\n\tlayout(){\r\n\t\tvar visibleRows = [],\r\n\t\totherRows = [];\r\n\r\n\t\tif(this.active && !this.blocked){\r\n\t\t\t//calculate row padding\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\t//calculate left columns\r\n\t\t\tthis.layoutColumnPosition();\r\n\r\n\t\t\tvisibleRows = this.table.rowManager.getVisibleRows();\r\n\t\t\totherRows = this.table.rowManager.getDisplayRows().filter(row => !visibleRows.includes(row));\r\n\r\n\t\t\totherRows.forEach((row) =>{\r\n\t\t\t\trow.deinitialize();\r\n\t\t\t});\r\n\r\n\t\t\tvisibleRows.forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.layoutCalcRows();\r\n\t\t\t\r\n\r\n\t\t}\r\n\t}\r\n\t\r\n\tlayoutRow(row){\r\n\t\t// console.trace(\"row\")\r\n\t\tvar rowEl = row.getElement();\r\n\t\t\r\n\t\trowEl.style.paddingLeft = this.leftMargin;\r\n\t\t\r\n\t\tif(this.table.options.layout === \"fitDataFill\" && this.rightColumns.length){\r\n\t\t\tthis.table.rowManager.getTableElement().style.minWidth = \"calc(100% - \" + this.rightMargin + \")\";\r\n\t\t}\r\n\t\t\r\n\t\tthis.leftColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.rightColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tlayoutElement(element, column){\r\n\t\t\r\n\t\tif(column.modules.frozen){\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t\telement.style.left = column.modules.frozen.margin;\r\n\t\t\t\r\n\t\t\telement.classList.add(\"tabulator-frozen\");\r\n\t\t\t\r\n\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\telement.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t_calcSpace(columns, index){\r\n\t\tvar width = 0;\r\n\t\t\r\n\t\tfor (let i = 0; i < index; i++){\r\n\t\t\tif(columns[i].visible){\r\n\t\t\t\twidth += columns[i].getWidth();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn width;\r\n\t}\r\n}\r\n\r\nFrozenColumns.moduleName = \"frozenColumns\";\r\n\r\nexport default FrozenColumns;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topElement = document.createElement(\"div\");\r\n\t\tthis.rows = [];\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.rows = [];\r\n\r\n\t\tthis.topElement.classList.add(\"tabulator-frozen-rows-holder\");\r\n\r\n\t\t// this.table.columnManager.element.append(this.topElement);\r\n\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\r\n\t\tthis.subscribe(\"row-deleting\", this.detachRow.bind(this));\r\n\t\tthis.subscribe(\"rows-visible\", this.visibleRows.bind(this));\r\n\r\n\t\tthis.registerDisplayHandler(this.getRows.bind(this), 10);\r\n\t}\r\n\r\n\tisRowFrozen(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\treturn index > -1;\r\n\t}\r\n\r\n\tisFrozen(){\r\n\t\treturn !!this.rows.length;\r\n\t}\r\n\r\n\tvisibleRows(viewable, rows){\r\n\t\tthis.rows.forEach((row) => {\r\n\t\t\trows.push(row);\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t//filter frozen rows out of display data\r\n\tgetRows(rows){\r\n\t\tvar self = this,\r\n\t\tfrozen = [],\r\n\t\toutput = rows.slice(0);\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tvar index = output.indexOf(row);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\toutput.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfreezeRow(row){\r\n\t\tif(!row.modules.frozen){\r\n\t\t\trow.modules.frozen = true;\r\n\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\trow.initialize();\r\n\t\t\trow.normalizeHeight();\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.rows.push(row);\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tthis.styleRows();\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already frozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tunfreezeRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(row.modules.frozen){\r\n\r\n\t\t\trow.modules.frozen = false;\r\n\r\n\t\t\tthis.detachRow(row);\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tif(this.rows.length){\r\n\t\t\t\tthis.styleRows();\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already unfrozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tdetachRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRows(row){\r\n\t\tthis.rows.forEach((row, i) => {\r\n\t\t\tthis.table.rowManager.styleRow(row, i);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nFrozenRows.moduleName = \"frozenRows\";\r\n\r\nexport default FrozenRows;","//public group object\r\nclass GroupComponent {\r\n\tconstructor (group){\r\n\t\tthis._group = group;\r\n\t\tthis.type = \"GroupComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._group.groupManager.table.componentFunctionBinder.handle(\"row\", target._group, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetKey(){\r\n\t\treturn this._group.key;\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._group.field;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._group.element;\r\n\t}\r\n\r\n\tgetRows(){\r\n\t\treturn this._group.getRows(true);\r\n\t}\r\n\r\n\tgetSubGroups(){\r\n\t\treturn this._group.getSubGroups(true);\r\n\t}\r\n\r\n\tgetParentGroup(){\r\n\t\treturn this._group.parent ? this._group.parent.getComponent() : false;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._group.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis._group.show();\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis._group.hide();\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tthis._group.toggleVisibility();\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._group;\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._group.groupManager.table;\r\n\t}\r\n}\r\n\r\nexport default GroupComponent;","import Helpers from '../../core/tools/Helpers.js';\r\nimport GroupComponent from './GroupComponent.js';\r\n\r\n//Group functions\r\nclass Group{\r\n\t\r\n\tconstructor(groupManager, parent, level, key, field, generator, oldGroup){\r\n\t\tthis.groupManager = groupManager;\r\n\t\tthis.parent = parent;\r\n\t\tthis.key = key;\r\n\t\tthis.level = level;\r\n\t\tthis.field = field;\r\n\t\tthis.hasSubGroups = level < (groupManager.groupIDLookups.length - 1);\r\n\t\tthis.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\r\n\t\tthis.type = \"group\"; //type of element\r\n\t\tthis.old = oldGroup;\r\n\t\tthis.rows = [];\r\n\t\tthis.groups = [];\r\n\t\tthis.groupList = [];\r\n\t\tthis.generator = generator;\r\n\t\tthis.element = false;\r\n\t\tthis.elementContents = false;\r\n\t\tthis.height = 0;\r\n\t\tthis.outerHeight = 0;\r\n\t\tthis.initialized = false;\r\n\t\tthis.calcs = {};\r\n\t\tthis.initialized = false;\r\n\t\tthis.modules = {};\r\n\t\tthis.arrowElement = false;\r\n\t\t\r\n\t\tthis.visible = oldGroup ? oldGroup.visible : (typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0]);\r\n\t\t\r\n\t\tthis.component = null;\r\n\t\t\r\n\t\tthis.createElements();\r\n\t\tthis.addBindings();\r\n\t\t\r\n\t\tthis.createValueGroups();\r\n\t}\r\n\t\r\n\twipe(){\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tgroup.wipe();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\tif(row.modules){\r\n\t\t\t\t\tdelete row.modules.group;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tthis.element = false;\r\n\t\tthis.arrowElement = false;\r\n\t\tthis.elementContents = false;\r\n\t}\r\n\t\r\n\tcreateElements(){\r\n\t\tvar arrow = document.createElement(\"div\");\r\n\t\tarrow.classList.add(\"tabulator-arrow\");\r\n\t\t\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-row\");\r\n\t\tthis.element.classList.add(\"tabulator-group\");\r\n\t\tthis.element.classList.add(\"tabulator-group-level-\" + this.level);\r\n\t\tthis.element.setAttribute(\"role\", \"rowgroup\");\r\n\t\t\r\n\t\tthis.arrowElement = document.createElement(\"div\");\r\n\t\tthis.arrowElement.classList.add(\"tabulator-group-toggle\");\r\n\t\tthis.arrowElement.appendChild(arrow);\r\n\t\t\r\n\t\t//setup movable rows\r\n\t\tif(this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")){\r\n\t\t\tthis.groupManager.table.modules.moveRow.initializeGroupHeader(this);\r\n\t\t}\r\n\t}\r\n\t\r\n\tcreateValueGroups(){\r\n\t\tvar level = this.level + 1;\r\n\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\tthis.groupManager.allowedValues[level].forEach((value) => {\r\n\t\t\t\tthis._createGroup(value, level);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\taddBindings(){\r\n\t\tvar toggleElement;\r\n\t\t\r\n\t\tif(this.groupManager.table.options.groupToggleElement){\r\n\t\t\ttoggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\r\n\t\t\t\r\n\t\t\ttoggleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\tthis.toggleVisibility();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t_createGroup(groupID, level){\r\n\t\tvar groupKey = level + \"_\" + groupID;\r\n\t\tvar group = new Group(this.groupManager, this, level, groupID,  this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\r\n\t\t\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\t\r\n\t_addRowToGroup(row){\r\n\t\t\r\n\t\tvar level = this.level + 1;\r\n\t\t\r\n\t\tif(this.hasSubGroups){\r\n\t\t\tvar groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\r\n\t\t\tgroupKey = level + \"_\" + groupID;\r\n\t\t\t\r\n\t\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\t\tif(this.groups[groupKey]){\r\n\t\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(!this.groups[groupKey]){\r\n\t\t\t\t\tthis._createGroup(groupID, level);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t_addRow(row){\r\n\t\tthis.rows.push(row);\r\n\t\trow.modules.group = this;\r\n\t}\r\n\t\r\n\tinsertRow(row, to, after){\r\n\t\tvar data = this.conformRowData({});\r\n\t\t\r\n\t\trow.updateData(data);\r\n\t\t\r\n\t\tvar toIndex = this.rows.indexOf(to);\r\n\t\t\r\n\t\tif(toIndex > -1){\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.splice(toIndex+1, 0, row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.splice(toIndex, 0, row);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trow.modules.group = this;\r\n\t\t\r\n\t\tthis.generateGroupHeaderContents();\r\n\t\t\r\n\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t}\r\n\t\t\r\n\t\tthis.groupManager.updateGroupRows(true);\r\n\t}\r\n\t\r\n\tscrollHeader(left){\r\n\t\tif(this.arrowElement){\r\n\t\t\tthis.arrowElement.style.marginLeft = left;\r\n\t\t\t\r\n\t\t\tthis.groupList.forEach(function(child){\r\n\t\t\t\tchild.scrollHeader(left);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetRowIndex(row){}\r\n\t\r\n\t//update row data to match grouping contraints\r\n\tconformRowData(data){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = this.key;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\r\n\t\t}\r\n\t\t\r\n\t\tif(this.parent){\r\n\t\t\tdata = this.parent.conformRowData(data);\r\n\t\t}\r\n\t\t\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\tremoveRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\tvar el = row.getElement();\r\n\t\t\r\n\t\t\r\n\t\tif(index > -1){\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.groupManager.table.options.groupValues && !this.rows.length){\r\n\t\t\tif(this.parent){\r\n\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(el.parentNode){\r\n\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.generateGroupHeaderContents();\r\n\t\t\t\r\n\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\t\t\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\t\t\t\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\t\t\t\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!this.groupList.length){\r\n\t\t\t\tif(this.parent){\r\n\t\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetHeadersAndRows(noCalc){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\toutput.push(this);\r\n\t\t\r\n\t\tthis._visSet();\r\n\t\t\r\n\t\tif(this.visible){\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\t\toutput = output.concat(group.getHeadersAndRows(noCalc));\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\toutput = output.concat(this.rows);\r\n\t\t\t\t\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" &&  this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\t\t\r\n\t\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\")){\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetData(visible, transform){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\tthis._visSet();\r\n\t\t\r\n\t\tif(!visible || (visible && this.visible)){\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetRowCount(){\r\n\t\tvar count = 0;\r\n\t\t\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\tcount += group.getRowCount();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcount = this.rows.length;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\t\r\n\ttoggleVisibility(){\r\n\t\tif(this.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\t\r\n\thide(){\r\n\t\tthis.visible = false;\r\n\t\t\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\t\t\t\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\t\t\t\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\trow.detachElement();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\t\t\t\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\r\n\t}\r\n\t\r\n\tshow(){\r\n\t\tthis.visible = true;\r\n\t\t\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\t\t\t\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\t\t\t\r\n\t\t\tvar prev = this.generateElement();\r\n\t\t\t\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\t\trow.initialize();\r\n\t\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\trow.initialize();\r\n\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\t\t\t\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\t\t\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\r\n\t}\r\n\t\r\n\t_visSet(){\r\n\t\tvar data = [];\r\n\t\t\r\n\t\tif(typeof this.visible == \"function\"){\r\n\t\t\t\r\n\t\t\tthis.rows.forEach(function(row){\r\n\t\t\t\tdata.push(row.getData());\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tvar result = group.getRowGroup(row);\r\n\t\t\t\t\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tmatch = result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(this.rows.find(function(item){\r\n\t\t\t\treturn item === row;\r\n\t\t\t})){\r\n\t\t\t\tmatch = this;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn match;\r\n\t}\r\n\t\r\n\tgetSubGroups(component){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\toutput.push(component ? child.getComponent() : child);\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetRows(compoment){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\toutput.push(compoment ? row.getComponent() : row);\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgenerateGroupHeaderContents(){\r\n\t\tvar data = [];\r\n\t\t\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\t\t\r\n\t\tthis.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\r\n\t\t\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\t\t\r\n\t\tif(typeof this.elementContents === \"string\"){\r\n\t\t\tthis.element.innerHTML = this.elementContents;\r\n\t\t}else{\r\n\t\t\tthis.element.appendChild(this.elementContents);\r\n\t\t}\r\n\t\t\r\n\t\tthis.element.insertBefore(this.arrowElement, this.element.firstChild);\r\n\t}\r\n\t\r\n\tgetPath(path = []) {\r\n\t\tpath.unshift(this.key);\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.getPath(path);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\t////////////// Standard Row Functions //////////////\r\n\t\r\n\tgetElement(){\r\n\t\treturn this.elementContents ? this.element : this.generateElement();\r\n\t}\r\n\t\r\n\tgenerateElement(){\r\n\t\tthis.addBindings = false;\r\n\t\t\r\n\t\tthis._visSet();\r\n\t\t\r\n\t\tif(this.visible){\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\t\t}else{\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\t\t}\r\n\t\t\r\n\t\tfor(var i = 0; i < this.element.childNodes.length; ++i){\r\n\t\t\tthis.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\r\n\t\t}\r\n\t\t\r\n\t\tthis.generateGroupHeaderContents();\r\n\t\t\r\n\t\t// this.addBindings();\r\n\t\t\r\n\t\treturn this.element;\r\n\t}\r\n\t\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(){\r\n\t\tthis.setHeight(this.element.clientHeight);\r\n\t}\r\n\t\r\n\tinitialize(force){\r\n\t\tif(!this.initialized || force){\r\n\t\t\tthis.normalizeHeight();\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitialize(){\r\n\t\tthis.initialized = false;\r\n\t\tthis.height = 0;\r\n\t\t\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetHeight(height){\r\n\t\tif(this.height != height){\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\t\r\n\tgetGroup(){\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\treinitializeHeight(){}\r\n\t\r\n\tcalcHeight(){}\r\n\t\r\n\tsetCellHeight(){}\r\n\t\r\n\tclearCellHeight(){}\r\n\t\r\n\tdeinitializeHeight(){}\r\n\t\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new GroupComponent(this);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nexport default Group;","import Module from '../../core/Module.js';\r\n\r\nimport GroupComponent from './GroupComponent.js';\r\nimport Group from './Group.js';\r\n\r\nclass GroupRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.groupIDLookups = false; //enable table grouping and set field to group by\r\n\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\tthis.groupList = []; //ordered list of groups\r\n\t\tthis.allowedValues = false;\r\n\t\tthis.groups = {}; //hold row groups\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.displayHandler = this.getRows.bind(this);\r\n\r\n\t\t//register table options\r\n\t\tthis.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\r\n\t\tthis.registerTableOption(\"groupStartOpen\", true); //starting state of group\r\n\t\tthis.registerTableOption(\"groupValues\", false);\r\n\t\tthis.registerTableOption(\"groupUpdateOnCellEdit\", false);\r\n\t\tthis.registerTableOption(\"groupHeader\", false); //header generation function\r\n\t\tthis.registerTableOption(\"groupHeaderPrint\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderClipboard\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderHtmlOutput\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderDownload\", null);\r\n\t\tthis.registerTableOption(\"groupToggleElement\", \"arrow\");\r\n\t\tthis.registerTableOption(\"groupClosedShowCalcs\", false);\r\n\r\n\t\t//register table functions\r\n\t\tthis.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\r\n\t}\r\n\r\n\t//initialize group configuration\r\n\tinitialize(){\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\tif(this.table.options.groupUpdateOnCellEdit){\r\n\t\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-built\", this.configureGroupSetup.bind(this));\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.wipe.bind(this));\r\n\t\t\tthis.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-moving\", this.rowMoving.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"rows-sample\", this.rowSample.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.displayHandler, 20);\r\n\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigureGroupSetup(){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tvar groupBy = this.table.options.groupBy,\r\n\t\t\tstartOpen = this.table.options.groupStartOpen,\r\n\t\t\tgroupHeader = this.table.options.groupHeader;\r\n\r\n\t\t\tthis.allowedValues = this.table.options.groupValues;\r\n\r\n\t\t\tif(Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length){\r\n\t\t\t\tconsole.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\r\n\t\t\tthis.langBind(\"groups|item\", (langValue, lang) => {\r\n\t\t\t\tthis.headerGenerator[0] = (value, count, data) => { //header layout function\r\n\t\t\t\t\treturn (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + ((count === 1) ? langValue : lang.groups.items) + \")</span>\";\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.groupIDLookups = [];\r\n\r\n\t\t\tif(Array.isArray(groupBy) || groupBy){\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\"){\r\n\t\t\t\t\tthis.table.modules.columnCalcs.removeCalcs();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\"){\r\n\r\n\t\t\t\t\tvar cols = this.table.columnManager.getRealColumns();\r\n\r\n\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\tif(col.definition.topCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeTopRow();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(col.definition.bottomCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeBottomRow();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!Array.isArray(groupBy)){\r\n\t\t\t\tgroupBy = [groupBy];\r\n\t\t\t}\r\n\r\n\t\t\tgroupBy.forEach((group, i) => {\r\n\t\t\t\tvar lookupFunc, column;\r\n\r\n\t\t\t\tif(typeof group == \"function\"){\r\n\t\t\t\t\tlookupFunc = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumn = this.table.columnManager.getColumnByField(group);\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn column.getFieldValue(data);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn data[group];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groupIDLookups.push({\r\n\t\t\t\t\tfield: typeof group === \"function\" ? false : group,\r\n\t\t\t\t\tfunc:lookupFunc,\r\n\t\t\t\t\tvalues:this.allowedValues ? this.allowedValues[i] : false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif(startOpen){\r\n\t\t\t\tif(!Array.isArray(startOpen)){\r\n\t\t\t\t\tstartOpen = [startOpen];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartOpen.forEach((level) => {\r\n\t\t\t\t\tlevel = typeof level == \"function\" ? level : function(){return true;};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.startOpen = startOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(groupHeader){\r\n\t\t\t\tthis.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowSample(rows, prevValue){\r\n\t\tvar group = this.getGroups(false)[0];\r\n\r\n\t\tprevValue.push(group.getRows(false)[0]);\r\n\r\n\t\treturn prevValue;\r\n\t}\r\n\r\n\tvirtualRenderFill(){\r\n\t\tvar el = this.table.rowManager.tableElement;\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\treturn row.type !== \"group\";\r\n\t\t});\r\n\r\n\t\tel.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\r\n\r\n\t\t// if(this.table.options.groupBy){\r\n\t\t// \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\r\n\t\t// \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\trowAddingIndex(row, index, top){\r\n\t\tthis.assignRowToGroup(row);\r\n\r\n\t\tvar groupRows = row.modules.group.rows;\r\n\r\n\t\tif(groupRows.length > 1){\r\n\t\t\tif(!index || (index && groupRows.indexOf(index) == -1)){\r\n\t\t\t\tif(top){\r\n\t\t\t\t\tif(groupRows[0] !== row){\r\n\t\t\t\t\t\tindex = groupRows[0];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(groupRows[groupRows.length -1] !== row){\r\n\t\t\t\t\t\tindex = groupRows[groupRows.length -1];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"group-changed\");\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tsetGroupBy(groups){\r\n\t\tthis.table.options.groupBy = groups;\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.initialize();\r\n\t\t}else{\r\n\t\t\tthis.configureGroupSetup();\r\n\t\t}\r\n\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupValues(groupValues){\r\n\t\tthis.table.options.groupValues = groupValues;\r\n\t\tthis.configureGroupSetup();\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupStartOpen(values){\r\n\t\tthis.table.options.groupStartOpen = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetGroupHeader(values){\r\n\t\tthis.table.options.groupHeader = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetGroups(values){\r\n\t\treturn this.getGroups(true);\r\n\t}\r\n\r\n\t// get grouped table data in the same format as getData()\r\n\tuserGetGroupedData(){\r\n\t\treturn this.table.options.groupBy ?\r\n\t\tthis.getGroupedData() : this.getData()\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////////\r\n\t///////// Component Functions /////////\r\n\t///////////////////////////////////////\r\n\r\n\trowGetGroup(row){\r\n\t\treturn row.modules.group ? row.modules.group.getComponent() : false;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\trowMoving(from, to, after){\r\n\t\tif(!after && to instanceof Group){\r\n\t\t\tto = this.table.rowManager.prevDisplayRow(from) || to;\r\n\t\t}\r\n\r\n\t\tvar toGroup = to instanceof Group ? to : to.modules.group;\r\n\t\tvar fromGroup = from instanceof Group ? from : from.modules.group;\r\n\r\n\t\tif(toGroup === fromGroup){\r\n\t\t\tthis.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\r\n\t\t}else{\r\n\t\t\tif(fromGroup){\r\n\t\t\t\tfromGroup.removeRow(from);\r\n\t\t\t}\r\n\r\n\t\t\ttoGroup.insertRow(from, to, after);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowDeleting(row){\r\n\t\t//remove from group\r\n\t\tif(row.modules.group){\r\n\t\t\trow.modules.group.removeRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowsUpdated(row){\r\n\t\tthis.updateGroupRows(true);\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.reassignRowToGroup(cell.row);\r\n\t}\r\n\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//return appropriate rows with group headers\r\n\tgetRows(rows){\r\n\t\tif(this.table.options.groupBy && this.groupIDLookups.length){\r\n\r\n\t\t\tthis.dispatchExternal(\"dataGrouping\");\r\n\r\n\t\t\tthis.generateGroups(rows);\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataGrouped\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataGrouped\", this.getGroups(true));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.updateGroupRows();\r\n\r\n\t\t}else{\r\n\t\t\treturn rows.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\tgetGroups(component){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroupComponents.push(component ? group.getComponent() : group);\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\tgetChildGroups(group){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tif(!group){\r\n\t\t\tgroup = this;\r\n\t\t}\r\n\r\n\t\tgroup.groupList.forEach((child) => {\r\n\t\t\tif(child.groupList.length){\r\n\t\t\t\tgroupComponents = groupComponents.concat(this.getChildGroups(child));\r\n\t\t\t}else{\r\n\t\t\t\tgroupComponents.push(child);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroup.wipe();\r\n\t\t});\r\n\t}\r\n\r\n\tpullGroupListData(groupList) {\r\n\t\tvar groupListData = [];\r\n\r\n\t\tgroupList.forEach((group) => {\r\n\t\t\tvar groupHeader = {};\r\n\t\t\tgroupHeader.level = 0;\r\n\t\t\tgroupHeader.rowCount = 0;\r\n\t\t\tgroupHeader.headerContent = \"\";\r\n\t\t\tvar childData = [];\r\n\r\n\t\t\tif (group.hasSubGroups) {\r\n\t\t\t\tchildData = this.pullGroupListData(group.groupList);\r\n\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\t\t\t\tgroupListData = groupListData.concat(childData);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\r\n\t\t\t\tgroupHeader.rowCount = group.getRows().length;\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\r\n\t\t\t\tgroup.getRows().forEach((row) => {\r\n\t\t\t\t\tgroupListData.push(row.getData(\"data\"));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupListData\r\n\t}\r\n\r\n\tgetGroupedData(){\r\n\r\n\t\treturn this.pullGroupListData(this.groupList);\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\tif(result){\r\n\t\t\t\tmatch = result;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tcountGroups(){\r\n\t\treturn this.groupList.length;\r\n\t}\r\n\r\n\tgenerateGroups(rows){\r\n\t\tvar oldGroups = this.groups;\r\n\r\n\t\tthis.groups = {};\r\n\t\tthis.groupList = [];\r\n\r\n\t\tif(this.allowedValues && this.allowedValues[0]){\r\n\t\t\tthis.allowedValues[0].forEach((value) => {\r\n\t\t\t\tthis.createGroup(value, 0, oldGroups);\r\n\t\t\t});\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToExistingGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcreateGroup(groupID, level, oldGroups){\r\n\t\tvar groupKey = level + \"_\" + groupID,\r\n\t\tgroup;\r\n\r\n\t\toldGroups = oldGroups || [];\r\n\r\n\t\tgroup = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\tassignRowToExistingGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tgroupKey = \"0_\" + groupID;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\tassignRowToGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tnewGroupNeeded = !this.groups[\"0_\" + groupID];\r\n\r\n\t\tif(newGroupNeeded){\r\n\t\t\tthis.createGroup(groupID, 0, oldGroups);\r\n\t\t}\r\n\r\n\t\tthis.groups[\"0_\" + groupID].addRow(row);\r\n\r\n\t\treturn !newGroupNeeded;\r\n\t}\r\n\r\n\treassignRowToGroup(row){\r\n\t\tif(row.type === \"row\"){\r\n\t\t\tvar oldRowGroup = row.modules.group,\r\n\t\t\toldGroupPath = oldRowGroup.getPath(),\r\n\t\t\tnewGroupPath = this.getExpectedPath(row),\r\n\t\t\tsamePath = true;\r\n\r\n\t\t\t// figure out if new group path is the same as old group path\r\n\t\t\tvar samePath = (oldGroupPath.length == newGroupPath.length) && oldGroupPath.every((element, index) => {\r\n\t\t\t\treturn element === newGroupPath[index];\r\n\t\t\t});\r\n\r\n\t\t\t// refresh if they new path and old path aren't the same (aka the row's groupings have changed)\r\n\t\t\tif(!samePath) {\r\n\t\t\t\toldRowGroup.removeRow(row);\r\n\t\t\t\tthis.assignRowToGroup(row, this.groups);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetExpectedPath(row) {\r\n\t\tvar groupPath = [], rowData = row.getData();\r\n\r\n\t\tthis.groupIDLookups.forEach((groupId) => {\r\n\t\t\tgroupPath.push(groupId.func(rowData));\r\n\t\t});\r\n\r\n\t\treturn groupPath;\r\n\t}\r\n\r\n\tupdateGroupRows(force){\r\n\t\tvar output = [],\r\n\t\toldRowCount;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\toutput = output.concat(group.getHeadersAndRows());\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.refreshData(true, this.displayHandler);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tscrollHeaders(left){\r\n\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\tleft -= this.table.columnManager.renderer.vDomPadLeft;\r\n\t\t}\r\n\r\n\t\tleft = left + \"px\";\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tgroup.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGroupRows.moduleName = \"groupRows\";\r\n\r\nexport default GroupRows;","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.oldValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowDelete: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.newValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowDelete:function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\nimport Row from '../../core/row/Row.js';\r\nimport Cell from '../../core/cell/Cell.js';\r\n\r\nimport defaultUndoers from './defaults/undoers.js';\r\nimport defaultRedoers from './defaults/redoers.js';\r\n\r\nclass History extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\r\n\t\tthis.registerTableOption(\"history\", false); //enable edit history\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.history){\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\r\n\t\t\tthis.subscribe(\"row-delete\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clear.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowAdded.bind(this));\r\n\t\t\tthis.subscribe(\"row-move\", this.rowMoved.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"undo\", this.undo.bind(this));\r\n\t\tthis.registerTableFunction(\"redo\", this.redo.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHistory\", this.clear.bind(this));\r\n\t}\r\n\r\n\trowMoved(from, to, after){\r\n\t\tthis.action(\"rowMove\", from, {posFrom:this.table.rowManager.getRowPosition(from), posTo:this.table.rowManager.getRowPosition(to), to:to, after:after});\r\n\t}\r\n\r\n\trowAdded(row, data, pos, index){\r\n\t\tthis.action(\"rowAdd\", row, {data:data, pos:pos, index:index});\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tvar index, rows;\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\trows = row.getComponent().getGroup().rows\r\n\t\t\tindex = rows.indexOf(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = rows[index-1];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tindex = row.table.rowManager.getRowIndex(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = row.table.rowManager.rows[index-1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.action(\"rowDelete\", row, {data:row.getData(), pos:!index, index:index});\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.action(\"cellEdit\", cell, {oldValue:cell.oldValue, newValue:cell.value});\r\n\t}\r\n\r\n\tclear(){\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\t}\r\n\r\n\taction(type, component, data){\r\n\t\tthis.history = this.history.slice(0, this.index + 1);\r\n\r\n\t\tthis.history.push({\r\n\t\t\ttype:type,\r\n\t\t\tcomponent:component,\r\n\t\t\tdata:data,\r\n\t\t});\r\n\r\n\t\tthis.index ++;\r\n\t}\r\n\r\n\tgetHistoryUndoSize(){\r\n\t\treturn this.index + 1;\r\n\t}\r\n\r\n\tgetHistoryRedoSize(){\r\n\t\treturn this.history.length - (this.index + 1);\r\n\t}\r\n\r\n\tclearComponentHistory(component){\r\n\t\tvar index = this.history.findIndex(function(item){\r\n\t\t\treturn item.component === component;\r\n\t\t});\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.history.splice(index, 1);\r\n\t\t\tif(index <= this.index){\r\n\t\t\t\tthis.index--;\r\n\t\t\t}\r\n\r\n\t\t\tthis.clearComponentHistory(component);\r\n\t\t}\r\n\t}\r\n\r\n\tundo(){\r\n\t\tif(this.index > -1){\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.undoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.index--;\r\n\r\n\t\t\tthis.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Undo Error - No more history to undo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tredo(){\r\n\t\tif(this.history.length-1 > this.index){\r\n\r\n\t\t\tthis.index++;\r\n\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.redoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Redo Error - No more history to redo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//rebind rows to new element after deletion\r\n\t_rebindRow(oldRow, newRow){\r\n\t\tthis.history.forEach(function(action){\r\n\t\t\tif(action.component instanceof Row){\r\n\t\t\t\tif(action.component === oldRow){\r\n\t\t\t\t\taction.component = newRow;\r\n\t\t\t\t}\r\n\t\t\t}else if(action.component instanceof Cell){\r\n\t\t\t\tif(action.component.row === oldRow){\r\n\t\t\t\t\tvar field = action.component.column.getField();\r\n\r\n\t\t\t\t\tif(field){\r\n\t\t\t\t\t\taction.component = newRow.getCell(field);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nHistory.moduleName = \"history\";\r\n\r\n//load defaults\r\nHistory.undoers = defaultUndoers;\r\nHistory.redoers = defaultRedoers;\r\n\r\nexport default History;","import Module from '../../core/Module.js';\r\nimport Column from '../../core/column/Column.js';\r\n\r\nclass HtmlTableImport extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.fieldIndex = [];\r\n\t\tthis.hasIndex = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.tableElementCheck();\r\n\t}\r\n\r\n\ttableElementCheck(){\r\n\t\tif(this.table.originalElement && this.table.originalElement.tagName === \"TABLE\"){\r\n\t\t\tif(this.table.originalElement.childNodes.length){\r\n\t\t\t\tthis.parseTable();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Unable to parse data from empty table tag, Tabulator should be initialized on a div tag unless importing data from a table element.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseTable(){\r\n\t\tvar element = this.table.originalElement,\r\n\t\toptions = this.table.options,\r\n\t\tcolumns = options.columns,\r\n\t\theaders = element.getElementsByTagName(\"th\"),\r\n\t\trows = element.getElementsByTagName(\"tbody\")[0],\r\n\t\tdata = [],\r\n\t\tnewTable;\r\n\r\n\t\tthis.hasIndex = false;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImporting\");\r\n\r\n\t\trows = rows ? rows.getElementsByTagName(\"tr\") : [];\r\n\r\n\t\t//check for Tabulator inline options\r\n\t\tthis._extractOptions(element, options);\r\n\r\n\t\tif(headers.length){\r\n\t\t\tthis._extractHeaders(headers, rows);\r\n\t\t}else{\r\n\t\t\tthis._generateBlankHeaders(headers, rows);\r\n\t\t}\r\n\r\n\t\t//iterate through table rows and build data set\r\n\t\tfor(var index = 0; index < rows.length; index++){\r\n\t\t\tvar row = rows[index],\r\n\t\t\tcells = row.getElementsByTagName(\"td\"),\r\n\t\t\titem = {};\r\n\r\n\t\t\t//create index if the dont exist in table\r\n\t\t\tif(!this.hasIndex){\r\n\t\t\t\titem[options.index] = index;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < cells.length; i++){\r\n\t\t\t\tvar cell = cells[i];\r\n\t\t\t\tif(typeof this.fieldIndex[i] !== \"undefined\"){\r\n\t\t\t\t\titem[this.fieldIndex[i]] = cell.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//add row data to item\r\n\t\t\tdata.push(item);\r\n\t\t}\r\n\r\n\t\toptions.data = data;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImported\");\r\n\t}\r\n\r\n\t//extract tabulator attribute options\r\n\t_extractOptions(element, options, defaultOptions){\r\n\t\tvar attributes = element.attributes;\r\n\t\tvar optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\r\n\t\tvar optionsList = {};\r\n\r\n\t\toptionsArr.forEach((item) => {\r\n\t\t\toptionsList[item.toLowerCase()] = item;\r\n\t\t});\r\n\r\n\t\tfor(var index in attributes){\r\n\t\t\tvar attrib = attributes[index];\r\n\t\t\tvar name;\r\n\r\n\t\t\tif(attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0){\r\n\t\t\t\tname = attrib.name.replace(\"tabulator-\", \"\");\r\n\r\n\t\t\t\tif(typeof optionsList[name] !== \"undefined\"){\r\n\t\t\t\t\toptions[optionsList[name]] = this._attribValue(attrib.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//get value of attribute\r\n\t_attribValue(value){\r\n\t\tif(value === \"true\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(value === \"false\"){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t//find column if it has already been defined\r\n\t_findCol(title){\r\n\t\tvar match = this.table.options.columns.find((column) => {\r\n\t\t\treturn column.title === title;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\t//extract column from headers\r\n\t_extractHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\texists = false,\r\n\t\t\tcol = this._findCol(header.textContent),\r\n\t\t\twidth, attributes;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\texists = true;\r\n\t\t\t}else{\r\n\t\t\t\tcol = {title:header.textContent.trim()};\r\n\t\t\t}\r\n\r\n\t\t\tif(!col.field) {\r\n\t\t\t\tcol.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\r\n\t\t\t}\r\n\r\n\t\t\twidth = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width && !col.width)\t{\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\t//check for Tabulator inline options\r\n\t\t\tthis._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tif(col.field == this.table.options.index){\r\n\t\t\t\tthis.hasIndex = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(!exists){\r\n\t\t\t\tthis.table.options.columns.push(col);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//generate blank headers\r\n\t_generateBlankHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\tcol = {title:\"\", field:\"col\" + index};\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tvar width = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width){\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.options.columns.push(col);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nHtmlTableImport.moduleName = \"htmlTableImport\";\r\n\r\nexport default HtmlTableImport;","function csvImporter(input){\r\n    var data = [],\r\n    row = 0, \r\n    col = 0,\r\n    inQuote = false;\r\n    \r\n    //Iterate over each character\r\n    for (let index = 0; index < input.length; index++) {\r\n        let char = input[index], \r\n        nextChar = input[index+1];      \r\n        \r\n        //Initialize empty row\r\n        if(!data[row]){\r\n            data[row] = [];\r\n        }\r\n\r\n        //Initialize empty column\r\n        if(!data[row][col]){\r\n            data[row][col] = \"\";\r\n        }\r\n        \r\n        //Handle quotation mark inside string\r\n        if (char == '\"' && inQuote && nextChar == '\"') { \r\n            data[row][col] += char; \r\n            index++;\r\n            continue; \r\n        }\r\n        \r\n        //Begin / End Quote\r\n        if (char == '\"') { \r\n            inQuote = !inQuote;\r\n            continue;\r\n        }\r\n        \r\n        //Next column (if not in quote)\r\n        if (char == ',' && !inQuote) { \r\n            col++;\r\n            continue; \r\n        }\r\n        \r\n        //New row if new line and not in quote (CRLF) \r\n        if (char == '\\r' && nextChar == '\\n' && !inQuote) { \r\n            col = 0; \r\n            row++; \r\n            index++; \r\n            continue; \r\n        }\r\n        \r\n        //New row if new line and not in quote (CR or LF) \r\n        if ((char == '\\r' || char == '\\n') && !inQuote) { \r\n            col = 0;\r\n            row++;\r\n            continue; \r\n        }\r\n\r\n        //Normal Character, append to column\r\n        data[row][col] += char;\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport default csvImporter;","export default function(input){\r\n    try {\r\n        return JSON.parse(input);\r\n    } catch(e) {\r\n        console.warn(\"JSON Import Error - File contents is invalid JSON\", e);\r\n        return Promise.reject();\r\n    }\r\n}","import csv from './importers/csv.js';\r\nimport json from './importers/json.js';\r\n\r\nexport default {\r\n\tcsv:csv,\r\n\tjson:json,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultImporters from './defaults/importers.js';\r\n\r\nclass Import extends Module{\r\n    \r\n    constructor(table){\r\n        super(table);\r\n        \r\n        this.registerTableOption(\"importFormat\");\r\n        this.registerTableOption(\"importReader\", \"text\");\r\n    }\r\n    \r\n    initialize(){\r\n        this.registerTableFunction(\"import\", this.importFromFile.bind(this));\r\n\r\n        if(this.table.options.importFormat){\r\n            this.subscribe(\"data-loading\", this.loadDataCheck.bind(this), 10);\r\n            this.subscribe(\"data-load\", this.loadData.bind(this), 10);\r\n        }\r\n    }\r\n\r\n    loadDataCheck(data){\r\n        return typeof data === \"string\";\r\n    }\r\n\r\n    loadData(data, params, config, silent, previousData){\r\n        return this.importData(this.lookupImporter(), data)\r\n        .then(this.structureData.bind(this))\r\n        .catch((err) => {\r\n            console.error(\"Import Error:\", err || \"Unable to import data\")\r\n            return Promise.reject(err);\r\n        })\r\n    }\r\n\r\n    lookupImporter(importFormat){\r\n        var importer;\r\n        \r\n        if(!importFormat){\r\n            importFormat = this.table.options.importFormat;\r\n        }\r\n        \r\n        if(typeof importFormat === \"string\"){\r\n            importer = Import.importers[importFormat];\r\n        }else{\r\n            importer = importFormat;\r\n        }\r\n\r\n        if(!importer){\r\n            console.error(\"Import Error - Importer not found:\", importFormat);\r\n        }\r\n        \r\n        return importer;\r\n    }\r\n    \r\n    importFromFile(importFormat, extension){\r\n        var importer = this.lookupImporter(importFormat);\r\n        \r\n        if(importer){\r\n            return this.pickFile(extension)\r\n            .then(this.importData.bind(this, importer))\r\n            .then(this.structureData.bind(this))\r\n            .then(this.setData.bind(this))\r\n            .catch((err) => {\r\n                console.error(\"Import Error:\", err || \"Unable to import file\")\r\n                return Promise.reject(err);\r\n            })\r\n        }\r\n    }\r\n    \r\n    pickFile(extensions){\r\n        return new Promise((resolve, reject) => {\r\n            var input = document.createElement(\"input\");\r\n            input.type = \"file\";\r\n            input.accept = extensions;\r\n            \r\n            input.addEventListener(\"change\", (e) => {\r\n                var file = input.files[0],\r\n                reader = new FileReader(),\r\n                data;\r\n                \r\n                switch(this.table.options.importReader){\r\n                    case \"buffer\":\r\n                        reader.readAsArrayBuffer(file);\r\n                    break;\r\n\r\n                    case \"binary\":\r\n                        reader.readAsBinaryString(file);\r\n                    break;\r\n\r\n                    case \"url\":\r\n                        reader.readAsDataURL(file);\r\n                    break;\r\n\r\n                    case \"text\":\r\n                    default:\r\n                        reader.readAsText(file);\r\n                }\r\n                  \r\n                reader.onload = (e) => {\r\n                    resolve(reader.result)\r\n                };\r\n                \r\n                reader.onerror = (e) => {\r\n                    console.warn(\"File Load Error - Unable to read file\");\r\n                    reject();\r\n                };\r\n            });\r\n            \r\n            input.click();\r\n        });\r\n    }\r\n    \r\n    importData(importer, fileContents){\r\n        var data = importer.call(this.table, fileContents);\r\n        \r\n        if(data instanceof Promise){\r\n            return data;\r\n        }else{\r\n            return data ? Promise.resolve(data) : Promise.reject();\r\n        }\r\n    }\r\n\r\n    structureData(parsedData){\r\n        var data = [];\r\n        \r\n        if(Array.isArray(parsedData) && parsedData.length && Array.isArray(parsedData[0])){\r\n            if(this.table.options.autoColumns){\r\n                data = this.structureArrayToObject(parsedData);\r\n            }else{\r\n                data = this.structureArrayToColumns(parsedData);\r\n            }\r\n\r\n            return data;\r\n        }else{\r\n            return parsedData;\r\n        }\r\n    }\r\n\r\n    structureArrayToObject(parsedData){\r\n        var columns = parsedData.shift();\r\n\r\n        var data = parsedData.map((values) => {\r\n            var row = {};\r\n\r\n            columns.forEach((key, i) => {\r\n                row[key] = values[i];\r\n            })\r\n\r\n            return row;\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    structureArrayToColumns(parsedData){\r\n        var data = [],\r\n        columns = this.table.getColumns();\r\n\r\n        //remove first row if it is the column names\r\n        if(columns[0] && parsedData[0][0]){\r\n            if(columns[0].getDefinition().title === parsedData[0][0]){\r\n                parsedData.shift();\r\n            }\r\n        }\r\n        \r\n        //convert row arrays to objects\r\n        parsedData.forEach((rowData) => {\r\n            var row = {};\r\n\r\n            rowData.forEach((value, index) => {\r\n                var column = columns[index];\r\n\r\n                if(column){\r\n                    row[column.getField()] = value;\r\n                }\r\n            })\r\n\r\n            data.push(row);\r\n        });\r\n\r\n        return data;\r\n    }\r\n    \r\n    setData(data){\r\n        return this.table.setData(data);\r\n    }\r\n}\r\n\r\nImport.moduleName = \"import\";\r\n\r\n//load defaults\r\nImport.importers = defaultImporters;\r\n\r\nexport default Import;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport Cell from '../../core/cell/Cell';\r\nimport Column from '../../core/column/Column';\r\n\r\nclass Interaction extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.eventMap = {\r\n\t\t\t//row events\r\n\t\t\trowClick:\"row-click\",\r\n\t\t\trowDblClick:\"row-dblclick\",\r\n\t\t\trowContext:\"row-contextmenu\",\r\n\t\t\trowMouseEnter:\"row-mouseenter\",\r\n\t\t\trowMouseLeave:\"row-mouseleave\",\r\n\t\t\trowMouseOver:\"row-mouseover\",\r\n\t\t\trowMouseOut:\"row-mouseout\",\r\n\t\t\trowMouseMove:\"row-mousemove\",\r\n\t\t\trowTap:\"row\",\r\n\t\t\trowDblTap:\"row\",\r\n\t\t\trowTapHold:\"row\",\r\n\r\n\t\t\t//cell events\r\n\t\t\tcellClick:\"cell-click\",\r\n\t\t\tcellDblClick:\"cell-dblclick\",\r\n\t\t\tcellContext:\"cell-contextmenu\",\r\n\t\t\tcellMouseEnter:\"cell-mouseenter\",\r\n\t\t\tcellMouseLeave:\"cell-mouseleave\",\r\n\t\t\tcellMouseOver:\"cell-mouseover\",\r\n\t\t\tcellMouseOut:\"cell-mouseout\",\r\n\t\t\tcellMouseMove:\"cell-mousemove\",\r\n\t\t\tcellTap:\"cell\",\r\n\t\t\tcellDblTap:\"cell\",\r\n\t\t\tcellTapHold:\"cell\",\r\n\r\n\t\t\t//column header events\r\n\t\t\theaderClick:\"column-click\",\r\n\t\t\theaderDblClick:\"column-dblclick\",\r\n\t\t\theaderContext:\"column-contextmenu\",\r\n\t\t\theaderMouseEnter:\"column-mouseenter\",\r\n\t\t\theaderMouseLeave:\"column-mouseleave\",\r\n\t\t\theaderMouseOver:\"column-mouseover\",\r\n\t\t\theaderMouseOut:\"column-mouseout\",\r\n\t\t\theaderMouseMove:\"column-mousemove\",\r\n\t\t\theaderTap:\"column\",\r\n\t\t\theaderDblTap:\"column\",\r\n\t\t\theaderTapHold:\"column\",\r\n\r\n\t\t\t//group header\r\n\t\t\tgroupClick:\"group-click\",\r\n\t\t\tgroupDblClick:\"group-dblclick\",\r\n\t\t\tgroupContext:\"group-contextmenu\",\r\n\t\t\tgroupMouseEnter:\"group-mouseenter\",\r\n\t\t\tgroupMouseLeave:\"group-mouseleave\",\r\n\t\t\tgroupMouseOver:\"group-mouseover\",\r\n\t\t\tgroupMouseOut:\"group-mouseout\",\r\n\t\t\tgroupMouseMove:\"group-mousemove\",\r\n\t\t\tgroupTap:\"group\",\r\n\t\t\tgroupDblTap:\"group\",\r\n\t\t\tgroupTapHold:\"group\",\r\n\t\t}\r\n\r\n\t\tthis.subscribers = {};\r\n\r\n\t\tthis.touchSubscribers = {};\r\n\r\n\t\tthis.columnSubscribers = {};\r\n\r\n\t\tthis.touchWatchers = {\r\n\t\t\trow:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcell:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcolumn:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tgroup:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.registerColumnOption(\"headerClick\");\r\n\t\tthis.registerColumnOption(\"headerDblClick\");\r\n\t\tthis.registerColumnOption(\"headerContext\");\r\n\t\tthis.registerColumnOption(\"headerMouseEnter\");\r\n\t\tthis.registerColumnOption(\"headerMouseLeave\");\r\n\t\tthis.registerColumnOption(\"headerMouseOver\");\r\n\t\tthis.registerColumnOption(\"headerMouseOut\");\r\n\t\tthis.registerColumnOption(\"headerMouseMove\");\r\n\t\tthis.registerColumnOption(\"headerTap\");\r\n\t\tthis.registerColumnOption(\"headerDblTap\");\r\n\t\tthis.registerColumnOption(\"headerTapHold\");\r\n\r\n\t\tthis.registerColumnOption(\"cellClick\");\r\n\t\tthis.registerColumnOption(\"cellDblClick\");\r\n\t\tthis.registerColumnOption(\"cellContext\");\r\n\t\tthis.registerColumnOption(\"cellMouseEnter\");\r\n\t\tthis.registerColumnOption(\"cellMouseLeave\");\r\n\t\tthis.registerColumnOption(\"cellMouseOver\");\r\n\t\tthis.registerColumnOption(\"cellMouseOut\");\r\n\t\tthis.registerColumnOption(\"cellMouseMove\");\r\n\t\tthis.registerColumnOption(\"cellTap\");\r\n\t\tthis.registerColumnOption(\"cellDblTap\");\r\n\t\tthis.registerColumnOption(\"cellTapHold\");\r\n\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeExternalEvents();\r\n\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this))\r\n\t\tthis.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this))\r\n\t}\r\n\r\n\tcellContentsSelectionFixer(e, cell){\r\n\t\tif(this.table.modExists(\"edit\")){\r\n\t\t\tif (this.table.modules.edit.currentCell === this){\r\n\t\t\t\treturn; //prevent instant selection of editor content\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\ttry{\r\n\t\t\tif (document.selection) { // IE\r\n\t\t\t\tvar range = document.body.createTextRange();\r\n\t\t\t\trange.moveToElementText(this.element);\r\n\t\t\t\trange.select();\r\n\t\t\t} else if (window.getSelection) {\r\n\t\t\t\tvar range = document.createRange();\r\n\t\t\t\trange.selectNode(this.element);\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\twindow.getSelection().addRange(range);\r\n\t\t\t}\r\n\t\t}catch(e){}\r\n\t}\r\n\r\n\tinitializeExternalEvents(){\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tthis.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key))\r\n\t\t}\r\n\t}\r\n\r\n\tsubscriptionChanged(key, added){\r\n\t\tvar index;\r\n\r\n\t\tif(added){\r\n\t\t\tif(!this.subscribers[key]){\r\n\t\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\t\tthis.subscribers[key] = this.handle.bind(this, key);\r\n\t\t\t\t\tthis.subscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.subscribeTouchEvents(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\tif(this.subscribers[key] && !this.columnSubscribers[key]  && !this.subscribedExternal(key)){\r\n\t\t\t\t\tthis.unsubscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t\tdelete this.subscribers[key];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.unsubscribeTouchEvents(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsubscribeTouchEvents(key){\r\n\t\tvar type = this.eventMap[key];\r\n\r\n\t\tif(!this.touchSubscribers[type + \"-touchstart\"]){\r\n\t\t\tthis.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\r\n\t\t\tthis.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\r\n\r\n\t\t\tthis.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\tthis.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\t\t}\r\n\r\n\t\tthis.subscribers[key] = true;\r\n\t}\r\n\r\n\tunsubscribeTouchEvents(key){\r\n\t\tvar notouch = true,\r\n\t\ttype = this.eventMap[key];\r\n\r\n\t\tif(this.subscribers[key] && !this.subscribedExternal(key)){\r\n\t\t\tdelete this.subscribers[key];\r\n\r\n\t\t\tfor(let i in this.eventMap){\r\n\t\t\t\tif(this.eventMap[i] === type){\r\n\t\t\t\t\tif(this.subscribers[i]){\r\n\t\t\t\t\t\tnotouch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(notouch){\r\n\t\t\t\tthis.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\t\tthis.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchstart\"];\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchend\"];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tif(def[key]){\r\n\t\t\t\tthis.subscriptionChanged(key, true);\r\n\r\n\t\t\t\tif(!this.columnSubscribers[key]){\r\n\t\t\t\t\tthis.columnSubscribers[key] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.columnSubscribers[key].push(column);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandle(action, e, component){\r\n\t\tthis.dispatchEvent(action, e, component);\r\n\t}\r\n\r\n\thandleTouch(type, action, e, component){\r\n\t\tvar watchers = this.touchWatchers[type];\r\n\r\n\t\tif(type === \"column\"){\r\n\t\t\ttype = \"header\";\r\n\t\t}\r\n\r\n\t\tswitch(action){\r\n\t\t\tcase \"start\":\r\n\t\t\twatchers.tap = true;\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\r\n\t\t\twatchers.tapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\t\twatchers.tapHold = null;\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"TapHold\", e,  component);\r\n\t\t\t}, 1000);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"end\":\r\n\t\t\tif(watchers.tap){\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tthis.dispatchEvent(type + \"Tap\", e,  component);\r\n\t\t\t}\r\n\r\n\t\t\tif(watchers.tapDbl){\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"DblTap\", e,  component);\r\n\t\t\t}else{\r\n\t\t\t\twatchers.tapDbl = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\t\twatchers.tapDbl = null;\r\n\t\t\t\t}, 300);\r\n\t\t\t}\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\twatchers.tapHold = null;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdispatchEvent(action, e, component){\r\n\t\tvar componentObj = component.getComponent(),\r\n\t\tcallback;\r\n\r\n\t\tif(this.columnSubscribers[action]){\r\n\r\n\t\t\tif(component instanceof Cell){\r\n\t\t\t\tcallback = component.column.definition[action];\r\n\t\t\t}else if(component instanceof Column){\r\n\t\t\t\tcallback = component.definition[action];\r\n\t\t\t}\r\n\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback(e, componentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(action, e, componentObj);\r\n\t}\r\n}\r\n\r\nInteraction.moduleName = \"interaction\";\r\n\r\nexport default Interaction;","export default {\r\n\tnavPrev:\"shift + 9\",\r\n\tnavNext:9,\r\n\tnavUp:38,\r\n\tnavDown:40,\r\n\tscrollPageUp:33,\r\n\tscrollPageDown:34,\r\n\tscrollToStart:36,\r\n\tscrollToEnd:35,\r\n\tundo:[\"ctrl + 90\", \"meta + 90\"],\r\n\tredo:[\"ctrl + 89\", \"meta + 89\"],\r\n\tcopyToClipboard:[\"ctrl + 67\", \"meta + 89\"],\r\n};","export default {\r\n\tkeyBlock:function(e){\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tscrollPageUp:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop - rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos >= 0){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollPageDown:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop + rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos <= scrollMax){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\r\n\t},\r\n\tscrollToStart:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollToEnd:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tnavPrev:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-prev\", e);\r\n\t},\r\n\r\n\tnavNext:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-next\", e);\r\n\t},\r\n\r\n\tnavLeft:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-left\", e);\r\n\t},\r\n\r\n\tnavRight:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-right\", e);\r\n\t},\r\n\r\n\tnavUp:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-up\", e);\r\n\t},\r\n\r\n\tnavDown:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-down\", e);\r\n\t},\r\n\r\n\tundo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.undo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tredo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.redo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tcopyToClipboard:function(e){\r\n\t\tif(!this.table.modules.edit.currentCell){\r\n\t\t\tif(this.table.modExists(\"clipboard\", true)){\r\n\t\t\t\tthis.table.modules.clipboard.copy(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultBindings from './defaults/bindings.js';\r\nimport defaultActions from './defaults/actions.js';\r\n\r\nclass Keybindings extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.watchKeys = null;\r\n\t\tthis.pressedKeys = null;\r\n\t\tthis.keyupBinding = false;\r\n\t\tthis.keydownBinding = false;\r\n\r\n\t\tthis.registerTableOption(\"keybindings\", {}); //array for keybindings\r\n\t\tthis.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar bindings = this.table.options.keybindings,\r\n\t\tmergedBindings = {};\r\n\r\n\t\tthis.watchKeys = {};\r\n\t\tthis.pressedKeys = [];\r\n\r\n\t\tif(bindings !== false){\r\n\t\t\tObject.assign(mergedBindings, Keybindings.bindings)\r\n\t\t\tObject.assign(mergedBindings, bindings)\r\n\r\n\t\t\tthis.mapBindings(mergedBindings);\r\n\t\t\tthis.bindEvents();\r\n\t\t}\r\n\r\n\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t}\r\n\r\n\tmapBindings(bindings){\r\n\t\tfor(let key in bindings){\r\n\t\t\tif(Keybindings.actions[key]){\r\n\t\t\t\tif(bindings[key]){\r\n\t\t\t\t\tif(typeof bindings[key] !== \"object\"){\r\n\t\t\t\t\t\tbindings[key] = [bindings[key]];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindings[key].forEach((binding) => {\r\n\t\t\t\t\t\tvar bindingList = Array.isArray(binding) ?  binding : [binding];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbindingList.forEach((item) => {\r\n\t\t\t\t\t\t\tthis.mapBinding(key, item);\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Key Binding Error - no such action:\", key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmapBinding(action, symbolsList){\r\n\t\tvar binding = {\r\n\t\t\taction: Keybindings.actions[action],\r\n\t\t\tkeys: [],\r\n\t\t\tctrl: false,\r\n\t\t\tshift: false,\r\n\t\t\tmeta: false,\r\n\t\t};\r\n\r\n\t\tvar symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\r\n\r\n\t\tsymbols.forEach((symbol) => {\r\n\t\t\tswitch(symbol){\r\n\t\t\t\tcase \"ctrl\":\r\n\t\t\t\tbinding.ctrl = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shift\":\r\n\t\t\t\tbinding.shift = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"meta\":\r\n\t\t\t\tbinding.meta = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tsymbol = isNaN(symbol) ? symbol.toUpperCase().charCodeAt(0) : parseInt(symbol);\r\n\t\t\t\tbinding.keys.push(symbol);\r\n\r\n\t\t\t\tif(!this.watchKeys[symbol]){\r\n\t\t\t\t\tthis.watchKeys[symbol] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.watchKeys[symbol].push(binding);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tbindEvents(){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.keyupBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tself.pressedKeys.push(code);\r\n\r\n\t\t\t\tbindings.forEach(function(binding){\r\n\t\t\t\t\tself.checkBinding(e, binding);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.keydownBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tvar index = self.pressedKeys.indexOf(code);\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tself.pressedKeys.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.table.element.addEventListener(\"keydown\", this.keyupBinding);\r\n\r\n\t\tthis.table.element.addEventListener(\"keyup\", this.keydownBinding);\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.keyupBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keydown\", this.keyupBinding);\r\n\t\t}\r\n\r\n\t\tif(this.keydownBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keyup\", this.keydownBinding);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckBinding(e, binding){\r\n\t\tvar match = true;\r\n\r\n\t\tif(e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta){\r\n\t\t\tbinding.keys.forEach((key) => {\r\n\t\t\t\tvar index = this.pressedKeys.indexOf(key);\r\n\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tbinding.action.call(this, e);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nKeybindings.moduleName = \"keybindings\";\r\n\r\n//load defaults\r\nKeybindings.bindings = defaultBindings;\r\nKeybindings.actions = defaultActions;\r\n\r\nexport default Keybindings;","import Module from '../../core/Module.js';\r\n\r\nclass Menu extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.menuContainer = null;\r\n\t\tthis.nestedMenuBlock = false;\r\n\t\t\r\n\t\tthis.currentComponent = null;\r\n\t\tthis.rootPopup = null;\r\n\t\t\r\n\t\tthis.columnSubscribers = {};\r\n\t\t\r\n\t\tthis.registerTableOption(\"menuContainer\", undefined); //deprecated\r\n\r\n\t\tthis.registerTableOption(\"rowContextMenu\", false);\r\n\t\tthis.registerTableOption(\"rowClickMenu\", false);\r\n\t\tthis.registerTableOption(\"groupContextMenu\", false);\r\n\t\tthis.registerTableOption(\"groupClickMenu\", false);\r\n\t\t\r\n\t\tthis.registerColumnOption(\"headerContextMenu\");\r\n\t\tthis.registerColumnOption(\"headerClickMenu\");\r\n\t\tthis.registerColumnOption(\"headerMenu\");\r\n\t\tthis.registerColumnOption(\"headerMenuIcon\");\r\n\t\tthis.registerColumnOption(\"contextMenu\");\r\n\t\tthis.registerColumnOption(\"clickMenu\");\r\n\t\t\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.deprecationCheck();\r\n\t\tthis.initializeRowWatchers();\r\n\t\tthis.initializeGroupWatchers();\r\n\t\t\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t}\r\n\r\n\tdeprecationCheck(){\r\n\t\tif(typeof this.table.options.menuContainer !== \"undefined\"){\r\n\t\t\tconsole.warn(\"Use of the menuContainer option is now deprecated. Please use the popupContainer option instead\");\r\n\r\n\t\t\tthis.table.options.popupContainer = this.table.options.menuContainer;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tinitializeRowWatchers(){\r\n\t\tif(this.table.options.rowContextMenu){\r\n\t\t\tthis.subscribe(\"row-contextmenu\", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu));\r\n\t\t\tthis.table.on(\"rowTapHold\", this.loadMenuEvent.bind(this, this.table.options.rowContextMenu));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.table.options.rowClickMenu){\r\n\t\t\tthis.subscribe(\"row-click\", this.loadMenuEvent.bind(this, this.table.options.rowClickMenu));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeGroupWatchers(){\r\n\t\tif(this.table.options.groupContextMenu){\r\n\t\t\tthis.subscribe(\"group-contextmenu\", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu));\r\n\t\t\tthis.table.on(\"groupTapHold\", this.loadMenuEvent.bind(this, this.table.options.groupContextMenu));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.table.options.groupClickMenu){\r\n\t\t\tthis.subscribe(\"group-click\", this.loadMenuEvent.bind(this, this.table.options.groupClickMenu));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar options = [\"headerContextMenu\", \"headerClickMenu\"],\r\n\t\tdef = column.definition;\r\n\t\t\r\n\t\t//handle column events\r\n\t\tif(def.headerContextMenu && !this.columnSubscribers.headerContextMenu){\r\n\t\t\tthis.columnSubscribers.headerContextMenu = this.loadMenuTableColumnEvent.bind(this, \"headerContextMenu\");\r\n\t\t\tthis.subscribe(\"column-contextmenu\", this.columnSubscribers.headerContextMenu);\r\n\t\t\tthis.table.on(\"headerTapHold\", this.loadMenuTableColumnEvent.bind(this, \"headerContextMenu\"))\r\n\t\t}\r\n\t\t\r\n\t\tif(def.headerClickMenu && !this.columnSubscribers.headerClickMenu){\r\n\t\t\tthis.columnSubscribers.headerClickMenu = this.loadMenuTableColumnEvent.bind(this, \"headerClickMenu\");\r\n\t\t\tthis.subscribe(\"column-click\", this.columnSubscribers.headerClickMenu);\r\n\t\t}\r\n\t\t\r\n\t\tif(def.headerMenu){\r\n\t\t\tthis.initializeColumnHeaderMenu(column);\r\n\t\t}\r\n\t\t\r\n\t\t//handle cell events\r\n\t\tif(def.contextMenu && !this.columnSubscribers.contextMenu){\r\n\t\t\tthis.columnSubscribers.contextMenu = this.loadMenuTableCellEvent.bind(this, \"contextMenu\");\r\n\t\t\tthis.subscribe(\"cell-contextmenu\", this.columnSubscribers.contextMenu);\r\n\t\t\tthis.table.on(\"cellTapHold\", this.loadMenuTableCellEvent.bind(this, \"contextMenu\"))\r\n\t\t}\r\n\t\t\r\n\t\tif(def.clickMenu && !this.columnSubscribers.clickMenu){\r\n\t\t\tthis.columnSubscribers.clickMenu = this.loadMenuTableCellEvent.bind(this, \"clickMenu\");\r\n\t\t\tthis.subscribe(\"cell-click\", this.columnSubscribers.clickMenu);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumnHeaderMenu(column){\r\n\t\tvar icon = column.definition.headerMenuIcon,\r\n\t\theaderMenuEl;\r\n\t\t\r\n\t\theaderMenuEl = document.createElement(\"span\");\r\n\t\theaderMenuEl.classList.add(\"tabulator-header-popup-button\");\r\n\r\n\t\tif(icon){\r\n\t\t\tif(typeof icon === \"function\"){\r\n\t\t\t\ticon = icon(column.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tif(icon instanceof HTMLElement){\r\n\t\t\t\theaderMenuEl.appendChild(icon);\r\n\t\t\t}else{\r\n\t\t\t\theaderMenuEl.innerHTML = icon;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\theaderMenuEl.innerHTML = \"&vellip;\";\r\n\t\t}\r\n\t\t\r\n\t\theaderMenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\t\r\n\t\t\tthis.loadMenuEvent(column.definition.headerMenu, e, column);\r\n\t\t});\r\n\t\t\r\n\t\tcolumn.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\r\n\t}\r\n\t\r\n\tloadMenuTableCellEvent(option, e, cell){\r\n\t\tif(cell._cell){\r\n\t\t\tcell = cell._cell;\r\n\t\t}\r\n\t\t\r\n\t\tif(cell.column.definition[option]){\r\n\t\t\tthis.loadMenuEvent(cell.column.definition[option], e, cell);\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadMenuTableColumnEvent(option, e, column){\r\n\t\tif(column._column){\r\n\t\t\tcolumn = column._column;\r\n\t\t}\r\n\t\t\r\n\t\tif(column.definition[option]){\r\n\t\t\tthis.loadMenuEvent(column.definition[option], e, column);\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadMenuEvent(menu, e, component){\r\n\t\tif(component._group){\r\n\t\t\tcomponent = component._group;\r\n\t\t}else if(component._row){\r\n\t\t\tcomponent = component._row;\r\n\t\t}\r\n\t\t\r\n\t\tmenu = typeof menu == \"function\" ? menu.call(this.table, e, component.getComponent()) : menu;\r\n\t\t\r\n\t\tthis.loadMenu(e, component, menu);\r\n\t}\r\n\t\r\n\tloadMenu(e, component, menu, parentEl, parentPopup){\r\n\t\tvar touch = !(e instanceof MouseEvent),\t\t\r\n\t\tmenuEl = document.createElement(\"div\"),\r\n\t\tpopup;\r\n\t\t\r\n\t\tmenuEl.classList.add(\"tabulator-menu\");\r\n\t\t\r\n\t\tif(!touch){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\t//abort if no menu set\r\n\t\tif(!menu || !menu.length){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(!parentEl){\r\n\t\t\tif(this.nestedMenuBlock){\r\n\t\t\t\t//abort if child menu already open\r\n\t\t\t\tif(this.rootPopup){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.nestedMenuBlock = setTimeout(() => {\r\n\t\t\t\t\tthis.nestedMenuBlock = false;\r\n\t\t\t\t}, 100)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.rootPopup){\r\n\t\t\t\tthis.rootPopup.hide();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.rootPopup = popup = this.popup(menuEl);\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tpopup = parentPopup.child(menuEl);\r\n\t\t}\r\n\t\t\r\n\t\tmenu.forEach((item) => {\r\n\t\t\tvar itemEl = document.createElement(\"div\"),\r\n\t\t\tlabel = item.label,\r\n\t\t\tdisabled = item.disabled;\r\n\t\t\t\r\n\t\t\tif(item.separator){\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-separator\");\r\n\t\t\t}else{\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-item\");\r\n\t\t\t\t\r\n\t\t\t\tif(typeof label == \"function\"){\r\n\t\t\t\t\tlabel = label.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(label instanceof Node){\r\n\t\t\t\t\titemEl.appendChild(label);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = label;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(typeof disabled == \"function\"){\r\n\t\t\t\t\tdisabled = disabled.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-disabled\");\r\n\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\tthis.loadMenu(e, component, item.menu, itemEl, popup);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(item.action){\r\n\t\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\t\titem.action(e, component.getComponent());\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-submenu\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmenuEl.appendChild(itemEl);\r\n\t\t});\r\n\t\t\r\n\t\tmenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.rootPopup.hide();\r\n\t\t});\r\n\t\t\r\n\t\tpopup.show(parentEl || e);\r\n\t\t\r\n\t\tif(popup === this.rootPopup){\r\n\t\t\tthis.rootPopup.hideOnBlur(() => {\r\n\t\t\t\tthis.rootPopup = null;\r\n\t\t\t\t\r\n\t\t\t\tif(this.currentComponent){\r\n\t\t\t\t\tthis.dispatchExternal(\"menuClosed\", this.currentComponent.getComponent());\r\n\t\t\t\t\tthis.currentComponent = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.currentComponent = component;\r\n\r\n\t\t\tthis.dispatchExternal(\"menuOpened\", component.getComponent())\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMenu.moduleName = \"menu\";\r\n\r\nexport default Menu;\r\n","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating column header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving column\r\n\t\tthis.toCol = false; //destination column\r\n\t\tthis.toColAfter = false; //position of moving column relative to the desitnation column\r\n\t\tthis.startX = 0; //starting position within header element\r\n\t\tthis.autoScrollMargin = 40; //auto scroll on edge when within margin\r\n\t\tthis.autoScrollStep = 5; //auto scroll distance in pixels\r\n\t\tthis.autoScrollTimeout = false; //auto scroll timeout\r\n\t\tthis.touchMove = false;\r\n\t\t\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\t\r\n\t\tthis.registerTableOption(\"movableColumns\", false); //enable movable columns\r\n\t}\r\n\t\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.classList.add(\"tabulator-col-placeholder\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableColumns){\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\tcolEl;\r\n\t\t\r\n\t\tif(!column.modules.frozen){\r\n\t\t\tcolEl = column.getElement();\r\n\t\t\t\r\n\t\t\tconfig.mousemove = function(e){\r\n\t\t\t\tif(column.parent === self.moving.parent){\r\n\t\t\t\t\tif((((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left) + self.table.columnManager.element.scrollLeft) > (column.getWidth() / 2)){\r\n\t\t\t\t\t\tif(self.toCol !== column || !self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\r\n\t\t\t\t\t\t\tself.moveColumn(column, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(self.toCol !== column || self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl);\r\n\t\t\t\t\t\t\tself.moveColumn(column, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(self);\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tself.touchMove = false;\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, column);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.bindTouchEvents(column);\r\n\t\t}\r\n\t\t\r\n\t\tcolumn.modules.moveColumn = config;\r\n\t}\r\n\t\r\n\tbindTouchEvents(column){\r\n\t\tvar colEl = column.getElement(),\r\n\t\tstartXMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentCol, nextCol, prevCol, nextColWidth, prevColWidth, nextColWidthLast, prevColWidthLast;\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentCol = column;\r\n\t\t\t\tnextCol = column.nextColumn();\r\n\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth()/2 : 0;\r\n\t\t\t\tprevCol = column.prevColumn();\r\n\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth()/2 : 0;\r\n\t\t\t\tnextColWidthLast = 0;\r\n\t\t\t\tprevColWidthLast = 0;\r\n\t\t\t\tstartXMove = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.startMove(e, column);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchmove\", (e) => {\r\n\t\t\tvar halfCol, diff, moveToCol;\r\n\t\t\t\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.moveHover(e);\r\n\t\t\t\t\r\n\t\t\t\tif(!startXMove){\r\n\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdiff = e.touches[0].pageX - startXMove;\r\n\t\t\t\t\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextCol && diff - nextColWidthLast > nextColWidth){\r\n\t\t\t\t\t\tmoveToCol = nextCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevCol && -diff - prevColWidthLast >  prevColWidth){\r\n\t\t\t\t\t\tmoveToCol = prevCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(moveToCol){\r\n\t\t\t\t\tcurrentCol = moveToCol;\r\n\t\t\t\t\tnextCol = moveToCol.nextColumn();\r\n\t\t\t\t\tnextColWidthLast = nextColWidth;\r\n\t\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\r\n\t\t\t\t\tprevCol = moveToCol.prevColumn();\r\n\t\t\t\t\tprevColWidthLast = prevColWidth;\r\n\t\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tstartMove(e, column){\r\n\t\tvar element = column.getElement(),\r\n\t\theaderElement = this.table.columnManager.getElement(),\r\n\t\theadersElement = this.table.columnManager.getHeadersElement();\r\n\t\t\r\n\t\tthis.moving = column;\r\n\t\tthis.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\r\n\t\t\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = column.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = column.getHeight() + \"px\";\r\n\t\t\r\n\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\t\t\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\t\t\r\n\t\tthis.table.columnManager.getElement().appendChild(this.hoverElement);\r\n\t\t\r\n\t\tthis.hoverElement.style.left = \"0\";\r\n\t\tthis.hoverElement.style.bottom = (headerElement.clientHeight - headersElement.offsetHeight) + \"px\";\r\n\t\t\r\n\t\tif(!this.touchMove){\r\n\t\t\tthis._bindMouseMove();\r\n\t\t\t\r\n\t\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\t\t}\r\n\t\t\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\t\r\n\t_bindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tmoveColumn(column, after){\r\n\t\tvar movingCells = this.moving.getCells();\r\n\t\t\r\n\t\tthis.toCol = column;\r\n\t\tthis.toColAfter = after;\r\n\t\t\r\n\t\tif(after){\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tendMove(e){\r\n\t\tif(e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\t\t\t\r\n\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\t\t\t\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\t\t\t\r\n\t\t\tif(this.toCol){\r\n\t\t\t\tthis.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toCol = false;\r\n\t\t\tthis.toColAfter = false;\r\n\t\t\t\r\n\t\t\tif(!this.touchMove){\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveHover(e){\r\n\t\tvar columnHolder = this.table.columnManager.getElement(),\r\n\t\tscrollLeft = columnHolder.scrollLeft,\r\n\t\txPos = ((this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left) + scrollLeft,\r\n\t\tscrollPos;\r\n\t\t\r\n\t\tthis.hoverElement.style.left = (xPos - this.startX) + \"px\";\r\n\t\t\r\n\t\tif(xPos - scrollLeft < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.max(0,scrollLeft-5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.min(columnHolder.clientWidth, scrollLeft+5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveColumns.moduleName = \"moveColumn\";\r\n\r\nexport default MoveColumns;\r\n","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating row header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving row\r\n\t\tthis.toRow = false; //destination row\r\n\t\tthis.toRowAfter = false; //position of moving row relative to the desitnation row\r\n\t\tthis.hasHandle = false; //row has handle instead of fully movable row\r\n\t\tthis.startY = 0; //starting Y position within header element\r\n\t\tthis.startX = 0; //starting X position within header element\r\n\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\tthis.tableRowDropEvent = false;\r\n\r\n\t\tthis.touchMove = false;\r\n\r\n\t\tthis.connection = false;\r\n\t\tthis.connectionSelectorsTables = false;\r\n\t\tthis.connectionSelectorsElements = false;\r\n\t\tthis.connectionElements = [];\r\n\t\tthis.connections = [];\r\n\r\n\t\tthis.connectedTable = false;\r\n\t\tthis.connectedRow = false;\r\n\r\n\t\tthis.registerTableOption(\"movableRows\", false); //enable movable rows\r\n\t\tthis.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsSender\", false);\r\n\t\tthis.registerTableOption(\"movableRowsReceiver\", \"insert\");\r\n\r\n\t\tthis.registerColumnOption(\"rowHandle\");\r\n\t}\r\n\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.classList.add(\"tabulator-row-placeholder\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableRows){\r\n\t\t\tthis.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\r\n\t\t\tthis.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\r\n\r\n\t\t\tthis.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\r\n\r\n\t\t\tthis.subscribe(\"cell-init\", this.initializeCell.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroupHeader(group){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tif(((e.pageY - Helpers.elOffset(group.element).top) + self.table.rowManager.element.scrollTop) > (group.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== group || !self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(group, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== group || self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\tif(rowEl.previousSibling){\r\n\t\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\t\tself.moveRow(group, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\t\tgroup.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(((e.pageY - Helpers.elOffset(rowEl).top) + self.table.rowManager.element.scrollTop) > (row.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== row || !self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(row, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== row || self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\tself.moveRow(row, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\r\n\t\tif(!this.hasHandle){\r\n\r\n\t\t\trowEl = row.getElement();\r\n\r\n\t\t\trowEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trowEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(row, row.getElement());\r\n\t\t}\r\n\r\n\t\trow.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tif(column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tthis.hasHandle = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tvar self = this,\r\n\t\t\tcellEl = cell.getElement(true);\r\n\r\n\t\t\tcellEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, cell.row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcellEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(cell.row, cellEl);\r\n\t\t}\r\n\t}\r\n\r\n\tbindTouchEvents(row, element){\r\n\t\tvar startYMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentRow, nextRow, prevRow, nextRowHeight, prevRowHeight, nextRowHeightLast, prevRowHeightLast;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentRow = row;\r\n\t\t\t\tnextRow = row.nextRow();\r\n\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight()/2 : 0;\r\n\t\t\t\tprevRow = row.prevRow();\r\n\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight()/2 : 0;\r\n\t\t\t\tnextRowHeightLast = 0;\r\n\t\t\t\tprevRowHeightLast = 0;\r\n\t\t\t\tstartYMove = false;\r\n\r\n\t\t\t\tthis.startMove(e, row);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\tthis.moving, this.toRow, this.toRowAfter\r\n\t\telement.addEventListener(\"touchmove\", (e) => {\r\n\r\n\t\t\tvar halfCol, diff, moveToRow;\r\n\r\n\t\t\tif(this.moving){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.moveHover(e);\r\n\r\n\t\t\t\tif(!startYMove){\r\n\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff = e.touches[0].pageY - startYMove;\r\n\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextRow && diff - nextRowHeightLast > nextRowHeight){\r\n\t\t\t\t\t\tmoveToRow = nextRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevRow && -diff - prevRowHeightLast >  prevRowHeight){\r\n\t\t\t\t\t\tmoveToRow = prevRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(moveToRow){\r\n\t\t\t\t\tcurrentRow = moveToRow;\r\n\t\t\t\t\tnextRow = moveToRow.nextRow();\r\n\t\t\t\t\tnextRowHeightLast = nextRowHeight;\r\n\t\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\r\n\t\t\t\t\tprevRow = moveToRow.prevRow();\r\n\t\t\t\t\tprevRowHeightLast = prevRowHeight;\r\n\t\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t\tthis.touchMove = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_bindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstartMove(e, row){\r\n\t\tvar element = row.getElement();\r\n\r\n\t\tthis.setStartPosition(e, row);\r\n\r\n\t\tthis.moving = row;\r\n\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = row.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = row.getHeight() + \"px\";\r\n\r\n\t\tif(!this.connection){\r\n\t\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\t\telement.parentNode.removeChild(element);\r\n\t\t}else{\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-sending\");\r\n\t\t\tthis.connectToTables(row);\r\n\t\t}\r\n\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\r\n\t\tif(this.connection){\r\n\t\t\tdocument.body.appendChild(this.hoverElement);\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\t\t\tthis.hoverElement.style.width = this.table.element.clientWidth + \"px\";\r\n\t\t\tthis.hoverElement.style.whiteSpace = \"nowrap\";\r\n\t\t\tthis.hoverElement.style.overflow = \"hidden\";\r\n\t\t\tthis.hoverElement.style.pointerEvents = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(this.hoverElement);\r\n\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\r\n\t\t\tthis._bindMouseMove();\r\n\t\t}\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\tthis.dispatchExternal(\"rowMoving\", row.getComponent());\r\n\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\r\n\tsetStartPosition(e, row){\r\n\t\tvar pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\r\n\t\tpageY = this.touchMove ? e.touches[0].pageY : e.pageY,\r\n\t\telement, position;\r\n\r\n\t\telement = row.getElement();\r\n\t\tif(this.connection){\r\n\t\t\tposition = element.getBoundingClientRect();\r\n\r\n\t\t\tthis.startX = position.left - pageX + window.pageXOffset;\r\n\t\t\tthis.startY = position.top - pageY + window.pageYOffset;\r\n\t\t}else{\r\n\t\t\tthis.startY = (pageY - element.getBoundingClientRect().top);\r\n\t\t}\r\n\t}\r\n\r\n\tendMove(e){\r\n\t\tif(!e || e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\r\n\t\t\tif(!this.connection){\r\n\t\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tif(this.toRow){\r\n\t\t\t\tthis.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\r\n\t\t\t}else{\r\n\t\t\t\tthis.dispatchExternal(\"rowMoveCancelled\", this.moving.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toRow = false;\r\n\t\t\tthis.toRowAfter = false;\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\t\tif(this.connection){\r\n\t\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-sending\");\r\n\t\t\t\tthis.disconnectFromTables();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(row, after){\r\n\t\tthis.toRow = row;\r\n\t\tthis.toRowAfter = after;\r\n\t}\r\n\r\n\tmoveHover(e){\r\n\t\tif(this.connection){\r\n\t\t\tthis.moveHoverConnections.call(this, e);\r\n\t\t}else{\r\n\t\t\tthis.moveHoverTable.call(this, e);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveHoverTable(e){\r\n\t\tvar rowHolder = this.table.rowManager.getElement(),\r\n\t\tscrollTop = rowHolder.scrollTop,\r\n\t\tyPos = ((this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top) + scrollTop,\r\n\t\tscrollPos;\r\n\r\n\t\tthis.hoverElement.style.top = (yPos - this.startY) + \"px\";\r\n\t}\r\n\r\n\tmoveHoverConnections(e){\r\n\t\tthis.hoverElement.style.left = (this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX)) + \"px\";\r\n\t\tthis.hoverElement.style.top = (this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY)) + \"px\";\r\n\t}\r\n\r\n\telementRowDrop(e, element, row){\r\n\t\tthis.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\r\n\t}\r\n\r\n\t//establish connection with other tables\r\n\tconnectToTables(row){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\r\n\t\t\t\trow:row,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.connectionSelectorsElements){\r\n\r\n\t\t\tthis.connectionElements = [];\r\n\r\n\t\t\tif(!Array.isArray(this.connectionSelectorsElements)){\r\n\t\t\t\tthis.connectionSelectorsElements = [this.connectionSelectorsElements];\r\n\t\t\t}\r\n\r\n\t\t\tthis.connectionSelectorsElements.forEach((query) => {\r\n\t\t\t\tif(typeof query === \"string\"){\r\n\t\t\t\t\tthis.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.connectionElements.push(query);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\t\tvar dropEvent = (e) => {\r\n\t\t\t\t\tthis.elementRowDrop(e, element, this.moving);\r\n\t\t\t\t};\r\n\r\n\t\t\t\telement.addEventListener(\"mouseup\", dropEvent);\r\n\t\t\t\telement.tabulatorElementDropEvent = dropEvent;\r\n\r\n\t\t\t\telement.classList.add(\"tabulator-movingrow-receiving\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//disconnect from other tables\r\n\tdisconnectFromTables(){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\r\n\t\t}\r\n\r\n\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\telement.classList.remove(\"tabulator-movingrow-receiving\");\r\n\t\t\telement.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\r\n\t\t\tdelete element.tabulatorElementDropEvent;\r\n\t\t});\r\n\t}\r\n\r\n\t//accept incomming connection\r\n\tconnect(table, row){\r\n\t\tif(!this.connectedTable){\r\n\t\t\tthis.connectedTable = table;\r\n\t\t\tthis.connectedRow = row;\r\n\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.tableRowDropEvent = this.tableRowDrop.bind(this);\r\n\r\n\t\t\tthis.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStart\", row, table);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//close incomming connection\r\n\tdisconnect(table){\r\n\t\tif(table === this.connectedTable){\r\n\t\t\tthis.connectedTable = false;\r\n\t\t\tthis.connectedRow = false;\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStop\", table);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - trying to disconnect from non connected table\")\r\n\t\t}\r\n\t}\r\n\r\n\tdropComplete(table, row, success){\r\n\t\tvar sender = false;\r\n\r\n\t\tif(success){\r\n\r\n\t\t\tswitch(typeof this.table.options.movableRowsSender){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tsender = this.senders[this.table.options.movableRowsSender];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tsender = this.table.options.movableRowsSender;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(sender){\r\n\t\t\t\tsender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table)\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.movableRowsSender){\r\n\t\t\t\t\tconsole.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}\r\n\r\n\t\tthis.endMove();\r\n\t}\r\n\r\n\ttableRowDrop(e, row){\r\n\t\tvar receiver = false,\r\n\t\tsuccess = false;\r\n\r\n\t\te.stopImmediatePropagation();\r\n\r\n\t\tswitch(typeof this.table.options.movableRowsReceiver){\r\n\t\t\tcase \"string\":\r\n\t\t\treceiver = this.receivers[this.table.options.movableRowsReceiver];\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treceiver = this.table.options.movableRowsReceiver;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(receiver){\r\n\t\t\tsuccess = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver)\r\n\t\t}\r\n\r\n\t\tif(success){\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}\r\n\r\n\t\tthis.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\r\n\t\t\trow:row,\r\n\t\t\tsuccess:success,\r\n\t\t});\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"connect\":\r\n\t\t\treturn this.connect(table, data.row);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"disconnect\":\r\n\t\t\treturn this.disconnect(table);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"dropcomplete\":\r\n\t\t\treturn this.dropComplete(table, data.row, data.success);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveRows.prototype.receivers = {\r\n\tinsert:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\treturn true;\r\n\t},\r\n\r\n\tadd:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData());\r\n\t\treturn true;\r\n\t},\r\n\r\n\tupdate:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\ttoRow.update(fromRow.getData());\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\treplace:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\t\ttoRow.delete();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n};\r\n\r\nMoveRows.prototype.senders = {\r\n\tdelete:function(fromRow, toRow, toTable){\r\n\t\tfromRow.delete();\r\n\t}\r\n};\r\n\r\nMoveRows.moduleName = \"moveRow\";\r\n\r\nexport default MoveRows;","export default {};","import Module from '../../core/Module.js';\r\n\r\nimport defaultMutators from './defaults/mutators.js';\r\n\r\nclass Mutator extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.registerColumnOption(\"mutator\");\r\n\t\tthis.registerColumnOption(\"mutatorParams\");\r\n\t\tthis.registerColumnOption(\"mutatorData\");\r\n\t\tthis.registerColumnOption(\"mutatorDataParams\");\r\n\t\tthis.registerColumnOption(\"mutatorEdit\");\r\n\t\tthis.registerColumnOption(\"mutatorEditParams\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboard\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboardParams\");\r\n\t\tthis.registerColumnOption(\"mutateLink\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\r\n\t\tthis.subscribe(\"cell-value-changed\", this.mutateLink.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\r\n\t\tthis.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\r\n\t}\r\n\r\n\trowDataChanged(row, tempData, updatedData){\r\n\t\treturn this.transformRow(tempData, \"data\", updatedData);\r\n\t}\r\n\r\n\t//initialize column mutator\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\tmutator;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\tmutator = this.lookupMutator(column.definition[key]);\r\n\r\n\t\t\t\tif(mutator){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\tmutator:mutator,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.mutate = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupMutator(value){\r\n\t\tvar mutator = false;\r\n\r\n\t\t//set column mutator\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Mutator.mutators[value]){\r\n\t\t\t\tmutator = Mutator.mutators[value];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tmutator = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn mutator;\r\n\t}\r\n\r\n\t//apply mutator to row\r\n\ttransformRow(data, type, updatedData){\r\n\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\tvalue;\r\n\r\n\t\tif(this.enabled){\r\n\r\n\t\t\tthis.table.columnManager.traverse((column) => {\r\n\t\t\t\tvar mutator, params, component;\r\n\r\n\t\t\t\tif(column.modules.mutate){\r\n\t\t\t\t\tmutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\r\n\r\n\t\t\t\t\tif(mutator){\r\n\t\t\t\t\t\tvalue = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\r\n\r\n\t\t\t\t\t\tif(type == \"data\" || typeof value !== \"undefined\"){\r\n\t\t\t\t\t\t\tcomponent = column.getComponent();\r\n\t\t\t\t\t\t\tparams = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\r\n\t\t\t\t\t\t\tcolumn.setFieldValue(data, mutator.mutator(value, data, type, params, component));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//apply mutator to new cell value\r\n\ttransformCell(cell, value){\r\n\t\tif(cell.column.modules.mutate){\r\n\t\t\tvar mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\r\n\t\t\ttempData = {};\r\n\r\n\t\t\tif(mutator){\r\n\t\t\t\ttempData = Object.assign(tempData, cell.row.getData());\r\n\t\t\t\tcell.column.setFieldValue(tempData, value);\r\n\t\t\t\treturn mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tmutateLink(cell){\r\n\t\tvar links = cell.column.definition.mutateLink;\r\n\r\n\t\tif(links){\r\n\t\t\tif(!Array.isArray(links)){\r\n\t\t\t\tlinks = [links];\r\n\t\t\t}\r\n\r\n\t\t\tlinks.forEach((link) => {\r\n\t\t\t\tvar linkCell = cell.row.getCell(link);\r\n\r\n\t\t\t\tif(linkCell){\r\n\t\t\t\t\tlinkCell.setValue(linkCell.getValue(), true, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tenable(){\r\n\t\tthis.enabled = true;\r\n\t}\r\n\r\n\tdisable(){\r\n\t\tthis.enabled = false;\r\n\t}\r\n}\r\n\r\nMutator.moduleName = \"mutator\";\r\n\r\n//load defaults\r\nMutator.mutators = defaultMutators;\r\n\r\nexport default Mutator;","export default function(pageSize, currentRow, currentPage, totalRows, totalPages){\r\n\tvar el = document.createElement(\"span\"),\r\n\tshowingEl = document.createElement(\"span\"),\r\n\tvalueEl = document.createElement(\"span\"),\r\n\tofEl = document.createElement(\"span\"),\r\n\ttotalEl = document.createElement(\"span\"),\r\n\trowsEl = document.createElement(\"span\");\r\n\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|showing\", (value) => {\r\n\t\tshowingEl.innerHTML = value;\r\n\t});\r\n\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|of\", (value) => {\r\n\t\tofEl.innerHTML = value;\r\n\t});\r\n\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|rows\", (value) => {\r\n\t\trowsEl.innerHTML = value;\r\n\t});\r\n\r\n\tif(totalRows){\r\n\t\tvalueEl.innerHTML = \" \" + currentRow + \"-\" + Math.min((currentRow + pageSize - 1), totalRows) + \" \";\r\n\t\t\r\n\t\ttotalEl.innerHTML = \" \" + totalRows + \" \";\r\n\t\t\r\n\t\tel.appendChild(showingEl);\r\n\t\tel.appendChild(valueEl);\r\n\t\tel.appendChild(ofEl);\r\n\t\tel.appendChild(totalEl);\r\n\t\tel.appendChild(rowsEl);\r\n\t}else{\r\n\t\tvalueEl.innerHTML = \" 0 \";\r\n\r\n\t\tel.appendChild(showingEl);\r\n\t\tel.appendChild(valueEl);\r\n\t\tel.appendChild(rowsEl);\r\n\t}\r\n\t\r\n\treturn el;\r\n};","export default function(pageSize, currentRow, currentPage, totalRows, totalPages){\r\n\r\n    var el = document.createElement(\"span\"),\r\n\tshowingEl = document.createElement(\"span\"),\r\n\tvalueEl = document.createElement(\"span\"),\r\n\tofEl = document.createElement(\"span\"),\r\n\ttotalEl = document.createElement(\"span\"),\r\n\trowsEl = document.createElement(\"span\");\r\n\t\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|showing\", (value) => {\r\n\t\tshowingEl.innerHTML = value;\r\n\t});\r\n\t\r\n\tvalueEl.innerHTML = \" \" + currentPage + \" \";\r\n\t\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|of\", (value) => {\r\n\t\tofEl.innerHTML = value;\r\n\t});\r\n\t\r\n\ttotalEl.innerHTML = \" \" + totalPages + \" \";\r\n\t\r\n\tthis.table.modules.localize.langBind(\"pagination|counter|pages\", (value) => {\r\n\t\trowsEl.innerHTML = value;\r\n\t});\r\n\t\r\n\tel.appendChild(showingEl);\r\n\tel.appendChild(valueEl);\r\n\tel.appendChild(ofEl);\r\n\tel.appendChild(totalEl);\r\n\tel.appendChild(rowsEl);\r\n\t\r\n\treturn el;\r\n};","import rows from './pageCounters/rows.js';\r\nimport pages from './pageCounters/pages.js';\r\n\r\n\r\nexport default {\r\n\trows:rows,\r\n\tpages:pages,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultPageCounters from './defaults/pageCounters.js';\r\n\r\nclass Page extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.mode = \"local\";\r\n\t\tthis.progressiveLoad = false;\r\n\t\t\r\n\t\tthis.element = null;\r\n\t\tthis.pageCounterElement = null;\r\n\t\tthis.pageCounter = null;\r\n\t\t\r\n\t\tthis.size = 0;\r\n\t\tthis.page = 1;\r\n\t\tthis.count = 5;\r\n\t\tthis.max = 1;\r\n\r\n\t\tthis.remoteRowCountEstimate = null;\r\n\t\t\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\t\t\r\n\t\tthis.initialLoad = true;\r\n\t\tthis.dataChanging = false; //flag to check if data is being changed by this module\r\n\t\t\r\n\t\tthis.pageSizes = [];\r\n\t\t\r\n\t\tthis.registerTableOption(\"pagination\", false); //set pagination type\r\n\t\tthis.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\r\n\t\tthis.registerTableOption(\"paginationSize\", false); //set number of rows to a page\r\n\t\tthis.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\r\n\t\tthis.registerTableOption(\"paginationCounter\", false);  // set pagination counter\r\n\t\tthis.registerTableOption(\"paginationCounterElement\", false);  // set pagination counter\r\n\t\tthis.registerTableOption(\"paginationButtonCount\", 5);  // set count of page button\r\n\t\tthis.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\r\n\t\tthis.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\r\n\t\t// this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\r\n\t\t// this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\r\n\t\tthis.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\r\n\t\t\r\n\t\tthis.registerTableOption(\"progressiveLoad\", false); //progressive loading\r\n\t\tthis.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\r\n\t\tthis.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\r\n\t\t\r\n\t\tthis.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPage\", this.setPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\r\n\t\tthis.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPage\", this.getPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\r\n\t\t\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\t\t\tthis.subscribe(\"footer-redraw\", this.footerRedraw.bind(this));\r\n\r\n\t\t\tif(this.table.options.paginationAddRow == \"page\"){\r\n\t\t\t\tthis.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.table.options.paginationMode === \"remote\"){\r\n\t\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.table.options.progressiveLoad){\r\n\t\t\t\tconsole.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 50);\r\n\t\t\t\r\n\t\t\tthis.createElements();\r\n\t\t\tthis.initializePageCounter();\r\n\t\t\tthis.initializePaginator();\r\n\t\t}else if(this.table.options.progressiveLoad){\r\n\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\t\t\t\r\n\t\t\tthis.initializeProgressive(this.table.options.progressiveLoad)\r\n\t\t\t\r\n\t\t\tif(this.table.options.progressiveLoad === \"scroll\"){\r\n\t\t\t\tthis.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trowAddingPosition(row, top){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tdispRows = rowManager.getDisplayRows(),\r\n\t\tindex;\r\n\t\t\r\n\t\tif(top){\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[0];\r\n\t\t\t}else{\r\n\t\t\t\tif(rowManager.activeRows.length){\r\n\t\t\t\t\tindex = rowManager.activeRows[rowManager.activeRows.length-1];\r\n\t\t\t\t\ttop = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[dispRows.length - 1];\r\n\t\t\t\ttop = dispRows.length < this.size ? false : true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn {index, top}\r\n\t}\r\n\t\r\n\tcalculatePageSizes(){\r\n\t\tvar testElRow, testElCell;\r\n\t\t\r\n\t\tif(this.table.options.paginationSize){\r\n\t\t\tthis.size = this.table.options.paginationSize;\r\n\t\t}else{\r\n\t\t\ttestElRow = document.createElement(\"div\");\r\n\t\t\ttestElRow.classList.add(\"tabulator-row\");\r\n\t\t\ttestElRow.style.visibility = \"hidden\";\r\n\t\t\t\r\n\t\t\ttestElCell = document.createElement(\"div\");\r\n\t\t\ttestElCell.classList.add(\"tabulator-cell\");\r\n\t\t\ttestElCell.innerHTML = \"Page Row Test\";\r\n\t\t\t\r\n\t\t\ttestElRow.appendChild(testElCell);\r\n\t\t\t\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(testElRow);\r\n\t\t\t\r\n\t\t\tthis.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\r\n\t\t\t\r\n\t\t\tthis.table.rowManager.getTableElement().removeChild(testElRow);\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"pageSizeChanged\", this.size);\r\n\t\t\r\n\t\tthis.generatePageSizeSelectList();\r\n\t}\r\n\t\r\n\tinitialLoadComplete(){\r\n\t\tthis.initialLoad = false;\r\n\t}\r\n\t\r\n\tremotePageParams(data, config, silent, params){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif((this.progressiveLoad && !silent) || (!this.progressiveLoad && !this.dataChanging)){\r\n\t\t\t\tthis.reset(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//configure request params\r\n\t\tparams.page = this.page;\r\n\t\t\r\n\t\t//set page size if defined\r\n\t\tif(this.size){\r\n\t\t\tparams.size = this.size;\r\n\t\t}\r\n\t\t\r\n\t\treturn params;\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\t\r\n\tuserSetPageToRow(row){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\trow = this.rowManager.findRow(row);\r\n\t\t\t\r\n\t\t\tif(row){\r\n\t\t\t\treturn this.setPageToRow(row)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject();\r\n\t}\r\n\t\r\n\tuserSetPageSize(size){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.setPageSize(size);\r\n\t\t\treturn this.setPage(1);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\t\r\n\tscrollVertical(top, dir){\r\n\t\tvar element, diff, margin;\r\n\t\tif(!dir && !this.table.dataLoader.loading){\r\n\t\t\telement = this.table.rowManager.getElement();\r\n\t\t\tdiff = element.scrollHeight - element.clientHeight - top;\r\n\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (element.clientHeight * 2);\r\n\t\t\t\r\n\t\t\tif(diff < margin){\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t\t.catch(() => {}); //consume the exception thrown when on the last page\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trestOnRenderBefore(rows, renderInPosition){\r\n\t\tif(!renderInPosition){\r\n\t\t\tif(this.mode === \"local\"){\r\n\t\t\t\tthis.reset();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn rows;\r\n\t}\r\n\t\r\n\trowsUpdated(){\r\n\t\tthis.refreshData(true, \"all\");\r\n\t}\r\n\t\r\n\tcreateElements(){\r\n\t\tvar button;\r\n\t\t\r\n\t\tthis.element = document.createElement(\"span\");\r\n\t\tthis.element.classList.add(\"tabulator-paginator\");\r\n\t\t\r\n\t\tthis.pagesElement = document.createElement(\"span\");\r\n\t\tthis.pagesElement.classList.add(\"tabulator-pages\");\r\n\t\t\r\n\t\tbutton = document.createElement(\"button\");\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\t\tbutton.setAttribute(\"aria-label\", \"\");\r\n\t\tbutton.setAttribute(\"title\", \"\");\r\n\t\t\r\n\t\tthis.firstBut = button.cloneNode(true);\r\n\t\tthis.firstBut.setAttribute(\"data-page\", \"first\");\r\n\t\t\r\n\t\tthis.prevBut = button.cloneNode(true);\r\n\t\tthis.prevBut.setAttribute(\"data-page\", \"prev\");\r\n\t\t\r\n\t\tthis.nextBut = button.cloneNode(true);\r\n\t\tthis.nextBut.setAttribute(\"data-page\", \"next\");\r\n\t\t\r\n\t\tthis.lastBut = button.cloneNode(true);\r\n\t\tthis.lastBut.setAttribute(\"data-page\", \"last\");\r\n\t\t\r\n\t\tif(this.table.options.paginationSizeSelector){\r\n\t\t\tthis.pageSizeSelect = document.createElement(\"select\");\r\n\t\t\tthis.pageSizeSelect.classList.add(\"tabulator-page-size\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tgeneratePageSizeSelectList(){\r\n\t\tvar pageSizes = [];\r\n\t\t\r\n\t\tif(this.pageSizeSelect){\r\n\t\t\t\r\n\t\t\tif(Array.isArray(this.table.options.paginationSizeSelector)){\r\n\t\t\t\tpageSizes = this.table.options.paginationSizeSelector;\r\n\t\t\t\tthis.pageSizes = pageSizes;\r\n\t\t\t\t\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes.unshift(this.size);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 1; i < 5; i++){\r\n\t\t\t\t\t\tpageSizes.push(this.size * i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.pageSizes = pageSizes;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpageSizes = this.pageSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\r\n\t\t\t\r\n\t\t\tpageSizes.forEach((item) => {\r\n\t\t\t\tvar itemEl = document.createElement(\"option\");\r\n\t\t\t\titemEl.value = item;\r\n\t\t\t\t\r\n\t\t\t\tif(item === true){\r\n\t\t\t\t\tthis.langBind(\"pagination|all\", function(value){\r\n\t\t\t\t\t\titemEl.innerHTML = value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = item;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.pageSizeSelect.appendChild(itemEl);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.pageSizeSelect.value = this.size;\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializePageCounter(){\r\n\t\tvar counter = this.table.options.paginationCounter,\r\n\t\tpageCounter = null;\r\n\t\t\r\n\t\tif(counter){\r\n\t\t\tif(typeof counter === \"function\"){\r\n\t\t\t\tpageCounter = counter;\r\n\t\t\t}else{\r\n\t\t\t\tpageCounter = Page.pageCounters[counter];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(pageCounter){\r\n\t\t\t\tthis.pageCounter = pageCounter;\r\n\t\t\t\t\r\n\t\t\t\tthis.pageCounterElement = document.createElement(\"span\");\r\n\t\t\t\tthis.pageCounterElement.classList.add(\"tabulator-page-counter\");\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Pagination Error - No such page counter found: \", counter);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//setup pagination\r\n\tinitializePaginator(hidden){\r\n\t\tvar pageSelectLabel, paginationCounterHolder;\r\n\t\t\r\n\t\tif(!hidden){\r\n\t\t\t//build pagination element\r\n\t\t\t\r\n\t\t\t//bind localizations\r\n\t\t\tthis.langBind(\"pagination|first\", (value) => {\r\n\t\t\t\tthis.firstBut.innerHTML = value;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|first_title\", (value) => {\r\n\t\t\t\tthis.firstBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.firstBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|prev\", (value) => {\r\n\t\t\t\tthis.prevBut.innerHTML = value;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|prev_title\", (value) => {\r\n\t\t\t\tthis.prevBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.prevBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|next\", (value) => {\r\n\t\t\t\tthis.nextBut.innerHTML = value;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|next_title\", (value) => {\r\n\t\t\t\tthis.nextBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.nextBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|last\", (value) => {\r\n\t\t\t\tthis.lastBut.innerHTML = value;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.langBind(\"pagination|last_title\", (value) => {\r\n\t\t\t\tthis.lastBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.lastBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//click bindings\r\n\t\t\tthis.firstBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(1)\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.prevBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.previousPage()\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.nextBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.lastBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(this.max)\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(this.table.options.paginationElement){\r\n\t\t\t\tthis.element = this.table.options.paginationElement;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.pageSizeSelect){\r\n\t\t\t\tpageSelectLabel = document.createElement(\"label\");\r\n\t\t\t\t\r\n\t\t\t\tthis.langBind(\"pagination|page_size\", (value) => {\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"aria-label\", value);\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"title\", value);\r\n\t\t\t\t\tpageSelectLabel.innerHTML = value;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.element.appendChild(pageSelectLabel);\r\n\t\t\t\tthis.element.appendChild(this.pageSizeSelect);\r\n\t\t\t\t\r\n\t\t\t\tthis.pageSizeSelect.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tthis.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\r\n\t\t\t\t\tthis.setPage(1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//append to DOM\r\n\t\t\tthis.element.appendChild(this.firstBut);\r\n\t\t\tthis.element.appendChild(this.prevBut);\r\n\t\t\tthis.element.appendChild(this.pagesElement);\r\n\t\t\tthis.element.appendChild(this.nextBut);\r\n\t\t\tthis.element.appendChild(this.lastBut);\r\n\t\t\t\r\n\t\t\tif(!this.table.options.paginationElement && !hidden){\r\n\t\t\t\tif(this.table.options.paginationCounter){\r\n\r\n\t\t\t\t\tpaginationCounterHolder \r\n\r\n\t\t\t\t\tif(this.table.options.paginationCounterElement){\r\n\t\t\t\t\t\tif(this.table.options.paginationCounterElement instanceof HTMLElement){\r\n\t\t\t\t\t\t\tthis.table.options.paginationCounterElement.appendChild(this.pageCounterElement);\r\n\t\t\t\t\t\t}else if(typeof this.table.options.paginationCounterElement === \"string\"){\r\n\t\t\t\t\t\t\tpaginationCounterHolder = document.querySelector(this.table.options.paginationCounterElement);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(paginationCounterHolder){\r\n\t\t\t\t\t\t\t\tpaginationCounterHolder.appendChild(this.pageCounterElement);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Pagination Error - Unable to find element matching paginationCounterElement selector:\", this.table.options.paginationCounterElement);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.footerAppend(this.pageCounterElement);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.footerAppend(this.element);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.page = this.table.options.paginationInitialPage;\r\n\t\t\tthis.count = this.table.options.paginationButtonCount;\r\n\t\t}\r\n\t\t\r\n\t\t//set default values\r\n\t\tthis.mode = this.table.options.paginationMode;\r\n\t}\r\n\t\r\n\tinitializeProgressive(mode){\r\n\t\tthis.initializePaginator(true);\r\n\t\tthis.mode = \"progressive_\" + mode;\r\n\t\tthis.progressiveLoad = true;\r\n\t}\r\n\t\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"page-changed\");\r\n\t}\r\n\t\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\t\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\t\r\n\t//calculate maximum page from number of rows\r\n\tsetMaxRows(rowCount){\r\n\t\tif(!rowCount){\r\n\t\t\tthis.max = 1;\r\n\t\t}else{\r\n\t\t\tthis.max = this.size === true ?  1 : Math.ceil(rowCount/this.size);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//reset to first page without triggering action\r\n\treset(force){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif(this.mode == \"local\" || force){\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//set the maximum page\r\n\tsetMaxPage(max){\r\n\t\t\r\n\t\tmax = parseInt(max);\r\n\t\t\r\n\t\tthis.max = max || 1;\r\n\t\t\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t\tthis.trigger();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//set current page number\r\n\tsetPage(page){\r\n\t\tswitch(page){\r\n\t\t\tcase \"first\":\r\n\t\t\treturn this.setPage(1);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"prev\":\r\n\t\t\treturn this.previousPage();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"next\":\r\n\t\t\treturn this.nextPage();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"last\":\r\n\t\t\treturn this.setPage(this.max);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tpage = parseInt(page);\r\n\t\t\r\n\t\tif((page > 0 && page <= this.max) || this.mode !== \"local\"){\r\n\t\t\tthis.page = page;\r\n\t\t\t\r\n\t\t\tthis.trackChanges();\r\n\t\t\t\r\n\t\t\treturn this.trigger();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetPageToRow(row){\r\n\t\tvar rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\r\n\t\tvar index = rows.indexOf(row);\r\n\t\t\r\n\t\tif(index > -1){\r\n\t\t\tvar page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\r\n\t\t\t\r\n\t\t\treturn this.setPage(page)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested row is not visible\");\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetPageSize(size){\r\n\t\tif(size !== true){\r\n\t\t\tsize = parseInt(size);\r\n\t\t}\r\n\r\n\t\tif(size > 0){\r\n\t\t\tthis.size = size;\r\n\t\t\tthis.dispatchExternal(\"pageSizeChanged\", size);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.pageSizeSelect){\r\n\t\t\t// this.pageSizeSelect.value = size;\r\n\t\t\tthis.generatePageSizeSelectList();\r\n\t\t}\r\n\t\t\r\n\t\tthis.trackChanges();\r\n\t}\r\n\t\r\n\t_setPageCounter(totalRows, size, currentRow){\r\n\t\tvar content;\r\n\t\t\r\n\t\tif(this.pageCounter){\r\n\r\n\t\t\tif(this.mode === \"remote\"){\r\n\t\t\t\tsize = this.size;\r\n\t\t\t\tcurrentRow = ((this.page - 1) * this.size) + 1;\r\n\t\t\t\ttotalRows = this.remoteRowCountEstimate;\r\n\t\t\t}\r\n\r\n\t\t\tcontent = this.pageCounter.call(this, size, currentRow, this.page, totalRows, this.max);\r\n\t\t\t\r\n\t\t\tswitch(typeof content){\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\tif(content instanceof Node){\r\n\t\t\t\t\t\r\n\t\t\t\t\t//clear previous cell contents\r\n\t\t\t\t\twhile(this.pageCounterElement.firstChild) this.pageCounterElement.removeChild(this.pageCounterElement.firstChild);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.pageCounterElement.appendChild(content);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.pageCounterElement.innerHTML = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(content != null){\r\n\t\t\t\t\t\tconsole.warn(\"Page Counter Error - Page Counter has returned a type of object, the only valid page counter object return is an instance of Node, the page counter returned:\", content);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"undefined\":\r\n\t\t\t\tcase \"null\":\r\n\t\t\t\tthis.pageCounterElement.innerHTML = \"\";\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.pageCounterElement.innerHTML = content;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//setup the pagination buttons\r\n\t_setPageButtons(){\r\n\t\tlet leftSize = Math.floor((this.count-1) / 2);\r\n\t\tlet rightSize = Math.ceil((this.count-1) / 2);\r\n\t\tlet min = this.max - this.page + leftSize + 1 < this.count ? this.max-this.count+1: Math.max(this.page-leftSize,1);\r\n\t\tlet max = this.page <= rightSize? Math.min(this.count, this.max) :Math.min(this.page+rightSize, this.max);\r\n\t\t\r\n\t\twhile(this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\r\n\t\t\r\n\t\tif(this.page == 1){\r\n\t\t\tthis.firstBut.disabled = true;\r\n\t\t\tthis.prevBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.firstBut.disabled = false;\r\n\t\t\tthis.prevBut.disabled = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.page == this.max){\r\n\t\t\tthis.lastBut.disabled = true;\r\n\t\t\tthis.nextBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.lastBut.disabled = false;\r\n\t\t\tthis.nextBut.disabled = false;\r\n\t\t}\r\n\t\t\r\n\t\tfor(let i = min; i <= max; i++){\r\n\t\t\tif(i>0 && i <= this.max){\r\n\t\t\t\tthis.pagesElement.appendChild(this._generatePageButton(i));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.footerRedraw();\r\n\t}\r\n\t\r\n\t_generatePageButton(page){\r\n\t\tvar button = document.createElement(\"button\");\r\n\t\t\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tif(page == this.page){\r\n\t\t\tbutton.classList.add(\"active\");\r\n\t\t}\r\n\t\t\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\t\t\r\n\t\tthis.langBind(\"pagination|page_title\", (value) => {\r\n\t\t\tbutton.setAttribute(\"aria-label\", value + \" \" + page);\r\n\t\t\tbutton.setAttribute(\"title\", value + \" \" + page);\r\n\t\t});\r\n\t\t\r\n\t\tbutton.setAttribute(\"data-page\", page);\r\n\t\tbutton.textContent = page;\r\n\t\t\r\n\t\tbutton.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.setPage(page)\r\n\t\t});\r\n\t\t\r\n\t\treturn button;\r\n\t}\r\n\t\r\n\t//previous page\r\n\tpreviousPage(){\r\n\t\tif(this.page > 1){\r\n\t\t\tthis.page--;\r\n\t\t\t\r\n\t\t\tthis.trackChanges();\r\n\t\t\t\r\n\t\t\treturn this.trigger()\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//next page\r\n\tnextPage(){\r\n\t\tif(this.page < this.max){\r\n\t\t\tthis.page++;\r\n\t\t\t\r\n\t\t\tthis.trackChanges();\r\n\t\t\t\r\n\t\t\treturn this.trigger();\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tif(!this.progressiveLoad){\r\n\t\t\t\tconsole.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//return current page number\r\n\tgetPage(){\r\n\t\treturn this.page;\r\n\t}\r\n\t\r\n\t//return max page number\r\n\tgetPageMax(){\r\n\t\treturn this.max;\r\n\t}\r\n\t\r\n\tgetPageSize(size){\r\n\t\treturn this.size;\r\n\t}\r\n\t\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\t\r\n\t//return appropriate rows for current page\r\n\tgetRows(data){\r\n\t\tvar actualRowPageSize = 0,\r\n\t\toutput, start, end, actualStartRow;\r\n\r\n\t\tvar actualRows = data.filter((row) => {\r\n\t\t\treturn row.type === \"row\";\r\n\t\t});\r\n\t\t\r\n\t\tif(this.mode == \"local\"){\r\n\t\t\toutput = [];\r\n\t\t\t\r\n\t\t\tthis.setMaxRows(data.length);\r\n\t\t\t\r\n\t\t\tif(this.size === true){\r\n\t\t\t\tstart = 0;\r\n\t\t\t\tend = data.length;\r\n\t\t\t}else{\r\n\t\t\t\tstart = this.size * (this.page - 1);\r\n\t\t\t\tend = start + parseInt(this.size);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._setPageButtons();\r\n\t\t\t\r\n\t\t\tfor(let i = start; i < end; i++){\r\n\t\t\t\tlet row = data[i];\r\n\r\n\t\t\t\tif(row){\r\n\t\t\t\t\toutput.push(row);\r\n\r\n\t\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\t\tif(!actualStartRow){\r\n\t\t\t\t\t\t\tactualStartRow = row;\r\n\t\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\t\tactualRowPageSize++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._setPageCounter(actualRows.length, actualRowPageSize, actualStartRow ? (actualRows.indexOf(actualStartRow) + 1) : 0);\r\n\t\t\t\r\n\t\t\treturn output;\r\n\t\t}else{\r\n\t\t\tthis._setPageButtons();\r\n\t\t\tthis._setPageCounter(actualRows.length);\r\n\t\t\t\r\n\t\t\treturn data.slice(0);\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrigger(){\r\n\t\tvar left;\r\n\t\t\r\n\t\tswitch(this.mode){\r\n\t\t\tcase \"local\":\r\n\t\t\tleft = this.table.rowManager.scrollLeft;\r\n\t\t\t\r\n\t\t\tthis.refreshData();\r\n\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\r\n\t\t\tthis.dispatchExternal(\"pageLoaded\", this.getPage());\r\n\t\t\t\r\n\t\t\treturn Promise.resolve();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"remote\":\r\n\t\t\tthis.dataChanging = true;\r\n\t\t\treturn this.reloadData(null)\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.dataChanging = false;\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"progressive_load\":\r\n\t\t\tcase \"progressive_scroll\":\r\n\t\t\treturn this.reloadData(null, true);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\tconsole.warn(\"Pagination Error - no such pagination mode:\", this.mode);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_parseRemoteData(data){\r\n\t\tvar left, data, margin;\r\n\t\t\r\n\t\tif(typeof data.last_page === \"undefined\"){\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\r\n\t\t}\r\n\t\t\r\n\t\tif(data.data){\r\n\t\t\tthis.max = parseInt(data.last_page) || 1;\r\n\r\n\t\t\tthis.remoteRowCountEstimate = typeof data.last_row !== \"undefined\" ? data.last_row : (data.last_page * this.size - (this.page == data.last_page ? (this.size - data.data.length) : 0));\r\n\t\t\t\r\n\t\t\tif(this.progressiveLoad){\r\n\t\t\t\tswitch(this.mode){\r\n\t\t\t\t\tcase \"progressive_load\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.page == 1){\r\n\t\t\t\t\t\tthis.table.rowManager.setData(data.data, false, this.page == 1)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.table.rowManager.addRows(data.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.page < this.max){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t}, this.table.options.progressiveLoadDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"progressive_scroll\":\r\n\t\t\t\t\tdata = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.table.rowManager.setData(data, this.page !== 1, this.page == 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (this.table.rowManager.element.clientHeight * 2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.table.rowManager.element.scrollHeight <= (this.table.rowManager.element.clientHeight + margin)){\r\n\t\t\t\t\t\tif(this.page < this.max){\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\t// left = this.table.rowManager.scrollLeft;\r\n\t\t\t\tthis.dispatchExternal(\"pageLoaded\",  this.getPage());\r\n\t\t\t\t// this.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t// this.table.columnManager.scrollHorizontal(left);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\r\n\t\t}\r\n\t\t\r\n\t\treturn data.data;\r\n\t}\r\n\t\r\n\t//handle the footer element being redrawn\r\n\tfooterRedraw(){\r\n\t\tvar footer = this.table.footerManager.containerElement;\r\n\r\n\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t}else{\r\n\t\t\tthis.pagesElement.style.display = '';\r\n\t\t\t\r\n\t\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPage.moduleName = \"page\";\r\n\r\n//load defaults\r\nPage.pageCounters = defaultPageCounters;\r\n\r\nexport default Page;","// read peristence information from storage\r\nexport default {\r\n\tlocal:function(id, type){\r\n\t\tvar data = localStorage.getItem(id + \"-\" + type);\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t},\r\n\tcookie:function(id, type){\r\n\t\tvar cookie = document.cookie,\r\n\t\tkey = id + \"-\" + type,\r\n\t\tcookiePos = cookie.indexOf(key + \"=\"),\r\n\t\tend, data;\r\n\r\n\t\t//if cookie exists, decode and load column data into tabulator\r\n\t\tif(cookiePos > -1){\r\n\t\t\tcookie = cookie.slice(cookiePos);\r\n\r\n\t\t\tend = cookie.indexOf(\";\");\r\n\r\n\t\t\tif(end > -1){\r\n\t\t\t\tcookie = cookie.slice(0, end);\r\n\t\t\t}\r\n\r\n\t\t\tdata = cookie.replace(key + \"=\", \"\");\r\n\t\t}\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t}\r\n};\r\n","//write persistence information to storage\r\nexport default {\r\n\tlocal:function(id, type, data){\r\n\t\tlocalStorage.setItem(id + \"-\" + type, JSON.stringify(data));\r\n\t},\r\n\tcookie:function(id, type, data){\r\n\t\tvar expireDate = new Date();\r\n\r\n\t\texpireDate.setDate(expireDate.getDate() + 10000);\r\n\r\n\t\tdocument.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultReaders from './defaults/readers.js';\r\nimport defaultWriters from './defaults/writers.js';\r\n\r\nclass Persistence extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"\";\r\n\t\tthis.id = \"\";\r\n\t\t// this.persistProps = [\"field\", \"width\", \"visible\"];\r\n\t\tthis.defWatcherBlock = false;\r\n\t\tthis.config = {};\r\n\t\tthis.readFunc = false;\r\n\t\tthis.writeFunc = false;\r\n\r\n\t\tthis.registerTableOption(\"persistence\", false);\r\n\t\tthis.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\r\n\t\tthis.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\r\n\t\tthis.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\r\n\t\tthis.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\r\n\t}\r\n\r\n\t// Test for whether localStorage is available for use.\r\n\tlocalStorageTest() {\r\n\t\tvar  testKey =  \"_tabulator_test\";\r\n\r\n\t\ttry {\r\n\t\t\twindow.localStorage.setItem( testKey, testKey);\r\n\t\t\twindow.localStorage.removeItem( testKey );\r\n\t\t\treturn true;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup parameters\r\n\tinitialize(){\r\n\t\tif(this.table.options.persistence){\r\n\t\t\t//determine persistent layout storage type\r\n\t\t\tvar mode = this.table.options.persistenceMode,\r\n\t\t\tid = this.table.options.persistenceID,\r\n\t\t\tretreivedData;\r\n\r\n\t\t\tthis.mode = mode !== true ?  mode : (this.localStorageTest() ? \"local\" : \"cookie\");\r\n\r\n\t\t\tif(this.table.options.persistenceReaderFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceReaderFunc === \"function\"){\r\n\t\t\t\t\tthis.readFunc = this.table.options.persistenceReaderFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.readers[this.table.options.persistenceReaderFunc]){\r\n\t\t\t\t\t\tthis.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.readers[this.mode]){\r\n\t\t\t\t\tthis.readFunc = Persistence.readers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.persistenceWriterFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceWriterFunc === \"function\"){\r\n\t\t\t\t\tthis.writeFunc = this.table.options.persistenceWriterFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.writers[this.table.options.persistenceWriterFunc]){\r\n\t\t\t\t\t\tthis.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.writers[this.mode]){\r\n\t\t\t\t\tthis.writeFunc = Persistence.writers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid writer set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//set storage tag\r\n\t\t\tthis.id = \"tabulator-\" + (id || (this.table.element.getAttribute(\"id\") || \"\"));\r\n\r\n\t\t\tthis.config = {\r\n\t\t\t\tsort:this.table.options.persistence === true || this.table.options.persistence.sort,\r\n\t\t\t\tfilter:this.table.options.persistence === true || this.table.options.persistence.filter,\r\n\t\t\t\tgroup:this.table.options.persistence === true || this.table.options.persistence.group,\r\n\t\t\t\tpage:this.table.options.persistence === true || this.table.options.persistence.page,\r\n\t\t\t\tcolumns:this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns,\r\n\t\t\t};\r\n\r\n\t\t\t//load pagination data if needed\r\n\t\t\tif(this.config.page){\r\n\t\t\t\tretreivedData = this.retreiveData(\"page\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)){\r\n\t\t\t\t\t\tthis.table.options.paginationSize = retreivedData.paginationSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)){\r\n\t\t\t\t\t\tthis.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//load group data if needed\r\n\t\t\tif(this.config.group){\r\n\t\t\t\tretreivedData = this.retreiveData(\"group\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)){\r\n\t\t\t\t\t\tthis.table.options.groupBy = retreivedData.groupBy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)){\r\n\t\t\t\t\t\tthis.table.options.groupStartOpen = retreivedData.groupStartOpen;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)){\r\n\t\t\t\t\t\tthis.table.options.groupHeader = retreivedData.groupHeader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.columns){\r\n\t\t\t\tthis.table.options.columns = this.load(\"columns\", this.table.options.columns);\r\n\t\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\t\tthis.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\r\n\r\n\t\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\r\n\t\t\tthis.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\r\n\t\t\tthis.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\r\n\t\t\tthis.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\r\n\t\t\tthis.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\r\n\t\t\tthis.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\r\n\t\tthis.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\r\n\t}\r\n\r\n\teventSave(type){\r\n\t\tif(this.config[type]){\r\n\t\t\tthis.save(type);\r\n\t\t}\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tvar options = this.table.options,\r\n\t\tsorters, filters;\r\n\r\n\t\tif(this.config.sort){\r\n\t\t\tsorters = this.load(\"sort\");\r\n\r\n\t\t\tif(!sorters === false){\r\n\t\t\t\tthis.table.options.initialSort = sorters;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.config.filter){\r\n\t\t\tfilters = this.load(\"filter\");\r\n\r\n\t\t\tif(!filters === false){\r\n\t\t\t\tthis.table.options.initialFilter = filters;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif(force && this.config.columns){\r\n\t\t\tthis.save(\"columns\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tgetColumnLayout(){\r\n\t\treturn this.parseColumns(this.table.columnManager.getColumns());\r\n\t}\r\n\r\n\tsetColumnLayout(layout){\r\n\t\tthis.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout))\r\n\t\treturn true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def, keys;\r\n\r\n\t\tif(this.config.columns){\r\n\t\t\tthis.defWatcherBlock = true;\r\n\r\n\t\t\tdef = column.getDefinition();\r\n\r\n\t\t\tkeys = this.config.columns === true ? Object.keys(def) : this.config.columns;\r\n\r\n\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\tvar props = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tvar value = def[key];\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tObject.defineProperty(def, key, {\r\n\t\t\t\t\t\tset: function(newValue){\r\n\t\t\t\t\t\t\tvalue = newValue;\r\n\r\n\t\t\t\t\t\t\tif(!this.defWatcherBlock){\r\n\t\t\t\t\t\t\t\tthis.save(\"columns\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(props.set){\r\n\t\t\t\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tget:function(){\r\n\t\t\t\t\t\t\tif(props.get){\r\n\t\t\t\t\t\t\t\tprops.get();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.defWatcherBlock = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//load saved definitions\r\n\tload(type, current){\r\n\t\tvar data = this.retreiveData(type);\r\n\r\n\t\tif(current){\r\n\t\t\tdata = data ? this.mergeDefinition(current, data) : current;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//retreive data from memory\r\n\tretreiveData(type){\r\n\t\treturn this.readFunc ? this.readFunc(this.id, type) : false;\r\n\t}\r\n\r\n\t//merge old and new column definitions\r\n\tmergeDefinition(oldCols, newCols){\r\n\t\tvar output = [];\r\n\r\n\t\tnewCols = newCols || [];\r\n\r\n\t\tnewCols.forEach((column, to) => {\r\n\t\t\tvar from = this._findColumn(oldCols, column),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(from){\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(from);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tif(key !== \"columns\" && typeof column[key] !== \"undefined\"){\r\n\t\t\t\t\t\tfrom[key] = column[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(from.columns){\r\n\t\t\t\t\tfrom.columns = this.mergeDefinition(from.columns, column.columns);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(from);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\toldCols.forEach((column, i) => {\r\n\t\t\tvar from = this._findColumn(newCols, column);\r\n\r\n\t\t\tif (!from) {\r\n\t\t\t\tif(output.length>i){\r\n\t\t\t\t\toutput.splice(i, 0, column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//find matching columns\r\n\t_findColumn(columns, subject){\r\n\t\tvar type = subject.columns ? \"group\" : (subject.field ? \"field\" : \"object\");\r\n\r\n\t\treturn columns.find(function(col){\r\n\t\t\tswitch(type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn col.title === subject.title && col.columns.length === subject.columns.length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"field\":\r\n\t\t\t\treturn col.field === subject.field;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\treturn col === subject;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//save data\r\n\tsave(type){\r\n\t\tvar data = {};\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"columns\":\r\n\t\t\tdata = this.parseColumns(this.table.columnManager.getColumns())\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"filter\":\r\n\t\t\tdata = this.table.modules.filter.getFilters();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sort\":\r\n\t\t\tdata = this.validateSorters(this.table.modules.sort.getSort());\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tdata = this.getGroupConfig();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"page\":\r\n\t\t\tdata = this.getPageConfig();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(this.writeFunc){\r\n\t\t\tthis.writeFunc(this.id, type, data);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//ensure sorters contain no function data\r\n\tvalidateSorters(data){\r\n\t\tdata.forEach(function(item){\r\n\t\t\titem.column = item.field;\r\n\t\t\tdelete item.field;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetGroupConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.group){\r\n\t\t\tif(this.config.group === true || this.config.group.groupBy){\r\n\t\t\t\tdata.groupBy = this.table.options.groupBy;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupStartOpen){\r\n\t\t\t\tdata.groupStartOpen = this.table.options.groupStartOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupHeader){\r\n\t\t\t\tdata.groupHeader = this.table.options.groupHeader;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetPageConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.page){\r\n\t\t\tif(this.config.page === true || this.config.page.size){\r\n\t\t\t\tdata.paginationSize = this.table.modules.page.getPageSize();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.page === true || this.config.page.page){\r\n\t\t\t\tdata.paginationInitialPage = this.table.modules.page.getPage();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t//parse columns for data to store\r\n\tparseColumns(columns){\r\n\t\tvar definitions = [],\r\n\t\texcludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar defStore = {},\r\n\t\t\tcolDef = column.getDefinition(),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(column.isGroup){\r\n\t\t\t\tdefStore.title = colDef.title;\r\n\t\t\t\tdefStore.columns = this.parseColumns(column.getColumns());\r\n\t\t\t}else{\r\n\t\t\t\tdefStore.field = column.getField();\r\n\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(colDef);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\tcase \"width\":\r\n\t\t\t\t\t\tdefStore.width = column.getWidth();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"visible\":\r\n\t\t\t\t\t\tdefStore.visible = column.visible;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1){\r\n\t\t\t\t\t\t\tdefStore[key] = colDef[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefinitions.push(defStore);\r\n\t\t});\r\n\r\n\t\treturn definitions;\r\n\t}\r\n}\r\n\r\nPersistence.moduleName = \"persistence\";\r\n\r\nPersistence.moduleInitOrder = -10;\r\n\r\n//load defaults\r\nPersistence.readers = defaultReaders;\r\nPersistence.writers = defaultWriters;\r\n\r\nexport default Persistence;","import Module from '../../core/Module.js';\r\n\r\nclass Popup extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.columnSubscribers = {};\r\n\t\t\r\n\t\tthis.registerTableOption(\"rowContextPopup\", false);\r\n\t\tthis.registerTableOption(\"rowClickPopup\", false);\r\n\t\tthis.registerTableOption(\"groupContextPopup\", false);\r\n\t\tthis.registerTableOption(\"groupClickPopup\", false);\r\n\t\t\r\n\t\tthis.registerColumnOption(\"headerContextPopup\");\r\n\t\tthis.registerColumnOption(\"headerClickPopup\");\r\n\t\tthis.registerColumnOption(\"headerPopup\");\r\n\t\tthis.registerColumnOption(\"headerPopupIcon\");\r\n\t\tthis.registerColumnOption(\"contextPopup\");\r\n\t\tthis.registerColumnOption(\"clickPopup\");\r\n\t\t\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.initializeRowWatchers();\r\n\t\tthis.initializeGroupWatchers();\r\n\t\t\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t}\r\n\t\r\n\tinitializeRowWatchers(){\r\n\t\tif(this.table.options.rowContextPopup){\r\n\t\t\tthis.subscribe(\"row-contextmenu\", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup));\r\n\t\t\tthis.table.on(\"rowTapHold\", this.loadPopupEvent.bind(this, this.table.options.rowContextPopup));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.table.options.rowClickPopup){\r\n\t\t\tthis.subscribe(\"row-click\", this.loadPopupEvent.bind(this, this.table.options.rowClickPopup));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeGroupWatchers(){\r\n\t\tif(this.table.options.groupContextPopup){\r\n\t\t\tthis.subscribe(\"group-contextmenu\", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup));\r\n\t\t\tthis.table.on(\"groupTapHold\", this.loadPopupEvent.bind(this, this.table.options.groupContextPopup));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.table.options.groupClickPopup){\r\n\t\t\tthis.subscribe(\"group-click\", this.loadPopupEvent.bind(this, this.table.options.groupClickPopup));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar options = [\"headerContextPopup\", \"headerClickPopup\"],\r\n\t\tdef = column.definition;\r\n\t\t\r\n\t\t//handle column events\r\n\t\tif(def.headerContextPopup && !this.columnSubscribers.headerContextPopup){\r\n\t\t\tthis.columnSubscribers.headerContextPopup = this.loadPopupTableColumnEvent.bind(this, \"headerContextPopup\");\r\n\t\t\tthis.subscribe(\"column-contextmenu\", this.columnSubscribers.headerContextPopup);\r\n\t\t\tthis.table.on(\"headerTapHold\", this.loadPopupTableColumnEvent.bind(this, \"headerContextPopup\"))\r\n\t\t}\r\n\t\t\r\n\t\tif(def.headerClickPopup && !this.columnSubscribers.headerClickPopup){\r\n\t\t\tthis.columnSubscribers.headerClickPopup = this.loadPopupTableColumnEvent.bind(this, \"headerClickPopup\");\r\n\t\t\tthis.subscribe(\"column-click\", this.columnSubscribers.headerClickPopup);\r\n\t\t}\r\n\t\t\r\n\t\tif(def.headerPopup){\r\n\t\t\tthis.initializeColumnHeaderPopup(column);\r\n\t\t}\r\n\t\t\r\n\t\t//handle cell events\r\n\t\tif(def.contextPopup && !this.columnSubscribers.contextPopup){\r\n\t\t\tthis.columnSubscribers.contextPopup = this.loadPopupTableCellEvent.bind(this, \"contextPopup\");\r\n\t\t\tthis.subscribe(\"cell-contextmenu\", this.columnSubscribers.contextPopup);\r\n\t\t\tthis.table.on(\"cellTapHold\", this.loadPopupTableCellEvent.bind(this, \"contextPopup\"))\r\n\t\t}\r\n\t\t\r\n\t\tif(def.clickPopup && !this.columnSubscribers.clickPopup){\r\n\t\t\tthis.columnSubscribers.clickPopup = this.loadPopupTableCellEvent.bind(this, \"clickPopup\");\r\n\t\t\tthis.subscribe(\"cell-click\", this.columnSubscribers.clickPopup);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumnHeaderPopup(column){\r\n\t\tvar icon = column.definition.headerPopupIcon,\r\n\t\theaderPopupEl;\r\n\t\t\r\n\t\theaderPopupEl = document.createElement(\"span\");\r\n\t\theaderPopupEl.classList.add(\"tabulator-header-popup-button\");\r\n\r\n\t\tif(icon){\r\n\t\t\tif(typeof icon === \"function\"){\r\n\t\t\t\ticon = icon(column.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tif(icon instanceof HTMLElement){\r\n\t\t\t\theaderPopupEl.appendChild(icon);\r\n\t\t\t}else{\r\n\t\t\t\theaderPopupEl.innerHTML = icon;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\theaderPopupEl.innerHTML = \"&vellip;\";\r\n\t\t}\r\n\t\t\r\n\t\theaderPopupEl.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\t\r\n\t\t\tthis.loadPopupEvent(column.definition.headerPopup, e, column);\r\n\t\t});\r\n\t\t\r\n\t\tcolumn.titleElement.insertBefore(headerPopupEl, column.titleElement.firstChild);\r\n\t}\r\n\t\r\n\tloadPopupTableCellEvent(option, e, cell){\r\n\t\tif(cell._cell){\r\n\t\t\tcell = cell._cell;\r\n\t\t}\r\n\t\t\r\n\t\tif(cell.column.definition[option]){\r\n\t\t\tthis.loadPopupEvent(cell.column.definition[option], e, cell);\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadPopupTableColumnEvent(option, e, column){\r\n\t\tif(column._column){\r\n\t\t\tcolumn = column._column;\r\n\t\t}\r\n\t\t\r\n\t\tif(column.definition[option]){\r\n\t\t\tthis.loadPopupEvent(column.definition[option], e, column);\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadPopupEvent(contents, e, component){\r\n\t\tvar renderedCallback;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trenderedCallback = callback;\r\n\t\t}\r\n\t\t\r\n\t\tif(component._group){\r\n\t\t\tcomponent = component._group;\r\n\t\t}else if(component._row){\r\n\t\t\tcomponent = component._row;\r\n\t\t}\r\n\t\t\r\n\t\tcontents = typeof contents == \"function\" ? contents.call(this.table, e, component.getComponent(),  onRendered) : contents;\r\n\t\t\r\n\t\tthis.loadPopup(e, component, contents, renderedCallback);\r\n\t}\r\n\t\r\n\tloadPopup(e, component, contents, renderedCallback){\r\n\t\tvar touch = !(e instanceof MouseEvent),\r\n\t\tcontentsEl, popup;\r\n\t\t\r\n\t\tif(contents instanceof HTMLElement){\r\n\t\t\tcontentsEl = contents;\r\n\t\t}else{\r\n\t\t\tcontentsEl = document.createElement(\"div\");\r\n\t\t\tcontentsEl.innerHTML = contents;\r\n\t\t}\r\n\t\t\r\n\t\tcontentsEl.classList.add(\"tabulator-popup\");\r\n\r\n\t\tcontentsEl.addEventListener(\"click\", (e) =>{\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tif(!touch){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\tpopup = this.popup(contentsEl);\r\n\r\n\t\tif(typeof renderedCallback === \"function\"){\r\n\t\t\tpopup.renderCallback(renderedCallback);\r\n\t\t}\r\n\t\t\r\n\t\tpopup.show(e).hideOnBlur(() => {\r\n\t\t\tthis.dispatchExternal(\"popupClosed\", component.getComponent());\r\n\t\t});\r\n\r\n\r\n\r\n\t\tthis.dispatchExternal(\"popupOpened\", component.getComponent())\r\n\t}\r\n}\r\n\r\nPopup.moduleName = \"popup\";\r\n\r\nexport default Popup;\r\n","import Module from '../../core/Module.js';\r\n\r\nclass Print extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.manualBlock = false;\r\n\r\n\t\tthis.registerTableOption(\"printAsHtml\", false); //enable print as html\r\n\t\tthis.registerTableOption(\"printFormatter\", false); //printing page formatter\r\n\t\tthis.registerTableOption(\"printHeader\", false); //page header contents\r\n\t\tthis.registerTableOption(\"printFooter\", false); //page footer contents\r\n\t\tthis.registerTableOption(\"printStyled\", true); //enable print as html styling\r\n\t\tthis.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\r\n\t\tthis.registerTableOption(\"printConfig\", {}); //print config options\r\n\r\n\t\tthis.registerColumnOption(\"print\");\r\n\t\tthis.registerColumnOption(\"titlePrint\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.printAsHtml){\r\n\t\t\twindow.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\r\n\t\t\twindow.addEventListener(\"afterprint\", this.cleanup.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"print\", this.printFullscreen.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\treplaceTable(){\r\n\t\tif(!this.manualBlock){\r\n\t\t\tthis.element = document.createElement(\"div\");\r\n\t\t\tthis.element.classList.add(\"tabulator-print-table\");\r\n\r\n\t\t\tthis.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\r\n\r\n\t\t\tthis.table.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.element.parentNode.insertBefore(this.element, this.table.element);\r\n\t\t}\r\n\t}\r\n\r\n\tcleanup(){\r\n\t\tdocument.body.classList.remove(\"tabulator-print-fullscreen-hide\");\r\n\r\n\t\tif(this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\tthis.table.element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tprintFullscreen(visible, style, config){\r\n\t\tvar scrollX = window.scrollX,\r\n\t\tscrollY = window.scrollY,\r\n\t\theaderEl = document.createElement(\"div\"),\r\n\t\tfooterEl = document.createElement(\"div\"),\r\n\t\ttableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\r\n\t\theaderContent, footerContent;\r\n\r\n\t\tthis.manualBlock = true;\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-print-fullscreen\");\r\n\r\n\t\tif(this.table.options.printHeader){\r\n\t\t\theaderEl.classList.add(\"tabulator-print-header\");\r\n\r\n\t\t\theaderContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\r\n\r\n\t\t\tif(typeof headerContent == \"string\"){\r\n\t\t\t\theaderEl.innerHTML = headerContent;\r\n\t\t\t}else{\r\n\t\t\t\theaderEl.appendChild(headerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\tthis.element.appendChild(tableEl);\r\n\r\n\t\tif(this.table.options.printFooter){\r\n\t\t\tfooterEl.classList.add(\"tabulator-print-footer\");\r\n\r\n\t\t\tfooterContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\r\n\r\n\r\n\t\t\tif(typeof footerContent == \"string\"){\r\n\t\t\t\tfooterEl.innerHTML = footerContent;\r\n\t\t\t}else{\r\n\t\t\t\tfooterEl.appendChild(footerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(footerEl);\r\n\t\t}\r\n\r\n\t\tdocument.body.classList.add(\"tabulator-print-fullscreen-hide\");\r\n\t\tdocument.body.appendChild(this.element);\r\n\r\n\t\tif(this.table.options.printFormatter){\r\n\t\t\tthis.table.options.printFormatter(this.element, tableEl);\r\n\t\t}\r\n\r\n\t\twindow.print();\r\n\r\n\t\tthis.cleanup();\r\n\r\n\t\twindow.scrollTo(scrollX, scrollY);\r\n\r\n\t\tthis.manualBlock = false;\r\n\t}\r\n}\r\n\r\nPrint.moduleName = \"print\";\r\n\r\nexport default Print;","import Module from '../../core/Module.js';\r\n\r\nclass ReactiveData extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.data = false;\r\n\t\tthis.blocked = false; //block reactivity while performing update\r\n\t\tthis.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\r\n\t\tthis.currentVersion = 0;\r\n\r\n\t\tthis.registerTableOption(\"reactiveData\", false); //enable data reactivity\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.reactiveData){\r\n\t\t\tthis.subscribe(\"cell-value-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\r\n\t\t\tthis.subscribe(\"data-processing\", this.watchData.bind(this));\r\n\t\t\tthis.subscribe(\"table-destroy\", this.unwatchData.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\twatchData(data){\r\n\t\tvar self = this,\r\n\t\tpushFunc, version;\r\n\r\n\t\tthis.currentVersion ++;\r\n\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tthis.unwatchData();\r\n\r\n\t\tthis.data = data;\r\n\r\n\t\t//override array push function\r\n\t\tthis.origFuncs.push = data.push;\r\n\r\n\t\tObject.defineProperty(this.data, \"push\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.push.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array unshift function\r\n\t\tthis.origFuncs.unshift = data.unshift;\r\n\r\n\t\tObject.defineProperty(this.data, \"unshift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, true);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.unshift.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array shift function\r\n\t\tthis.origFuncs.shift = data.shift;\r\n\r\n\t\tObject.defineProperty(this.data, \"shift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[0]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.shift.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array pop function\r\n\t\tthis.origFuncs.pop = data.pop;\r\n\r\n\t\tObject.defineProperty(this.data, \"pop\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn self.origFuncs.pop.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array splice function\r\n\t\tthis.origFuncs.splice = data.splice;\r\n\r\n\t\tObject.defineProperty(this.data, \"splice\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments),\r\n\t\t\t\tstart = args[0] < 0 ? data.length + args[0] : args[0],\r\n\t\t\t\tend = args[1],\r\n\t\t\t\tnewRows = args[2] ? args.slice(2) : false,\r\n\t\t\t\tstartRow;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\r\n\t\t\t\t\t//add new rows\r\n\t\t\t\t\tif(newRows){\r\n\t\t\t\t\t\tstartRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\r\n\r\n\t\t\t\t\t\tif(startRow){\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, startRow, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRows = newRows.slice().reverse();\r\n\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//delete removed rows\r\n\t\t\t\t\tif(end !== 0){\r\n\t\t\t\t\t\tvar oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\r\n\r\n\t\t\t\t\t\toldRows.forEach((rowData, i) => {\r\n\t\t\t\t\t\t\tvar row = self.table.rowManager.getRowFromDataObject(rowData);\r\n\r\n\t\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\t\trow.deleteActual(i !== oldRows.length - 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(newRows || end !== 0){\r\n\t\t\t\t\t\tself.table.rowManager.reRenderInPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.splice.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchData(){\r\n\t\tif(this.data !== false){\r\n\t\t\tfor(var key in this.origFuncs){\r\n\t\t\t\tObject.defineProperty(this.data, key, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue: this.origFuncs.key,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tthis.blocked = true;\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tthis.watchKey(row, data, key);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tthis.watchTreeChildren(row);\r\n\t\t}\r\n\r\n\t\tthis.blocked = false;\r\n\t}\r\n\r\n\twatchTreeChildren (row){\r\n\t\tvar childField = row.getData()[this.table.options.dataTreeChildField],\r\n\t\torigFuncs = {};\r\n\r\n\t\tfunction rebuildTree(){\r\n\t\t\tthis.table.modules.dataTree.initializeRow(row);\r\n\t\t\tthis.table.modules.dataTree.layoutRow(row);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"tree\", false, true);\r\n\t\t}\r\n\r\n\t\tif(childField){\r\n\r\n\t\t\torigFuncs.push = childField.push;\r\n\r\n\t\t\tObject.defineProperty(childField, \"push\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result = origFuncs.push.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.unshift = childField.unshift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"unshift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.unshift.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.shift = childField.shift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"shift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.shift.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.pop = childField.pop;\r\n\r\n\t\t\tObject.defineProperty(childField, \"pop\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.pop.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.splice = childField.splice;\r\n\r\n\t\t\tObject.defineProperty(childField, \"splice\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.splice.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\twatchKey(row, data, key){\r\n\t\tvar props = Object.getOwnPropertyDescriptor(data, key),\r\n\t\tvalue = data[key],\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tObject.defineProperty(data, key, {\r\n\t\t\tset: (newValue) => {\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\tif(!this.blocked && version === this.currentVersion){\r\n\t\t\t\t\tvar update = {};\r\n\t\t\t\t\tupdate[key] = newValue;\r\n\t\t\t\t\trow.updateData(update);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(props.set){\r\n\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget:() => {\r\n\r\n\t\t\t\tif(props.get){\r\n\t\t\t\t\tprops.get();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tObject.defineProperty(data, key, {\r\n\t\t\t\tvalue:data[key],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tblock(){\r\n\t\tthis.blocked = true;\r\n\t}\r\n\r\n\tunblock(){\r\n\t\tthis.blocked = false;\r\n\t}\r\n}\r\n\r\nReactiveData.moduleName = \"reactiveData\";\r\n\r\nexport default ReactiveData;\r\n\r\n\r\n\r\n","import Module from '../../core/Module.js';\r\n\r\nclass ResizeColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startX = false;\r\n\t\tthis.startWidth = false;\r\n\t\tthis.latestX = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.initialNextColumn = null;\r\n\t\tthis.nextColumn = null;\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\tthis.registerColumnOption(\"resizable\", true);\r\n\t\tthis.registerTableOption(\"resizableColumnFit\", false);\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-rendered\", this.layoutColumnHeader.bind(this));\r\n\t}\r\n\t\r\n\tinitializeEventWatchers(){\r\n\t\tif(!this.initialized){\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"cell-rendered\", this.layoutCellHandles.bind(this));\r\n\t\t\tthis.subscribe(\"cell-delete\", this.deInitializeComponent.bind(this));\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"cell-height\", this.resizeHandle.bind(this));\r\n\t\t\tthis.subscribe(\"column-moved\", this.columnLayoutUpdated.bind(this));\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"column-hide\", this.deInitializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"column-show\", this.columnLayoutUpdated.bind(this));\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"column-delete\", this.deInitializeComponent.bind(this));\r\n\t\t\tthis.subscribe(\"column-height\", this.resizeHandle.bind(this));\r\n\t\t\t\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tlayoutCellHandles(cell){\r\n\t\tif(cell.row.type === \"row\"){\r\n\t\t\tthis.deInitializeComponent(cell);\r\n\t\t\tthis.initializeColumn(\"cell\", cell, cell.column, cell.element);\r\n\t\t}\r\n\t}\r\n\t\r\n\tlayoutColumnHeader(column){\r\n\t\tif(column.definition.resizable){\r\n\t\t\tthis.initializeEventWatchers();\r\n\t\t\tthis.deInitializeComponent(column);\r\n\t\t\tthis.initializeColumn(\"header\", column, column, column.element);\r\n\t\t}\r\n\t}\r\n\t\r\n\tcolumnLayoutUpdated(column){\r\n\t\tvar prev = column.prevColumn();\r\n\t\t\r\n\t\tthis.reinitializeColumn(column);\r\n\t\t\r\n\t\tif(prev){\r\n\t\t\tthis.reinitializeColumn(prev);\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeColumn(column){\r\n\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\tif(cell.modules.resize && cell.modules.resize.handleEl){\r\n\t\t\t\tcell.element.after(cell.modules.resize.handleEl);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif(column.modules.resize && column.modules.resize.handleEl){\r\n\t\t\tcolumn.element.after(column.modules.resize.handleEl);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(type, component, column, element){\r\n\t\tvar self = this,\r\n\t\tvariableHeight = false,\r\n\t\tmode = column.definition.resizable,\r\n\t\tconfig = {},\r\n\t\tnearestColumn = column.getLastColumn();\r\n\t\t\r\n\t\t//set column resize mode\r\n\t\tif(type === \"header\"){\r\n\t\t\tvariableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\r\n\t\t\tconfig = {variableHeight:variableHeight};\r\n\t\t}\r\n\t\t\r\n\t\tif((mode === true || mode == type) && this._checkResizability(nearestColumn)){\r\n\t\t\t\r\n\t\t\tvar handle = document.createElement('div');\r\n\t\t\thandle.className = \"tabulator-col-resize-handle\";\r\n\t\t\t\r\n\t\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar handleDown = function(e){\r\n\t\t\t\tself.startColumn = column;\r\n\t\t\t\tself.initialNextColumn = self.nextColumn = nearestColumn.nextColumn();\r\n\t\t\t\tself._mouseDown(e, nearestColumn, handle);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\t\t\t\r\n\t\t\t//resize column on  double click\r\n\t\t\thandle.addEventListener(\"dblclick\", (e) => {\r\n\t\t\t\tvar oldWidth = nearestColumn.getWidth();\r\n\t\t\t\t\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tnearestColumn.reinitializeWidth(true);\r\n\t\t\t\t\r\n\t\t\t\tif(oldWidth !== nearestColumn.getWidth()){\r\n\t\t\t\t\tself.dispatch(\"column-resized\", nearestColumn);\r\n\t\t\t\t\tself.table.externalEvents.dispatch(\"columnResized\", nearestColumn.getComponent());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconfig.handleEl = handle;\r\n\t\t\t\r\n\t\t\tif(element.parentNode){\r\n\t\t\t\telement.after(handle);\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcomponent.modules.resize = config;\r\n\t}\r\n\t\r\n\tdeInitializeColumn(column){\r\n\t\tthis.deInitializeComponent(column);\r\n\t\t\r\n\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\tthis.deInitializeComponent(cell);\r\n\t\t});\r\n\t}\r\n\t\r\n\tdeInitializeComponent(component){\r\n\t\tvar handleEl;\r\n\t\t\r\n\t\tif(component.modules.resize){\r\n\t\t\thandleEl = component.modules.resize.handleEl;\r\n\t\t\t\r\n\t\t\tif(handleEl && handleEl.parentElement){\r\n\t\t\t\thandleEl.parentElement.removeChild(handleEl);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tresizeHandle(component, height){\r\n\t\tif(component.modules.resize && component.modules.resize.handleEl){\r\n\t\t\tcomponent.modules.resize.handleEl.style.height = height;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_checkResizability(column){\r\n\t\treturn column.definition.resizable;\r\n\t}\r\n\t\r\n\t_mouseDown(e, column, handle){\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\tfunction mouseMove(e){\r\n\t\t\tvar x = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX,\r\n\t\t\tstartDiff = x - self.startX,\r\n\t\t\tmoveDiff = x - self.latestX,\r\n\t\t\tblockedBefore, blockedAfter;\r\n\r\n\t\t\tself.latestX = x;\r\n\t\t\t\r\n\t\t\tif(self.table.rtl){\r\n\t\t\t\tstartDiff = -startDiff;\r\n\t\t\t\tmoveDiff = -moveDiff;\r\n\t\t\t}\r\n\r\n\t\t\tblockedBefore = column.width == column.minWidth || column.width == column.maxWidth;\r\n\r\n\t\t\tcolumn.setWidth(self.startWidth + startDiff);\r\n\r\n\t\t\tblockedAfter = column.width == column.minWidth || column.width == column.maxWidth;\r\n\r\n\t\t\tif(moveDiff < 0){\r\n\t\t\t\tself.nextColumn = self.initialNextColumn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(self.table.options.resizableColumnFit && self.nextColumn && !(blockedBefore && blockedAfter)){\r\n\t\t\t\tlet colWidth = self.nextColumn.getWidth();\r\n\r\n\t\t\t\tif(moveDiff > 0){\r\n\t\t\t\t\tif(colWidth <= self.nextColumn.minWidth){\r\n\t\t\t\t\t\tself.nextColumn = self.nextColumn.nextColumn();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(self.nextColumn){\r\n\t\t\t\t\tself.nextColumn.setWidth(self.nextColumn.getWidth() - moveDiff);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.table.columnManager.renderer.rerenderColumns(true);\r\n\t\t\t\r\n\t\t\tif(!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction mouseUp(e){\r\n\t\t\t\r\n\t\t\t//block editor from taking action while resizing is taking place\r\n\t\t\tif(self.startColumn.modules.edit){\r\n\t\t\t\tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseUp);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\t\t\t\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\t\t\t\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\t\t\t\r\n\t\t\tif(self.startWidth !== column.getWidth()){\r\n\t\t\t\tself.dispatch(\"column-resized\", column);\r\n\t\t\t\tself.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\t\t\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\tif(self.startColumn.modules.edit){\r\n\t\t\tself.startColumn.modules.edit.blocked = true;\r\n\t\t}\r\n\t\t\r\n\t\tself.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\r\n\t\tself.latestX = self.startX;\r\n\t\tself.startWidth = column.getWidth();\r\n\t\t\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeColumns.moduleName = \"resizeColumns\";\r\n\r\nexport default ResizeColumns;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startY = false;\r\n\t\tthis.startHeight = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerTableOption(\"resizableRows\", false); //resizable rows\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.resizableRows){\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\trowEl = row.getElement();\r\n\r\n\t\tvar handle = document.createElement('div');\r\n\t\thandle.className = \"tabulator-row-resize-handle\";\r\n\r\n\t\tvar prevHandle = document.createElement('div');\r\n\t\tprevHandle.className = \"tabulator-row-resize-handle prev\";\r\n\r\n\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar handleDown = function(e){\r\n\t\t\tself.startRow = row;\r\n\t\t\tself._mouseDown(e, row, handle);\r\n\t\t};\r\n\r\n\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar prevHandleDown =  function(e){\r\n\t\t\tvar prevRow = self.table.rowManager.prevDisplayRow(row);\r\n\r\n\t\t\tif(prevRow){\r\n\t\t\t\tself.startRow = prevRow;\r\n\t\t\t\tself._mouseDown(e, prevRow, prevHandle);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tprevHandle.addEventListener(\"mousedown\",prevHandleDown);\r\n\t\tprevHandle.addEventListener(\"touchstart\",prevHandleDown, {passive: true});\r\n\r\n\t\trowEl.appendChild(handle);\r\n\t\trowEl.appendChild(prevHandle);\r\n\t}\r\n\r\n\t_mouseDown(e, row, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\trow.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t// //block editor from taking action while resizing is taking place\r\n\t\t\t// if(self.startColumn.modules.edit){\r\n\t\t\t// \tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t// }\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseMove);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tself.dispatchExternal(\"rowResized\", row.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\t// if(self.startColumn.modules.edit){\r\n\t\t// \tself.startColumn.modules.edit.blocked = true;\r\n\t\t// }\r\n\r\n\t\tself.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\r\n\t\tself.startHeight = row.getHeight();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeRows.moduleName = \"resizeRows\";\r\n\r\nexport default ResizeRows;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeTable extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.binding = false;\r\n\t\tthis.observer = false;\r\n\t\tthis.containerObserver = false;\r\n\r\n\t\tthis.tableHeight = 0;\r\n\t\tthis.tableWidth = 0;\r\n\t\tthis.containerHeight = 0;\r\n\t\tthis.containerWidth = 0;\r\n\r\n\t\tthis.autoResize = false;\r\n\r\n\t\tthis.registerTableOption(\"autoResize\", true); //auto resize table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.autoResize){\r\n\t\t\tvar table = this.table,\r\n\t\t\ttableStyle;\r\n\r\n\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\r\n\t\t\tif(table.element.parentNode){\r\n\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\"){\r\n\r\n\t\t\t\tthis.autoResize = true;\r\n\r\n\t\t\t\tthis.observer = new ResizeObserver((entry) => {\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\tif(this.tableHeight != nodeHeight || this.tableWidth != nodeWidth){\r\n\t\t\t\t\t\t\tthis.tableHeight = nodeHeight;\r\n\t\t\t\t\t\t\tthis.tableWidth = nodeWidth;\r\n\r\n\t\t\t\t\t\t\tif(table.element.parentNode){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.observer.observe(table.element);\r\n\r\n\t\t\t\ttableStyle = window.getComputedStyle(table.element);\r\n\r\n\t\t\t\tif(this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))){\r\n\r\n\t\t\t\t\tthis.containerObserver = new ResizeObserver((entry) => {\r\n\t\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\t\tif(this.containerHeight != nodeHeight || this.containerWidth != nodeWidth){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = nodeHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = nodeWidth;\r\n\t\t\t\t\t\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.containerObserver.observe(this.table.element.parentNode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.subscribe(\"table-resize\", this.tableResized.bind(this));\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.binding = function(){\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile && !table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"resize\", this.binding);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\ttableResized(){\r\n\t\tthis.table.rowManager.redraw();\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.binding){\r\n\t\t\twindow.removeEventListener(\"resize\", this.binding);\r\n\t\t}\r\n\r\n\t\tif(this.observer){\r\n\t\t\tthis.observer.unobserve(this.table.element);\r\n\t\t}\r\n\r\n\t\tif(this.containerObserver){\r\n\t\t\tthis.containerObserver.unobserve(this.table.element.parentNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nResizeTable.moduleName = \"resizeTable\";\r\n\r\nexport default ResizeTable;","import Module from '../../core/Module.js';\r\n\r\nclass ResponsiveLayout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.hiddenColumns = [];\r\n\t\tthis.mode = \"\";\r\n\t\tthis.index = 0;\r\n\t\tthis.collapseFormatter = [];\r\n\t\tthis.collapseStartOpen = true;\r\n\t\tthis.collapseHandleColumn = false;\r\n\r\n\t\tthis.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\r\n\r\n\t\tthis.registerColumnOption(\"responsive\");\r\n\t}\r\n\r\n\t//generate responsive columns list\r\n\tinitialize(){\r\n\t\tvar self = this,\r\n\t\tcolumns = [];\r\n\r\n\t\tif(this.table.options.responsiveLayout){\r\n\t\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\r\n\r\n\t\t\tif(this.table.options.responsiveLayout === \"collapse\"){\r\n\t\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-layout\", this.layoutRow.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1){\r\n\t\t\tif(!force){\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeResponsivity(){\r\n\t\tvar columns = [];\r\n\r\n\t\tthis.mode = this.table.options.responsiveLayout;\r\n\t\tthis.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\r\n\t\tthis.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\r\n\t\tthis.hiddenColumns = [];\r\n\r\n\t\t//determine level of responsivity for each column\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column, i) => {\r\n\t\t\tif(column.modules.responsive){\r\n\t\t\t\tif(column.modules.responsive.order && column.modules.responsive.visible){\r\n\t\t\t\t\tcolumn.modules.responsive.index = i;\r\n\t\t\t\t\tcolumns.push(column);\r\n\r\n\t\t\t\t\tif(!column.visible && this.mode === \"collapse\"){\r\n\t\t\t\t\t\tthis.hiddenColumns.push(column);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//sort list by responsivity\r\n\t\tcolumns = columns.reverse();\r\n\t\tcolumns = columns.sort((a, b) => {\r\n\t\t\tvar diff = b.modules.responsive.order - a.modules.responsive.order;\r\n\t\t\treturn diff || (b.modules.responsive.index - a.modules.responsive.index);\r\n\t\t});\r\n\r\n\t\tthis.columns = columns;\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.generateCollapsedContent();\r\n\t\t}\r\n\r\n\t\t//assign collapse column\r\n\t\tfor (let col of this.table.columnManager.columnsByIndex){\r\n\t\t\tif(col.definition.formatter == \"responsiveCollapse\"){\r\n\t\t\t\tthis.collapseHandleColumn = col;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.collapseHandleColumn){\r\n\t\t\tif(this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//define layout information\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.getDefinition();\r\n\r\n\t\tcolumn.modules.responsive = {order: typeof def.responsive === \"undefined\" ? 1 : def.responsive, visible:def.visible === false ? false : true};\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar el;\r\n\r\n\t\tif(row.type !== \"calc\"){\r\n\t\t\tel = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-responsive-collapse\");\r\n\r\n\t\t\trow.modules.responsiveLayout = {\r\n\t\t\t\telement:el,\r\n\t\t\t\topen:this.collapseStartOpen,\r\n\t\t\t};\r\n\r\n\t\t\tif(!this.collapseStartOpen){\r\n\t\t\t\tel.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\trowEl.appendChild(row.modules.responsiveLayout.element);\r\n\t\t\tthis.generateCollapsedRowContent(row);\r\n\t\t}\r\n\t}\r\n\r\n\t//update column visibility\r\n\tupdateColumnVisibility(column, responsiveToggle){\r\n\t\tif(!responsiveToggle && column.modules.responsive){\r\n\t\t\tcolumn.modules.responsive.visible = column.visible;\r\n\t\t\tthis.initializeResponsivity();\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(column){\r\n\t\tvar colCount = this.hiddenColumns.length;\r\n\r\n\t\tcolumn.hide(false, true);\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.hiddenColumns.unshift(column);\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !colCount){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowColumn(column){\r\n\t\tvar index;\r\n\r\n\t\tcolumn.show(false, true);\r\n\t\t//set column width to prevent calculation loops on uninitialized columns\r\n\t\tcolumn.setWidth(column.getWidth());\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tindex = this.hiddenColumns.indexOf(column);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.hiddenColumns.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//redraw columns to fit space\r\n\tupdate(){\r\n\t\tvar self = this,\r\n\t\tworking = true;\r\n\r\n\t\twhile(working){\r\n\r\n\t\t\tlet width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\r\n\r\n\t\t\tlet diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\r\n\r\n\t\t\tif(diff < 0){\r\n\t\t\t\t//table is too wide\r\n\t\t\t\tlet column = self.columns[self.index];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tself.hideColumn(column);\r\n\t\t\t\t\tself.index ++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t//table has spare space\r\n\t\t\t\tlet column = self.columns[self.index -1];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tif(diff > 0){\r\n\t\t\t\t\t\tif(diff >= column.getWidth()){\r\n\t\t\t\t\t\t\tself.showColumn(column);\r\n\t\t\t\t\t\t\tself.index --;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!self.table.rowManager.activeRowsCount){\r\n\t\t\t\tself.table.rowManager.renderEmptyScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedContent(){\r\n\t\tvar self = this,\r\n\t\trows = this.table.rowManager.getDisplayRows();\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tself.generateCollapsedRowContent(row);\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateCollapsedRowContent(row){\r\n\t\tvar el, contents;\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\tel = row.modules.responsiveLayout.element;\r\n\r\n\t\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\t\tcontents = this.collapseFormatter(this.generateCollapsedRowData(row));\r\n\t\t\tif(contents){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedRowData(row){\r\n\t\tvar self = this,\r\n\t\tdata = row.getData(),\r\n\t\toutput = [],\r\n\t\tmockCellComponent;\r\n\r\n\t\tthis.hiddenColumns.forEach(function(column){\r\n\t\t\tvar value = column.getFieldValue(data);\r\n\r\n\t\t\tif(column.definition.title && column.field){\r\n\t\t\t\tif(column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters){\r\n\r\n\t\t\t\t\tmockCellComponent = {\r\n\t\t\t\t\t\tvalue:false,\r\n\t\t\t\t\t\tdata:{},\r\n\t\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\t\treturn document.createElement(\"div\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\t\treturn row.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction onRendered(callback){\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tformatCollapsedData(data){\r\n\t\tvar list = document.createElement(\"table\");\r\n\r\n\t\tdata.forEach(function(item){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tvar titleData = document.createElement(\"td\");\r\n\t\t\tvar valueData = document.createElement(\"td\");\r\n\t\t\tvar node_content;\r\n\r\n\t\t\tvar titleHighlight = document.createElement(\"strong\");\r\n\t\t\ttitleData.appendChild(titleHighlight);\r\n\t\t\tthis.langBind(\"columns|\" + item.field, function(text){\r\n\t\t\t\ttitleHighlight.innerHTML = text || item.title;\r\n\t\t\t});\r\n\r\n\t\t\tif(item.value instanceof Node){\r\n\t\t\t\tnode_content = document.createElement(\"div\");\r\n\t\t\t\tnode_content.appendChild(item.value);\r\n\t\t\t\tvalueData.appendChild(node_content);\r\n\t\t\t}else{\r\n\t\t\t\tvalueData.innerHTML = item.value;\r\n\t\t\t}\r\n\r\n\t\t\trow.appendChild(titleData);\r\n\t\t\trow.appendChild(valueData);\r\n\t\t\tlist.appendChild(row);\r\n\t\t}, this);\r\n\r\n\t\treturn Object.keys(data).length ? list : \"\";\r\n\t}\r\n}\r\n\r\nResponsiveLayout.moduleName = \"responsiveLayout\";\r\n\r\nexport default ResponsiveLayout;","import Module from '../../core/Module.js';\r\n\r\nclass SelectRow extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.selecting = false; //flag selecting in progress\r\n\t\tthis.lastClickedRow = false; //last clicked row\r\n\t\tthis.selectPrev = []; //hold previously selected element for drag drop selection\r\n\t\tthis.selectedRows = []; //hold selected rows\r\n\t\tthis.headerCheckboxElement = null; // hold header select element\r\n\t\t\r\n\t\tthis.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRangeMode\", \"drag\");  //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\r\n\t\tthis.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\r\n\t\tthis.registerTableOption(\"selectableCheck\", function(data, row){return true;}); //check wheather row is selectable\r\n\t\t\r\n\t\tthis.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\r\n\t\t\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.selectable !== false){\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\r\n\t\t\tthis.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\r\n\t\t\t\r\n\t\t\tif(this.table.options.selectable && !this.table.options.selectablePersistence){\r\n\t\t\t\tthis.subscribe(\"data-refreshing\", this.deselectRows.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trowRetrieve(type, prevValue){\r\n\t\treturn type === \"selected\" ? this.selectedRows : prevValue;\r\n\t}\r\n\t\r\n\trowDeleted(row){\r\n\t\tthis._deselectRow(row, true);\r\n\t}\r\n\t\r\n\tclearSelectionData(silent){\r\n\t\tthis.selecting = false;\r\n\t\tthis.lastClickedRow = false;\r\n\t\tthis.selectPrev = [];\r\n\t\tthis.selectedRows = [];\r\n\t\t\r\n\t\tif(silent !== true){\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\telement = row.getElement();\r\n\t\t\r\n\t\t// trigger end of row selection\r\n\t\tvar endSelect = function(){\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tself.selecting = false;\r\n\t\t\t}, 50);\r\n\t\t\t\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", endSelect);\r\n\t\t};\r\n\t\t\r\n\t\trow.modules.select = {selected:false};\r\n\t\t\r\n\t\t//set row selection class\r\n\t\tif(self.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\telement.classList.add(\"tabulator-selectable\");\r\n\t\t\telement.classList.remove(\"tabulator-unselectable\");\r\n\t\t\t\r\n\t\t\tif(self.table.options.selectable && self.table.options.selectable != \"highlight\"){\r\n\t\t\t\tif(self.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\telement.addEventListener(\"click\", this.handleComplexRowClick.bind(this, row));\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(!self.selecting){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tself.selecting = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tself.selectPrev = [];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"mouseup\", endSelect);\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"keyup\", endSelect);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\telement.addEventListener(\"mouseenter\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(self.selectPrev[1] == row){\r\n\t\t\t\t\t\t\t\tself.toggleRow(self.selectPrev[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\telement.addEventListener(\"mouseout\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.selectPrev.unshift(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\telement.classList.add(\"tabulator-unselectable\");\r\n\t\t\telement.classList.remove(\"tabulator-selectable\");\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleComplexRowClick(row, e){\r\n\t\tif(e.shiftKey){\r\n\t\t\tthis.table._clearSelection();\r\n\t\t\tthis.lastClickedRow = this.lastClickedRow || row;\r\n\t\t\t\r\n\t\t\tvar lastClickedRowIdx = this.table.rowManager.getDisplayRowIndex(this.lastClickedRow);\r\n\t\t\tvar rowIdx = this.table.rowManager.getDisplayRowIndex(row);\r\n\t\t\t\r\n\t\t\tvar fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\t\t\tvar toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\t\t\t\r\n\t\t\tvar rows = this.table.rowManager.getDisplayRows().slice(0);\r\n\t\t\tvar toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\r\n\t\t\t\r\n\t\t\tif(e.ctrlKey || e.metaKey){\r\n\t\t\t\ttoggledRows.forEach((toggledRow)=>{\r\n\t\t\t\t\tif(toggledRow !== this.lastClickedRow){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.table.options.selectable !== true && !this.isRowSelected(row)){\r\n\t\t\t\t\t\t\tif(this.selectedRows.length < this.table.options.selectable){\r\n\t\t\t\t\t\t\t\tthis.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.toggleRow(toggledRow);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.lastClickedRow = row;\r\n\t\t\t}else{\r\n\t\t\t\tthis.deselectRows(undefined, true);\r\n\t\t\t\t\r\n\t\t\t\tif(this.table.options.selectable !== true){\r\n\t\t\t\t\tif(toggledRows.length > this.table.options.selectable){\r\n\t\t\t\t\t\ttoggledRows = toggledRows.slice(0, this.table.options.selectable)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.selectRows(toggledRows);\r\n\t\t\t}\r\n\t\t\tthis.table._clearSelection();\r\n\t\t}\r\n\t\telse if(e.ctrlKey || e.metaKey){\r\n\t\t\tthis.toggleRow(row);\r\n\t\t\tthis.lastClickedRow = row;\r\n\t\t}else{\r\n\t\t\tthis.deselectRows(undefined, true);\r\n\t\t\tthis.selectRows(row);\r\n\t\t\tthis.lastClickedRow = row;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//toggle row selection\r\n\ttoggleRow(row){\r\n\t\tif(this.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\tif(row.modules.select && row.modules.select.selected){\r\n\t\t\t\tthis._deselectRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//select a number of rows\r\n\tselectRows(rows){\r\n\t\tvar rowMatch;\r\n\t\t\r\n\t\tswitch(typeof rows){\r\n\t\t\tcase \"undefined\":\r\n\t\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"string\":\r\n\t\t\t\r\n\t\t\trowMatch = this.table.rowManager.findRow(rows);\r\n\t\t\t\r\n\t\t\tif(rowMatch){\r\n\t\t\t\tthis._selectRow(rowMatch, true, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.getRows(rows).forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis._rowSelectionChanged();\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(rows, false, true);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//select an individual row\r\n\t_selectRow(rowInfo, silent, force){\r\n\t\tvar index;\r\n\t\t\r\n\t\t//handle max row count\r\n\t\tif(!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force){\r\n\t\t\tif(this.selectedRows.length >= this.table.options.selectable){\r\n\t\t\t\tif(this.table.options.selectableRollingSelection){\r\n\t\t\t\t\tthis._deselectRow(this.selectedRows[0]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar row = this.table.rowManager.findRow(rowInfo);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\tif(this.selectedRows.indexOf(row) == -1){\r\n\t\t\t\trow.getElement().classList.add(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trow.modules.select.selected = true;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t\t\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, true);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.dispatchExternal(\"rowSelected\", row.getComponent());\r\n\t\t\t\t\r\n\t\t\t\tthis._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tisRowSelected(row){\r\n\t\treturn this.selectedRows.indexOf(row) !== -1;\r\n\t}\r\n\t\r\n\t//deselect a number of rows\r\n\tdeselectRows(rows, silent){\r\n\t\tvar self = this,\r\n\t\trowCount;\r\n\t\t\r\n\t\tif(typeof rows == \"undefined\"){\r\n\t\t\t\r\n\t\t\trowCount = self.selectedRows.length;\r\n\t\t\t\r\n\t\t\tfor(let i = 0; i < rowCount; i++){\r\n\t\t\t\tself._deselectRow(self.selectedRows[0], true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(rowCount){\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tself._deselectRow(row, true);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}else{\r\n\t\t\t\tself._deselectRow(rows, silent);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//deselect an individual row\r\n\t_deselectRow(rowInfo, silent){\r\n\t\tvar self = this,\r\n\t\trow = self.table.rowManager.findRow(rowInfo),\r\n\t\tindex;\r\n\t\t\r\n\t\tif(row){\r\n\t\t\tindex = self.selectedRows.findIndex(function(selectedRow){\r\n\t\t\t\treturn selectedRow == row;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(index > -1){\r\n\t\t\t\t\r\n\t\t\t\trow.getElement().classList.remove(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trow.modules.select.selected = false;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = false;\r\n\t\t\t\t}\r\n\t\t\t\tself.selectedRows.splice(index, 1);\r\n\t\t\t\t\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, false);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.dispatchExternal(\"rowDeselected\", row.getComponent());\r\n\t\t\t\t\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetSelectedData(){\r\n\t\tvar data = [];\r\n\t\t\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\t\t\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\tgetSelectedRows(){\r\n\t\t\r\n\t\tvar rows = [];\r\n\t\t\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\trows.push(row.getComponent());\r\n\t\t});\r\n\t\t\r\n\t\treturn rows;\r\n\t}\r\n\t\r\n\t_rowSelectionChanged(silent){\r\n\t\tif(this.headerCheckboxElement){\r\n\t\t\tif(this.selectedRows.length === 0){\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else if(this.table.rowManager.rows.length === this.selectedRows.length){\r\n\t\t\t\tthis.headerCheckboxElement.checked = true;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = true;\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(!silent){\r\n\t\t\tthis.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\r\n\t\t}\r\n\t}\r\n\t\r\n\tregisterRowSelectCheckbox (row, element) {\r\n\t\tif(!row._row.modules.select){\r\n\t\t\trow._row.modules.select = {};\r\n\t\t}\r\n\t\t\r\n\t\trow._row.modules.select.checkboxEl = element;\r\n\t}\r\n\t\r\n\tregisterHeaderSelectCheckbox (element) {\r\n\t\tthis.headerCheckboxElement = element;\r\n\t}\r\n\t\r\n\tchildRowSelection(row, select){\r\n\t\tvar children = this.table.modules.dataTree.getChildren(row, true);\r\n\t\t\r\n\t\tif(select){\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._selectRow(child, true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._deselectRow(child, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nSelectRow.moduleName = \"selectRow\";\r\n\r\nexport default SelectRow;","//sort numbers\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar decimal = params.decimalSeparator;\r\n\tvar thousand = params.thousandSeparator;\r\n\tvar emptyAlign = 0;\r\n\r\n\ta = String(a);\r\n\tb = String(b);\r\n\r\n\tif(thousand){\r\n\t\ta = a.split(thousand).join(\"\");\r\n\t\tb = b.split(thousand).join(\"\");\r\n\t}\r\n\r\n\tif(decimal){\r\n\t\ta = a.split(decimal).join(\".\");\r\n\t\tb = b.split(decimal).join(\".\");\r\n\t}\r\n\r\n\ta = parseFloat(a);\r\n\tb = parseFloat(b);\r\n\r\n\t//handle non numeric values\r\n\tif(isNaN(a)){\r\n\t\temptyAlign =  isNaN(b) ? 0 : -1;\r\n\t}else if(isNaN(b)){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort strings\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\tvar locale;\r\n\r\n\t//handle empty values\r\n\tif(!a){\r\n\t\temptyAlign =  !b ? 0 : -1;\r\n\t}else if(!b){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\tswitch(typeof params.locale){\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(params.locale){\r\n\t\t\t\tlocale = this.langLocale();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"string\":\r\n\t\t\tlocale = params.locale;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort datetime\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar format = params.format || \"dd/MM/yyyy HH:mm:ss\",\r\n\talignEmptyValues = params.alignEmptyValues,\r\n\temptyAlign = 0;\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tif(DT.isDateTime(a)){\r\n\t\t\t a = a;\r\n\t\t}else if(format === \"iso\"){\r\n\t\t\t a = DT.fromISO(String(a));\r\n\t\t}else{\r\n\t\t\t a = DT.fromFormat(String(a), format);\r\n\t\t}\r\n\r\n\t\tif(DT.isDateTime(b)){\r\n\t\t\t b = b;\r\n\t\t}else if(format === \"iso\"){\r\n\t\t\t a = DT.fromISO(String(b));\r\n\t\t}else{\r\n\t\t\t b = DT.fromFormat(String(b), format);\r\n\t\t}\r\n\r\n\t\tif(!a.isValid){\r\n\t\t\temptyAlign = !b.isValid ? 0 : -1;\r\n\t\t}else if(!b.isValid){\r\n\t\t\temptyAlign =  1;\r\n\t\t}else{\r\n\t\t\t//compare valid values\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\r\n\t\t//fix empty values in position\r\n\t\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\t\temptyAlign *= -1;\r\n\t\t}\r\n\r\n\t\treturn emptyAlign;\r\n\r\n\t}else{\r\n\t\tconsole.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\r\n\t}\r\n};","import datetime from './datetime.js';\r\n\r\n//sort date\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"dd/MM/yyyy\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","import datetime from './datetime.js';\r\n\r\n//sort times\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"HH:mm\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","//sort booleans\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\r\n\tvar el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\r\n\r\n\treturn el1 - el2;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = 0;\r\n\tvar el2 = 0;\r\n\tvar type = params.type || \"length\";\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\tfunction calc(value){\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"length\":\r\n\t\t\treturn value.length;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sum\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"max\":\r\n\t\t\treturn Math.max.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"min\":\r\n\t\t\treturn Math.min.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"avg\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t}) / value.length;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//handle non array values\r\n\tif(!Array.isArray(a)){\r\n\t\talignEmptyValues = !Array.isArray(b) ? 0 : -1;\r\n\t}else if(!Array.isArray(b)){\r\n\t\talignEmptyValues = 1;\r\n\t}else{\r\n\r\n\t\t//compare valid values\r\n\t\tel1 = a ? calc(a) : 0;\r\n\t\tel2 = b ? calc(b) : 0;\r\n\r\n\t\treturn el1 - el2;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = typeof a == \"undefined\" ? 0 : 1;\r\n\tvar el2 = typeof b == \"undefined\" ? 0 : 1;\r\n\r\n\treturn el1 - el2;\r\n};","//sort alpha numeric strings\r\nexport default function(as, bs, aRow, bRow, column, dir, params){\r\n\tvar a, b, a1, b1, i= 0, L, rx = /(\\d+)|(\\D+)/g, rd = /\\d/;\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\t//handle empty values\r\n\tif(!as && as!== 0){\r\n\t\temptyAlign =  !bs && bs!== 0 ? 0 : -1;\r\n\t}else if(!bs && bs!== 0){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\r\n\t\tif(isFinite(as) && isFinite(bs)) return as - bs;\r\n\t\ta = String(as).toLowerCase();\r\n\t\tb = String(bs).toLowerCase();\r\n\t\tif(a === b) return 0;\r\n\t\tif(!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\r\n\t\ta = a.match(rx);\r\n\t\tb = b.match(rx);\r\n\t\tL = a.length > b.length ? b.length : a.length;\r\n\t\twhile(i < L){\r\n\t\t\ta1= a[i];\r\n\t\t\tb1= b[i++];\r\n\t\t\tif(a1 !== b1){\r\n\t\t\t\tif(isFinite(a1) && isFinite(b1)){\r\n\t\t\t\t\tif(a1.charAt(0) === \"0\") a1 = \".\" + a1;\r\n\t\t\t\t\tif(b1.charAt(0) === \"0\") b1 = \".\" + b1;\r\n\t\t\t\t\treturn a1 - b1;\r\n\t\t\t\t}\r\n\t\t\t\telse return a1 > b1 ? 1 : -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a.length > b.length;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","import number from './sorters/number.js';\r\nimport string from './sorters/string.js';\r\nimport date from './sorters/date.js';\r\nimport time from './sorters/time.js';\r\nimport datetime from './sorters/datetime.js';\r\nimport boolean from './sorters/boolean.js';\r\nimport array from './sorters/array.js';\r\nimport exists from './sorters/exists.js';\r\nimport alphanum from './sorters/alphanum.js';\r\n\r\nexport default {\r\n\tnumber:number,\r\n\tstring:string,\r\n\tdate:date,\r\n\ttime:time,\r\n\tdatetime:datetime,\r\n\tboolean:boolean,\r\n\tarray:array,\r\n\texists:exists,\r\n\talphanum:alphanum\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultSorters from './defaults/sorters.js';\r\n\r\nclass Sort extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t \tthis.sortList = []; //holder current sort\r\n\t \tthis.changed = false; //has the sort changed since last render\r\n\r\n\t \tthis.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\r\n\r\n\t \tthis.registerTableOption(\"initialSort\", false); //initial sorting criteria\r\n\t \tthis.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\r\n\t \tthis.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\r\n\t \tthis.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\r\n\r\n\t \tthis.registerColumnOption(\"sorter\");\r\n\t \tthis.registerColumnOption(\"sorterParams\");\r\n\r\n\t \tthis.registerColumnOption(\"headerSort\", true);\r\n\t \tthis.registerColumnOption(\"headerSortStartingDir\");\r\n\t \tthis.registerColumnOption(\"headerSortTristate\");\r\n\r\n\t }\r\n\r\n\t initialize(){\r\n\t \tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t \tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\t \tthis.registerDataHandler(this.sort.bind(this), 20);\r\n\r\n\t \tthis.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\r\n\t \tthis.registerTableFunction(\"getSorters\", this.getSort.bind(this));\r\n\t \tthis.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\r\n\r\n\t \tif(this.table.options.sortMode === \"remote\"){\r\n\t \t\tthis.subscribe(\"data-params\", this.remoteSortParams.bind(this));\r\n\t \t}\r\n\t }\r\n\r\n\t tableBuilt(){\r\n\t \tif(this.table.options.initialSort){\r\n\t \t\tthis.setSort(this.table.options.initialSort);\r\n\t \t}\r\n\t }\r\n\r\n\t remoteSortParams(data, config, silent, params){\r\n\t \tvar sorters = this.getSort();\r\n\r\n\t \tsorters.forEach((item) => {\r\n\t \t\tdelete item.column;\r\n\t \t});\r\n\r\n\t \tparams.sort = sorters;\r\n\r\n\t \treturn params;\r\n\t }\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetSort(sortList, dir){\r\n\t\tthis.setSort(sortList, dir);\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\tclearSort(){\r\n\t\tthis.clear();\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//initialize column header for sorting\r\n\tinitializeColumn(column){\r\n\t\tvar sorter = false,\r\n\t\tcolEl,\r\n\t\tarrowEl;\r\n\r\n\t\tswitch(typeof column.definition.sorter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Sort.sorters[column.definition.sorter]){\r\n\t\t\t\tsorter = Sort.sorters[column.definition.sorter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tsorter = column.definition.sorter;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.sort = {\r\n\t\t\tsorter:sorter, dir:\"none\",\r\n\t\t\tparams:column.definition.sorterParams || {},\r\n\t\t\tstartingDir:column.definition.headerSortStartingDir || \"asc\",\r\n\t\t\ttristate: column.definition.headerSortTristate,\r\n\t\t};\r\n\r\n\t\tif(column.definition.headerSort !== false){\r\n\r\n\t\t\tcolEl = column.getElement();\r\n\r\n\t\t\tcolEl.classList.add(\"tabulator-sortable\");\r\n\r\n\r\n\t\t\tarrowEl = document.createElement(\"div\");\r\n\t\t\tarrowEl.classList.add(\"tabulator-col-sorter\");\r\n\r\n\t\t\tif(typeof this.table.options.headerSortElement == \"object\"){\r\n\t\t\t\tarrowEl.appendChild(this.table.options.headerSortElement);\r\n\t\t\t}else{\r\n\t\t\t\tarrowEl.innerHTML = this.table.options.headerSortElement;\r\n\t\t\t}\r\n\r\n\t\t\t//create sorter arrow\r\n\t\t\tcolumn.titleHolderElement.appendChild(arrowEl);\r\n\r\n\t\t\tcolumn.modules.sort.element = arrowEl;\r\n\r\n\t\t\t//sort on click\r\n\t\t\tcolEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\tvar dir = \"\",\r\n\t\t\t\tsorters=[],\r\n\t\t\t\tmatch = false;\r\n\r\n\t\t\t\tif(column.modules.sort){\r\n\t\t\t\t\tif(column.modules.sort.tristate){\r\n\t\t\t\t\t\tif(column.modules.sort.dir == \"none\"){\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(column.modules.sort.dir == column.modules.sort.startingDir){\r\n\t\t\t\t\t\t\t\tdir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tdir = \"none\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(column.modules.sort.dir){\r\n\t\t\t\t\t\t\tcase \"asc\":\r\n\t\t\t\t\t\t\tdir = \"desc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"desc\":\r\n\t\t\t\t\t\t\tdir = \"asc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\r\n\t\t\t\t\t\tsorters = this.getSort();\r\n\r\n\t\t\t\t\t\tmatch = sorters.findIndex((sorter) => {\r\n\t\t\t\t\t\t\treturn sorter.field === column.getField();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(match > -1){\r\n\t\t\t\t\t\t\tsorters[match].dir = dir;\r\n\r\n\t\t\t\t\t\t\tif(match != sorters.length -1){\r\n\t\t\t\t\t\t\t\tmatch = sorters.splice(match, 1)[0];\r\n\t\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\t\tsorters.push(match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\tsorters.push({column:column, dir:dir});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//add to existing sort\r\n\t\t\t\t\t\tthis.setSort(sorters);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(dir == \"none\"){\r\n\t\t\t\t\t\t\tthis.clear();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//sort by column only\r\n\t\t\t\t\t\t\tthis.setSort(column, dir);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.table.rowManager.sorterRefresh(!this.sortList.length);\r\n\t\t\t\t\tthis.refreshSort();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSort(){\r\n\t\tif(this.table.options.sortMode === \"remote\"){\r\n\t\t\tthis.reloadData();\r\n\t\t}else{\r\n\t\t\tthis.refreshData(true);\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the sorters have changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//return current sorters\r\n\tgetSort(){\r\n\t\tvar self = this,\r\n\t\tsorters = [];\r\n\r\n\t\tself.sortList.forEach(function(item){\r\n\t\t\tif(item.column){\r\n\t\t\t\tsorters.push({column:item.column.getComponent(), field:item.column.getField(), dir:item.dir});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn sorters;\r\n\t}\r\n\r\n\t//change sort list and trigger sort\r\n\tsetSort(sortList, dir){\r\n\t\tvar self = this,\r\n\t\tnewSortList = [];\r\n\r\n\t\tif(!Array.isArray(sortList)){\r\n\t\t\tsortList = [{column: sortList, dir:dir}];\r\n\t\t}\r\n\r\n\t\tsortList.forEach(function(item){\r\n\t\t\tvar column;\r\n\r\n\t\t\tcolumn = self.table.columnManager.findColumn(item.column);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\titem.column = column;\r\n\t\t\t\tnewSortList.push(item);\r\n\t\t\t\tself.changed = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tself.sortList = newSortList;\r\n\r\n\t\tthis.dispatch(\"sort-changed\");\r\n\t}\r\n\r\n\t//clear sorters\r\n\tclear(){\r\n\t\tthis.setSort([]);\r\n\t}\r\n\r\n\t//find appropriate sorter for column\r\n\tfindSorter(column){\r\n\t\tvar row = this.table.rowManager.activeRows[0],\r\n\t\tsorter = \"string\",\r\n\t\tfield, value;\r\n\r\n\t\tif(row){\r\n\t\t\trow = row.getData();\r\n\t\t\tfield = column.getField();\r\n\r\n\t\t\tif(field){\r\n\r\n\t\t\t\tvalue = column.getFieldValue(row);\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Sort.sorters[sorter];\r\n\t}\r\n\r\n\t//work through sort list sorting data\r\n\tsort(data){\r\n\t\tvar self = this,\r\n\t\tsortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\r\n\t\tsortListActual = [],\r\n\t\trowComponents = [],\r\n\t\tlastSort;\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorting\")){\r\n\t\t\tthis.dispatchExternal(\"dataSorting\", self.getSort());\r\n\t\t}\r\n\r\n\t\tself.clearColumnHeaders();\r\n\r\n\t\tif(this.table.options.sortMode !== \"remote\"){\r\n\r\n\t\t\t//build list of valid sorters and trigger column specific callbacks before sort begins\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tvar sortObj = item.column.modules.sort;\r\n\r\n\t\t\t\tif(item.column && sortObj){\r\n\r\n\t\t\t\t\t//if no sorter has been defined, take a guess\r\n\t\t\t\t\tif(!sortObj.sorter){\r\n\t\t\t\t\t\tsortObj.sorter = self.findSorter(item.column);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\r\n\r\n\t\t\t\t\tsortListActual.push(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\r\n\t\t\t//sort data\r\n\t\t\tif (sortListActual.length) {\r\n\t\t\t\tself._sortItems(data, sortListActual);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorted\")){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\trowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//clear sort arrows on columns\r\n\tclearColumnHeaders(){\r\n\t\tthis.table.columnManager.getRealColumns().forEach(function(column){\r\n\t\t\tif(column.modules.sort){\r\n\t\t\t\tcolumn.modules.sort.dir = \"none\";\r\n\t\t\t\tcolumn.getElement().setAttribute(\"aria-sort\", \"none\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//set the column header sort direction\r\n\tsetColumnHeader(column, dir){\r\n\t\tcolumn.modules.sort.dir = dir;\r\n\t\tcolumn.getElement().setAttribute(\"aria-sort\", dir);\r\n\t}\r\n\r\n\t//sort each item in sort list\r\n\t_sortItems(data, sortList){\r\n\t\tvar sorterCount = sortList.length - 1;\r\n\r\n\t\tdata.sort((a, b) => {\r\n\t\t\tvar result;\r\n\r\n\t\t\tfor(var i = sorterCount; i>= 0; i--){\r\n\t\t\t\tlet sortItem = sortList[i];\r\n\r\n\t\t\t\tresult = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\r\n\r\n\t\t\t\tif(result !== 0){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\t//process individual rows for a sort function on active data\r\n\t_sortRow(a, b, column, dir, params){\r\n\t\tvar el1Comp, el2Comp, colComp;\r\n\r\n\t\t//switch elements depending on search direction\r\n\t\tvar el1 = dir == \"asc\" ? a : b;\r\n\t\tvar el2 = dir == \"asc\" ? b : a;\r\n\r\n\t\ta = column.getFieldValue(el1.getData());\r\n\t\tb = column.getFieldValue(el2.getData());\r\n\r\n\t\ta = typeof a !== \"undefined\" ? a : \"\";\r\n\t\tb = typeof b !== \"undefined\" ? b : \"\";\r\n\r\n\t\tel1Comp = el1.getComponent();\r\n\t\tel2Comp = el2.getComponent();\r\n\r\n\t\treturn column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\r\n\t}\r\n}\r\n\r\nSort.moduleName = \"sort\";\r\n\r\n//load defaults\r\nSort.sorters = defaultSorters;\r\n\r\nexport default Sort;","import Module from '../../core/Module.js';\r\nimport Cell from '../../core/cell/Cell.js';\r\n\r\nclass Tooltip extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.tooltipSubscriber = null,\r\n\t\tthis.headerSubscriber = null,\r\n\t\t\r\n\t\tthis.timeout = null;\r\n\t\tthis.popupInstance = null;\r\n\t\t\r\n\t\tthis.registerTableOption(\"tooltipGenerationMode\", undefined);  //deprecated\r\n\t\tthis.registerTableOption(\"tooltipDelay\", 300); \r\n\t\t\r\n\t\tthis.registerColumnOption(\"tooltip\");\r\n\t\tthis.registerColumnOption(\"headerTooltip\");\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.deprecationCheck();\r\n\t\t\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t}\r\n\t\r\n\tdeprecationCheck(){\r\n\t\tif(typeof this.table.options.tooltipGenerationMode !== \"undefined\"){\r\n\t\t\tconsole.warn(\"Use of the tooltipGenerationMode option is now deprecated. This option is no longer needed as tooltips are always generated on hover now\");\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tif(column.definition.headerTooltip && !this.headerSubscriber){\r\n\t\t\tthis.headerSubscriber = true;\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"column-mousemove\", this.mousemoveCheck.bind(this, \"headerTooltip\"));\r\n\t\t\tthis.subscribe(\"column-mouseout\", this.mouseoutCheck.bind(this, \"headerTooltip\"));\r\n\t\t}\r\n\t\t\r\n\t\tif(column.definition.tooltip && !this.tooltipSubscriber){\r\n\t\t\tthis.tooltipSubscriber = true;\r\n\t\t\t\r\n\t\t\tthis.subscribe(\"cell-mousemove\", this.mousemoveCheck.bind(this, \"tooltip\"));\r\n\t\t\tthis.subscribe(\"cell-mouseout\", this.mouseoutCheck.bind(this, \"tooltip\"));\r\n\t\t}\r\n\t}\r\n\t\r\n\tmousemoveCheck(action, e, component){\r\n\t\tvar tooltip = action === \"tooltip\" ? component.column.definition.tooltip : component.definition.headerTooltip;\r\n\t\t\r\n\t\tif(tooltip){\r\n\t\t\tthis.clearPopup();\r\n\t\t\tthis.timeout = setTimeout(this.loadTooltip.bind(this, e, component, tooltip), this.table.options.tooltipDelay);\r\n\t\t}\r\n\t}\r\n\r\n\tmouseoutCheck(action, e, component){\r\n\t\tif(!this.popupInstance){\r\n\t\t\tthis.clearPopup();\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearPopup(action, e, component){\r\n\t\tclearTimeout(this.timeout);\r\n\t\tthis.timeout = null;\r\n\t\t\r\n\t\tif(this.popupInstance){\r\n\t\t\tthis.popupInstance.hide();\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadTooltip(e, component, tooltip){\r\n\t\tvar contentsEl, renderedCallback, coords;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trenderedCallback = callback;\r\n\t\t}\r\n\t\t\r\n\t\tif(typeof tooltip === \"function\"){\r\n\t\t\ttooltip = tooltip(e, component.getComponent(), onRendered);\r\n\t\t}\r\n\t\t\r\n\t\tif(tooltip instanceof HTMLElement){\r\n\t\t\tcontentsEl = tooltip;\r\n\t\t}else{\r\n\t\t\tcontentsEl = document.createElement(\"div\");\r\n\t\t\t\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\tif(component instanceof Cell){\r\n\t\t\t\t\ttooltip = component.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(component.definition.field){\r\n\t\t\t\t\t\tthis.langBind(\"columns|\" + component.definition.field, (value) => {\r\n\t\t\t\t\t\t\tcontentsEl.innerHTML = tooltip = value || component.definition.title;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttooltip = component.definition.title;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcontentsEl.innerHTML = tooltip;\r\n\t\t}\r\n\t\t\r\n\t\tif(tooltip || tooltip === 0 || tooltip === \"0\" || tooltip === false){\r\n\t\t\tcontentsEl.classList.add(\"tabulator-tooltip\");\r\n\r\n\t\t\tcontentsEl.addEventListener(\"mousemove\", e => e.preventDefault())\r\n\t\t\t\r\n\t\t\tthis.popupInstance = this.popup(contentsEl);\r\n\t\t\t\r\n\t\t\tif(typeof renderedCallback === \"function\"){\r\n\t\t\t\tthis.popupInstance.renderCallback(renderedCallback);\r\n\t\t\t}\r\n\r\n\t\t\tcoords = this.popupInstance.containerEventCoords(e);\r\n\t\t\t\r\n\t\t\tthis.popupInstance.show(coords.x + 15, coords.y + 15).hideOnBlur(() => {\r\n\t\t\t\tthis.dispatchExternal(\"TooltipClosed\", component.getComponent());\r\n\t\t\t\tthis.popupInstance = null;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.dispatchExternal(\"TooltipOpened\", component.getComponent());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nTooltip.moduleName = \"tooltip\";\r\n\r\nexport default Tooltip;\r\n","export default {\r\n\t//is integer\r\n\tinteger: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n\t},\r\n\r\n\t//is float\r\n\tfloat: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && value % 1 !== 0;\r\n\t},\r\n\r\n\t//must be a number\r\n\tnumeric: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !isNaN(value);\r\n\t},\r\n\r\n\t//must be a string\r\n\tstring: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn isNaN(value);\r\n\t},\r\n\r\n\t//maximum value\r\n\tmax: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) <= parameters;\r\n\t},\r\n\r\n\t//minimum value\r\n\tmin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) >= parameters;\r\n\t},\r\n\r\n\t//starts with  value\r\n\tstarts: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\t//ends with  value\r\n\tends: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\r\n\t//minimum string length\r\n\tminLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length >= parameters;\r\n\t},\r\n\r\n\t//maximum string length\r\n\tmaxLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length <= parameters;\r\n\t},\r\n\r\n\t//in provided value list\r\n\tin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(typeof parameters == \"string\"){\r\n\t\t\tparameters = parameters.split(\"|\");\r\n\t\t}\r\n\r\n\t\treturn value === \"\" || parameters.indexOf(value) > -1;\r\n\t},\r\n\r\n\t//must match provided regex\r\n\tregex: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar reg = new RegExp(parameters);\r\n\r\n\t\treturn reg.test(value);\r\n\t},\r\n\r\n\t//value must be unique in this column\r\n\tunique: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar unique = true;\r\n\r\n\t\tvar cellData = cell.getData();\r\n\t\tvar column = cell.getColumn()._getSelf();\r\n\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar data = row.getData();\r\n\r\n\t\t\tif(data !== cellData){\r\n\t\t\t\tif(value == column.getFieldValue(data)){\r\n\t\t\t\t\tunique = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn unique;\r\n\t},\r\n\r\n\t//must have a value\r\n\trequired:function(cell, value, parameters){\r\n\t\treturn value !== \"\" && value !== null && typeof value !== \"undefined\";\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultValidators from './defaults/validators.js';\r\n\r\nclass Validate extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.invalidCells = [];\r\n\t\t\r\n\t\tthis.registerTableOption(\"validationMode\", \"blocking\");\r\n\t\t\r\n\t\tthis.registerColumnOption(\"validator\");\r\n\t\t\r\n\t\tthis.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\r\n\t\tthis.registerTableFunction(\"validate\", this.userValidate.bind(this));\r\n\t\t\r\n\t\tthis.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\r\n\t\t\r\n\t\tthis.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\r\n\t}\r\n\t\r\n\t\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-delete\", this.clearValidation.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t\t\r\n\t\tthis.subscribe(\"edit-success\", this.editValidate.bind(this));\r\n\t\tthis.subscribe(\"edit-editor-clear\", this.editorClear.bind(this));\r\n\t\tthis.subscribe(\"edit-edited-clear\", this.editedClear.bind(this));\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t///////// Event Handling //////////\r\n\t///////////////////////////////////\r\n\t\r\n\teditValidate(cell, value, previousValue){\r\n\t\tvar valid = this.table.options.validationMode !== \"manual\" ? this.validate(cell.column.modules.validate, cell, value) : true;\r\n\t\t\r\n\t\t// allow time for editor to make render changes then style cell\r\n\t\tif(valid !== true){\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcell.getElement().classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\tthis.dispatchExternal(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn valid;\r\n\t}\r\n\t\r\n\teditorClear(cell, cancelled){\r\n\t\tif(cancelled){\r\n\t\t\tif(cell.column.modules.validate){\r\n\t\t\t\tthis.cellValidate(cell);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t}\r\n\t\r\n\teditedClear(cell){\r\n\t\tif(cell.modules.validate){\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t////////// Cell Functions /////////\r\n\t///////////////////////////////////\r\n\t\r\n\tcellIsValid(cell){\r\n\t\treturn cell.modules.validate ? (cell.modules.validate.invalid || true) : true;\r\n\t}\r\n\t\r\n\tcellValidate(cell){\r\n\t\treturn this.validate(cell.column.modules.validate, cell, cell.getValue());\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t///////// Column Functions ////////\r\n\t///////////////////////////////////\r\n\t\r\n\tcolumnValidate(column){\r\n\t\tvar invalid = [];\r\n\t\t\r\n\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t////////// Row Functions //////////\r\n\t///////////////////////////////////\r\n\t\r\n\trowValidate(row){\r\n\t\tvar invalid = [];\r\n\t\t\r\n\t\trow.cells.forEach((cell) => {\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\t\r\n\t\r\n\tuserClearCellValidation(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.getInvalidCells();\r\n\t\t}\r\n\t\t\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\t\t\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.clearValidation(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\t\r\n\tuserValidate(cells){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\t//clear row data\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\trow = row.getComponent();\r\n\t\t\t\r\n\t\t\tvar valid = row.validate();\r\n\t\t\t\r\n\t\t\tif(valid !== true){\r\n\t\t\t\toutput = output.concat(valid);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn output.length ? output : true;\r\n\t}\r\n\t\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\t\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.validator !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//validate\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = [],\r\n\t\tvalidator;\r\n\t\t\r\n\t\tif(column.definition.validator){\r\n\t\t\t\r\n\t\t\tif(Array.isArray(column.definition.validator)){\r\n\t\t\t\tcolumn.definition.validator.forEach((item) => {\r\n\t\t\t\t\tvalidator = self._extractValidator(item);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(validator){\r\n\t\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tvalidator = this._extractValidator(column.definition.validator);\r\n\t\t\t\t\r\n\t\t\t\tif(validator){\r\n\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolumn.modules.validate = config.length ? config : false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_extractValidator(value){\r\n\t\tvar type, params, pos;\r\n\t\t\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tpos = value.indexOf(':');\r\n\t\t\t\r\n\t\t\tif(pos > -1){\r\n\t\t\t\ttype = value.substring(0,pos);\r\n\t\t\t\tparams = value.substring(pos+1);\r\n\t\t\t}else{\r\n\t\t\t\ttype = value;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._buildValidator(type, params);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"function\":\r\n\t\t\treturn this._buildValidator(value);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"object\":\r\n\t\t\treturn this._buildValidator(value.type, value.parameters);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t_buildValidator(type, params){\r\n\t\t\r\n\t\tvar func = typeof type == \"function\" ? type : Validate.validators[type];\r\n\t\t\r\n\t\tif(!func){\r\n\t\t\tconsole.warn(\"Validator Setup Error - No matching validator found:\", type);\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\treturn {\r\n\t\t\t\ttype:typeof type == \"function\" ? \"function\" : type,\r\n\t\t\t\tfunc:func,\r\n\t\t\t\tparams:params,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tvalidate(validators, cell, value){\r\n\t\tvar self = this,\r\n\t\tfailedValidators = [],\r\n\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\t\t\r\n\t\tif(validators){\r\n\t\t\tvalidators.forEach((item) => {\r\n\t\t\t\tif(!item.func.call(self, cell.getComponent(), value, item.params)){\r\n\t\t\t\t\tfailedValidators.push({\r\n\t\t\t\t\t\ttype:item.type,\r\n\t\t\t\t\t\tparameters:item.params\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(!cell.modules.validate){\r\n\t\t\tcell.modules.validate = {};\r\n\t\t}\r\n\t\t\r\n\t\tif(!failedValidators.length){\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t\t\t\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcell.modules.validate.invalid = failedValidators;\r\n\t\t\t\r\n\t\t\tif(this.table.options.validationMode !== \"manual\"){\r\n\t\t\t\tcell.getElement().classList.add(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(invalidIndex == -1){\r\n\t\t\t\tthis.invalidCells.push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn failedValidators.length ? failedValidators : true;\r\n\t}\r\n\t\r\n\tgetInvalidCells(){\r\n\t\tvar output = [];\r\n\t\t\r\n\t\tthis.invalidCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tclearValidation(cell){\r\n\t\tvar invalidIndex;\r\n\t\t\r\n\t\tif(cell.modules.validate && cell.modules.validate.invalid){\r\n\t\t\t\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\t\r\n\t\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\t\t\t\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nValidate.moduleName = \"validate\";\r\n\r\n//load defaults\r\nValidate.validators = defaultValidators;\r\n\r\nexport default Validate;","export default {\r\n\r\n\tdebugEventsExternal:false, //flag to console log events\r\n\tdebugEventsInternal:false, //flag to console log events\r\n\tdebugInvalidOptions:true, //allow toggling of invalid option warnings\r\n\tdebugInitialization:true, //allow toggling of invalid option warnings\r\n\r\n\theight:false, //height of tabulator\r\n\tminHeight:false, //minimum height of tabulator\r\n\tmaxHeight:false, //maximum height of tabulator\r\n\r\n\tcolumnHeaderVertAlign:\"top\", //vertical alignment of column headers\r\n\r\n\tpopupContainer:false,\r\n\r\n\tcolumns:[],//store for colum header info\r\n\tcolumnDefaults:{}, //store column default props\r\n\r\n\tdata:false, //default starting data\r\n\r\n\tautoColumns:false, //build columns from data row structure\r\n\tautoColumnsDefinitions:false,\r\n\r\n\tnestedFieldSeparator:\".\", //separator for nested data\r\n\r\n\tfooterElement:false, //hold footer element\r\n\r\n\tindex:\"id\", //filed for row index\r\n\r\n\ttextDirection:\"auto\",\r\n\r\n\taddRowPos:\"bottom\", //position to insert blank rows, top|bottom\r\n\r\n\theaderVisible:true, //hide header\r\n\r\n\trenderVertical:\"virtual\",\r\n\trenderHorizontal:\"basic\",\r\n\trenderVerticalBuffer:0, // set virtual DOM buffer size\r\n\r\n\tscrollToRowPosition:\"top\",\r\n\tscrollToRowIfVisible:true,\r\n\r\n\tscrollToColumnPosition:\"left\",\r\n\tscrollToColumnIfVisible:true,\r\n\r\n\trowFormatter:false,\r\n\trowFormatterPrint:null,\r\n\trowFormatterClipboard:null,\r\n\trowFormatterHtmlOutput:null,\r\n\r\n\trowHeight:null,\r\n\r\n\tplaceholder:false,\r\n\r\n\tdataLoader:true,\r\n\tdataLoaderLoading:false,\r\n\tdataLoaderError:false,\r\n\tdataLoaderErrorTimeout:3000,\r\n\r\n\tdataSendParams:{},\r\n\r\n\tdataReceiveParams:{},\r\n}\r\n","export default class OptionsList {\r\n\tconstructor(table, msgType, defaults = {}){\r\n\t\tthis.table = table;\r\n\t\tthis.msgType = msgType;\r\n\t\tthis.registeredDefaults = Object.assign({}, defaults)\r\n\t}\r\n\r\n\tregister(option, value){\r\n\t\tthis.registeredDefaults[option] = value;\r\n\t}\r\n\r\n\tgenerate(defaultOptions, userOptions = {}){\r\n\t\tvar output = Object.assign({}, this.registeredDefaults);\r\n\r\n\t\tObject.assign(output, defaultOptions);\r\n\r\n\t\tif(userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions){\r\n\t\t\tfor (var key in userOptions){\r\n\t\t\t\tif(!output.hasOwnProperty(key)){\r\n\t\t\t\t\tconsole.warn(\"Invalid \" + this.msgType + \" option:\", key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in output){\r\n\t\t\tif(key in userOptions){\r\n\t\t\t\toutput[key] = userOptions[key];\r\n\t\t\t}else{\r\n\t\t\t\tif(Array.isArray(output[key])){\r\n\t\t\t\t\toutput[key] = Object.assign([], output[key]);\r\n\t\t\t\t}else if(typeof output[key] === \"object\" && output[key] !== null){\r\n\t\t\t\t\toutput[key] = Object.assign({}, output[key]);\r\n\t\t\t\t}else if (typeof output[key] === \"undefined\"){\r\n\t\t\t\t\tdelete output[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Renderer extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.elementVertical = table.rowManager.element;\r\n\t\tthis.elementHorizontal = table.columnManager.element;\r\n\t\tthis.tableElement =  table.rowManager.tableElement;\r\n\r\n\t\tthis.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t/////// Internal Bindings /////////\r\n\t///////////////////////////////////\r\n\r\n\tinitialize(){\r\n\t\t//initialize core functionality\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\t//clear down existing rows layout\r\n\t}\r\n\r\n\tclearColumns(){\r\n\t\t//clear down existing columns layout\r\n\t}\r\n\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\t//resize columns to fit data\r\n\t}\r\n\r\n\r\n\trenderRows(){\r\n\t\t//render rows from a clean slate\r\n\t}\r\n\r\n\trenderColumns(){\r\n\t\t//render columns from a clean slate\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\t// rerender rows and keep position\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\trerenderColumns(update, blockRedraw){\r\n\t\t//rerender columns\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\t//render the cells in a row\r\n\t}\r\n\r\n\trerenderRowCells(row, force){\r\n\t\t//rerender the cells in a row\r\n\t}\r\n\r\n\tscrollColumns(left, dir){\r\n\t\t//handle horizontal scrolling\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\t//handle vertical scolling\r\n\t}\r\n\r\n\tresize(){\r\n\t\t//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\t//scroll to a specific row\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\t//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\t//return the visible rows\r\n\t\treturn [];\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Helper Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\trows(){\r\n\t\treturn this.table.rowManager.getDisplayRows();\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/////// External Triggers /////////\r\n\t/////// (DO NOT OVERRIDE) /////////\r\n\t///////////////////////////////////\r\n\r\n\tclear(){\r\n\t\t//clear down existing layout\r\n\t\tthis.clearRows();\r\n\t\tthis.clearColumns();\r\n\t}\r\n\r\n\trender(){\r\n\t\t//render from a clean slate\r\n\t\tthis.renderRows();\r\n\t\tthis.renderColumns();\r\n\t}\r\n\r\n\trerender(callback){\r\n\t\t// rerender and keep position\r\n\t\tthis.rerenderRows();\r\n\t\tthis.rerenderColumns();\r\n\t}\r\n\r\n\tscrollToRowPosition(row, position, ifVisible){\r\n\t\tvar rowIndex = this.rows().indexOf(row),\r\n\t\trowEl = row.getElement(),\r\n\t\toffset = 0;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(rowIndex > -1){\r\n\r\n\t\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\t\tifVisible = this.table.options.scrollToRowIfVisible;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check row visibility\r\n\t\t\t\tif(!ifVisible){\r\n\t\t\t\t\tif(Helpers.elVisible(rowEl)){\r\n\t\t\t\t\t\toffset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight){\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\t\tposition = this.table.options.scrollToRowPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(position === \"nearest\"){\r\n\t\t\t\t\tposition = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scroll to row\r\n\t\t\t\tthis.scrollToRow(row);\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - ((this.elementVertical.scrollHeight - rowEl.offsetTop) / 2);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.clientHeight / 2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bottom\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Row not visible\");\r\n\t\t\t\treject(\"Scroll Error - Row not visible\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\trow.cells.forEach((cell) => {\r\n\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\tcell.cellRendered();\r\n\t\t});\r\n\t}\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.leftCol = 0;\r\n\t\tthis.rightCol = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\t\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t\t\r\n\t\tthis.fitDataColAvg = 0;\r\n\t\t\r\n\t\tthis.windowBuffer = 200; //pixel margin to make column visible before it is shown on screen\r\n\t\t\r\n\t\tthis.visibleRows = null;\r\n\r\n\t\tthis.initialized = false;\r\n\t\tthis.isFitData = false;\r\n\t\t\r\n\t\tthis.columns = [];\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.compatibilityCheck();\r\n\t\tthis.layoutCheck();\r\n\t\tthis.vertScrollListen();\r\n\t}\r\n\t\r\n\tcompatibilityCheck(){\r\n\t\tvar columns = this.options(\"columns\"),\r\n\t\tfrozen = false,\r\n\t\tok = true;\r\n\t\t\r\n\t\tif(this.options(\"layout\") == \"fitDataTable\"){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"responsiveLayout\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"rtl\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(columns){\r\n\t\t\tfrozen = columns.find((col) => {\r\n\t\t\t\treturn col.frozen;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(frozen){\r\n\t\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\r\n\t\t\t\tok = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if(!ok){\r\n\t\t// \toptions.virtualDomHoz = false;\r\n\t\t// }\r\n\t\t\r\n\t\treturn ok;\r\n\t}\r\n\t\r\n\tlayoutCheck(){\r\n\t\tthis.isFitData = this.options(\"layout\").startsWith('fitData');\r\n\t}\r\n\r\n\tvertScrollListen(){\r\n\t\tthis.subscribe(\"scroll-vertical\", this.clearVisRowCache.bind(this));\r\n\t\tthis.subscribe(\"data-refreshed\", this.clearVisRowCache.bind(this));\r\n\t}\r\n\r\n\tclearVisRowCache(){\r\n\t\tthis.visibleRows = null;\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\t\r\n\trenderColumns(row, force){\r\n\t\tthis.dataChange();\r\n\t}\r\n\r\n\t\r\n\tscrollColumns(left, dir){\r\n\t\tif(this.scrollLeft != left){\r\n\t\t\tthis.scrollLeft = left;\r\n\t\t\t\r\n\t\t\tthis.scroll(left - (this.vDomScrollPosLeft + this.windowBuffer));\r\n\t\t}\r\n\t}\r\n\t\r\n\tcalcWindowBuffer(){\r\n\t\tvar buffer = this.elementVertical.clientWidth;\r\n\t\t\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvar width = column.getWidth();\r\n\t\t\t\t\r\n\t\t\t\tif(width > buffer){\r\n\t\t\t\t\tbuffer = width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.windowBuffer = buffer * 2;\r\n\t}\r\n\t\r\n\trerenderColumns(update, blockRedraw){\t\t\r\n\t\tvar old = {\r\n\t\t\tcols:this.columns,\r\n\t\t\tleftCol:this.leftCol,\r\n\t\t\trightCol:this.rightCol,\r\n\t\t},\r\n\t\tcolPos = 0;\r\n\t\t\r\n\t\t\r\n\t\tif(update && !this.initialized){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tthis.calcWindowBuffer();\r\n\t\t\r\n\t\tthis.scrollLeft = this.elementVertical.scrollLeft;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = this.scrollLeft - this.windowBuffer;\r\n\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer;\r\n\t\t\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tvar config = {};\r\n\t\t\t\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvar width = column.getWidth();\r\n\t\t\t\t\r\n\t\t\t\tconfig.leftPos = colPos;\r\n\t\t\t\tconfig.rightPos = colPos + width;\r\n\t\t\t\t\r\n\t\t\t\tconfig.width = width;\r\n\t\t\t\t\r\n\t\t\t\tif (this.isFitData) {\r\n\t\t\t\t\tconfig.fitDataCheck = column.modules.vdomHoz ? column.modules.vdomHoz.fitDataCheck : true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif((colPos + width > this.vDomScrollPosLeft) && (colPos < this.vDomScrollPosRight)){\r\n\t\t\t\t\t//column is visible\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.leftCol == -1){\r\n\t\t\t\t\t\tthis.leftCol = this.columns.length;\r\n\t\t\t\t\t\tthis.vDomPadLeft = colPos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.rightCol = this.columns.length;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// column is hidden\r\n\t\t\t\t\tif(this.leftCol !== -1){\r\n\t\t\t\t\t\tthis.vDomPadRight += width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\t\r\n\t\t\t\tcolumn.modules.vdomHoz = config;\r\n\t\t\t\t\r\n\t\t\t\tcolPos += width;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tif(!update || this.reinitChanged(old)){\r\n\t\t\t\tthis.reinitializeRows();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.elementVertical.scrollLeft = this.scrollLeft;\r\n\t}\r\n\t\r\n\trenderRowCells(row){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.initializeRow(row);\r\n\t\t}else{\r\n\t\t\trow.cells.forEach((cell) => {\r\n\t\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\t\tcell.cellRendered();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderRowCells(row, force){\r\n\t\tthis.reinitializeRow(row, force);\r\n\t}\r\n\t\r\n\treinitializeColumnWidths(columns){\r\n\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\tthis.columns[i].reinitializeWidth();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\t\r\n\tdeinitialize(){\r\n\t\tthis.initialized = false;\r\n\t}\r\n\t\r\n\tclear(){\r\n\t\tthis.columns = [];\r\n\t\t\r\n\t\tthis.leftCol = -1;\r\n\t\tthis.rightCol = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t}\r\n\t\r\n\tdataChange(){\r\n\t\tvar change = false,\r\n\t\tcollsWidth = 0,\r\n\t\tcolEnd = 0,\r\n\t\tgroup, row, rowEl;\r\n\t\t\r\n\t\tif(this.isFitData){\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\t\tif(!column.definition.width && column.visible){\r\n\t\t\t\t\tchange = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(change){\r\n\t\t\t\tif(change && this.table.rowManager.getDisplayRows().length){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.windowBuffer;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar row = this.chain(\"rows-sample\", [1], [], () => {\r\n\t\t\t\t\t\treturn this.table.rowManager.getDisplayRows();\r\n\t\t\t\t\t})[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl = row.getElement();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.generateCells();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.tableElement.appendChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(var colEnd = 0; colEnd < row.cells.length; colEnd++){\r\n\t\t\t\t\t\t\tlet cell = row.cells[colEnd];\r\n\t\t\t\t\t\t\trowEl.appendChild(cell.getElement());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcell.column.reinitializeWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcollsWidth += cell.column.getWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// if(collsWidth > this.vDomScrollPosRight){\r\n\t\t\t\t\t\t\t// \tbreak;\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// this.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// for(colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++){\r\n\t\t\t\t\t\t// \tthis.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.options(\"layout\") === \"fitColumns\"){\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitChanged(old){\r\n\t\tvar match = true;\r\n\t\t\r\n\t\tif(old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\told.cols.forEach((col, i) => {\r\n\t\t\tif(col !== this.columns[i]){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn !match;\r\n\t}\r\n\t\r\n\treinitializeRows(){\r\n\t\tvar rows = this.getVisibleRows();\r\n\t\trows.forEach((row) => {\r\n\t\t\tthis.reinitializeRow(row, true);\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetVisibleRows(){\r\n\t\tif (!this.visibleRows){\r\n\t\t\tthis.visibleRows = this.table.rowManager.getVisibleRows();\r\n\t\t}\r\n\r\n\t\treturn this.visibleRows;\t\r\n\t}\r\n\t\r\n\tscroll(diff){\r\n\t\tthis.vDomScrollPosLeft += diff;\r\n\t\tthis.vDomScrollPosRight += diff;\r\n\r\n\t\tif(Math.abs(diff) > (this.windowBuffer / 2)){\r\n\t\t\tthis.rerenderColumns();\r\n\t\t}else{\r\n\t\t\tif(diff > 0){\r\n\t\t\t\t//scroll right\r\n\t\t\t\tthis.addColRight();\r\n\t\t\t\tthis.removeColLeft();\r\n\t\t\t}else{\r\n\t\t\t\t//scroll left\r\n\t\t\t\tthis.addColLeft();\r\n\t\t\t\tthis.removeColRight();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcolPositionAdjust (start, end, diff){\r\n\t\tfor(let i = start; i < end; i++){\r\n\t\t\tlet column = this.columns[i];\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.leftPos += diff;\r\n\t\t\tcolumn.modules.vdomHoz.rightPos += diff;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColRight(){\r\n\t\tvar changes = false;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\t\r\n\t\t\tlet column = this.columns[this.rightCol + 1];\r\n\t\t\t\r\n\t\t\tif(column){\r\n\t\t\t\tif(column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight){\r\n\t\t\t\t\tchanges = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.getVisibleRows().forEach((row) => {\r\n\t\t\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.rightCol++; // Don't move this below the >= check below\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.rightCol >= (this.columns.length - 1)){\r\n\t\t\t\t\t\tthis.vDomPadRight = 0;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomPadRight -= column.getWidth();\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(changes){\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColLeft(){\r\n\t\tvar changes = false;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tlet column = this.columns[this.leftCol - 1];\r\n\t\t\t\r\n\t\t\tif(column){\r\n\t\t\t\tif(column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft){\r\n\t\t\t\t\tchanges = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.getVisibleRows().forEach((row) => {\r\n\t\t\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\t\t\trow.getElement().prepend(cell.getElement());\r\n\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.leftCol--; // don't move this below the <= check below\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.leftCol <= 0){ // replicating logic in addColRight\r\n\t\t\t\t\t\tthis.vDomPadLeft = 0;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomPadLeft -= column.getWidth();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet diff = this.fitDataColActualWidthCheck(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(diff){\r\n\t\t\t\t\t\tthis.scrollLeft = this.elementVertical.scrollLeft = this.elementVertical.scrollLeft + diff;\r\n\t\t\t\t\t\tthis.vDomPadRight -= diff;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(changes){\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColRight(){\r\n\t\tvar changes = false;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tlet column = this.columns[this.rightCol];\r\n\t\t\t\r\n\t\t\tif(column){\r\n\t\t\t\tif(column.modules.vdomHoz.leftPos > this.vDomScrollPosRight){\r\n\t\t\t\t\tchanges = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.getVisibleRows().forEach((row) => {\r\n\t\t\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\trow.getElement().removeChild(cell.getElement());\r\n\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Could not removeColRight\", ex.message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomPadRight += column.getWidth();\r\n\t\t\t\t\tthis.rightCol --;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(changes){\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColLeft(){\r\n\t\tvar changes = false;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tlet column = this.columns[this.leftCol];\r\n\t\t\t\r\n\t\t\tif(column){\r\n\t\t\t\tif(column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft){\r\n\t\t\t\t\tchanges = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.getVisibleRows().forEach((row) => {\t\t\t\t\t\r\n\t\t\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\trow.getElement().removeChild(cell.getElement());\r\n\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Could not removeColLeft\", ex.message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomPadLeft += column.getWidth();\r\n\t\t\t\t\tthis.leftCol ++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(changes){\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tfitDataColActualWidthCheck(column){\r\n\t\tvar newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column.modules.vdomHoz.fitDataCheck){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t\r\n\t\t\tnewWidth = column.getWidth();\r\n\t\t\twidthDiff = newWidth - column.modules.vdomHoz.width;\r\n\t\t\t\r\n\t\t\tif(widthDiff){\r\n\t\t\t\tcolumn.modules.vdomHoz.rightPos += widthDiff;\r\n\t\t\t\tcolumn.modules.vdomHoz.width = newWidth;\r\n\t\t\t\tthis.colPositionAdjust(this.columns.indexOf(column) + 1, this.columns.length, widthDiff);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.fitDataCheck = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn widthDiff;\r\n\t}\r\n\t\r\n\tinitializeRow(row){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\trow.modules.vdomHoz = {\r\n\t\t\t\tleftCol:this.leftCol,\r\n\t\t\t\trightCol:this.rightCol,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\t\tlet column = this.columns[i];\r\n\t\t\t\t\r\n\t\t\t\tif(column && column.visible){\r\n\t\t\t\t\tlet cell = row.getCell(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeRow(row, force){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\tif(force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol){\r\n\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\twhile(rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\r\n\t\t\t\t\r\n\t\t\t\tthis.initializeRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Column from './column/Column.js';\r\nimport ColumnComponent from './column/ColumnComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nimport RendererBasicHorizontal from './rendering/renderers/BasicHorizontal.js';\r\nimport RendererVirtualDomHorizontal from './rendering/renderers/VirtualDomHorizontal.js';\r\n\r\nimport defaultColumnOptions from './column/defaults/options.js';\r\n\r\nexport default class ColumnManager extends CoreFeature {\r\n\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.blockHozScrollEvent = false;\r\n\t\tthis.headersElement = null;\r\n\t\tthis.element = null ; //containing element\r\n\t\tthis.columns = []; // column definition object\r\n\t\tthis.columnsByIndex = []; //columns by index\r\n\t\tthis.columnsByField = {}; //columns by field\r\n\t\tthis.scrollLeft = 0;\r\n\t\tthis.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t////////////// Setup Functions /////////////////\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\tthis.headersElement = this.createHeadersElement();\r\n\t\tthis.element = this.createHeaderElement();\r\n\r\n\t\tthis.element.insertBefore(this.headersElement, this.element.firstChild);\r\n\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomHorizontal,\r\n\t\t\t\"basic\": RendererBasicHorizontal,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderHorizontal === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderHorizontal];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderHorizontal;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcreateHeadersElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-headers\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateHeaderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-header\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tif(!this.table.options.headerVisible){\r\n\t\t\tel.classList.add(\"tabulator-header-hidden\");\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return header containing element\r\n\tgetHeadersElement(){\r\n\t\treturn this.headersElement;\r\n\t}\r\n\r\n\t//scroll horizontally to match table body\r\n\tscrollHorizontal(left){\r\n\t\tvar hozAdjust = 0,\r\n\t\tscrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\r\n\r\n\t\t// this.tempScrollBlock();\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\t//adjust for vertical scrollbar moving table when present\r\n\t\tif(left > scrollWidth){\r\n\t\t\thozAdjust = left - scrollWidth;\r\n\t\t\tthis.element.style.marginLeft = (-(hozAdjust)) + \"px\";\r\n\t\t}else{\r\n\t\t\tthis.element.style.marginLeft = 0;\r\n\t\t}\r\n\r\n\t\tthis.scrollLeft = left;\r\n\r\n\t\tthis.renderer.scrollColumns(left);\r\n\t}\r\n\r\n\t///////////// Column Setup Functions /////////////\r\n\tgenerateColumnsFromRowData(data){\r\n\t\tvar cols = [],\r\n\t\tdefinitions = this.table.options.autoColumnsDefinitions,\r\n\t\trow, sorter;\r\n\r\n\t\tif(data && data.length){\r\n\r\n\t\t\trow = data[0];\r\n\r\n\t\t\tfor(var key in row){\r\n\t\t\t\tlet col = {\r\n\t\t\t\t\tfield:key,\r\n\t\t\t\t\ttitle:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet value = row[key];\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(value)){\r\n\t\t\t\t\t\tsorter = \"array\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcol.sorter = sorter;\r\n\r\n\t\t\t\tcols.push(col);\r\n\t\t\t}\r\n\r\n\t\t\tif(definitions){\r\n\r\n\t\t\t\tswitch(typeof definitions){\r\n\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\tthis.table.options.columns = definitions.call(this.table, cols);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(definitions)){\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tvar match = definitions.find((def) => {\r\n\t\t\t\t\t\t\t\treturn def.field === col.field;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\tObject.assign(col, match);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tif(definitions[col.field]){\r\n\t\t\t\t\t\t\t\tObject.assign(col, definitions[col.field]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setColumns(this.table.options.columns);\r\n\t\t}\r\n\t}\r\n\r\n\tsetColumns(cols, row){\r\n\t\twhile(this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.columnsByIndex = [];\r\n\t\tthis.columnsByField = {};\r\n\r\n\t\tthis.dispatch(\"columns-loading\");\r\n\r\n\t\tcols.forEach((def, i) => {\r\n\t\t\tthis._addColumn(def);\r\n\t\t});\r\n\r\n\t\tthis._reIndexColumns();\r\n\r\n\t\tthis.dispatch(\"columns-loaded\");\r\n\r\n\t\tthis.renderer.rerenderColumns(false, true);\r\n\r\n\t\tthis.redraw(true);\r\n\t}\r\n\r\n\t_addColumn(definition, before, nextToColumn){\r\n\t\tvar column = new Column(definition, this),\r\n\t\tcolEl = column.getElement(),\r\n\t\tindex = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\r\n\r\n\t\tif(nextToColumn && index > -1){\r\n\t\t\tvar topColumn = nextToColumn.getTopColumn()\r\n\t\t\tvar parentIndex = this.columns.indexOf(topColumn);\r\n\t\t\tvar nextEl = topColumn.getElement();\r\n\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.splice(parentIndex, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.splice(parentIndex + 1, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.unshift(column);\r\n\t\t\t\tthis.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\tthis.headersElement.appendChild(column.getElement());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolumn.columnRendered();\r\n\r\n\t\treturn column;\r\n\t}\r\n\r\n\tregisterColumnField(col){\r\n\t\tif(col.definition.field){\r\n\t\t\tthis.columnsByField[col.definition.field] = col;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterColumnPosition(col){\r\n\t\tthis.columnsByIndex.push(col);\r\n\t}\r\n\r\n\t_reIndexColumns(){\r\n\t\tthis.columnsByIndex = [];\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.reRegisterPosition();\r\n\t\t});\r\n\t}\r\n\r\n\t//ensure column headers take up the correct amount of space in column groups\r\n\tverticalAlignHeaders(){\r\n\t\tvar minHeight = 0;\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tvar height;\r\n\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\r\n\t\t\theight = column.getHeight();\r\n\r\n\t\t\tif(height > minHeight){\r\n\t\t\t\tminHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tcolumn.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\t//////////////// Column Details /////////////////\r\n\tfindColumn(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Column){\r\n\t\t\t\t//subject is column element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof ColumnComponent){\r\n\t\t\t\t//subject is public column component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the column header\r\n\t\t\t\tlet match = this.columns.find((column) => {\r\n\t\t\t\t\treturn column.element === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the field name of the column\r\n\t\t\treturn this.columnsByField[subject] || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetColumnByField(field){\r\n\t\treturn this.columnsByField[field];\r\n\t}\r\n\r\n\tgetColumnsByFieldRoot(root){\r\n\t\tvar matches = [];\r\n\r\n\t\tObject.keys(this.columnsByField).forEach((field) => {\r\n\t\t\tvar fieldRoot = field.split(\".\")[0];\r\n\t\t\tif(fieldRoot === root){\r\n\t\t\t\tmatches.push(this.columnsByField[field]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn matches;\r\n\t}\r\n\r\n\tgetColumnByIndex(index){\r\n\t\treturn this.columnsByIndex[index];\r\n\t}\r\n\r\n\tgetFirstVisibleColumn(index){\r\n\t\tvar index = this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn col.visible;\r\n\t\t});\r\n\r\n\t\treturn index > -1 ? this.columnsByIndex[index] : false;\r\n\t}\r\n\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\tfindColumnIndex(column){\r\n\t\treturn this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn column === col;\r\n\t\t});\r\n\t}\r\n\r\n\t//return all columns that are not groups\r\n\tgetRealColumns(){\r\n\t\treturn this.columnsByIndex;\r\n\t}\r\n\r\n\t//travers across columns and call action\r\n\ttraverse(callback){\r\n\t\tthis.columnsByIndex.forEach((column,i) =>{\r\n\t\t\tcallback(column, i);\r\n\t\t});\r\n\t}\r\n\r\n\t//get defintions of actual columns\r\n\tgetDefinitions(active){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(!active || (active && column.visible)){\r\n\t\t\t\toutput.push(column.getDefinition());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get full nested definition tree\r\n\tgetDefinitionTree(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\toutput.push(column.getDefinition(true));\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(structured){\r\n\t\tvar output = [],\r\n\t\tcolumns = structured ? this.columns : this.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\toutput.push(column.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(column.visible){\r\n\t\t\t\twidth += column.getWidth();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tthis.moveColumnActual(from, to, after);\r\n\r\n\t\tto.element.parentNode.insertBefore(from.element, to.element);\r\n\r\n\t\tif(after){\r\n\t\t\tto.element.parentNode.insertBefore(to.element, from.element);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.table.rowManager.reinitialize();\r\n\t}\r\n\r\n\tmoveColumnActual(from, to, after){\r\n\t\tif(from.parent.isGroup){\r\n\t\t\tthis._moveColumnInArray(from.parent.columns, from, to, after);\r\n\t\t}else{\r\n\t\t\tthis._moveColumnInArray(this.columns, from, to, after);\r\n\t\t}\r\n\r\n\t\tthis._moveColumnInArray(this.columnsByIndex, from, to, after, true);\r\n\r\n\t\tthis.renderer.rerenderColumns(true);\r\n\r\n\t\tthis.dispatch(\"column-moved\", from, to, after);\r\n\r\n\t\tif(this.subscribedExternal(\"columnMoved\")){\r\n\t\t\tthis.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\r\n\t\t}\r\n\t}\r\n\r\n\t_moveColumnInArray(columns, from, to, after, updateRows){\r\n\t\tvar\tfromIndex = columns.indexOf(from),\r\n\t\ttoIndex, rows = [];\r\n\r\n\t\tif (fromIndex > -1) {\r\n\r\n\t\t\tcolumns.splice(fromIndex, 1);\r\n\r\n\t\t\ttoIndex = columns.indexOf(to);\r\n\r\n\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\tif(after){\r\n\t\t\t\t\ttoIndex = toIndex+1;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\ttoIndex = fromIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcolumns.splice(toIndex, 0, from);\r\n\r\n\t\t\tif(updateRows){\r\n\r\n\t\t\t\trows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\r\n\r\n\t\t\t\trows = rows.concat(this.table.rowManager.rows);\r\n\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tif(row.cells.length){\r\n\t\t\t\t\t\tvar cell = row.cells.splice(fromIndex, 1)[0];\r\n\t\t\t\t\t\trow.cells.splice(toIndex, 0, cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToColumn(column, position, ifVisible){\r\n\t\tvar left = 0,\r\n\t\toffset = 0,\r\n\t\tadjust = 0,\r\n\t\tcolEl = column.getElement();\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\tposition = this.table.options.scrollToColumnPosition;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\tifVisible = this.table.options.scrollToColumnIfVisible;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\tadjust = -this.element.clientWidth / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\tadjust = colEl.clientWidth - this.headersElement.clientWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check column visibility\r\n\t\t\t\tif(!ifVisible){\r\n\r\n\t\t\t\t\toffset = colEl.offsetLeft;\r\n\r\n\t\t\t\t\tif(offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//calculate scroll position\r\n\t\t\t\tleft = colEl.offsetLeft + adjust;\r\n\r\n\t\t\t\tleft = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth),0);\r\n\r\n\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\t\tresolve();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Column not visible\");\r\n\t\t\t\treject(\"Scroll Error - Column not visible\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tgenerateCells(row){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tcells.push(column.generateCell(row));\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\t//////////////// Column Management /////////////////\r\n\tgetFlexBaseWidth(){\r\n\t\tvar totalWidth = this.table.element.clientWidth, //table element width\r\n\t\tfixedWidth = 0;\r\n\r\n\t\t//adjust for vertical scrollbar if present\r\n\t\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t\t}\r\n\r\n\t\tthis.columnsByIndex.forEach(function(column){\r\n\t\t\tvar width, minWidth, colWidth;\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\twidth = column.definition.width || 0;\r\n\r\n\t\t\t\tminWidth = parseInt(column.minWidth);\r\n\r\n\t\t\t\tif(typeof(width) == \"string\"){\r\n\t\t\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width) ;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolWidth = width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fixedWidth;\r\n\t}\r\n\r\n\taddColumn(definition, before, nextToColumn){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this._addColumn(definition, before, nextToColumn);\r\n\r\n\t\t\tthis._reIndexColumns();\r\n\r\n\t\t\tthis.dispatch(\"column-add\", definition, before, nextToColumn);\r\n\r\n\t\t\tif(this.layoutMode() != \"fitColumns\"){\r\n\t\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.redraw(true);\r\n\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\r\n\t\t\tthis.renderer.rerenderColumns();\r\n\r\n\t\t\tresolve(column);\r\n\t\t});\r\n\t}\r\n\r\n\t//remove column from system\r\n\tderegisterColumn(column){\r\n\t\tvar field = column.getField(),\r\n\t\tindex;\r\n\r\n\t\t//remove from field list\r\n\t\tif(field){\r\n\t\t\tdelete this.columnsByField[field];\r\n\t\t}\r\n\r\n\t\t//remove from index list\r\n\t\tindex = this.columnsByIndex.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columnsByIndex.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t//remove from column list\r\n\t\tindex = this.columns.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t//redraw columns\r\n\tredraw(force){\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.verticalAlignHeaders();\r\n\t\t}\r\n\r\n\t\tif(force){\r\n\t\t\tthis.table.rowManager.resetScroll();\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\t\t}\r\n\r\n\t\tif(!this.confirm(\"table-redrawing\", force)){\r\n\t\t\tthis.layoutRefresh();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-redraw\", force);\r\n\r\n\t\tthis.table.footerManager.redraw();\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.scrollTop = 0;\r\n\t\telement.scrollLeft = 0;\r\n\r\n\t\telement.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tvar element = this.tableElement,\r\n\t\tonlyGroupHeaders = true;\r\n\r\n\t\tthis.rows().forEach((row, index) => {\r\n\t\t\tthis.styleRow(row, index);\r\n\t\t\telement.appendChild(row.getElement());\r\n\t\t\trow.initialize(true);\r\n\r\n\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\tonlyGroupHeaders = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(onlyGroupHeaders){\r\n\t\t\telement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}else{\r\n\t\t\telement.style.minWidth = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trerenderRows(callback){\r\n\t\tthis.clearRows();\r\n\t\tthis.renderRows();\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowTop = Helpers.elOffset(row.getElement()).top;\r\n\r\n\t\treturn !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tthis.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\treturn this.rows();\r\n\t}\r\n\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomRowHeight = 20; //approximation of row heights for padding\r\n\r\n\t\tthis.vDomTop = 0; //hold position for first rendered row in the virtual DOM\r\n\t\tthis.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\r\n\r\n\t\tthis.vDomScrollPosTop = 0; //last scroll position of the vDom top;\r\n\t\tthis.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\r\n\r\n\t\tthis.vDomTopPad = 0; //hold value of padding for top of virtual DOM\r\n\t\tthis.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\r\n\r\n\t\tthis.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\r\n\r\n\t\tthis.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\r\n\r\n\t\tthis.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\r\n\t\tthis.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\r\n\r\n\t\tthis.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t\tthis.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.style.paddingTop = \"\";\r\n\t\telement.style.paddingBottom = \"\";\r\n\t\t// element.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\r\n\t\tthis.elementVertical.scrollTop = 0;\r\n\t\tthis.elementVertical.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomTop = 0;\r\n\t\tthis.vDomBottom = 0;\r\n\t\tthis.vDomTopPad = 0;\r\n\t\tthis.vDomBottomPad = 0;\r\n\t\tthis.vDomScrollPosTop = 0;\r\n\t\tthis.vDomScrollPosBottom = 0;\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tthis._virtualRenderFill();\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\tvar scrollTop = this.elementVertical.scrollTop;\r\n\t\tvar topRow = false;\r\n\t\tvar topOffset = false;\r\n\r\n\t\tvar left = this.table.rowManager.scrollLeft;\r\n\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\r\n\t\t\tif(rows[i]){\r\n\t\t\t\tvar diff = scrollTop - rows[i].getElement().offsetTop;\r\n\r\n\t\t\t\tif(topOffset === false || Math.abs(diff) < topOffset){\r\n\t\t\t\t\ttopOffset = diff;\r\n\t\t\t\t\ttopRow = i;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\trow.deinitializeHeight();\r\n\t\t});\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\r\n\t\tthis._virtualRenderFill((topRow === false ? this.rows.length - 1 : topRow), true, topOffset || 0);\r\n\r\n\t\tthis.scrollColumns(left);\r\n\t}\r\n\r\n\tscrollColumns(left){\r\n\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\tvar topDiff = top - this.vDomScrollPosTop;\r\n\t\tvar bottomDiff = top - this.vDomScrollPosBottom;\r\n\t\tvar margin = this.vDomWindowBuffer * 2;\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tthis.scrollTop = top;\r\n\r\n\t\tif(-topDiff > margin || bottomDiff > margin){\r\n\t\t\t//if big scroll redraw table;\r\n\t\t\tvar left = this.table.rowManager.scrollLeft;\r\n\t\t\tthis._virtualRenderFill(Math.floor((this.elementVertical.scrollTop / this.elementVertical.scrollHeight) * rows.length));\r\n\t\t\tthis.scrollColumns(left);\r\n\t\t}else{\r\n\r\n\t\t\tif(dir){\r\n\t\t\t\t//scrolling up\r\n\t\t\t\tif(topDiff < 0){\r\n\t\t\t\t\tthis._addTopRow(rows, -topDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(bottomDiff < 0){\r\n\t\t\t\t\t//hide bottom row if needed\r\n\t\t\t\t\tif(this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeBottomRow(rows, -bottomDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(bottomDiff >= 0){\r\n\t\t\t\t\tthis._addBottomRow(rows, bottomDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scrolling down\r\n\t\t\t\tif(topDiff >= 0){\r\n\t\t\t\t\t//hide top row if needed\r\n\t\t\t\t\tif(this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeTopRow(rows, topDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresize(){\r\n\t\tthis.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowIndex = this.rows().indexOf(row);\r\n\r\n\t\treturn !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar index = this.rows().indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis._virtualRenderFill(index, true);\r\n\t\t}\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\tvar topEdge = this.elementVertical.scrollTop,\r\n\t\tbottomEdge = this.elementVertical.clientHeight + topEdge,\r\n\t\ttopFound = false,\r\n\t\ttopRow = 0,\r\n\t\tbottomRow = 0,\r\n\t\trows = this.rows();\r\n\r\n\t\tif(includingBuffer){\r\n\t\t\ttopRow = this.vDomTop;\r\n\t\t\tbottomRow = this.vDomBottom;\r\n\t\t}else{\r\n\t\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\t\t\t\tif(rows[i]){\r\n\t\t\t\t\tif(!topFound){\r\n\t\t\t\t\t\tif((topEdge - rows[i].getElement().offsetTop) >= 0){\r\n\t\t\t\t\t\t\ttopRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttopFound = true;\r\n\r\n\t\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows.slice(topRow, bottomRow + 1);\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\r\n\t//full virtual render\r\n\t_virtualRenderFill(position, forceMove, offset){\r\n\t\tvar\telement = this.tableElement,\r\n\t\tholder = this.elementVertical,\r\n\t\ttopPad = 0,\r\n\t\trowsHeight = 0,\r\n\t\theightOccupied = 0,\r\n\t\ttopPadHeight = 0,\r\n\t\ti = 0,\r\n\t\trows = this.rows(),\r\n\t\trowsCount = rows.length,\r\n\t\tcontainerHeight = this.elementVertical.clientHeight;\r\n\r\n\t\tposition = position || 0;\r\n\r\n\t\toffset = offset || 0;\r\n\r\n\t\tif(!position){\r\n\t\t\tthis.clear();\r\n\t\t}else{\r\n\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t\t//check if position is too close to bottom of table\r\n\t\t\theightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\r\n\r\n\t\t\tif(heightOccupied < containerHeight){\r\n\t\t\t\tposition -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\r\n\t\t\t\tif(position < 0){\r\n\t\t\t\t\tposition = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//calculate initial pad\r\n\t\t\ttopPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight),  this.vDomWindowMinMarginRows), position);\r\n\t\t\tposition -= topPad;\r\n\t\t}\r\n\r\n\t\tif(rowsCount && Helpers.elVisible(this.elementVertical)){\r\n\t\t\tthis.vDomTop = position;\r\n\r\n\t\t\tthis.vDomBottom = position -1;\r\n\r\n\t\t\twhile ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount -1){\r\n\t\t\t\tvar index = this.vDomBottom + 1,\r\n\t\t\t\trow = rows[index],\r\n\t\t\t\trowHeight = 0;\r\n\r\n\t\t\t\tthis.styleRow(row, index);\r\n\r\n\t\t\t\telement.appendChild(row.getElement());\r\n\r\n\t\t\t\trow.initialize();\r\n\r\n\t\t\t\tif(!row.heightInitialized){\r\n\t\t\t\t\trow.normalizeHeight(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowHeight = row.getHeight();\r\n\r\n\t\t\t\tif(i < topPad){\r\n\t\t\t\t\ttopPadHeight += rowHeight;\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowsHeight += rowHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.vDomBottom ++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\tif(!position){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t\t//adjust rowheight to match average of rendered elements\r\n\t\t\t\tthis.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\r\n\t\t\t\tthis.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom -1);\r\n\r\n\t\t\t\tthis.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : (this.vDomRowHeight * this.vDomTop) + offset;\r\n\t\t\t\tthis.vDomBottomPad = this.vDomBottom == rowsCount-1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\r\n\t\t\t}\r\n\r\n\t\t\telement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\telement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\r\n\t\t\tif(forceMove){\r\n\t\t\t\tthis.scrollTop = this.vDomTopPad + (topPadHeight) + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\r\n\r\n\t\t\t//adjust for horizontal scrollbar if present (and not at top of table)\r\n\t\t\tif(this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove){\r\n\t\t\t\tthis.scrollTop += this.elementVertical.offsetHeight - containerHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\r\n\t\t\tholder.scrollTop = this.scrollTop;\r\n\r\n\t\t\tthis.dispatch(\"render-virtual-fill\");\r\n\t\t}\r\n\t}\r\n\r\n\t_addTopRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomTop -1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tif(this.vDomTop){\r\n\t\t\t\tlet row = rows[index],\r\n\t\t\t\trowHeight, initialized;\r\n\r\n\t\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\t\ttable.insertBefore(row.getElement(), table.firstChild);\r\n\r\n\t\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\t\tthis.vDomTop--;\r\n\t\t\t\t\t\tindex--;\r\n\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomTopPad < 0){\r\n\t\t\t\tthis.vDomTopPad = index * this.vDomRowHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(index < 1){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeTopRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomTop],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomTop++;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad += paddingAdjust;\r\n\t\t\tthis.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\r\n\t\t}\r\n\t}\r\n\r\n\t_addBottomRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomBottom + 1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[index],\r\n\t\t\trowHeight, initialized;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\ttable.appendChild(row.getElement());\r\n\r\n\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tthis.vDomBottom++;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0 || index == rows.length -1){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom += paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeBottomRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomBottom],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomBottom --;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad += paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_quickNormalizeRowHeight(rows){\r\n\t\tfor(let row of rows){\r\n\t\t\trow.calcHeight();\r\n\t\t}\r\n\r\n\t\tfor(let row of rows){\r\n\t\t\trow.setCellHeight();\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Row from './row/Row.js';\r\nimport RowComponent from './row/RowComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\n\r\nimport RendererBasicVertical from './rendering/renderers/BasicVertical.js';\r\nimport RendererVirtualDomVertical from './rendering/renderers/VirtualDomVertical.js';\r\n\r\nexport default class RowManager extends CoreFeature{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.element = this.createHolderElement(); //containing element\r\n\t\tthis.tableElement = this.createTableElement(); //table element\r\n\t\tthis.heightFixer = this.createTableElement(); //table element\r\n\t\tthis.placeholder = null; //placeholder element\r\n\t\tthis.placeholderContents = null; //placeholder element\r\n\t\t\r\n\t\tthis.firstRender = false; //handle first render\r\n\t\tthis.renderMode = \"virtual\"; //current rendering mode\r\n\t\tthis.fixedHeight = false; //current rendering mode\r\n\t\t\r\n\t\tthis.rows = []; //hold row data objects\r\n\t\tthis.activeRowsPipeline = []; //hold calculation of active rows\r\n\t\tthis.activeRows = []; //rows currently available to on display in the table\r\n\t\tthis.activeRowsCount = 0; //count of active rows\r\n\t\t\r\n\t\tthis.displayRows = []; //rows currently on display in the table\r\n\t\tthis.displayRowsCount = 0; //count of display rows\r\n\t\t\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.rowNumColumn = false; //hold column component for row number column\r\n\t\t\r\n\t\tthis.redrawBlock = false; //prevent redraws to allow multiple data manipulations before continuing\r\n\t\tthis.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\r\n\t\tthis.redrawBlockRenderInPosition = false; //store latest redraw function calls for when redraw is needed\r\n\t\t\r\n\t\tthis.dataPipeline = []; //hold data pipeline tasks\r\n\t\tthis.displayPipeline = []; //hold data display pipeline tasks\r\n\t\t\r\n\t\tthis.renderer = null;\r\n\t}\r\n\t\r\n\t//////////////// Setup Functions /////////////////\r\n\t\r\n\tcreateHolderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-tableholder\");\r\n\t\tel.setAttribute(\"tabindex\", 0);\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tcreateTableElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-table\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tinitializePlaceholder(){\r\n\t\t//configure placeholder element\r\n\t\tif(typeof this.table.options.placeholder == \"string\"){\r\n\t\t\tlet el = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-placeholder\");\r\n\t\t\t\r\n\t\t\tlet contents = document.createElement(\"div\");\r\n\t\t\tcontents.classList.add(\"tabulator-placeholder-contents\");\r\n\t\t\tcontents.innerHTML = this.table.options.placeholder;\r\n\t\t\t\r\n\t\t\tel.appendChild(contents);\r\n\t\t\t\r\n\t\t\tthis.placeholderContents = contents;\r\n\t\t\tthis.placeholder = el;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\t\r\n\t//return table element\r\n\tgetTableElement(){\r\n\t\treturn this.tableElement;\r\n\t}\r\n\t\r\n\t//return position of row in table\r\n\tgetRowPosition(row, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows.indexOf(row);\r\n\t\t}else{\r\n\t\t\treturn this.rows.indexOf(row);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.initializePlaceholder()\r\n\t\tthis.initializeRenderer();\r\n\t\t\r\n\t\t//initialize manager\r\n\t\tthis.element.appendChild(this.tableElement);\r\n\t\t\r\n\t\tthis.firstRender = true;\r\n\t\t\r\n\t\t//scroll header along with table body\r\n\t\tthis.element.addEventListener(\"scroll\", () => {\r\n\t\t\tvar left = this.element.scrollLeft,\r\n\t\t\tleftDir = this.scrollLeft > left,\r\n\t\t\ttop = this.element.scrollTop,\r\n\t\t\ttopDir = this.scrollTop > top;\r\n\t\t\t\r\n\t\t\t//handle horizontal scrolling\r\n\t\t\tif(this.scrollLeft != left){\r\n\t\t\t\tthis.scrollLeft = left;\r\n\t\t\t\t\r\n\t\t\t\tthis.dispatch(\"scroll-horizontal\", left, leftDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollHorizontal\", left, leftDir);\r\n\r\n\t\t\t\tthis._positionPlaceholder();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//handle vertical scrolling\r\n\t\t\tif(this.scrollTop != top){\r\n\t\t\t\tthis.scrollTop = top;\r\n\t\t\t\t\r\n\t\t\t\tthis.renderer.scrollRows(top, topDir);\r\n\t\t\t\t\r\n\t\t\t\tthis.dispatch(\"scroll-vertical\", top, topDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollVertical\", top, topDir);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t////////////////// Row Manipulation //////////////////\r\n\tfindRow(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the row\r\n\t\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\t\treturn row.getElement() === subject;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn match || false;\r\n\t\t}\r\n\t\t\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tgetRowFromDataObject(data){\r\n\t\tvar match = this.rows.find((row) => {\r\n\t\t\treturn row.data === data;\r\n\t\t});\r\n\t\t\r\n\t\treturn match || false;\r\n\t}\r\n\t\r\n\tgetRowFromPosition(position, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows[position];\r\n\t\t}else{\r\n\t\t\treturn this.rows[position];\r\n\t\t}\r\n\t}\r\n\t\r\n\tscrollToRow(row, position, ifVisible){\r\n\t\treturn this.renderer.scrollToRowPosition(row, position, ifVisible);\r\n\t}\r\n\t\r\n\t////////////////// Data Handling //////////////////\r\n\tsetData(data, renderInPosition, columnsChanged){\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\t\t\tif(renderInPosition && this.getDisplayRows().length){\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\tthis._setDataActual(data, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.reRenderInPosition(() => {\r\n\t\t\t\t\t\tthis._setDataActual(data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.autoColumns && columnsChanged && this.table.initialized){\r\n\t\t\t\t\tthis.table.columnManager.generateColumnsFromRowData(data);\r\n\t\t\t\t}\r\n\t\t\t\tthis.resetScroll();\r\n\t\t\t\t\r\n\t\t\t\tthis._setDataActual(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\t\r\n\t_setDataActual(data, renderInPosition){\r\n\t\tthis.dispatchExternal(\"dataProcessing\", data);\r\n\t\t\r\n\t\tthis._wipeElements();\r\n\t\t\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tthis.dispatch(\"data-processing\", data);\r\n\t\t\t\r\n\t\t\tdata.forEach((def, i) => {\r\n\t\t\t\tif(def && typeof def === \"object\"){\r\n\t\t\t\t\tvar row = new Row(def, this);\r\n\t\t\t\t\tthis.rows.push(row);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.refreshActiveData(false, false, renderInPosition);\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"data-processed\", data);\r\n\t\t\tthis.dispatchExternal(\"dataProcessed\", data);\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\r\n\t\t}\r\n\t}\r\n\t\r\n\t_wipeElements(){\r\n\t\tthis.dispatch(\"rows-wipe\");\r\n\t\t\r\n\t\tthis.rows.forEach((row) => {\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\t\t\r\n\t\tthis.rows = [];\r\n\t\tthis.activeRows = [];\r\n\t\tthis.activeRowsPipeline = [];\r\n\t\tthis.activeRowsCount = 0;\r\n\t\tthis.displayRows = [];\r\n\t\tthis.displayRowsCount = 0;\r\n\t\t\r\n\t\tthis.adjustTableSize();\r\n\t}\r\n\t\r\n\tdeleteRow(row, blockRedraw){\r\n\t\tvar allIndex = this.rows.indexOf(row),\r\n\t\tactiveIndex = this.activeRows.indexOf(row);\r\n\t\t\r\n\t\tif(activeIndex > -1){\r\n\t\t\tthis.activeRows.splice(activeIndex, 1);\r\n\t\t}\r\n\t\t\r\n\t\tif(allIndex > -1){\r\n\t\t\tthis.rows.splice(allIndex, 1);\r\n\t\t}\r\n\t\t\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\t\t\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tvar displayIndex = rows.indexOf(row);\r\n\t\t\t\r\n\t\t\tif(displayIndex > -1){\r\n\t\t\t\trows.splice(displayIndex, 1);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\t\t\r\n\t\tthis.regenerateRowNumbers();\r\n\t\t\r\n\t\tthis.dispatchExternal(\"rowDeleted\", row.getComponent());\r\n\t\t\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.getData());\r\n\t\t}\r\n\t}\r\n\t\r\n\taddRow(data, pos, index, blockRedraw){\r\n\t\tvar row = this.addRowActual(data, pos, index, blockRedraw);\r\n\t\treturn row;\r\n\t}\r\n\t\r\n\t//add multiple rows\r\n\taddRows(data, pos, index){\r\n\t\tvar length = 0,\r\n\t\trows = [];\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpos = this.findAddRowPos(pos);\r\n\t\t\t\r\n\t\t\tif(!Array.isArray(data)){\r\n\t\t\t\tdata = [data];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlength = data.length - 1;\r\n\t\t\t\r\n\t\t\tif((typeof index == \"undefined\" && pos) || (typeof index !== \"undefined\" && !pos)){\r\n\t\t\t\tdata.reverse();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tvar row = this.addRow(item, pos, index, true);\r\n\t\t\t\trows.push(row);\r\n\t\t\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.refreshActiveData(false, false, true);\r\n\t\t\t\r\n\t\t\tthis.regenerateRowNumbers();\r\n\t\t\t\r\n\t\t\tif(rows.length){\r\n\t\t\t\tthis._clearPlaceholder();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresolve(rows);\r\n\t\t});\r\n\t}\r\n\t\r\n\tfindAddRowPos(pos){\r\n\t\tif(typeof pos === \"undefined\"){\r\n\t\t\tpos = this.table.options.addRowPos;\r\n\t\t}\r\n\t\t\r\n\t\tif(pos === \"pos\"){\r\n\t\t\tpos = true;\r\n\t\t}\r\n\t\t\r\n\t\tif(pos === \"bottom\"){\r\n\t\t\tpos = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn pos;\r\n\t}\r\n\t\r\n\taddRowActual(data, pos, index, blockRedraw){\r\n\t\tvar row = data instanceof Row ? data : new Row(data || {}, this),\r\n\t\ttop = this.findAddRowPos(pos),\r\n\t\tallIndex = -1,\r\n\t\tactiveIndex, chainResult;\r\n\t\t\r\n\t\tif(!index){\r\n\t\t\tchainResult = this.chain(\"row-adding-position\", [row, top], null, {index, top});\r\n\t\t\t\r\n\t\t\tindex = chainResult.index;\r\n\t\t\ttop = chainResult.top;\r\n\t\t}\r\n\t\t\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tindex = this.findRow(index);\r\n\t\t}\r\n\t\t\r\n\t\tindex = this.chain(\"row-adding-index\", [row, index, top], null, index);\r\n\t\t\r\n\t\tif(index){\r\n\t\t\tallIndex = this.rows.indexOf(index);\r\n\t\t}\r\n\t\t\r\n\t\tif(index && allIndex > -1){\r\n\t\t\tactiveIndex = this.activeRows.indexOf(index);\r\n\t\t\t\r\n\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\tvar displayIndex = rows.indexOf(index);\r\n\t\t\t\t\r\n\t\t\t\tif(displayIndex > -1){\r\n\t\t\t\t\trows.splice((top ? displayIndex : displayIndex + 1), 0, row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(activeIndex > -1){\r\n\t\t\t\tthis.activeRows.splice((top ? activeIndex : activeIndex + 1), 0, row);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.rows.splice((top ? allIndex : allIndex + 1), 0, row);\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(top){\r\n\t\t\t\t\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.unshift(row);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.activeRows.unshift(row);\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.activeRows.push(row);\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\t\t\r\n\t\tthis.dispatchExternal(\"rowAdded\", row.getComponent());\r\n\t\t\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t}\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\t\t\r\n\t\treturn row;\r\n\t}\r\n\t\r\n\tmoveRow(from, to, after){\r\n\t\tthis.dispatch(\"row-move\", from, to, after);\r\n\t\t\r\n\t\tthis.moveRowActual(from, to, after);\r\n\t\t\r\n\t\tthis.regenerateRowNumbers();\r\n\t\t\r\n\t\tthis.dispatch(\"row-moved\", from, to, after);\r\n\t\tthis.dispatchExternal(\"rowMoved\", from.getComponent());\r\n\t}\r\n\t\r\n\tmoveRowActual(from, to, after){\r\n\t\tthis.moveRowInArray(this.rows, from, to, after);\r\n\t\tthis.moveRowInArray(this.activeRows, from, to, after);\r\n\t\t\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tthis.moveRowInArray(rows, from, to, after);\r\n\t\t});\r\n\t\t\r\n\t\tthis.dispatch(\"row-moving\", from, to, after);\r\n\t}\r\n\t\r\n\tmoveRowInArray(rows, from, to, after){\r\n\t\tvar\tfromIndex, toIndex, start, end;\r\n\t\t\r\n\t\tif(from !== to){\r\n\t\t\t\r\n\t\t\tfromIndex = rows.indexOf(from);\r\n\t\t\t\r\n\t\t\tif (fromIndex > -1) {\r\n\t\t\t\t\r\n\t\t\t\trows.splice(fromIndex, 1);\r\n\t\t\t\t\r\n\t\t\t\ttoIndex = rows.indexOf(to);\r\n\t\t\t\t\r\n\t\t\t\tif (toIndex > -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(after){\r\n\t\t\t\t\t\trows.splice(toIndex+1, 0, from);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trows.splice(toIndex, 0, from);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows.splice(fromIndex, 0, from);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//restyle rows\r\n\t\t\tif(rows === this.getDisplayRows()){\r\n\t\t\t\t\r\n\t\t\t\tstart = fromIndex < toIndex ? fromIndex : toIndex;\r\n\t\t\t\tend = toIndex > fromIndex ? toIndex : fromIndex +1;\r\n\t\t\t\t\r\n\t\t\t\tfor(let i = start; i <= end; i++){\r\n\t\t\t\t\tif(rows[i]){\r\n\t\t\t\t\t\tthis.styleRow(rows[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearData(){\r\n\t\tthis.setData([]);\r\n\t}\r\n\t\r\n\tgetRowIndex(row){\r\n\t\treturn this.findRowIndex(row, this.rows);\r\n\t}\r\n\t\r\n\tgetDisplayRowIndex(row){\r\n\t\tvar index = this.getDisplayRows().indexOf(row);\r\n\t\treturn index > -1 ? index : false;\r\n\t}\r\n\t\r\n\tnextDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tnextRow = false;\r\n\t\t\r\n\t\t\r\n\t\tif(index !== false && index < this.displayRowsCount -1){\r\n\t\t\tnextRow = this.getDisplayRows()[index+1];\r\n\t\t}\r\n\t\t\r\n\t\tif(nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")){\r\n\t\t\treturn this.nextDisplayRow(nextRow, rowOnly);\r\n\t\t}\r\n\t\t\r\n\t\treturn nextRow;\r\n\t}\r\n\t\r\n\tprevDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tprevRow = false;\r\n\t\t\r\n\t\tif(index){\r\n\t\t\tprevRow = this.getDisplayRows()[index-1];\r\n\t\t}\r\n\t\t\r\n\t\tif(rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")){\r\n\t\t\treturn this.prevDisplayRow(prevRow, rowOnly);\r\n\t\t}\r\n\t\t\r\n\t\treturn prevRow;\r\n\t}\r\n\t\r\n\tfindRowIndex(row, list){\r\n\t\tvar rowIndex;\r\n\t\t\r\n\t\trow = this.findRow(row);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\trowIndex = list.indexOf(row);\r\n\t\t\t\r\n\t\t\tif(rowIndex > -1){\r\n\t\t\t\treturn rowIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tgetData(active, transform){\r\n\t\tvar output = [],\r\n\t\trows = this.getRows(active);\r\n\t\t\r\n\t\trows.forEach(function(row){\r\n\t\t\tif(row.type == \"row\"){\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetComponents(active){\r\n\t\tvar\toutput = [],\r\n\t\trows = this.getRows(active);\r\n\t\t\r\n\t\trows.forEach(function(row){\r\n\t\t\toutput.push(row.getComponent());\r\n\t\t});\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetDataCount(active){\r\n\t\tvar rows = this.getRows(active);\r\n\t\t\r\n\t\treturn rows.length;\r\n\t}\r\n\t\r\n\tscrollHorizontal(left){\r\n\t\tthis.scrollLeft = left;\r\n\t\tthis.element.scrollLeft = left;\r\n\t\t\r\n\t\tthis.dispatch(\"scroll-horizontal\", left);\r\n\t}\r\n\t\r\n\tregisterDataPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.dataPipeline.push({handler, priority})\r\n\t\t\tthis.dataPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\t\r\n\tregisterDisplayPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.displayPipeline.push({handler, priority})\r\n\t\t\tthis.displayPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Display pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\t\r\n\t//set active data set\r\n\trefreshActiveData(handler, skipStage, renderInPosition){\r\n\t\tvar table = this.table,\r\n\t\tstage = \"\",\r\n\t\tindex = 0,\r\n\t\tcascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"],\r\n\t\tdisplayIndex;\r\n\t\t\r\n\t\t\r\n\t\tif(typeof handler === \"function\"){\r\n\t\t\tindex = this.dataPipeline.findIndex((item) => {\r\n\t\t\t\treturn item.handler === handler;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(index > -1){\r\n\t\t\t\tstage = \"dataPipeline\";\r\n\t\t\t\t\r\n\t\t\t\tif(skipStage){\r\n\t\t\t\t\tif(index == this.dataPipeline.length - 1){\r\n\t\t\t\t\t\tstage = \"display\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.displayPipeline.findIndex((item) => {\r\n\t\t\t\t\treturn item.handler === handler;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tstage = \"displayPipeline\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(skipStage){\r\n\t\t\t\t\t\tif(index == this.displayPipeline.length - 1){\r\n\t\t\t\t\t\t\tstage = \"end\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Unable to refresh data, invalid handler provided\", handler)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tstage = handler || \"all\";\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(!this.redrawBlockRestoreConfig || (this.redrawBlockRestoreConfig && ((this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index) || (cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))))){\r\n\t\t\t\tthis.redrawBlockRestoreConfig = {\r\n\t\t\t\t\thandler: handler,\r\n\t\t\t\t\tskipStage: skipStage,\r\n\t\t\t\t\trenderInPosition: renderInPosition,\r\n\t\t\t\t\tstage:stage,\r\n\t\t\t\t\tindex:index,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\t\tif(renderInPosition){\r\n\t\t\t\t\tthis.reRenderInPosition(this.refreshPipelines.bind(this, handler, stage, index, renderInPosition));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.refreshPipelines(handler, stage, index, renderInPosition);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!handler){\r\n\t\t\t\t\t\tthis.table.columnManager.renderer.renderColumns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.renderTable();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(table.options.layoutColumnsOnNewData){\r\n\t\t\t\t\t\tthis.table.columnManager.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.refreshPipelines(handler, stage, index, renderInPosition);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dispatch(\"data-refreshed\");\r\n\t\t}\r\n\t}\r\n\t\r\n\trefreshPipelines(handler, stage, index, renderInPosition){\r\n\t\tthis.dispatch(\"data-refreshing\");\r\n\t\t\r\n\t\tif(!handler){\r\n\t\t\tthis.activeRowsPipeline[0] = this.rows.slice(0);\r\n\t\t}\r\n\t\t\r\n\t\t//cascade through data refresh stages\r\n\t\tswitch(stage){\r\n\t\t\tcase \"all\":\r\n\t\t\t//handle case where alldata needs refreshing\r\n\t\t\t\r\n\t\t\tcase \"dataPipeline\":\r\n\t\t\t\r\n\t\t\tfor(let i = index; i < this.dataPipeline.length; i++){\r\n\t\t\t\tlet result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\r\n\t\t\t\t\r\n\t\t\t\tthis.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\r\n\t\t\t\r\n\t\t\tthis.regenerateRowNumbers();\r\n\t\t\t\r\n\t\t\tcase \"display\":\r\n\t\t\tindex = 0;\r\n\t\t\tthis.resetDisplayRows();\r\n\t\t\t\r\n\t\t\tcase \"displayPipeline\":\r\n\t\t\tfor(let i = index; i < this.displayPipeline.length; i++){\r\n\t\t\t\tlet result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\r\n\t\t\t\t\r\n\t\t\t\tthis.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase \"end\":\r\n\t\t\t//case to handle scenario when trying to skip past end stage\r\n\t\t}\r\n\t}\r\n\t\r\n\t//regenerate row numbers for row number formatter if in use\r\n\tregenerateRowNumbers(){\r\n\t\tif(this.rowNumColumn){\r\n\t\t\tthis.activeRows.forEach((row) => {\r\n\t\t\t\tvar cell = row.getCell(this.rowNumColumn);\r\n\t\t\t\t\r\n\t\t\t\tif(cell){\r\n\t\t\t\t\tcell._generateContents();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetActiveRows(activeRows){\r\n\t\tthis.activeRows = activeRows;\r\n\t\tthis.activeRowsCount = this.activeRows.length;\r\n\t}\r\n\t\r\n\t//reset display rows array\r\n\tresetDisplayRows(){\r\n\t\tthis.displayRows = [];\r\n\t\t\r\n\t\tthis.displayRows.push(this.activeRows.slice(0));\r\n\t\t\r\n\t\tthis.displayRowsCount = this.displayRows[0].length;\r\n\t}\r\n\t\r\n\tgetNextDisplayIndex(){\r\n\t\treturn this.displayRows.length;\r\n\t}\r\n\t\r\n\t//set display row pipeline data\r\n\tsetDisplayRows(displayRows, index){\r\n\t\t\r\n\t\tvar output = true;\r\n\t\t\r\n\t\tif(index && typeof this.displayRows[index] != \"undefined\"){\r\n\t\t\tthis.displayRows[index] = displayRows;\r\n\t\t\toutput = true;\r\n\t\t}else{\r\n\t\t\tthis.displayRows.push(displayRows)\r\n\t\t\toutput = index = this.displayRows.length -1;\r\n\t\t}\r\n\t\t\r\n\t\tif(index == this.displayRows.length -1){\r\n\t\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t\t}\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\tgetDisplayRows(index){\r\n\t\tif(typeof index == \"undefined\"){\r\n\t\t\treturn this.displayRows.length ? this.displayRows[this.displayRows.length -1] : [];\r\n\t\t}else{\r\n\t\t\treturn this.displayRows[index] || [];\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetVisibleRows(chain, viewable){\r\n\t\tvar rows =  Object.assign([], this.renderer.visibleRows(!viewable));\r\n\t\t\r\n\t\tif(chain){\r\n\t\t\trows = this.chain(\"rows-visible\", [viewable], rows, rows);\r\n\t\t}\r\n\t\t\r\n\t\treturn rows;\r\n\t}\r\n\t\r\n\t//repeat action accross display rows\r\n\tdisplayRowIterator(callback){\r\n\t\tthis.activeRowsPipeline.forEach(callback);\r\n\t\tthis.displayRows.forEach(callback);\r\n\t\t\r\n\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t}\r\n\t\r\n\t//return only actual rows (not group headers etc)\r\n\tgetRows(type){\r\n\t\tvar rows;\r\n\t\t\r\n\t\tswitch(type){\r\n\t\t\tcase \"active\":\r\n\t\t\trows = this.activeRows;\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"display\":\r\n\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"visible\":\r\n\t\t\trows = this.getVisibleRows(false, true);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\trows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\r\n\t\t}\r\n\t\t\r\n\t\treturn rows;\r\n\t}\r\n\t\r\n\t///////////////// Table Rendering /////////////////\r\n\t//trigger rerender of table in current position\r\n\treRenderInPosition(callback){\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback();\r\n\t\t\t}else{\r\n\t\t\t\tthis.redrawBlockRenderInPosition = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderer.rerenderRows(callback);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\t\t\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomVertical,\r\n\t\t\t\"basic\": RendererBasicVertical,\r\n\t\t};\r\n\t\t\r\n\t\tif(typeof this.table.options.renderVertical === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderVertical];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderVertical;\r\n\t\t}\r\n\t\t\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\t\t\t\r\n\t\t\tif((this.table.element.clientHeight || this.table.options.height)){\r\n\t\t\t\tthis.fixedHeight = true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.fixedHeight = false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderVertical);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetRenderMode(){\r\n\t\treturn this.renderMode;\r\n\t}\r\n\t\r\n\trenderTable(){\r\n\t\tthis.dispatchExternal(\"renderStarted\");\r\n\t\t\r\n\t\tthis.element.scrollTop = 0;\r\n\t\t\r\n\t\tthis._clearTable();\r\n\t\t\r\n\t\tif(this.displayRowsCount){\r\n\t\t\tthis.renderer.renderRows();\r\n\t\t\t\r\n\t\t\tif(this.firstRender){\r\n\t\t\t\tthis.firstRender = false;\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderEmptyScroll();\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.fixedHeight){\r\n\t\t\tthis.adjustTableSize();\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatch(\"table-layout\");\r\n\t\t\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatchExternal(\"renderComplete\");\r\n\t}\r\n\t\r\n\t//show scrollbars on empty table div\r\n\trenderEmptyScroll(){\r\n\t\tif(this.placeholder){\r\n\t\t\tthis.tableElement.style.display = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t\t// this.tableElement.style.minHeight = \"1px\";\r\n\t\t\t// this.tableElement.style.visibility = \"hidden\";\r\n\t\t}\r\n\t}\r\n\t\r\n\t_clearTable(){\r\n\t\tvar element = this.tableElement;\r\n\t\t\r\n\t\tthis._clearPlaceholder();\r\n\t\t\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.renderer.clearRows();\r\n\t}\r\n\t\r\n\t_showPlaceholder(){\r\n\t\tif(this.placeholder){\r\n\t\t\tthis.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\r\n\t\t\t\r\n\t\t\tthis.getElement().appendChild(this.placeholder);\r\n\t\t\tthis._positionPlaceholder();\r\n\t\t}\r\n\t}\r\n\t\r\n\t_clearPlaceholder(){\r\n\t\tif(this.placeholder && this.placeholder.parentNode){\r\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\r\n\t\t}\r\n\t}\r\n\t\r\n\t_positionPlaceholder(){\r\n\t\tif(this.placeholder && this.placeholder.parentNode){\r\n\t\t\tthis.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\r\n\t\t\tthis.placeholderContents.style.width = this.table.rowManager.element.clientWidth + \"px\";\r\n\t\t\tthis.placeholderContents.style.marginLeft = this.scrollLeft + \"px\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\t\t\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t//normalize height of active rows\r\n\tnormalizeHeight(){\r\n\t\tthis.activeRows.forEach(function(row){\r\n\t\t\trow.normalizeHeight();\r\n\t\t});\r\n\t}\r\n\t\r\n\t//adjust the height of the table holder to fit in the Tabulator element\r\n\tadjustTableSize(){\r\n\t\tvar initialHeight = this.element.clientHeight,\r\n\t\tmodExists;\r\n\t\t\r\n\t\tif(this.renderer.verticalFillMode === \"fill\"){\r\n\t\t\tlet otherHeight =  Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\r\n\t\t\t\r\n\t\t\tif(this.fixedHeight){\r\n\t\t\t\tthis.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.height = \"\";\r\n\t\t\t\tthis.element.style.height = (this.table.element.clientHeight - otherHeight) + \"px\";\r\n\t\t\t\tthis.element.scrollTop = this.scrollTop;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.renderer.resize();\r\n\t\t\t\r\n\t\t\t//check if the table has changed size when dealing with variable height tables\r\n\t\t\tif(!this.fixedHeight && initialHeight != this.element.clientHeight){\r\n\t\t\t\tif(this.subscribed(\"table-resize\")){\r\n\t\t\t\t\tthis.dispatch(\"table-resize\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._positionPlaceholder();\r\n\t}\r\n\t\r\n\t//renitialize all rows\r\n\treinitialize(){\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\trow.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\t\r\n\t//prevent table from being redrawn\r\n\tblockRedraw (){\r\n\t\tthis.redrawBlock = true;\r\n\t\tthis.redrawBlockRestoreConfig = false;\r\n\t}\r\n\t\r\n\t//restore table redrawing\r\n\trestoreRedraw (){\r\n\t\tthis.redrawBlock = false;\r\n\t\t\r\n\t\tif(this.redrawBlockRestoreConfig){\r\n\t\t\tthis.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition)\r\n\t\t\t\r\n\t\t\tthis.redrawBlockRestoreConfig = false;\r\n\t\t}else{\r\n\t\t\tif(this.redrawBlockRenderInPosition){\r\n\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.redrawBlockRenderInPosition = false;\r\n\t}\r\n\t\r\n\t//redraw table\r\n\tredraw (force){\r\n\t\tvar pos = 0,\r\n\t\tleft = this.scrollLeft;\r\n\t\t\r\n\t\tthis.adjustTableSize();\r\n\t\t\r\n\t\tthis.table.tableWidth = this.table.element.clientWidth;\r\n\t\t\r\n\t\tif(!force){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t\tthis.scrollHorizontal(left);\r\n\t\t}else{\r\n\t\t\tthis.renderTable();\r\n\t\t}\r\n\t}\r\n\t\r\n\tresetScroll(){\r\n\t\tthis.element.scrollLeft = 0;\r\n\t\tthis.element.scrollTop = 0;\r\n\t\t\r\n\t\tif(this.table.browser === \"ie\"){\r\n\t\t\tvar event = document.createEvent(\"Event\");\r\n\t\t\tevent.initEvent(\"scroll\", false, true);\r\n\t\t\tthis.element.dispatchEvent(event);\r\n\t\t}else{\r\n\t\t\tthis.element.dispatchEvent(new Event('scroll'));\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nexport default class FooterManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.element = this.createElement(); //containing element\r\n\t\tthis.containerElement = this.createContainerElement(); //containing element\r\n\t\tthis.external = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tcreateElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-footer\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t\r\n\tcreateContainerElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-footer-contents\");\r\n\r\n\t\tthis.element.appendChild(el);\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitializeElement(){\r\n\t\tif(this.table.options.footerElement){\r\n\r\n\t\t\tswitch(typeof this.table.options.footerElement){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(this.table.options.footerElement[0] === \"<\"){\r\n\t\t\t\t\tthis.containerElement.innerHTML = this.table.options.footerElement;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.external = true;\r\n\t\t\t\t\tthis.containerElement = document.querySelector(this.table.options.footerElement);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.element = this.table.options.footerElement;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tappend(element){\r\n\t\tthis.activate();\r\n\r\n\t\tthis.containerElement.appendChild(element);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tprepend(element){\r\n\t\tthis.activate();\r\n\r\n\t\tthis.element.insertBefore(element, this.element.firstChild);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tremove(element){\r\n\t\telement.parentNode.removeChild(element);\r\n\t\tthis.deactivate();\r\n\t}\r\n\r\n\tdeactivate(force){\r\n\t\tif(!this.element.firstChild || force){\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tactivate(){\r\n\t\tif(!this.active){\r\n\t\t\tthis.active = true;\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.table.element.appendChild(this.getElement());\r\n\t\t\t\tthis.table.element.style.display = '';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tredraw(){\r\n\t\tthis.dispatch(\"footer-redraw\")\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\nimport Row from '../row/Row.js';\r\n\r\nexport default class InteractionManager extends CoreFeature {\r\n\t\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.el = null;\r\n\t\t\r\n\t\tthis.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\r\n\t\t\r\n\t\tthis.previousTargets = {};\r\n\t\t\r\n\t\tthis.listeners = [\r\n\t\t\t\"click\",\r\n\t\t\t\"dblclick\",\r\n\t\t\t\"contextmenu\",\r\n\t\t\t\"mouseenter\",\r\n\t\t\t\"mouseleave\",\r\n\t\t\t\"mouseover\",\r\n\t\t\t\"mouseout\",\r\n\t\t\t\"mousemove\",\r\n\t\t\t\"touchstart\",\r\n\t\t\t\"touchend\",\r\n\t\t];\r\n\t\t\r\n\t\tthis.componentMap = {\r\n\t\t\t\"tabulator-cell\":\"cell\",\r\n\t\t\t\"tabulator-row\":\"row\",\r\n\t\t\t\"tabulator-group\":\"group\",\r\n\t\t\t\"tabulator-col\":\"column\",\r\n\t\t};\r\n\t\t\r\n\t\tthis.pseudoTrackers = {\r\n\t\t\t\"row\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"cell\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"group\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"column\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t}\r\n\t\t\r\n\t\tthis.pseudoTracking = false;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.el = this.table.element;\r\n\t\t\r\n\t\tthis.buildListenerMap();\r\n\t\tthis.bindSubscriptionWatchers();\r\n\t}\r\n\t\r\n\tbuildListenerMap(){\r\n\t\tvar listenerMap = {};\r\n\t\t\r\n\t\tthis.listeners.forEach((listener) => {\r\n\t\t\tlistenerMap[listener] = {\r\n\t\t\t\thandler:null,\r\n\t\t\t\tcomponents:[],\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.listeners = listenerMap;\r\n\t}\r\n\t\r\n\tbindPseudoEvents(){\r\n\t\tObject.keys(this.pseudoTrackers).forEach((key) => {\r\n\t\t\tthis.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\r\n\t\t\tthis.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\r\n\t\t});\r\n\t\t\r\n\t\tthis.pseudoTracking = true;\r\n\t}\r\n\t\r\n\tpseudoMouseEnter(key, e, target){\r\n\t\tif(this.pseudoTrackers[key].target !== target){\r\n\t\t\t\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, this.pseudoTrackers[key].target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.pseudoMouseLeave(key, e);\r\n\t\t\t\r\n\t\t\tthis.pseudoTrackers[key].target = target;\r\n\t\t\t\r\n\t\t\tthis.dispatch(key + \"-mouseenter\", e, target);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpseudoMouseLeave(key, e){\r\n\t\tvar leaveList = Object.keys(this.pseudoTrackers),\r\n\t\tlinkedKeys = {\r\n\t\t\t\"row\":[\"cell\"],\r\n\t\t\t\"cell\":[\"row\"],\r\n\t\t};\r\n\t\t\r\n\t\tleaveList = leaveList.filter((item) => {\r\n\t\t\tvar links = linkedKeys[key];\r\n\t\t\treturn item !== key && (!links || (links && !links.includes(item)));\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tleaveList.forEach((key) => {\r\n\t\t\tvar target = this.pseudoTrackers[key].target;\r\n\t\t\t\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\t\t\t\t\r\n\t\t\t\tthis.pseudoTrackers[key].target = null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tbindSubscriptionWatchers(){\r\n\t\tvar listeners = Object.keys(this.listeners),\r\n\t\tcomponents = Object.values(this.componentMap);\r\n\t\t\r\n\t\tfor(let comp of components){\r\n\t\t\tfor(let listener of listeners){\r\n\t\t\t\tlet key = comp + \"-\" + listener;\r\n\t\t\t\t\r\n\t\t\t\tthis.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.subscribe(\"table-destroy\", this.clearWatchers.bind(this))\r\n\t}\r\n\t\r\n\tsubscriptionChanged(component, key, added){\r\n\t\tvar listener = this.listeners[key].components,\r\n\t\tindex = listener.indexOf(component),\r\n\t\tchanged = false;\r\n\t\t\r\n\t\tif(added){\r\n\t\t\tif(index === -1){\r\n\t\t\t\tlistener.push(component);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.subscribed(component + \"-\" + key)){\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tlistener.splice(index, 1);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking){\r\n\t\t\tthis.bindPseudoEvents();\r\n\t\t}\r\n\t\t\r\n\t\tif(changed){\r\n\t\t\tthis.updateEventListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateEventListeners(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\t\r\n\t\t\tif(listener.components.length){\r\n\t\t\t\tif(!listener.handler){\r\n\t\t\t\t\tlistener.handler = this.track.bind(this, key);\r\n\t\t\t\t\tthis.el.addEventListener(key, listener.handler)\r\n\t\t\t\t\t// this.el.addEventListener(key, listener.handler, {passive: true})\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(listener.handler){\r\n\t\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\t\tlistener.handler = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrack(type, e){\r\n\t\tvar path = (e.composedPath && e.composedPath()) || e.path;\r\n\t\t\r\n\t\tvar targets = this.findTargets(path);\r\n\t\ttargets = this.bindComponents(type, targets);\r\n\t\t\r\n\t\tthis.triggerEvents(type, e, targets);\r\n\t\t\r\n\t\tif(this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length){\r\n\t\t\tthis.pseudoMouseLeave(\"none\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfindTargets(path){\r\n\t\tvar targets = {};\r\n\t\t\r\n\t\tlet componentMap = Object.keys(this.componentMap);\r\n\t\t\r\n\t\tfor (let el of path) {\r\n\t\t\tlet classList = el.classList ? [...el.classList] : [];\r\n\t\t\t\r\n\t\t\tlet abort = classList.filter((item) => {\r\n\t\t\t\treturn this.abortClasses.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tif(abort.length){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet elTargets = classList.filter((item) => {\r\n\t\t\t\treturn componentMap.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tfor (let target of elTargets) {\r\n\t\t\t\ttargets[this.componentMap[target]] = el;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(targets.group && targets.group === targets.row){\r\n\t\t\tdelete targets.row;\r\n\t\t}\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\tbindComponents(type, targets){\r\n\t\t//ensure row component is looked up before cell\r\n\t\tvar keys = Object.keys(targets).reverse(),\r\n\t\tlistener = this.listeners[type],\r\n\t\ttargetMatches = {};\r\n\t\t\r\n\t\tfor(let key of keys){\r\n\t\t\tlet component;\r\n\t\t\tlet target = targets[key];\r\n\t\t\tlet previousTarget = this.previousTargets[key];\r\n\t\t\t\r\n\t\t\tif(previousTarget && previousTarget.target === target){\r\n\t\t\t\tcomponent = previousTarget.component;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase \"row\":\r\n\t\t\t\t\tcase \"group\":\r\n\t\t\t\t\tif(listener.components.includes(\"row\") || listener.components.includes(\"cell\") || listener.components.includes(\"group\")){\r\n\t\t\t\t\t\tlet rows = this.table.rowManager.getVisibleRows(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcomponent = rows.find((row) => {\r\n\t\t\t\t\t\t\treturn row.getElement() === target;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(targets[\"row\"] && targets[\"row\"].parentNode && targets[\"row\"].parentNode.closest(\".tabulator-row\")){\r\n\t\t\t\t\t\t\ttargets[key] = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"column\":\r\n\t\t\t\t\tif(listener.components.includes(\"column\")){\r\n\t\t\t\t\t\tcomponent = this.table.columnManager.findColumn(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"cell\":\r\n\t\t\t\t\tif(listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tif(targets[\"row\"] instanceof Row){\r\n\t\t\t\t\t\t\tcomponent = targets[\"row\"].findCell(target);\r\n\t\t\t\t\t\t}else{\t\r\n\t\t\t\t\t\t\tif(targets[\"row\"]){\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Event Target Lookup Error - The row this cell is attached to cannot be found, has the table been reinitialized without being destroyed first?\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(component){\r\n\t\t\t\ttargets[key] = component;\r\n\t\t\t\ttargetMatches[key] = {\r\n\t\t\t\t\ttarget:target,\r\n\t\t\t\t\tcomponent:component,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.previousTargets = targetMatches;\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\ttriggerEvents(type, e, targets){\r\n\t\tvar listener = this.listeners[type];\r\n\t\t\r\n\t\tfor(let key in targets){\r\n\t\t\tif(targets[key] && listener.components.includes(key)){\r\n\t\t\t\tthis.dispatch(key + \"-\" + type, e, targets[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearWatchers(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\t\r\n\t\t\tif(listener.handler){\r\n\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\tlistener.handler = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export default class ComponentFunctionBinder{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\r\n\t\tthis.bindings = {};\r\n\t}\r\n\r\n\tbind(type, funcName, handler){\r\n\t\tif(!this.bindings[type]){\r\n\t\t\tthis.bindings[type] = {};\r\n\t\t}\r\n\r\n\t\tif(this.bindings[type][funcName]){\r\n\t\t\tconsole.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, handler)\r\n\t\t}else{\r\n\t\t\tthis.bindings[type][funcName] = handler;\r\n\t\t}\r\n\t}\r\n\r\n\thandle(type, component, name){\r\n\t\tif(this.bindings[type] && this.bindings[type][name] && typeof this.bindings[type][name].bind === 'function'){\r\n\t\t\treturn this.bindings[type][name].bind(null, component);\r\n\t\t}else{\r\n\t\t\tif(name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")){\r\n\t\t\t\t\tconsole.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import CoreFeature from '../CoreFeature.js';\r\n\r\nexport default class DataLoader extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.requestOrder = 0; //prevent requests coming out of sequence if overridden by another load request\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\tinitialize(){}\r\n\r\n\tload(data, params, config, replace, silent){\r\n\t\tvar requestNo = ++this.requestOrder;\r\n\r\n\t\tthis.dispatchExternal(\"dataLoading\", data);\r\n\r\n\t\t//parse json data to array\r\n\t\tif (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(this.confirm(\"data-loading\", [data, params, config, silent])){\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.alertLoader();\r\n\t\t\t}\r\n\r\n\t\t\t//get params for request\r\n\t\t\tparams = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\r\n\r\n\t\t\tparams = this.mapParams(params, this.table.options.dataSendParams);\r\n\r\n\t\t\tvar result = this.chain(\"data-load\", [data, params, config, silent], false, Promise.resolve([]));\r\n\t\t\t\r\n\t\t\treturn result.then((response) => {\r\n\t\t\t\tif(!Array.isArray(response) && typeof response == \"object\"){\r\n\t\t\t\t\tresponse = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rowData = this.chain(\"data-loaded\", response, null, response);\r\n\r\n\t\t\t\tif(requestNo == this.requestOrder){\r\n\t\t\t\t\tthis.clearAlert();\r\n\r\n\t\t\t\t\tif(rowData !== false){\r\n\t\t\t\t\t\tthis.dispatchExternal(\"dataLoaded\", rowData);\r\n\t\t\t\t\t\tthis.table.rowManager.setData(rowData,  replace, !replace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\r\n\t\t\t\t}\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.error(\"Data Load Error: \", error);\r\n\t\t\t\tthis.dispatchExternal(\"dataLoadError\", error);\r\n\r\n\t\t\t\tif(!silent){\r\n\t\t\t\t\tthis.alertError();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.clearAlert();\r\n\t\t\t\t}, this.table.options.dataLoaderErrorTimeout);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"dataLoaded\", data);\r\n\r\n\t\t\tif(!data){\r\n\t\t\t\tdata = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.setData(data, replace, !replace);\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n\r\n\tmapParams(params, map){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in params){\r\n\t\t\toutput[map.hasOwnProperty(key) ? map[key] : key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tobjectInvert(obj){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in obj){\r\n\t\t\toutput[obj[key]] = key;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tblockActiveLoad(){\r\n\t\tthis.requestOrder++;\r\n\t}\r\n\r\n\talertLoader(){\r\n\t\tvar shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\r\n\r\n\t\tif(shouldLoad){\r\n\t\t\tthis.table.alertManager.alert(this.table.options.dataLoaderLoading || this.langText(\"data|loading\"));\r\n\t\t}\r\n\t}\r\n\r\n\talertError(){\r\n\t\tthis.table.alertManager.alert(this.table.options.dataLoaderError || this.langText(\"data|error\"), \"error\");\r\n\t}\r\n\r\n\tclearAlert(){\r\n\t\tthis.table.alertManager.clear();\r\n\t}\r\n}","export default class ExternalEventBus {\r\n\r\n\tconstructor(table, optionsList, debug){\r\n\t\tthis.table = table;\r\n\t\tthis.events = {};\r\n\t\tthis.optionsList = optionsList || {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push(callback);\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdelete this.events[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift(),\r\n\t\tresult;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((callback, i) => {\r\n\t\t\t\tlet callResult = callback.apply(this.table, args);\r\n\r\n\t\t\t\tif(!i){\r\n\t\t\t\t\tresult = callResult;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"ExternalEvent:\" + args[0];\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments)\r\n\t}\r\n}","export default class InternalEventBus {\r\n\r\n\tconstructor(debug){\r\n\t\tthis.events = {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\r\n\t\tthis.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback, priority = 10000){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push({callback, priority});\r\n\r\n\t\tthis.events[key].sort((a, b) => {\r\n\t\t\treturn a.priority - b.priority;\r\n\t\t});\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item.callback === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_chain(key, args, initialValue, fallback){\r\n\t\tvar value = initialValue;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tvalue = subscriber.callback.apply(this, args.concat([value]));\r\n\t\t\t});\r\n\r\n\t\t\treturn value;\r\n\t\t}else{\r\n\t\t\treturn typeof fallback === \"function\" ? fallback() : fallback;\r\n\t\t}\r\n\t}\r\n\r\n\t_confirm(key, args){\r\n\t\tvar confirmed = false;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tif(subscriber.callback.apply(this, args)){\r\n\t\t\t\t\tconfirmed = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn confirmed;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((subscriber) => {\r\n\t\t\t\tlet callResult = subscriber.callback.apply(this, args);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments);\r\n\t}\r\n\r\n\t_debugChain(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._chain(...arguments);\r\n\t}\r\n\r\n\t_debugConfirm(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._confirm(...arguments);\r\n\t}\r\n}","import Tabulator from '../Tabulator.js';\r\n\r\nclass TableRegistry {\r\n\r\n\tstatic register(table){\r\n\t\tTableRegistry.tables.push(table);\r\n\t}\r\n\r\n\tstatic deregister(table){\r\n\t\tvar index = TableRegistry.tables.indexOf(table);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tTableRegistry.tables.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic lookupTable(query, silent){\r\n\t\tvar results = [],\r\n\t\tmatches, match;\r\n\r\n\t\tif(typeof query === \"string\"){\r\n\t\t\tmatches = document.querySelectorAll(query);\r\n\r\n\t\t\tif(matches.length){\r\n\t\t\t\tfor(var i = 0; i < matches.length; i++){\r\n\t\t\t\t\tmatch = TableRegistry.matchElement(matches[i]);\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tresults.push(match);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if((typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement) || query instanceof Tabulator){\r\n\t\t\tmatch = TableRegistry.matchElement(query);\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tresults.push(match);\r\n\t\t\t}\r\n\t\t}else if(Array.isArray(query)){\r\n\t\t\tquery.forEach(function(item){\r\n\t\t\t\tresults = results.concat(TableRegistry.lookupTable(item));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Table Connection Error - Invalid Selector\", query);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tstatic matchElement(element){\r\n\t\treturn TableRegistry.tables.find(function(table){\r\n\t\t\treturn element instanceof Tabulator ? table === element : table.element === element;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nTableRegistry.tables = [];\r\n\r\nexport default TableRegistry;","//resize columns to fit data they contain\r\nexport default function(columns){\r\n\tthis.table.columnManager.renderer.reinitializeColumnWidths(columns);\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\r\nexport default function(columns){\r\n\tcolumns.forEach(function(column){\r\n\t\tcolumn.reinitializeWidth();\r\n\t});\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data the contain and stretch last column to fill table\r\nexport default function(columns){\r\n\tvar colsWidth = 0,\r\n\ttableWidth = this.table.rowManager.element.clientWidth,\r\n\tgap = 0,\r\n\tlastCol = false;\r\n\r\n\tcolumns.forEach((column, i) => {\r\n\t\tif(!column.widthFixed){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t}\r\n\r\n\t\tif(this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible){\r\n\t\t\tlastCol = column;\r\n\t\t}\r\n\r\n\t\tif(column.visible){\r\n\t\t\tcolsWidth += column.getWidth();\r\n\t\t}\r\n\t});\r\n\r\n\tif(lastCol){\r\n\t\tgap = tableWidth - colsWidth + lastCol.getWidth();\r\n\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tlastCol.setWidth(0);\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\r\n\t\tif(gap > 0){\r\n\t\t\tlastCol.setWidth(gap);\r\n\t\t}else{\r\n\t\t\tlastCol.reinitializeWidth();\r\n\t\t}\r\n\t}else{\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\t}\r\n};","//resize columns to fit\r\nexport default function(columns){\r\n\tvar totalWidth = this.table.element.clientWidth; //table element width\r\n\tvar fixedWidth = 0; //total width of columns with a defined width\r\n\tvar flexWidth = 0; //total width available to flexible columns\r\n\tvar flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\r\n\tvar flexColWidth = 0; //desired width of flexible columns\r\n\tvar flexColumns = []; //array of flexible width columns\r\n\tvar fixedShrinkColumns = []; //array of fixed width columns that can shrink\r\n\tvar flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\r\n\tvar overflowWidth = 0; //horizontal overflow width\r\n\tvar gapFill=0; //number of pixels to be added to final column to close and half pixel gaps\r\n\r\n\tfunction calcWidth(width){\r\n\t\tvar colWidth;\r\n\r\n\t\tif(typeof(width) == \"string\"){\r\n\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width);\r\n\t\t\t}else{\r\n\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcolWidth = width;\r\n\t\t}\r\n\r\n\t\treturn colWidth;\r\n\t}\r\n\r\n\t//ensure columns resize to take up the correct amount of space\r\n\tfunction scaleColumns(columns, freeSpace, colWidth, shrinkCols){\r\n\r\n\t\tvar oversizeCols = [],\r\n\t\toversizeSpace = 0,\r\n\t\tremainingSpace = 0,\r\n\t\tnextColWidth = 0,\r\n\t\tremainingFlexGrowUnits = flexGrowUnits,\r\n\t\tgap = 0,\r\n\t\tchangeUnits = 0,\r\n\t\tundersizeCols = [];\r\n\r\n\t\tfunction calcGrow(col){\r\n\t\t\treturn (colWidth * (col.column.definition.widthGrow || 1));\r\n\t\t}\r\n\r\n\t\tfunction calcShrink(col){\r\n\t\t\treturn  (calcWidth(col.width) - (colWidth * (col.column.definition.widthShrink || 0)))\r\n\t\t}\r\n\r\n\t\tcolumns.forEach(function(col, i){\r\n\t\t\tvar width = shrinkCols ? calcShrink(col) : calcGrow(col);\r\n\t\t\tif(col.column.minWidth >= width){\r\n\t\t\t\toversizeCols.push(col);\r\n\t\t\t}else{\r\n\t\t\t\tif(col.column.maxWidth && col.column.maxWidth < width){\r\n\t\t\t\t\tcol.width = col.column.maxWidth;\r\n\t\t\t\t\tfreeSpace -= col.column.maxWidth;\r\n\r\n\t\t\t\t\tremainingFlexGrowUnits -= shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\r\n\t\t\t\t\tif(remainingFlexGrowUnits){\r\n\t\t\t\t\t\tcolWidth = Math.floor(freeSpace/remainingFlexGrowUnits);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tundersizeCols.push(col);\r\n\t\t\t\t\tchangeUnits += shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(oversizeCols.length){\r\n\t\t\toversizeCols.forEach(function(col){\r\n\t\t\t\toversizeSpace += shrinkCols ?  col.width - col.column.minWidth : col.column.minWidth;\r\n\t\t\t\tcol.width = col.column.minWidth;\r\n\t\t\t});\r\n\r\n\t\t\tremainingSpace = freeSpace - oversizeSpace;\r\n\r\n\t\t\tnextColWidth = changeUnits ? Math.floor(remainingSpace/changeUnits) : remainingSpace;\r\n\r\n\t\t\tgap = remainingSpace - (nextColWidth * changeUnits);\r\n\r\n\t\t\tgap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\r\n\t\t}else{\r\n\t\t\tgap = changeUnits ? freeSpace - (Math.floor(freeSpace/changeUnits) * changeUnits) : freeSpace;\r\n\r\n\t\t\tundersizeCols.forEach(function(column){\r\n\t\t\t\tcolumn.width = shrinkCols ? calcShrink(column) : calcGrow(column);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn gap;\r\n\t}\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n\r\n\t//adjust for vertical scrollbar if present\r\n\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t}\r\n\r\n\tcolumns.forEach(function(column){\r\n\t\tvar width, minWidth, colWidth;\r\n\r\n\t\tif(column.visible){\r\n\r\n\t\t\twidth = column.definition.width;\r\n\t\t\tminWidth =  parseInt(column.minWidth);\r\n\r\n\t\t\tif(width){\r\n\r\n\t\t\t\tcolWidth = calcWidth(width);\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t\tif(column.definition.widthShrink){\r\n\t\t\t\t\tfixedShrinkColumns.push({\r\n\t\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\t\twidth:colWidth > minWidth ? colWidth : minWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t\tflexShrinkUnits += column.definition.widthShrink;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tflexColumns.push({\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\twidth:0,\r\n\t\t\t\t});\r\n\t\t\t\tflexGrowUnits += column.definition.widthGrow || 1;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//calculate available space\r\n\tflexWidth = totalWidth - fixedWidth;\r\n\r\n\t//calculate correct column size\r\n\tflexColWidth = Math.floor(flexWidth / flexGrowUnits)\r\n\r\n\t//generate column widths\r\n\tvar gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\r\n\r\n\t//increase width of last column to account for rounding errors\r\n\tif(flexColumns.length && gapFill > 0){\r\n\t\tflexColumns[flexColumns.length-1].width += + gapFill;\r\n\t}\r\n\r\n\t//caculate space for columns to be shrunk into\r\n\tflexColumns.forEach(function(col){\r\n\t\tflexWidth -= col.width;\r\n\t});\r\n\r\n\toverflowWidth = Math.abs(gapFill) + flexWidth;\r\n\r\n\t//shrink oversize columns if there is no available space\r\n\tif(overflowWidth > 0 && flexShrinkUnits){\r\n\t\tgapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\r\n\t}\r\n\r\n\t//decrease width of last column to account for rounding errors\r\n\tif(fixedShrinkColumns.length){\r\n\t\tfixedShrinkColumns[fixedShrinkColumns.length-1].width -= gapFill;\r\n\t}\r\n\r\n\tflexColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n\r\n\tfixedShrinkColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n};","import fitData from './modes/fitData.js';\r\nimport fitDataGeneral from './modes/fitDataGeneral.js';\r\nimport fitDataStretch from './modes/fitDataStretch.js';\r\nimport fitColumns from './modes/fitColumns.js';\r\n\r\nexport default {\r\n\tfitData:fitData,\r\n\tfitDataFill:fitDataGeneral,\r\n\tfitDataTable:fitDataGeneral,\r\n\tfitDataStretch:fitDataStretch,\r\n\tfitColumns:fitColumns ,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultModes from './defaults/modes.js';\r\n\r\nclass Layout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table, \"layout\");\r\n\r\n\t\tthis.mode = null;\r\n\r\n\t\tthis.registerTableOption(\"layout\", \"fitData\"); //layout type\r\n\t\tthis.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\r\n\r\n\t\tthis.registerColumnOption(\"widthGrow\");\r\n\t\tthis.registerColumnOption(\"widthShrink\");\r\n\t}\r\n\r\n\t//initialize layout system\r\n\tinitialize(){\r\n\t\tvar layout = this.table.options.layout;\r\n\r\n\t\tif(Layout.modes[layout]){\r\n\t\t\tthis.mode = layout;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\r\n\t\t\tthis.mode = 'fitData';\r\n\t\t}\r\n\r\n\t\tthis.table.element.setAttribute(\"tabulator-layout\", this.mode);\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//trigger table layout\r\n\tlayout(){\r\n\t\tthis.dispatch(\"layout-refreshing\")\r\n\t\tLayout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\r\n\r\n\t\tthis.dispatch(\"layout-refreshed\")\r\n\t}\r\n}\r\n\r\nLayout.moduleName = \"layout\";\r\n\r\n//load defaults\r\nLayout.modes = defaultModes;\r\n\r\nexport default Layout;","export default {\r\n\t\"default\":{ //hold default locale text\r\n\t\t\"groups\":{\r\n\t\t\t\"item\":\"item\",\r\n\t\t\t\"items\":\"items\",\r\n\t\t},\r\n\t\t\"columns\":{\r\n\t\t},\r\n\t\t\"data\":{\r\n\t\t\t\"loading\":\"Loading\",\r\n\t\t\t\"error\":\"Error\",\r\n\t\t},\r\n\t\t\"pagination\":{\r\n\t\t\t\"page_size\":\"Page Size\",\r\n\t\t\t\"page_title\":\"Show Page\",\r\n\t\t\t\"first\":\"First\",\r\n\t\t\t\"first_title\":\"First Page\",\r\n\t\t\t\"last\":\"Last\",\r\n\t\t\t\"last_title\":\"Last Page\",\r\n\t\t\t\"prev\":\"Prev\",\r\n\t\t\t\"prev_title\":\"Prev Page\",\r\n\t\t\t\"next\":\"Next\",\r\n\t\t\t\"next_title\":\"Next Page\",\r\n\t\t\t\"all\":\"All\",\r\n\t\t\t\"counter\":{\r\n\t\t\t\t\"showing\": \"Showing\",\r\n\t\t\t\t\"of\": \"of\",\r\n\t\t\t\t\"rows\": \"rows\",\r\n\t\t\t\t\"pages\": \"pages\",\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"headerFilters\":{\r\n\t\t\t\"default\":\"filter column...\",\r\n\t\t\t\"columns\":{}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultLangs from './defaults/langs.js';\r\n\r\nclass Localize extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.locale = \"default\"; //current locale\r\n\t\tthis.lang = false; //current language\r\n\t\tthis.bindings = {}; //update events to call when locale is changed\r\n\t\tthis.langList = {};\r\n\r\n\t\tthis.registerTableOption(\"locale\", false); //current system language\r\n\t\tthis.registerTableOption(\"langs\", {});\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.langList = Helpers.deepClone(Localize.langs);\r\n\r\n\t\tif(this.table.options.columnDefaults.headerFilterPlaceholder !== false){\r\n\t\t\tthis.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\r\n\t\t}\r\n\r\n\t\tfor(let locale in this.table.options.langs){\r\n\t\t\tthis.installLang(locale, this.table.options.langs[locale]);\r\n\t\t}\r\n\r\n\t\tthis.setLocale(this.table.options.locale);\r\n\r\n\t\tthis.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLang\", this.getLang.bind(this));\r\n\t}\r\n\r\n\t//set header placehoder\r\n\tsetHeaderFilterPlaceholder(placeholder){\r\n\t\tthis.langList.default.headerFilters.default = placeholder;\r\n\t}\r\n\r\n\t//set header filter placeholder by column\r\n\tsetHeaderFilterColumnPlaceholder(column, placeholder){\r\n\t\tthis.langList.default.headerFilters.columns[column] = placeholder;\r\n\r\n\t\tif(this.lang && !this.lang.headerFilters.columns[column]){\r\n\t\t\tthis.lang.headerFilters.columns[column] = placeholder;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup a lang description object\r\n\tinstallLang(locale, lang){\r\n\t\tif(this.langList[locale]){\r\n\t\t\tthis._setLangProp(this.langList[locale], lang);\r\n\t\t}else{\r\n\t\t\tthis.langList[locale] = lang;\r\n\t\t}\r\n\t}\r\n\r\n\t_setLangProp(lang, values){\r\n\t\tfor(let key in values){\r\n\t\t\tif(lang[key] && typeof lang[key] == \"object\"){\r\n\t\t\t\tthis._setLangProp(lang[key], values[key])\r\n\t\t\t}else{\r\n\t\t\t\tlang[key] = values[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set current locale\r\n\tsetLocale(desiredLocale){\r\n\t\tdesiredLocale = desiredLocale || \"default\";\r\n\r\n\t\t//fill in any matching languge values\r\n\t\tfunction traverseLang(trans, path){\r\n\t\t\tfor(var prop in trans){\r\n\t\t\t\tif(typeof trans[prop] == \"object\"){\r\n\t\t\t\t\tif(!path[prop]){\r\n\t\t\t\t\t\tpath[prop] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttraverseLang(trans[prop], path[prop]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpath[prop] = trans[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//determing correct locale to load\r\n\t\tif(desiredLocale === true && navigator.language){\r\n\t\t\t//get local from system\r\n\t\t\tdesiredLocale = navigator.language.toLowerCase();\r\n\t\t}\r\n\r\n\t\tif(desiredLocale){\r\n\t\t\t//if locale is not set, check for matching top level locale else use default\r\n\t\t\tif(!this.langList[desiredLocale]){\r\n\t\t\t\tlet prefix = desiredLocale.split(\"-\")[0];\r\n\r\n\t\t\t\tif(this.langList[prefix]){\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\r\n\t\t\t\t\tdesiredLocale = prefix;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\r\n\t\t\t\t\tdesiredLocale = \"default\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.locale = desiredLocale;\r\n\r\n\t\t//load default lang template\r\n\t\tthis.lang = Helpers.deepClone(this.langList.default || {});\r\n\r\n\t\tif(desiredLocale != \"default\"){\r\n\t\t\ttraverseLang(this.langList[desiredLocale], this.lang);\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"localized\", this.locale, this.lang);\r\n\r\n\t\tthis._executeBindings();\r\n\t}\r\n\r\n\t//get current locale\r\n\tgetLocale(locale){\r\n\t\treturn this.locale;\r\n\t}\r\n\r\n\t//get lang object for given local or current if none provided\r\n\tgetLang(locale){\r\n\t\treturn locale ? this.langList[locale] : this.lang;\r\n\t}\r\n\r\n\t//get text for current locale\r\n\tgetText(path, value){\r\n\t\tvar path = value ? path + \"|\" + value : path,\r\n\t\tpathArray = path.split(\"|\"),\r\n\t\ttext = this._getLangElement(pathArray, this.locale);\r\n\r\n\t\t// if(text === false){\r\n\t\t// \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\r\n\t\t// }\r\n\r\n\t\treturn text || \"\";\r\n\t}\r\n\r\n\t//traverse langs object and find localized copy\r\n\t_getLangElement(path, locale){\r\n\t\tvar root = this.lang;\r\n\r\n\t\tpath.forEach(function(level){\r\n\t\t\tvar rootPath;\r\n\r\n\t\t\tif(root){\r\n\t\t\t\trootPath = root[level];\r\n\r\n\t\t\t\tif(typeof rootPath != \"undefined\"){\r\n\t\t\t\t\troot = rootPath;\r\n\t\t\t\t}else{\r\n\t\t\t\t\troot = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t//set update binding\r\n\tbind(path, callback){\r\n\t\tif(!this.bindings[path]){\r\n\t\t\tthis.bindings[path] = [];\r\n\t\t}\r\n\r\n\t\tthis.bindings[path].push(callback);\r\n\r\n\t\tcallback(this.getText(path), this.lang);\r\n\t}\r\n\r\n\t//itterate through bindings and trigger updates\r\n\t_executeBindings(){\r\n\t\tfor(let path in this.bindings){\r\n\t\t\tthis.bindings[path].forEach((binding) => {\r\n\t\t\t\tbinding(this.getText(path), this.lang);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nLocalize.moduleName = \"localize\";\r\n\r\n//load defaults\r\nLocalize.langs = defaultLangs;\r\n\r\nexport default Localize;","import Module from '../../core/Module.js';\r\nimport TableRegistry from '../../core/tools/TableRegistry.js';\r\n\r\nclass Comms extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"tableComms\", this.receive.bind(this));\r\n\t}\r\n\r\n\tgetConnections(selectors){\r\n\t\tvar connections = [],\r\n\t\tconnection;\r\n\r\n\t\tconnection = TableRegistry.lookupTable(selectors);\r\n\r\n\t\tconnection.forEach((con) =>{\r\n\t\t\tif(this.table !== con){\r\n\t\t\t\tconnections.push(con);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn connections;\r\n\t}\r\n\r\n\tsend(selectors, module, action, data){\r\n\t\tvar connections = this.getConnections(selectors);\r\n\r\n\t\tconnections.forEach((connection) => {\r\n\t\t\tconnection.tableComms(this.table.element, module, action, data);\r\n\t\t});\r\n\r\n\t\tif(!connections.length && selectors){\r\n\t\t\tconsole.warn(\"Table Connection Error - No tables matching selector found\", selectors);\r\n\t\t}\r\n\t}\r\n\r\n\treceive(table, module, action, data){\r\n\t\tif(this.table.modExists(module)){\r\n\t\t\treturn this.table.modules[module].commsReceived(table, action, data);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Inter-table Comms Error - no such module:\", module);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nComms.moduleName = \"comms\";\r\n\r\nexport default Comms;","import * as coreModules from '../modules/core.js';\r\nimport TableRegistry from './TableRegistry.js';\r\n\r\nexport default class ModuleBinder {\r\n\t\r\n\tconstructor(tabulator, modules){\r\n\t\tthis.bindStaticFuctionality(tabulator);\r\n\t\tthis.bindModules(tabulator, coreModules, true);\r\n\t\t\r\n\t\tif(modules){\r\n\t\t\tthis.bindModules(tabulator, modules);\r\n\t\t}\r\n\t}\r\n\t\r\n\tbindStaticFuctionality(tabulator){\r\n\t\ttabulator.moduleBindings = {};\r\n\t\t\r\n\t\ttabulator.extendModule = function(name, property, values){\r\n\t\t\tif(tabulator.moduleBindings[name]){\r\n\t\t\t\tvar source = tabulator.moduleBindings[name][property];\r\n\t\t\t\t\r\n\t\t\t\tif(source){\r\n\t\t\t\t\tif(typeof values == \"object\"){\r\n\t\t\t\t\t\tfor(let key in values){\r\n\t\t\t\t\t\t\tsource[key] = values[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Module Error - Invalid value type, it must be an object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Module Error - property does not exist:\", property);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Module Error - module does not exist:\", name);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\ttabulator.registerModule = function(modules){\r\n\t\t\tif(!Array.isArray(modules)){\r\n\t\t\t\tmodules = [modules];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmodules.forEach((mod) => {\r\n\t\t\t\ttabulator.registerModuleBinding(mod)\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\ttabulator.registerModuleBinding = function(mod){\r\n\t\t\ttabulator.moduleBindings[mod.moduleName] = mod;\r\n\t\t};\r\n\t\t\r\n\t\ttabulator.findTable = function(query){\r\n\t\t\tvar results = TableRegistry.lookupTable(query, true);\r\n\t\t\treturn Array.isArray(results) && !results.length ? false : results;\r\n\t\t}\r\n\t\t\r\n\t\t//ensure that module are bound to instantiated function\r\n\t\ttabulator.prototype.bindModules = function(){\r\n\t\t\tvar orderedStartMods = [],\r\n\t\t\torderedEndMods = [],\r\n\t\t\tunOrderedMods = [];\r\n\t\t\t\r\n\t\t\tthis.modules = {};\r\n\t\t\t\r\n\t\t\tfor(var name in tabulator.moduleBindings){\r\n\t\t\t\tlet mod = tabulator.moduleBindings[name];\r\n\t\t\t\tlet module = new mod(this);\r\n\t\t\t\t\r\n\t\t\t\tthis.modules[name] = module;\r\n\t\t\t\t\r\n\t\t\t\tif(mod.prototype.moduleCore){\r\n\t\t\t\t\tthis.modulesCore.push(module);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(mod.moduleInitOrder){\r\n\t\t\t\t\t\tif(mod.moduleInitOrder < 0){\r\n\t\t\t\t\t\t\torderedStartMods.push(module);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\torderedEndMods.push(module);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tunOrderedMods.push(module);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\torderedStartMods.sort((a, b) => a.moduleInitOrder > b.moduleInitOrder ? 1 : -1);\r\n\t\t\torderedEndMods.sort((a, b) => a.moduleInitOrder > b.moduleInitOrder ? 1 : -1);\r\n\t\t\t\r\n\t\t\tthis.modulesRegular = orderedStartMods.concat(unOrderedMods.concat(orderedEndMods));\r\n\t\t}\r\n\t}\r\n\t\r\n\tbindModules(tabulator, modules, core){\r\n\t\tvar mods = Object.values(modules);\r\n\t\t\r\n\t\tif(core){\r\n\t\t\tmods.forEach((mod) => {\r\n\t\t\t\tmod.prototype.moduleCore = true;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\ttabulator.registerModule(mods);\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\n\r\nexport default class Alert extends CoreFeature{\r\n    constructor(table){\r\n        super(table);\r\n        \r\n        this.element = this._createAlertElement();\r\n        this.msgElement = this._createMsgElement();\r\n        this.type = null;\r\n        \r\n        this.element.appendChild(this.msgElement);\r\n    }\r\n    \r\n    _createAlertElement(){\r\n        var el = document.createElement(\"div\");\r\n        el.classList.add(\"tabulator-alert\");\r\n        return el;\r\n    }\r\n    \r\n    _createMsgElement(){\r\n        var el = document.createElement(\"div\");\r\n        el.classList.add(\"tabulator-alert-msg\");\r\n        el.setAttribute(\"role\", \"alert\");\r\n        return el;\r\n    }\r\n    \r\n    _typeClass(){\r\n        return \"tabulator-alert-state-\" + this.type;\r\n    }\r\n    \r\n    alert(content, type = \"msg\"){\r\n        if(content){\r\n            this.clear();\r\n            \r\n            this.type = type;\r\n            \r\n            while(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n            \r\n            this.msgElement.classList.add(this._typeClass());\r\n            \r\n            if(typeof content === \"function\"){\r\n                content = content();\r\n            }\r\n            \r\n            if(content instanceof HTMLElement){\r\n                this.msgElement.appendChild(content);\r\n            }else{\r\n                this.msgElement.innerHTML = content;\r\n            }\r\n            \r\n            this.table.element.appendChild(this.element);\r\n        }\r\n    }\r\n    \r\n    clear(){\r\n        if(this.element.parentNode){\r\n            this.element.parentNode.removeChild(this.element);\r\n        }\r\n        \r\n        this.msgElement.classList.remove(this._typeClass());\r\n    }\r\n}","'use strict';\r\n\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport ColumnManager from './ColumnManager.js';\r\nimport RowManager from './RowManager.js';\r\nimport FooterManager from './FooterManager.js';\r\n\r\nimport InteractionMonitor from './tools/InteractionMonitor.js';\r\nimport ComponentFunctionBinder from './tools/ComponentFunctionBinder.js';\r\nimport DataLoader from './tools/DataLoader.js';\r\n\r\nimport ExternalEventBus from './tools/ExternalEventBus.js';\r\nimport InternalEventBus from './tools/InternalEventBus.js';\r\n\r\nimport TableRegistry from './tools/TableRegistry.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nimport Alert from './tools/Alert.js';\r\n\r\nclass Tabulator {\r\n\t\r\n\tconstructor(element, options){\r\n\t\t\r\n\t\tthis.options = {};\r\n\t\t\r\n\t\tthis.columnManager = null; // hold Column Manager\r\n\t\tthis.rowManager = null; //hold Row Manager\r\n\t\tthis.footerManager = null; //holder Footer Manager\r\n\t\tthis.alertManager = null; //hold Alert Manager\r\n\t\tthis.vdomHoz  = null; //holder horizontal virtual dom\r\n\t\tthis.externalEvents = null; //handle external event messaging\r\n\t\tthis.eventBus = null; //handle internal event messaging\r\n\t\tthis.interactionMonitor = false; //track user interaction\r\n\t\tthis.browser = \"\"; //hold current browser type\r\n\t\tthis.browserSlow = false; //handle reduced functionality for slower browsers\r\n\t\tthis.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\r\n\t\tthis.rtl = false; //check if the table is in RTL mode\r\n\t\tthis.originalElement = null; //hold original table element if it has been replaced\r\n\t\t\r\n\t\tthis.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\r\n\t\tthis.dataLoader = false; //bind component functions\r\n\t\t\r\n\t\tthis.modules = {}; //hold all modules bound to this table\r\n\t\tthis.modulesCore = []; //hold core modules bound to this table (for initialization purposes)\r\n\t\tthis.modulesRegular = []; //hold regular modules bound to this table (for initialization purposes)\r\n\t\t\r\n\t\tthis.optionsList = new OptionsList(this, \"table constructor\");\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\t\r\n\t\tif(this.initializeElement(element)){\r\n\t\t\t\r\n\t\t\tthis.initializeCoreSystems(options);\r\n\t\t\t\r\n\t\t\t//delay table creation to allow event bindings immediately after the constructor\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._create();\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\tTableRegistry.register(this); //register table for inter-device communication\r\n\t}\r\n\t\r\n\tinitializeElement(element){\r\n\t\tif(typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement){\r\n\t\t\tthis.element = element;\r\n\t\t\treturn true;\r\n\t\t}else if(typeof element === \"string\"){\r\n\t\t\tthis.element = document.querySelector(element);\r\n\t\t\t\r\n\t\t\tif(this.element){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Tabulator Creation Error - no element found matching selector: \", element);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Tabulator Creation Error - Invalid element provided:\", element);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeCoreSystems(options){\r\n\t\tthis.columnManager = new ColumnManager(this);\r\n\t\tthis.rowManager = new RowManager(this);\r\n\t\tthis.footerManager = new FooterManager(this);\r\n\t\tthis.dataLoader = new DataLoader(this);\r\n\t\tthis.alertManager = new Alert(this);\r\n\t\t\r\n\t\tthis.bindModules();\r\n\t\t\r\n\t\tthis.options = this.optionsList.generate(Tabulator.defaultOptions, options)\r\n\t\t\r\n\t\tthis._clearObjectPointers();\r\n\t\t\r\n\t\tthis._mapDeprecatedFunctionality();\r\n\t\t\r\n\t\tthis.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\r\n\t\tthis.eventBus = new InternalEventBus(this.options.debugEventsInternal);\r\n\t\t\r\n\t\tthis.interactionMonitor = new InteractionMonitor(this);\r\n\t\t\r\n\t\tthis.dataLoader.initialize();\r\n\t\t// this.columnManager.initialize();\r\n\t\t// this.rowManager.initialize();\r\n\t\tthis.footerManager.initialize();\r\n\t}\r\n\t\r\n\t//convert deprecated functionality to new functions\r\n\t_mapDeprecatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\t\r\n\t_clearSelection(){\r\n\t\t\r\n\t\tthis.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {  // Chrome\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {  // Firefox\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if (document.selection) {  // IE?\r\n\t\t\tdocument.selection.empty();\r\n\t\t}\r\n\t\t\r\n\t\tthis.element.classList.remove(\"tabulator-block-select\");\r\n\t}\r\n\t\r\n\t//create table\r\n\t_create(){\r\n\t\tthis.externalEvents.dispatch(\"tableBuilding\");\r\n\t\tthis.eventBus.dispatch(\"table-building\");\r\n\t\t\r\n\t\tthis._rtlCheck();\r\n\t\t\r\n\t\tthis._buildElement();\r\n\t\t\r\n\t\tthis._initializeTable();\r\n\t\t\r\n\t\tthis._loadInitialData();\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t\t\r\n\t\tthis.externalEvents.dispatch(\"tableBuilt\");\r\n\t}\r\n\t\r\n\t_rtlCheck(){\r\n\t\tvar style = window.getComputedStyle(this.element);\r\n\t\t\r\n\t\tswitch(this.options.textDirection){\r\n\t\t\tcase\"auto\":\r\n\t\t\tif(style.direction !== \"rtl\"){\r\n\t\t\t\tbreak;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tcase \"rtl\":\r\n\t\t\tthis.element.classList.add(\"tabulator-rtl\");\r\n\t\t\tthis.rtl = true;\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"ltr\":\r\n\t\t\tthis.element.classList.add(\"tabulator-ltr\");\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\tthis.rtl = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//clear pointers to objects in default config object\r\n\t_clearObjectPointers(){\r\n\t\tthis.options.columns = this.options.columns.slice(0);\r\n\t\t\r\n\t\tif(Array.isArray(this.options.data) && !this.options.reactiveData){\r\n\t\t\tthis.options.data = this.options.data.slice(0);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//build tabulator element\r\n\t_buildElement(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options,\r\n\t\tnewElement;\r\n\t\t\r\n\t\tif(element.tagName === \"TABLE\"){\r\n\t\t\tthis.originalElement = this.element;\r\n\t\t\tnewElement = document.createElement(\"div\");\r\n\t\t\t\r\n\t\t\t//transfer attributes to new element\r\n\t\t\tvar attributes = element.attributes;\r\n\t\t\t\r\n\t\t\t// loop through attributes and apply them on div\r\n\t\t\tfor(var i in attributes){\r\n\t\t\t\tif(typeof attributes[i] == \"object\"){\r\n\t\t\t\t\tnewElement.setAttribute(attributes[i].name, attributes[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// replace table with div element\r\n\t\t\telement.parentNode.replaceChild(newElement, element);\r\n\t\t\t\r\n\t\t\tthis.element = element = newElement;\r\n\t\t}\r\n\t\t\r\n\t\telement.classList.add(\"tabulator\");\r\n\t\telement.setAttribute(\"role\", \"grid\");\r\n\t\t\r\n\t\t//empty element\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\t\r\n\t\t//set table height\r\n\t\tif(options.height){\r\n\t\t\toptions.height = isNaN(options.height) ? options.height : options.height + \"px\";\r\n\t\t\telement.style.height = options.height;\r\n\t\t}\r\n\t\t\r\n\t\t//set table min height\r\n\t\tif(options.minHeight !== false){\r\n\t\t\toptions.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\r\n\t\t\telement.style.minHeight = options.minHeight;\r\n\t\t}\r\n\t\t\r\n\t\t//set table maxHeight\r\n\t\tif(options.maxHeight !== false){\r\n\t\t\toptions.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\r\n\t\t\telement.style.maxHeight = options.maxHeight;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//initialize core systems and modules\r\n\t_initializeTable(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options;\r\n\t\t\r\n\t\tthis.interactionMonitor.initialize();\r\n\t\t\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\t\t\r\n\t\tthis._detectBrowser();\r\n\t\t\r\n\t\t//initialize core modules\r\n\t\tthis.modulesCore.forEach((mod) => {\r\n\t\t\tmod.initialize();\r\n\t\t})\r\n\t\t\r\n\t\t//build table elements\r\n\t\telement.appendChild(this.columnManager.getElement());\r\n\t\telement.appendChild(this.rowManager.getElement());\r\n\t\t\r\n\t\tif(options.footerElement){\r\n\t\t\tthis.footerManager.activate();\r\n\t\t}\r\n\t\t\r\n\t\tif(options.autoColumns && options.data){\r\n\t\t\t\r\n\t\t\tthis.columnManager.generateColumnsFromRowData(this.options.data);\r\n\t\t}\r\n\t\t\r\n\t\t//initialize regular modules\r\n\t\tthis.modulesRegular.forEach((mod) => {\r\n\t\t\tmod.initialize();\r\n\t\t});\r\n\t\t\r\n\t\tthis.columnManager.setColumns(options.columns);\r\n\t\t\r\n\t\tthis.eventBus.dispatch(\"table-built\");\r\n\t}\r\n\t\r\n\t_loadInitialData(){\r\n\t\tthis.dataLoader.load(this.options.data);\r\n\t}\r\n\t\r\n\t//deconstructor\r\n\tdestroy(){\r\n\t\tvar element = this.element;\r\n\t\t\r\n\t\tTableRegistry.deregister(this); //deregister table from inter-device communication\r\n\t\t\r\n\t\tthis.eventBus.dispatch(\"table-destroy\");\r\n\t\t\r\n\t\t//clear row data\r\n\t\tthis.rowManager.rows.forEach(function(row){\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\t\t\r\n\t\tthis.rowManager.rows = [];\r\n\t\tthis.rowManager.activeRows = [];\r\n\t\tthis.rowManager.displayRows = [];\r\n\t\t\r\n\t\t//clear DOM\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\telement.classList.remove(\"tabulator\");\r\n\t}\r\n\t\r\n\t_detectBrowser(){\r\n\t\tvar ua = navigator.userAgent||navigator.vendor||window.opera;\r\n\t\t\r\n\t\tif(ua.indexOf(\"Trident\") > -1){\r\n\t\t\tthis.browser = \"ie\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Edge\") > -1){\r\n\t\t\tthis.browser = \"edge\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Firefox\") > -1){\r\n\t\t\tthis.browser = \"firefox\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}else{\r\n\t\t\tthis.browser = \"other\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}\r\n\t\t\r\n\t\tthis.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.slice(0,4));\r\n\t}\r\n\t\r\n\tinitGuard(func, msg){\r\n\t\tvar stack, line;\r\n\t\t\r\n\t\tif(this.options.debugInitialization && !this.initialized){\r\n\t\t\tif(!func){\r\n\t\t\t\tstack = new Error().stack.split(\"\\n\");\r\n\t\t\t\t\r\n\t\t\t\tline = stack[0] == \"Error\" ? stack[2] : stack[1];\r\n\t\t\t\t\r\n\t\t\t\tif(line[0] == \" \"){\r\n\t\t\t\t\tfunc = line.trim().split(\" \")[1].split(\".\")[1];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfunc = line.trim().split(\"@\")[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.warn(\"Table Not Initialized - Calling the \" + func + \" function before the table is initialized may result in inconsistent behavior, Please wait for the `tableBuilt` event before calling this function.\" + (msg ? \" \" + msg : \"\"));\r\n\t\t}\r\n\t\t\r\n\t\treturn this.initialized;\r\n\t}\r\n\t\r\n\t////////////////// Data Handling //////////////////\r\n\t//block table redrawing\r\n\tblockRedraw(){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn this.rowManager.blockRedraw();\r\n\t}\r\n\t\r\n\t//restore table redrawing\r\n\trestoreRedraw(){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn this.rowManager.restoreRedraw();\r\n\t}\r\n\t\r\n\t//load data\r\n\tsetData(data, params, config){\r\n\t\tthis.initGuard(false, \"To set initial data please use the 'data' property in the table constructor.\");\r\n\t\t\r\n\t\treturn this.dataLoader.load(data, params, config, false);\r\n\t}\r\n\t\r\n\t//clear data\r\n\tclearData(){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tthis.dataLoader.blockActiveLoad();\r\n\t\tthis.rowManager.clearData();\r\n\t}\r\n\t\r\n\t//get table data array\r\n\tgetData(active){\r\n\t\treturn this.rowManager.getData(active);\r\n\t}\r\n\t\r\n\t//get table data array count\r\n\tgetDataCount(active){\r\n\t\treturn this.rowManager.getDataCount(active);\r\n\t}\r\n\t\r\n\t//replace data, keeping table in position with same sort\r\n\treplaceData(data, params, config){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn this.dataLoader.load(data, params, config, true, true);\r\n\t}\r\n\t\r\n\t//update table data\r\n\tupdateData(data){\r\n\t\tvar responses = 0;\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.dataLoader.blockActiveLoad();\r\n\t\t\t\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(data){\r\n\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\tresponses++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\taddData(data, pos, index){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.dataLoader.blockActiveLoad();\r\n\t\t\t\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(data){\r\n\t\t\t\tthis.rowManager.addRows(data, pos, index)\r\n\t\t\t\t.then((rows) => {\r\n\t\t\t\t\tvar output = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\t\toutput.push(row.getComponent());\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(output);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t//update table data\r\n\tupdateOrAddData(data){\r\n\t\tvar rows = [],\r\n\t\tresponses = 0;\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.dataLoader.blockActiveLoad();\r\n\t\t\t\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(data){\r\n\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tresponses++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\trows.push(row.getComponent());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.rowManager.addRows(item)\r\n\t\t\t\t\t\t.then((newRows)=>{\r\n\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\trows.push(newRows[0].getComponent());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t//get row object\r\n\tgetRow(index){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//get row object\r\n\tgetRowFromPosition(position, active){\r\n\t\tvar row = this.rowManager.getRowFromPosition(position, active);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", position);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//delete row from table\r\n\tdeleteRow(index){\r\n\t\tvar foundRows = [];\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(!Array.isArray(index)){\r\n\t\t\tindex = [index];\r\n\t\t}\r\n\t\t\r\n\t\t//find matching rows\r\n\t\tfor(let item of index){\r\n\t\t\tlet row = this.rowManager.findRow(item, true);\r\n\t\t\t\r\n\t\t\tif(row){\r\n\t\t\t\tfoundRows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Delete Error - No matching row found:\", item);\r\n\t\t\t\treturn Promise.reject(\"Delete Error - No matching row found\")\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//sort rows into correct order to ensure smooth delete from table\r\n\t\tfoundRows.sort((a, b) => {\r\n\t\t\treturn this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\r\n\t\t});\r\n\t\t\r\n\t\t//delete rows\r\n\t\tfoundRows.forEach((row) =>{\r\n\t\t\trow.delete()\r\n\t\t});\r\n\t\t\r\n\t\tthis.rowManager.reRenderInPosition();\r\n\t\t\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\t\r\n\t//add row to table\r\n\taddRow(data, pos, index){\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.rowManager.addRows(data, pos, index)\r\n\t\t.then((rows)=>{\r\n\t\t\treturn rows[0].getComponent();\r\n\t\t});\r\n\t}\r\n\t\r\n\t//update a row if it exitsts otherwise create it\r\n\tupdateOrAddRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn row.getComponent();\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\treturn this.rowManager.addRows(data)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\t//update row data\r\n\tupdateRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn Promise.resolve(row.getComponent());\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Update Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Update Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t//scroll to row in DOM\r\n\tscrollToRow(index, position, ifVisible){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.scrollToRow(row, position, ifVisible)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Scroll Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Scroll Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveRow(from, to, after){\r\n\t\tvar fromRow = this.rowManager.findRow(from);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(fromRow){\r\n\t\t\tfromRow.moveToRow(to, after);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", from);\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetRows(active){\r\n\t\treturn this.rowManager.getComponents(active);\t\r\n\t}\r\n\t\r\n\t//get position of row in table\r\n\tgetRowPosition(index, active){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\t\t\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.getRowPosition(row, active);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Position Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////// Column Functions  ///////////////\r\n\tsetColumns(definition){\r\n\t\tthis.initGuard(false, \"To set initial columns please use the 'columns' property in the table constructor\");\r\n\t\t\r\n\t\tthis.columnManager.setColumns(definition);\r\n\t}\r\n\t\r\n\tgetColumns(structured){\r\n\t\treturn this.columnManager.getComponents(structured);\r\n\t}\r\n\t\r\n\tgetColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tif(column){\r\n\t\t\treturn column.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetColumnDefinitions(){\r\n\t\treturn this.columnManager.getDefinitionTree();\r\n\t}\r\n\t\r\n\tshowColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(column){\r\n\t\t\tcolumn.show();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Show Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\thideColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field); \r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(column){\r\n\t\t\tcolumn.hide();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Hide Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\ttoggleColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.show();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColumn(definition, before, field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\treturn this.columnManager.addColumn(definition, before, column)\r\n\t\t.then((column) => {\r\n\t\t\treturn column.getComponent();\r\n\t\t});\r\n\t}\r\n\t\r\n\tdeleteColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(column){\r\n\t\t\treturn column.delete();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Delete Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateColumnDefinition(field, definition){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(column){\r\n\t\t\treturn column.updateDefinition(definition)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Update Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveColumn(from, to, after){\r\n\t\tvar fromColumn = this.columnManager.findColumn(from),\r\n\t\ttoColumn = this.columnManager.findColumn(to);\r\n\t\t\r\n\t\tthis.initGuard();\r\n\t\t\r\n\t\tif(fromColumn){\r\n\t\t\tif(toColumn){\r\n\t\t\t\tthis.columnManager.moveColumn(fromColumn, toColumn, after)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", from);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//scroll to column in DOM\r\n\tscrollToColumn(field, position, ifVisible){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this.columnManager.findColumn(field);\r\n\t\t\t\r\n\t\t\tif(column){\r\n\t\t\t\treturn this.columnManager.scrollToColumn(column, position, ifVisible)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - No matching column found:\", field);\r\n\t\t\t\treturn Promise.reject(\"Scroll Error - No matching column found\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t//////////// General Public Functions ////////////\r\n\t//redraw list without updating data\r\n\tredraw(force){\r\n\t\tthis.initGuard();\r\n\r\n\t\tthis.columnManager.redraw(force);\r\n\t\tthis.rowManager.redraw(force);\r\n\t}\r\n\t\r\n\tsetHeight(height){\r\n\t\tthis.options.height = isNaN(height) ? height : height + \"px\";\r\n\t\tthis.element.style.height = this.options.height;\r\n\t\tthis.rowManager.initializeRenderer();\r\n\t\tthis.rowManager.redraw();\r\n\t}\r\n\t\r\n\t//////////////////// Event Bus ///////////////////\r\n\t\r\n\ton(key, callback){\r\n\t\tthis.externalEvents.subscribe(key, callback);\r\n\t}\r\n\t\r\n\toff(key, callback){\r\n\t\tthis.externalEvents.unsubscribe(key, callback);\r\n\t}\r\n\t\r\n\tdispatchEvent(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\t\t\r\n\t\tthis.externalEvents.dispatch(...arguments)\r\n\t}\r\n\r\n\t//////////////////// Alerts ///////////////////\r\n\r\n\talert(contents, type){\r\n\t\tthis.initGuard();\r\n\r\n\t\tthis.alertManager.alert(contents, type);\r\n\t}\r\n\r\n\tclearAlert(){\r\n\t\tthis.initGuard();\r\n\r\n\t\tthis.alertManager.clear();\r\n\t}\r\n\t\r\n\t////////////// Extension Management //////////////\r\n\tmodExists(plugin, required){\r\n\t\tif(this.modules[plugin]){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tif(required){\r\n\t\t\t\tconsole.error(\"Tabulator Module Not Installed: \" + plugin);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tmodule(key){\r\n\t\tvar mod = this.modules[key];\r\n\t\t\r\n\t\tif(!mod){\r\n\t\t\tconsole.error(\"Tabulator module not installed: \" + key);\r\n\t\t}\r\n\t\t\r\n\t\treturn mod;\r\n\t}\r\n}\r\n\r\n//default setup options\r\nTabulator.defaultOptions = defaultOptions;\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(Tabulator);\r\n\r\nexport default Tabulator;\r\n","//tabulator with all modules installed\r\nimport {default as Tabulator} from './Tabulator.js';\r\nimport * as modules from '../core/modules/optional.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nclass TabulatorFull extends Tabulator {};\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(TabulatorFull, modules);\r\n\r\nexport default TabulatorFull;","export default class PseudoRow {\r\n\r\n\tconstructor (type){\r\n\t\tthis.type = type;\r\n\t\tthis.element = this._createElement();\r\n\t}\r\n\r\n\t_createElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetComponent(){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn {};\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.outerHeight;\r\n\t}\r\n\r\n\tinitialize(){}\r\n\r\n\treinitialize(){}\r\n\r\n\tnormalizeHeight(){}\r\n\r\n\tgenerateCells(){}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n}"]},"metadata":{},"sourceType":"module"}