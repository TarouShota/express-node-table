{"ast":null,"code":"import _defineProperty from\"D:/move-forward/react-ukol/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/move-forward/react-ukol/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/move-forward/react-ukol/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{cloneElement,useEffect,useState}from'react';import{useTable}from\"react-table\";import{objectConverter,calculateHours}from'../testScript';import'../index.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var borderStyle={};var activeCell={backgroundColor:'#16DB65'};export function ReactTable(jsonArray){// console.log(window.rows)\nvar rowData=window.rows;var columnData=window.columns;var jsonStateArray=jsonArray.jsonArray;var convertedArray=objectConverter(jsonStateArray);// console.log(jsonStateArray);\n// console.log(arrayToSend);\n// console.log(rowData)\n// console.log(window.dataCopy)\n// console.log(jineObject)\nvar _useState=useState(convertedArray),_useState2=_slicedToArray(_useState,2),cellData=_useState2[0],setCellData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),hourlyRate=_useState4[0],setHourlyRate=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalHours=_useState6[0],setTotalHours=_useState6[1];var finalJson=[];var jineObject={};for(var key in convertedArray){jineObject[key]=0;}var _useState7=useState(jineObject),_useState8=_slicedToArray(_useState7,2),value=_useState8[0],setValue=_useState8[1];/**\r\n     * `const onChange = (e, name) => setValue({...value, [name]: e.target.value})`\r\n     * @param e - the event object\r\n     * @param name - The name of the field.\r\n     */var _onChange=function onChange(e,name){console.log(e);var changeJine=function changeJine(){return setValue(_objectSpread(_objectSpread({},value),{},_defineProperty({},name,e.target.value)));};changeJine();};var rateChange=function rateChange(e){setHourlyRate(e.target.value);};useEffect(function(){console.log(value);},[]);// console.log(columnData)\n// console.log(jsonRows.jsonRows);\n// console.log(jsonRows.jsonColumns)\n//e.target.value\nuseEffect(function(){console.log(cellData);},[cellData]);// const onBlur = (name, columnIndex) => {\n//     updateMyData(name, columnIndex, value);\n// };\n/**\r\n     * It takes a name and a columnIndex as arguments, and then updates the value of the cellData\r\n     * object at the location specified by the name and columnIndex arguments.\r\n     * @param name - the name of the cell\r\n     * @param columnIndex - the index of the column that was clicked\r\n     */var updateMyData=function updateMyData(name,columnIndex){var togleState=function togleState(){return setCellData(_objectSpread(_objectSpread({},cellData),{},_defineProperty({},name,_objectSpread(_objectSpread({},cellData[name]),{},_defineProperty({},columnIndex,_objectSpread(_objectSpread({},cellData[name][columnIndex]),{},{value:value[name]}))))));};togleState();};/**\r\n     * It toggles the state of the clicked property of the object in the cellData array.\r\n     * @param name - the name of the row\r\n     * @param columnIndex - the index of the column that was clicked\r\n     */function MudaObject(name,columnIndex){function stateToggle(){return!cellData[name][columnIndex].clicked;}var togleState=function togleState(){return setCellData(_objectSpread(_objectSpread({},cellData),{},_defineProperty({},name,_objectSpread(_objectSpread({},cellData[name]),{},_defineProperty({},columnIndex,_objectSpread(_objectSpread({},cellData[name][columnIndex]),{},{clicked:stateToggle()}))))));};togleState();}// const newData = [];\n// origData.forEach((actorObj) => {\n//     actorObj.movies.forEach((movie) => {\n//         newData.push({\n//             [\"actor\"]: actorObj.actor,\n//             movie: movie.namel\n//         });\n//     });\n// });\n/* A function that is called when the user clicks on a cell. It is supposed to change the value of the\r\n    cell. */ // const togleState = () => setCellData({\n//     ...cellData,\n//     [name]: {\n//         ...cellData[name],\n//         [columnIndex]: {\n//             ...cellData[name][columnIndex],\n//             value: e.target.value\n//         }\n//     }\n// })\n// togleState()\nvar data=React.useMemo(function(){return rowData;},[]);// console.log(data);\nvar testJson=['nazev','trivialni','grafika','pokrocile','jine'];/* Creating an array of objects. */var testColumns=[];columnData.forEach(function(element,index){var testObj={Header:element,accessor:element,id:index};testColumns.push(testObj);});// console.log(testColumns)\nvar columns=React.useMemo(function(){return testColumns;},[]);var _useTable=useTable({columns:columns,data:data}),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow;// function read(e, index, row) {\n//     console.log(e);\n// }\n/**\r\n     * It returns a React element.\r\n     * @returns The function FinalButton is being returned.\r\n     */function FinalButton(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h4\",{style:{marginTop:'2rem'},children:[\"Celkov\\xFD po\\u010Det hodin \",totalHours]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Celkov\\xE1 \\u010D\\xE1stka - \",totalHours*hourlyRate]})]});}/**\r\n     * It takes an array of objects, adds a new property to each object, and then adds a new object to the\r\n     * end of the array.\r\n     * \r\n     * The new property is called \"součet\" and it's value is the product of two other properties in the\r\n     * object.\r\n     * \r\n     * The new object is called \"celkem\" and it's value is the sum of all the \"hodiny\" properties in the\r\n     * array.\r\n     * \r\n     * The function also sets a global variable called \"totalHours\" to the value of the \"celkem\" property.\r\n     * \r\n     * The function also sets a global variable called \"lastData\" to the array of objects.\r\n     * \r\n     * The function also calls a function called \"submitFile\" and passes it the array of objects.\r\n     * \r\n     * The function also calls a function called \"setTotalHours\" and passes it the value of the \"celkem\"\r\n     * property.\r\n     * @param e - the event object\r\n     */function createLastData(e){var lastData=calculateHours(cellData);var totalSum=0;lastData.forEach(function(element){totalSum+=element.hodiny;element['součet']=element.hodiny*hourlyRate;});lastData[lastData.length]={nazev:'celkem',hodiny:totalSum,součet:totalSum*hourlyRate};// console.log(lastData)\nwindow.lastData=lastData;console.log(window.lastData);setTotalHours(totalSum);//console.log(window.jsonToCsvData)\n// submitFile(jsonToCsvData)\n}/**\r\n     * It takes an array of objects and returns a string of the objects in CSV format.\r\n     * @param objArray - The array of objects that you want to convert to CSV.\r\n     * @returns A string of the data in the format of a CSV file.\r\n     */function convertToCSV(objArray){var array=typeof objArray!=\"object\"?JSON.parse(objArray):objArray;var str=\"\";// console.log(array)\nfor(var i=0;i<array.length;i++){var line=\"\";for(var index in array[i]){if(line!=\"\")line+=\";\";line+=array[i][index];}str+=line+\"\\r\\n\";}return str;}/**\r\n     * It takes an array of objects, converts it to a CSV string, and then downloads the CSV file.\r\n     * @param headers - An array of strings that will be used as the headers in the CSV file.\r\n     * @param items - The array of objects that you want to export.\r\n     * @param fileTitle - The title of the file you want to export.\r\n     */function exportCSVFile(headers,items,fileTitle){if(headers){items.unshift(headers);}// Convert Object to JSON\nvar jsonObject=JSON.stringify(items);var csv=convertToCSV(jsonObject);var exportedFilenmae=fileTitle+\".csv\"||\"export.csv\";var blob=new Blob([csv],{type:\"text/csv;charset=utf-8;\"});if(navigator.msSaveBlob){// IE 10+\nnavigator.msSaveBlob(blob,exportedFilenmae);}else{var link=document.createElement(\"a\");if(link.download!==undefined){// feature detection\n// Browsers that support HTML5 download attribute\nvar url=URL.createObjectURL(blob);link.setAttribute(\"href\",url);link.setAttribute(\"download\",exportedFilenmae);link.style.visibility=\"hidden\";document.body.appendChild(link);link.click();document.body.removeChild(link);}}}/* Creating an object with three properties. */var headers={nazev:\"nazev\".replace(/,/g,\"\"),// remove commas to avoid errors\nhodiny:\"hodiny\",součet:\"součet\"};// var fileTitle = \"perfektniSplnil\"; // or 'my-unique-title'\n//exportCSVFile(headers, itemsFormatted, fileTitle);\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",_objectSpread(_objectSpread({},getTableProps()),{},{className:\"table table-bordered table-dark \",children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps()),{},{children:column.render(\"Header\")}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell,j){if(cell.column.Header==testColumns[0].Header){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({rowSpan:cell.rowSpan},cell.getCellProps()),{},{children:cell.render(\"Cell\")}));}if(cell.column.Header=='jine'){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({rowSpan:cell.rowSpan// onClick={() =>\n//     MudaObject(row.cells[0].value, cell.column.id)\n// }\n},cell.getCellProps()),{},{style:activeCell,children:/*#__PURE__*/_jsx(\"input\",{style:{width:'4rem'},value:value[row.cells[0].value],onChange:function onChange(e){return _onChange(e,row.cells[0].value);},onBlur:function onBlur(){return updateMyData(row.cells[0].value,cell.column.id);}})}));}if(cellData[row.cells[0].value][cell.column.id].clicked==true){}// console.log(cell.column.id, row.cells[0].value)\n// console.log(cell.column.Header)\nreturn/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({rowSpan:cell.rowSpan,onClick:function onClick(){return MudaObject(row.cells[0].value,cell.column.id);}},cell.getCellProps()),{},{style:cellData[row.cells[0].value][cell.column.id].clicked?activeCell:borderStyle,children:cell.render(\"Cell\")}));})}));})}))]})),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{style:{marginBottom:'2rem'},className:\"form-control\",value:hourlyRate,onChange:function onChange(e){return setHourlyRate(e.target.value);},placeholder:\"hodinova sazba\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:createLastData,children:\" Vypo\\u010D\\xEDst\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'0.5rem',opacity:0.8},children:\"export only after clicking 'vypo\\u010D\\xEDst'\"}),/*#__PURE__*/_jsx(FinalButton,{}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-dark\",onClick:function onClick(){return exportCSVFile(headers,window.lastData,'perfektniFile');},style:{marginTop:'2rem'},children:\"Export csv\"})]});}","map":{"version":3,"sources":["D:/move-forward/react-ukol/frontend/src/components/react-table.js"],"names":["React","cloneElement","useEffect","useState","useTable","objectConverter","calculateHours","borderStyle","activeCell","backgroundColor","ReactTable","jsonArray","rowData","window","rows","columnData","columns","jsonStateArray","convertedArray","cellData","setCellData","hourlyRate","setHourlyRate","totalHours","setTotalHours","finalJson","jineObject","key","value","setValue","onChange","e","name","console","log","changeJine","target","rateChange","updateMyData","columnIndex","togleState","MudaObject","stateToggle","clicked","data","useMemo","testJson","testColumns","forEach","element","index","testObj","Header","accessor","id","push","getTableProps","getTableBodyProps","headerGroups","prepareRow","FinalButton","marginTop","createLastData","lastData","totalSum","hodiny","length","nazev","součet","convertToCSV","objArray","array","JSON","parse","str","i","line","exportCSVFile","headers","items","fileTitle","unshift","jsonObject","stringify","csv","exportedFilenmae","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","replace","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","j","rowSpan","getCellProps","width","marginBottom","opacity"],"mappings":"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","sourcesContent":["import React, { cloneElement, useEffect, useState } from 'react';\r\nimport { useTable } from \"react-table\";\r\nimport { objectConverter, calculateHours } from '../testScript';\r\nimport '../index.css';\r\n\r\n\r\n\r\n\r\nconst borderStyle = {\r\n\r\n};\r\nconst activeCell = {\r\n    backgroundColor: '#16DB65'\r\n}\r\n\r\nexport function ReactTable(jsonArray) {\r\n\r\n    // console.log(window.rows)\r\n    let rowData = window.rows\r\n    let columnData = window.columns\r\n    let jsonStateArray = jsonArray.jsonArray\r\n    let convertedArray = objectConverter(jsonStateArray);\r\n    // console.log(jsonStateArray);\r\n\r\n    // console.log(arrayToSend);\r\n    // console.log(rowData)\r\n    // console.log(window.dataCopy)\r\n\r\n\r\n    // console.log(jineObject)\r\n\r\n    const [cellData, setCellData] = useState(convertedArray);\r\n\r\n    const [hourlyRate, setHourlyRate] = useState(0)\r\n\r\n    const [totalHours, setTotalHours] = useState(0)\r\n\r\n    let finalJson = [];\r\n\r\n    let jineObject = {}\r\n    for (const key in convertedArray) {\r\n        jineObject[key] = 0;\r\n\r\n    }\r\n    const [value, setValue] = useState(jineObject);\r\n\r\n    /**\r\n     * `const onChange = (e, name) => setValue({...value, [name]: e.target.value})`\r\n     * @param e - the event object\r\n     * @param name - The name of the field.\r\n     */\r\n    const onChange = (e, name) => {\r\n        console.log(e)\r\n        const changeJine = () => setValue({\r\n            ...value,\r\n            [name]: e.target.value\r\n        })\r\n        changeJine()\r\n\r\n\r\n    };\r\n    const rateChange = (e) => {\r\n        setHourlyRate(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(value)\r\n    }, [])\r\n\r\n    // console.log(columnData)\r\n    // console.log(jsonRows.jsonRows);\r\n    // console.log(jsonRows.jsonColumns)\r\n    //e.target.value\r\n\r\n    useEffect(() => {\r\n        console.log(cellData);\r\n\r\n    }, [cellData])\r\n\r\n\r\n\r\n    // const onBlur = (name, columnIndex) => {\r\n\r\n    //     updateMyData(name, columnIndex, value);\r\n    // };\r\n\r\n    /**\r\n     * It takes a name and a columnIndex as arguments, and then updates the value of the cellData\r\n     * object at the location specified by the name and columnIndex arguments.\r\n     * @param name - the name of the cell\r\n     * @param columnIndex - the index of the column that was clicked\r\n     */\r\n    const updateMyData = (name, columnIndex) => {\r\n\r\n        const togleState = () => setCellData({\r\n            ...cellData,\r\n            [name]: {\r\n                ...cellData[name],\r\n                [columnIndex]: {\r\n                    ...cellData[name][columnIndex],\r\n                    value: value[name]\r\n\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n        togleState()\r\n    }\r\n\r\n    /**\r\n     * It toggles the state of the clicked property of the object in the cellData array.\r\n     * @param name - the name of the row\r\n     * @param columnIndex - the index of the column that was clicked\r\n     */\r\n    function MudaObject(name, columnIndex) {\r\n\r\n        function stateToggle() {\r\n            return !cellData[name][columnIndex].clicked\r\n        }\r\n\r\n        const togleState = () => setCellData({\r\n            ...cellData,\r\n            [name]: {\r\n                ...cellData[name],\r\n                [columnIndex]: {\r\n                    ...cellData[name][columnIndex],\r\n                    clicked: stateToggle()\r\n                }\r\n            }\r\n        })\r\n        togleState()\r\n    }\r\n    // const newData = [];\r\n    // origData.forEach((actorObj) => {\r\n    //     actorObj.movies.forEach((movie) => {\r\n    //         newData.push({\r\n    //             [\"actor\"]: actorObj.actor,\r\n    //             movie: movie.namel\r\n    //         });\r\n    //     });\r\n    // });\r\n    /* A function that is called when the user clicks on a cell. It is supposed to change the value of the\r\n    cell. */\r\n    // const togleState = () => setCellData({\r\n    //     ...cellData,\r\n    //     [name]: {\r\n    //         ...cellData[name],\r\n    //         [columnIndex]: {\r\n    //             ...cellData[name][columnIndex],\r\n    //             value: e.target.value\r\n    //         }\r\n    //     }\r\n    // })\r\n    // togleState()\r\n\r\n\r\n\r\n    let data = React.useMemo(() => rowData, []);\r\n\r\n    // console.log(data);\r\n\r\n    const testJson = ['nazev', 'trivialni', 'grafika', 'pokrocile', 'jine']\r\n\r\n    /* Creating an array of objects. */\r\n    let testColumns = []\r\n\r\n    columnData.forEach((element, index) => {\r\n        let testObj = {\r\n            Header: element,\r\n            accessor: element,\r\n            id: index\r\n        }\r\n        testColumns.push(testObj)\r\n    });\r\n\r\n    // console.log(testColumns)\r\n\r\n    let columns = React.useMemo(\r\n        () => testColumns,\r\n        []\r\n    );\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({ columns, data });\r\n\r\n    // function read(e, index, row) {\r\n    //     console.log(e);\r\n    // }\r\n\r\n    /**\r\n     * It returns a React element.\r\n     * @returns The function FinalButton is being returned.\r\n     */\r\n    function FinalButton() {\r\n        return (\r\n            <>\r\n                <h4 style={{ marginTop: '2rem' }}>Celkový počet hodin {totalHours}</h4>\r\n                <h4 >Celková částka - {totalHours * hourlyRate}</h4>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * It takes an array of objects, adds a new property to each object, and then adds a new object to the\r\n     * end of the array.\r\n     * \r\n     * The new property is called \"součet\" and it's value is the product of two other properties in the\r\n     * object.\r\n     * \r\n     * The new object is called \"celkem\" and it's value is the sum of all the \"hodiny\" properties in the\r\n     * array.\r\n     * \r\n     * The function also sets a global variable called \"totalHours\" to the value of the \"celkem\" property.\r\n     * \r\n     * The function also sets a global variable called \"lastData\" to the array of objects.\r\n     * \r\n     * The function also calls a function called \"submitFile\" and passes it the array of objects.\r\n     * \r\n     * The function also calls a function called \"setTotalHours\" and passes it the value of the \"celkem\"\r\n     * property.\r\n     * @param e - the event object\r\n     */\r\n    function createLastData(e) {\r\n        let lastData = calculateHours(cellData)\r\n        let totalSum = 0\r\n        lastData.forEach(element => {\r\n\r\n            totalSum += element.hodiny\r\n            element['součet'] = element.hodiny * hourlyRate\r\n        });\r\n\r\n        lastData[lastData.length] = { nazev: 'celkem', hodiny: totalSum, součet: totalSum * hourlyRate }\r\n        // console.log(lastData)\r\n        window.lastData = lastData\r\n        console.log(window.lastData)\r\n        setTotalHours(totalSum)\r\n        //console.log(window.jsonToCsvData)\r\n        // submitFile(jsonToCsvData)\r\n\r\n    }\r\n\r\n    /**\r\n     * It takes an array of objects and returns a string of the objects in CSV format.\r\n     * @param objArray - The array of objects that you want to convert to CSV.\r\n     * @returns A string of the data in the format of a CSV file.\r\n     */\r\n\r\n    function convertToCSV(objArray) {\r\n\r\n        var array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\r\n        var str = \"\";\r\n        // console.log(array)\r\n\r\n        for (var i = 0; i < array.length; i++) {\r\n            var line = \"\";\r\n            for (var index in array[i]) {\r\n                if (line != \"\") line += \";\";\r\n\r\n                line += array[i][index];\r\n            }\r\n\r\n            str += line + \"\\r\\n\";\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * It takes an array of objects, converts it to a CSV string, and then downloads the CSV file.\r\n     * @param headers - An array of strings that will be used as the headers in the CSV file.\r\n     * @param items - The array of objects that you want to export.\r\n     * @param fileTitle - The title of the file you want to export.\r\n     */\r\n    function exportCSVFile(headers, items, fileTitle) {\r\n\r\n        if (headers) {\r\n            items.unshift(headers);\r\n        }\r\n\r\n        // Convert Object to JSON\r\n        var jsonObject = JSON.stringify(items);\r\n\r\n        var csv = convertToCSV(jsonObject);\r\n\r\n        var exportedFilenmae = fileTitle + \".csv\" || \"export.csv\";\r\n\r\n        var blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n        if (navigator.msSaveBlob) {\r\n            // IE 10+\r\n            navigator.msSaveBlob(blob, exportedFilenmae);\r\n        } else {\r\n            var link = document.createElement(\"a\");\r\n            if (link.download !== undefined) {\r\n                // feature detection\r\n                // Browsers that support HTML5 download attribute\r\n                var url = URL.createObjectURL(blob);\r\n                link.setAttribute(\"href\", url);\r\n                link.setAttribute(\"download\", exportedFilenmae);\r\n                link.style.visibility = \"hidden\";\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /* Creating an object with three properties. */\r\n    let headers = {\r\n        nazev: \"nazev\".replace(/,/g, \"\"), // remove commas to avoid errors\r\n        hodiny: \"hodiny\",\r\n        součet: \"součet\",\r\n    };\r\n\r\n\r\n\r\n    // var fileTitle = \"perfektniSplnil\"; // or 'my-unique-title'\r\n\r\n    //exportCSVFile(headers, itemsFormatted, fileTitle);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <h1>Zap</h1> */}\r\n            <table {...getTableProps()} className='table table-bordered table-dark '>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()} >\r\n                                    {column.render(\"Header\")}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell, j) => {\r\n                                    if (cell.column.Header == testColumns[0].Header) {\r\n\r\n\r\n                                        return (\r\n                                            <td\r\n                                                rowSpan={cell.rowSpan}\r\n\r\n                                                {...cell.getCellProps()}\r\n\r\n                                            >\r\n                                                {cell.render(\"Cell\")}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n\r\n                                    if (cell.column.Header == 'jine') {\r\n                                        return (\r\n                                            <td\r\n                                                rowSpan={cell.rowSpan}\r\n                                                // onClick={() =>\r\n                                                //     MudaObject(row.cells[0].value, cell.column.id)\r\n                                                // }\r\n                                                {...cell.getCellProps()}\r\n                                                style={activeCell}\r\n                                            ><input style={{ width: '4rem' }}\r\n                                                value={value[row.cells[0].value]}\r\n                                                onChange={(e) => onChange(e, row.cells[0].value)\r\n                                                }\r\n\r\n                                                onBlur={() =>\r\n                                                    updateMyData(row.cells[0].value, cell.column.id)\r\n                                                }\r\n                                            >\r\n                                                </input>\r\n                                                {/* {cell.render(\"Cell\")} */}\r\n                                            </td>\r\n                                        );\r\n\r\n                                    }\r\n                                    if (cellData[row.cells[0].value][cell.column.id].clicked == true) {\r\n\r\n                                    }\r\n                                    // console.log(cell.column.id, row.cells[0].value)\r\n                                    // console.log(cell.column.Header)\r\n                                    return (\r\n                                        <td\r\n                                            rowSpan={cell.rowSpan}\r\n\r\n                                            onClick={() =>\r\n                                                MudaObject(row.cells[0].value, cell.column.id)\r\n                                            }\r\n                                            {...cell.getCellProps()}\r\n                                            style={(cellData[row.cells[0].value][cell.column.id].clicked) ? activeCell : borderStyle\r\n                                            }\r\n                                        >\r\n                                            {/* border: \"3px solid #3D348B\", backgroundColor: 'white', color: 'black', cursor: 'pointer' */}\r\n                                            {cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table >\r\n            <br />\r\n            <input style={{ marginBottom: '2rem' }} className='form-control' value={hourlyRate} onChange={(e) => setHourlyRate(e.target.value)} placeholder='hodinova sazba'></input>\r\n\r\n            <button className='btn btn-success' onClick={createLastData}> Vypočíst</button>\r\n            {/* <button onClick={(e) => createLastData(e)}>\r\n                vypočíst</button> */}\r\n\r\n            <br />\r\n            <p style={{ marginTop: '0.5rem', opacity: 0.8 }}>export only after clicking 'vypočíst'</p>\r\n\r\n            <FinalButton />\r\n            <button type='button' className='btn btn-dark' onClick={() => exportCSVFile(headers, window.lastData, 'perfektniFile')} style={{ marginTop: '2rem' }}>Export csv</button>\r\n\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}